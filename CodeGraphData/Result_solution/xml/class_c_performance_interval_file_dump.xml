<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_c_performance_interval_file_dump" kind="class" prot="public">
    <compoundname>CPerformanceIntervalFileDump</compoundname>
    <basecompoundref refid="class_c_performance_timing_sink" prot="public" virt="non-virtual">CPerformanceTimingSink</basecompoundref>
    <basecompoundref refid="class_c_performance_timing_sink" prot="public" virt="non-virtual">CPerformanceTimingSink</basecompoundref>
    <includes refid="src_2_performance_interval_file_dump_8h" local="no">PerformanceIntervalFileDump.h</includes>
    <innerclass refid="struct_c_performance_interval_file_dump_1_1_config" prot="public">CPerformanceIntervalFileDump::Config</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_c_performance_interval_file_dump_1_1_config" kindref="compound">Config</ref></type>
        <definition>const Config CPerformanceIntervalFileDump::m_Config</definition>
        <argsstring></argsstring>
        <name>m_Config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="48" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="48" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" compoundref="src_2_performance_interval_file_dump_8cpp" startline="26" endline="38">CPerformanceIntervalFileDump</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" compoundref="src_2_performance_interval_file_dump_8cpp" startline="233" endline="519">DumpIntervals</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" compoundref="src_2_performance_interval_file_dump_8cpp" startline="44" endline="47">ResetNextWriteTime</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">Tick</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1a679fa8671e40545dc721cde10dff67e0" prot="private" static="no" mutable="no">
        <type>Float32</type>
        <definition>Float32 CPerformanceIntervalFileDump::m_fNextWriteTime</definition>
        <argsstring></argsstring>
        <name>m_fNextWriteTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="49" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1ab01ad3a269493af0dfccff5f879f54fb" compoundref="src_2_performance_interval_file_dump_8cpp" startline="521" endline="532">BeginTrack</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" compoundref="src_2_performance_interval_file_dump_8cpp" startline="44" endline="47">ResetNextWriteTime</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">Tick</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1a34b2cc6bc36bc3ed9e0167ff294d679f" prot="private" static="no" mutable="no">
        <type>Float32</type>
        <definition>Float32 CPerformanceIntervalFileDump::m_fLastDumpDeltaTime</definition>
        <argsstring></argsstring>
        <name>m_fLastDumpDeltaTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="50" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" compoundref="src_2_performance_interval_file_dump_8cpp" startline="233" endline="519">DumpIntervals</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">Tick</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1a04c5d92c6ccc83a0d20a3bfc3dc12d69" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CPerformanceIntervalFileDump::m_sStatsFolder</definition>
        <argsstring></argsstring>
        <name>m_sStatsFolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="51" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="51" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" compoundref="src_2_performance_interval_file_dump_8cpp" startline="26" endline="38">CPerformanceIntervalFileDump</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1a37a429eecc533d097a8a8c08b95a0d92" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 CPerformanceIntervalFileDump::m_dMaxDumpTimeSec</definition>
        <argsstring></argsstring>
        <name>m_dMaxDumpTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="52" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" compoundref="src_2_performance_interval_file_dump_8cpp" startline="233" endline="519">DumpIntervals</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">Tick</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1a0c46a1a22b96cd70d2a0a36b377babbd" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 CPerformanceIntervalFileDump::m_dLastDumpTimeSec</definition>
        <argsstring></argsstring>
        <name>m_dLastDumpTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="53" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="53" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">Tick</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1a83376eda7e57dde6a321a2d05f9b5c1f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CPerformanceIntervalFileDump::m_bTracking</definition>
        <argsstring></argsstring>
        <name>m_bTracking</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="56" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1ab01ad3a269493af0dfccff5f879f54fb" compoundref="src_2_performance_interval_file_dump_8cpp" startline="521" endline="532">BeginTrack</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1acf5a5fe5b1304c36ee5ccaa5a12134f1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="534" endline="544">EndTrack</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">Tick</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1a99b0b3df10615151335ebb9e1175dd2b" prot="private" static="no" mutable="no">
        <type>UInt32</type>
        <definition>UInt32 CPerformanceIntervalFileDump::m_tmBeginTrack</definition>
        <argsstring></argsstring>
        <name>m_tmBeginTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="57" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="57" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1ab01ad3a269493af0dfccff5f879f54fb" compoundref="src_2_performance_interval_file_dump_8cpp" startline="521" endline="532">BeginTrack</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" compoundref="src_2_performance_interval_file_dump_8cpp" startline="233" endline="519">DumpIntervals</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1acf5a5fe5b1304c36ee5ccaa5a12134f1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="534" endline="544">EndTrack</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" prot="private" static="no" mutable="no">
        <type><ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref> *</type>
        <definition>CPerformanceTiming * CPerformanceIntervalFileDump::m_pOwner</definition>
        <argsstring></argsstring>
        <name>m_pOwner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="58" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="58" bodyend="-1"/>
        <referencedby refid="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" compoundref="src_2_performance_interval_file_dump_8h" startline="40" endline="40">GetOwnerInst</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" compoundref="src_2_performance_interval_file_dump_8h" startline="31" endline="34">SetOwner</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CPerformanceIntervalFileDump::CPerformanceIntervalFileDump</definition>
        <argsstring>(const Config &amp;rConfig)</argsstring>
        <name>CPerformanceIntervalFileDump</name>
        <param>
          <type>const <ref refid="struct_c_performance_interval_file_dump_1_1_config" kindref="compound">Config</ref> &amp;</type>
          <declname>rConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="23" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="26" bodyend="38"/>
        <references refid="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" compoundref="src_2_performance_interval_file_dump_8h" startline="48">m_Config</references>
        <references refid="class_c_performance_interval_file_dump_1a04c5d92c6ccc83a0d20a3bfc3dc12d69" compoundref="src_2_performance_interval_file_dump_8h" startline="51">m_sStatsFolder</references>
        <references refid="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" compoundref="src_2_performance_interval_file_dump_8cpp" startline="44" endline="47">ResetNextWriteTime</references>
        <references refid="struct_c_performance_interval_file_dump_1_1_config_1a3a7791dc521b5c962129dac7d2441e63" compoundref="src_2_performance_interval_file_dump_8h" startline="19">CPerformanceIntervalFileDump::Config::sLogDir</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a5bbcd3f0b21aeec73935a61556a50ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>CPerformanceIntervalFileDump::~CPerformanceIntervalFileDump</definition>
        <argsstring>()</argsstring>
        <name>~CPerformanceIntervalFileDump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="24" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::Tick</definition>
        <argsstring>(Float32 fDeltaTime)</argsstring>
        <name>Tick</name>
        <param>
          <type>Float32</type>
          <declname>fDeltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="26" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="49" bodyend="115"/>
        <references refid="struct_se_race_config_1a50c71743e2f148dacf3ee4d8f70822aa" compoundref="src_2_race_server_def_8h" startline="98">SeRaceConfig::bRealTickTime</references>
        <references refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" compoundref="src_2_performance_interval_file_dump_8cpp" startline="233" endline="519">DumpIntervals</references>
        <references refid="namespacemake_callback_1a0c646a8863d44327e020456c954f4b2d" compoundref="make_callback_8py" startline="145">makeCallback.f</references>
        <references refid="struct_se_race_config_1a9e802ee3c08a693e6053c58e4d4bc892" compoundref="src_2_race_server_def_8h" startline="99">SeRaceConfig::fWriteInterval</references>
        <references refid="src_2_race_server_8cpp_1a11ebf86c50956d92a423e490dfbd05be" compoundref="src_2_race_server_8cpp" startline="9">g_kRaceServer</references>
        <references refid="class_c_performance_timing_1a17117a8b903e2ab542875e418264b9b4" compoundref="src_2_performance_timing_8h" startline="285" endline="288">CPerformanceTiming::GetLastDumpTotalTime</references>
        <references refid="class_performance_timing_1_1_c_interval_1a1cd3084ecc07d19f164bc1e4af2294d1" compoundref="src_2_performance_timing_8h" startline="660" endline="663">PerformanceTiming::CInterval::GetLastFrameNegIntervalTimeSec</references>
        <references refid="class_c_performance_timing_1a309f6a26626eada0b1758913aeaf9384" compoundref="src_2_performance_timing_8h" startline="269" endline="273">CPerformanceTiming::GetLastRealTimeDeltaSec</references>
        <references refid="class_performance_timing_1_1_c_pack_counter_1aa6406af767bac8686f3ca199db3c25db" compoundref="src_2_performance_timing_8h" startline="564" endline="564">PerformanceTiming::CPackCounter::getMaxTotalSize</references>
        <references refid="class_c_performance_timing_1acf4828f27669dda0241b128e4ccb6894" compoundref="src_2_performance_timing_8h" startline="311" endline="311">CPerformanceTiming::getPacketCounter</references>
        <references refid="class_race_server_1a788a00bd15f61a8dadb074c05658b108" compoundref="src_2_race_server_8cpp" startline="1191" endline="1194">RaceServer::GetRaceConfig</references>
        <references refid="class_c_performance_timing_1a5b59f88895ce835a1ce7443d0812d43f" compoundref="src_2_performance_timing_8h" startline="219" endline="222">CPerformanceTiming::Instance</references>
        <references refid="class_c_performance_timing_1a0cd9ac671cfeca01bd8fb12f948f6ba3" compoundref="src_2_performance_timing_8h" startline="223" endline="226">CPerformanceTiming::InstanceQuick</references>
        <references refid="struct_se_race_config_1a4aed8d243cf6d513b615f45aa6abd187" compoundref="src_2_race_server_def_8h" startline="97">SeRaceConfig::iRacePrintTime</references>
        <references refid="class_c_performance_interval_file_dump_1a83376eda7e57dde6a321a2d05f9b5c1f" compoundref="src_2_performance_interval_file_dump_8h" startline="56">m_bTracking</references>
        <references refid="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" compoundref="src_2_performance_interval_file_dump_8h" startline="48">m_Config</references>
        <references refid="class_c_performance_interval_file_dump_1a0c46a1a22b96cd70d2a0a36b377babbd" compoundref="src_2_performance_interval_file_dump_8h" startline="53">m_dLastDumpTimeSec</references>
        <references refid="class_c_performance_interval_file_dump_1a37a429eecc533d097a8a8c08b95a0d92" compoundref="src_2_performance_interval_file_dump_8h" startline="52">m_dMaxDumpTimeSec</references>
        <references refid="_performacen_timing_mgr_8h_1a3461497e6bbcfecda40236ce77e2c94f" compoundref="_performacen_timing_mgr_8h" startline="149">M_DoFunctionMutiInterval_FN</references>
        <references refid="class_c_performance_interval_file_dump_1a34b2cc6bc36bc3ed9e0167ff294d679f" compoundref="src_2_performance_interval_file_dump_8h" startline="50">m_fLastDumpDeltaTime</references>
        <references refid="class_c_performance_interval_file_dump_1a679fa8671e40545dc721cde10dff67e0" compoundref="src_2_performance_interval_file_dump_8h" startline="49">m_fNextWriteTime</references>
        <references refid="struct_c_performance_interval_file_dump_1_1_config_1a8c22950debba5d3dcbffa7dbc6630559" compoundref="src_2_performance_interval_file_dump_8h" startline="17">CPerformanceIntervalFileDump::Config::uMaxPacketSize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1ab01ad3a269493af0dfccff5f879f54fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::BeginTrack</definition>
        <argsstring>()</argsstring>
        <name>BeginTrack</name>
        <reimplements refid="class_c_performance_timing_sink_1a799a7d0ccc36bdaa3cf133cdbe2f7fb8">BeginTrack</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="28" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="521" bodyend="532"/>
        <references refid="class_c_performance_timing_1a5b59f88895ce835a1ce7443d0812d43f" compoundref="src_2_performance_timing_8h" startline="219" endline="222">CPerformanceTiming::Instance</references>
        <references refid="class_c_performance_interval_file_dump_1a83376eda7e57dde6a321a2d05f9b5c1f" compoundref="src_2_performance_interval_file_dump_8h" startline="56">m_bTracking</references>
        <references refid="class_c_performance_interval_file_dump_1a679fa8671e40545dc721cde10dff67e0" compoundref="src_2_performance_interval_file_dump_8h" startline="49">m_fNextWriteTime</references>
        <references refid="class_c_performance_interval_file_dump_1a99b0b3df10615151335ebb9e1175dd2b" compoundref="src_2_performance_interval_file_dump_8h" startline="57">m_tmBeginTrack</references>
        <references refid="class_c_performance_timing_1a6b06378498f520f4f955f91fa91b3d80" compoundref="src_2_performance_timing_8cpp" startline="376" endline="384">CPerformanceTiming::ResetAll</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1acf5a5fe5b1304c36ee5ccaa5a12134f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::EndTrack</definition>
        <argsstring>()</argsstring>
        <name>EndTrack</name>
        <reimplements refid="class_c_performance_timing_sink_1a570be3f482267d1e9b89e774fad42a70">EndTrack</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="29" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="534" bodyend="544"/>
        <references refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" compoundref="src_2_performance_interval_file_dump_8cpp" startline="233" endline="519">DumpIntervals</references>
        <references refid="class_c_performance_interval_file_dump_1a83376eda7e57dde6a321a2d05f9b5c1f" compoundref="src_2_performance_interval_file_dump_8h" startline="56">m_bTracking</references>
        <references refid="class_c_performance_interval_file_dump_1a99b0b3df10615151335ebb9e1175dd2b" compoundref="src_2_performance_interval_file_dump_8h" startline="57">m_tmBeginTrack</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1ad2591c1146f6080e163195b2eb9a0b16" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::ForceDump</definition>
        <argsstring>()</argsstring>
        <name>ForceDump</name>
        <reimplements refid="class_c_performance_timing_sink_1a4652e0614857a078f41f9a80556f55d3">ForceDump</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="30" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="546" bodyend="549"/>
        <references refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" compoundref="src_2_performance_interval_file_dump_8cpp" startline="233" endline="519">DumpIntervals</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CPerformanceIntervalFileDump::SetOwner</definition>
        <argsstring>(IPerformaceTiming *pOwner)</argsstring>
        <name>SetOwner</name>
        <reimplements refid="class_c_performance_timing_sink_1a206ecc29d06a87ad96f408ef88569ea4">SetOwner</reimplements>
        <param>
          <type><ref refid="class_i_performace_timing" kindref="compound">IPerformaceTiming</ref> *</type>
          <declname>pOwner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="31" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="31" bodyend="34"/>
        <references refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" compoundref="src_2_performance_interval_file_dump_8h" startline="58">m_pOwner</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CPerformanceIntervalFileDump::CPerformanceIntervalFileDump</definition>
        <argsstring>(const Config &amp;rConfig)</argsstring>
        <name>CPerformanceIntervalFileDump</name>
        <param>
          <type>const <ref refid="struct_c_performance_interval_file_dump_1_1_config" kindref="compound">Config</ref> &amp;</type>
          <declname>rConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a9456feeb3e997ba50357a69f57df196e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CPerformanceIntervalFileDump::~CPerformanceIntervalFileDump</definition>
        <argsstring>()</argsstring>
        <name>~CPerformanceIntervalFileDump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a89caf4a5f37f6cfc7dba25b5538e39a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CPerformanceIntervalFileDump::Tick</definition>
        <argsstring>(Float32 fDeltaTime)</argsstring>
        <name>Tick</name>
        <param>
          <type>Float32</type>
          <declname>fDeltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a4b50b30de961117351fe73ef2826893c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CPerformanceIntervalFileDump::BeginTrack</definition>
        <argsstring>()</argsstring>
        <name>BeginTrack</name>
        <reimplements refid="class_c_performance_timing_sink_1a799a7d0ccc36bdaa3cf133cdbe2f7fb8">BeginTrack</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1af1180c0119df22525ece7ccc5c91070a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CPerformanceIntervalFileDump::EndTrack</definition>
        <argsstring>()</argsstring>
        <name>EndTrack</name>
        <reimplements refid="class_c_performance_timing_sink_1a570be3f482267d1e9b89e774fad42a70">EndTrack</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1ab1d9165173a26eb16129a7d7c0f42189" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CPerformanceIntervalFileDump::ForceDump</definition>
        <argsstring>()</argsstring>
        <name>ForceDump</name>
        <reimplements refid="class_c_performance_timing_sink_1a4652e0614857a078f41f9a80556f55d3">ForceDump</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CPerformanceIntervalFileDump::SetOwner</definition>
        <argsstring>(IPerformaceTiming *pOwner)</argsstring>
        <name>SetOwner</name>
        <reimplements refid="class_c_performance_timing_sink_1a206ecc29d06a87ad96f408ef88569ea4">SetOwner</reimplements>
        <param>
          <type><ref refid="class_i_performace_timing" kindref="compound">IPerformaceTiming</ref> *</type>
          <declname>pOwner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="31" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" bodystart="31" bodyend="34"/>
        <references refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" compoundref="src_2_performance_interval_file_dump_8h" startline="58">m_pOwner</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1af79156d5745952ace60d969fd4c82f98" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CPerformanceIntervalFileDump::CPerformanceIntervalFileDump</definition>
        <argsstring>(const CPerformanceIntervalFileDump &amp;)</argsstring>
        <name>CPerformanceIntervalFileDump</name>
        <param>
          <type>const <ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a998e48e519fae35efc3e8d41236c44a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref> &amp;</type>
        <definition>CPerformanceIntervalFileDump&amp; CPerformanceIntervalFileDump::operator=</definition>
        <argsstring>(const CPerformanceIntervalFileDump &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref> *</type>
        <definition>CPerformanceTiming* CPerformanceIntervalFileDump::GetOwnerInst</definition>
        <argsstring>()</argsstring>
        <name>GetOwnerInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="40" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="40" bodyend="40"/>
        <references refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" compoundref="src_2_performance_interval_file_dump_8h" startline="58">m_pOwner</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::ResetNextWriteTime</definition>
        <argsstring>()</argsstring>
        <name>ResetNextWriteTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="41" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="44" bodyend="47"/>
        <references refid="struct_c_performance_interval_file_dump_1_1_config_1a2facda1fab2bfa1a2b1e7831841eb4af" compoundref="src_2_performance_interval_file_dump_8h" startline="15">CPerformanceIntervalFileDump::Config::fFileWriteIntervalSec</references>
        <references refid="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" compoundref="src_2_performance_interval_file_dump_8h" startline="48">m_Config</references>
        <references refid="class_c_performance_interval_file_dump_1a679fa8671e40545dc721cde10dff67e0" compoundref="src_2_performance_interval_file_dump_8h" startline="49">m_fNextWriteTime</references>
        <referencedby refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" compoundref="src_2_performance_interval_file_dump_8cpp" startline="26" endline="38">CPerformanceIntervalFileDump</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpIntervals</definition>
        <argsstring>(bool bThresholdDump)</argsstring>
        <name>DumpIntervals</name>
        <param>
          <type>bool</type>
          <declname>bThresholdDump</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="42" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="233" bodyend="519"/>
        <references refid="class_c_performance_timing_1adf4e577d676152b8799ad9cbdbc529c3" compoundref="src_2_performance_timing_8cpp" startline="637" endline="655">CPerformanceTiming::EnumerateAllCounters</references>
        <references refid="class_c_performance_timing_1a2f16681e87772ee9a99af1687eafeddc" compoundref="src_2_performance_timing_8cpp" startline="625" endline="635">CPerformanceTiming::EnumerateIntervals</references>
        <references refid="namespace_performance_timing_1af58a26f67d7e0da0b58677fb76388b85" compoundref="src_2_performance_timing_8cpp" startline="10">PerformanceTiming::g_kPerformanceSave</references>
        <references refid="class_c_performance_timing_1a17117a8b903e2ab542875e418264b9b4" compoundref="src_2_performance_timing_8h" startline="285" endline="288">CPerformanceTiming::GetLastDumpTotalTime</references>
        <references refid="class_c_performance_timing_1a709f75de324dd9a6f431ecda3e73b222" compoundref="src_2_performance_timing_8h" startline="280" endline="283">CPerformanceTiming::GetLastFps</references>
        <references refid="class_c_performance_timing_1a309f6a26626eada0b1758913aeaf9384" compoundref="src_2_performance_timing_8h" startline="269" endline="273">CPerformanceTiming::GetLastRealTimeDeltaSec</references>
        <references refid="class_c_performance_timing_1a1b141517c944ead5d45cf24b49d162a6" compoundref="src_2_performance_timing_8h" startline="275" endline="278">CPerformanceTiming::GetTotalAvgFPS</references>
        <references refid="class_c_performance_timing_1a5b59f88895ce835a1ce7443d0812d43f" compoundref="src_2_performance_timing_8h" startline="219" endline="222">CPerformanceTiming::Instance</references>
        <references refid="class_c_performance_timing_1a0cd9ac671cfeca01bd8fb12f948f6ba3" compoundref="src_2_performance_timing_8h" startline="223" endline="226">CPerformanceTiming::InstanceQuick</references>
        <references refid="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" compoundref="src_2_performance_interval_file_dump_8h" startline="48">m_Config</references>
        <references refid="class_c_performance_interval_file_dump_1a37a429eecc533d097a8a8c08b95a0d92" compoundref="src_2_performance_interval_file_dump_8h" startline="52">m_dMaxDumpTimeSec</references>
        <references refid="_performacen_timing_mgr_8h_1a06280e0121db5579b38acbebe5b3899a" compoundref="_performacen_timing_mgr_8h" startline="144">M_DoMutiInterval_FN</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a770560a24ca706f84e8791460cc7d728" compoundref="src_2_performance_timing_8h" startline="45">PerformanceTiming::SePerfocemanceTime::m_fCurDumpTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a0afa41a6e7a3b8655ac2370e4b1fb290" compoundref="src_2_performance_timing_8h" startline="42">PerformanceTiming::SePerfocemanceTime::m_fFrameTime</references>
        <references refid="class_c_performance_interval_file_dump_1a34b2cc6bc36bc3ed9e0167ff294d679f" compoundref="src_2_performance_interval_file_dump_8h" startline="50">m_fLastDumpDeltaTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1af27e3942b4a33b894c546fd77c51c0ee" compoundref="src_2_performance_timing_8h" startline="46">PerformanceTiming::SePerfocemanceTime::m_fLastDumpTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1ad8b6eaea7b3970475f105c15267a30f1" compoundref="src_2_performance_timing_8h" startline="47">PerformanceTiming::SePerfocemanceTime::m_fLastFps</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a3dd5ebe26b4d111f970afcf7a0f328ac" compoundref="src_2_performance_timing_8h" startline="44">PerformanceTiming::SePerfocemanceTime::m_fMaxDumpTimes</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1abc9124daa138e85609a538ea769384b1" compoundref="src_2_performance_timing_8h" startline="41">PerformanceTiming::SePerfocemanceTime::m_fRealTickTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1aa3ecc4ce71b566ce44f55ac65dddf9cb" compoundref="src_2_performance_timing_8h" startline="48">PerformanceTiming::SePerfocemanceTime::m_fTotalAvgFps</references>
        <references refid="class_c_performance_interval_file_dump_1a99b0b3df10615151335ebb9e1175dd2b" compoundref="src_2_performance_interval_file_dump_8h" startline="57">m_tmBeginTrack</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a6e77f82c14f2c178aaea086e8d88c61d" compoundref="src_2_performance_timing_8h" startline="39">PerformanceTiming::SePerfocemanceTime::m_uBeginTraceTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a7767febdd341382ea980e72524e55316" compoundref="src_2_performance_timing_8h" startline="40">PerformanceTiming::SePerfocemanceTime::m_uSecondsFromStart</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a6ca8e68ba5b4935f41345a5578ebb2b1" compoundref="src_2_performance_timing_8h" startline="43">PerformanceTiming::SePerfocemanceTime::m_uThreadID</references>
        <references refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" compoundref="src_2_performance_timing_8cpp" startline="277" endline="288">PerformanceTiming::SePerformanceSave::PushTask</references>
        <references refid="struct_c_performance_interval_file_dump_1_1_config_1aed445527929b39ed8958e758483c622f" compoundref="src_2_performance_interval_file_dump_8h" startline="18">CPerformanceIntervalFileDump::Config::sApplicationName</references>
        <referencedby refid="class_c_performance_interval_file_dump_1acf5a5fe5b1304c36ee5ccaa5a12134f1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="534" endline="544">EndTrack</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1ad2591c1146f6080e163195b2eb9a0b16" compoundref="src_2_performance_interval_file_dump_8cpp" startline="546" endline="549">ForceDump</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">Tick</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a67c0021f0948c6f07f30712ee3e89d3a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpIntervalLine</definition>
        <argsstring>(Es::String &amp;sText, bool bFoldered, bool bFolder, const Es::String &amp;sName, Float64 dTimeMS, UInt32 uEntries, Float64 fPercentage, bool bOddLine, bool bClosed)</argsstring>
        <name>DumpIntervalLine</name>
        <param>
          <type>Es::String &amp;</type>
          <declname>sText</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFoldered</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFolder</declname>
        </param>
        <param>
          <type>const Es::String &amp;</type>
          <declname>sName</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dTimeMS</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uEntries</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>fPercentage</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOddLine</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bClosed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="43" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="117" bodyend="148"/>
        <references refid="namespace_performance_timing_1a0e3560920b69a2ee58cc9a42e2b7143b" compoundref="src_2_performance_timing_8cpp" startline="301" endline="314">PerformanceTiming::PaddedString</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1abf157a01cdb9b33f0d4d2a72f7216a64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpCounterLine</definition>
        <argsstring>(Es::String &amp;sText, bool bFoldered, bool bFolder, const Es::String &amp;sName, UInt32 uValue, UInt64 uTotal, bool bHistory, bool bOddLine)</argsstring>
        <name>DumpCounterLine</name>
        <param>
          <type>Es::String &amp;</type>
          <declname>sText</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFoldered</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFolder</declname>
        </param>
        <param>
          <type>const Es::String &amp;</type>
          <declname>sName</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uValue</declname>
        </param>
        <param>
          <type>UInt64</type>
          <declname>uTotal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bHistory</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOddLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="44" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="150" bodyend="189"/>
        <references refid="namespace_performance_timing_1a0e3560920b69a2ee58cc9a42e2b7143b" compoundref="src_2_performance_timing_8cpp" startline="301" endline="314">PerformanceTiming::PaddedString</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1ad16321414825be6788d49be80c7b439a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpHistoryIntervalLine</definition>
        <argsstring>(Es::String &amp;sText, const Es::String &amp;sName, Float64 dTimeMS, UInt32 uEntries, Float64 dMax, Float64 dMin, bool bOddLine)</argsstring>
        <name>DumpHistoryIntervalLine</name>
        <param>
          <type>Es::String &amp;</type>
          <declname>sText</declname>
        </param>
        <param>
          <type>const Es::String &amp;</type>
          <declname>sName</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dTimeMS</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uEntries</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dMax</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dMin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOddLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="45" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="214" bodyend="231"/>
        <references refid="namespace_performance_timing_1a0e3560920b69a2ee58cc9a42e2b7143b" compoundref="src_2_performance_timing_8cpp" startline="301" endline="314">PerformanceTiming::PaddedString</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1aa22e9c66cba08ebc30ecf4c113e72620" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpPacketCounterLine</definition>
        <argsstring>(Es::String &amp;sText, UInt32 packtID, UInt32 uSize, UInt32 uCount, UInt32 uTotal, UInt32 uRealTotal, bool bOddLine)</argsstring>
        <name>DumpPacketCounterLine</name>
        <param>
          <type>Es::String &amp;</type>
          <declname>sText</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>packtID</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uSize</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uCount</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uTotal</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uRealTotal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOddLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="46" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.cpp" bodystart="191" bodyend="212"/>
        <references refid="namespace_performance_timing_1a0e3560920b69a2ee58cc9a42e2b7143b" compoundref="src_2_performance_timing_8cpp" startline="301" endline="314">PerformanceTiming::PaddedString</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1af79156d5745952ace60d969fd4c82f98" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CPerformanceIntervalFileDump::CPerformanceIntervalFileDump</definition>
        <argsstring>(const CPerformanceIntervalFileDump &amp;)</argsstring>
        <name>CPerformanceIntervalFileDump</name>
        <param>
          <type>const <ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a998e48e519fae35efc3e8d41236c44a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref> &amp;</type>
        <definition>CPerformanceIntervalFileDump&amp; CPerformanceIntervalFileDump::operator=</definition>
        <argsstring>(const CPerformanceIntervalFileDump &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref> *</type>
        <definition>CPerformanceTiming* CPerformanceIntervalFileDump::GetOwnerInst</definition>
        <argsstring>()</argsstring>
        <name>GetOwnerInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="40" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" bodystart="40" bodyend="40"/>
        <references refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" compoundref="src_2_performance_interval_file_dump_8h" startline="58">m_pOwner</references>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::ResetNextWriteTime</definition>
        <argsstring>()</argsstring>
        <name>ResetNextWriteTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpIntervals</definition>
        <argsstring>(bool bThresholdDump)</argsstring>
        <name>DumpIntervals</name>
        <param>
          <type>bool</type>
          <declname>bThresholdDump</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1a67c0021f0948c6f07f30712ee3e89d3a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpIntervalLine</definition>
        <argsstring>(Es::String &amp;sText, bool bFoldered, bool bFolder, const Es::String &amp;sName, Float64 dTimeMS, UInt32 uEntries, Float64 fPercentage, bool bOddLine, bool bClosed)</argsstring>
        <name>DumpIntervalLine</name>
        <param>
          <type>Es::String &amp;</type>
          <declname>sText</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFoldered</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFolder</declname>
        </param>
        <param>
          <type>const Es::String &amp;</type>
          <declname>sName</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dTimeMS</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uEntries</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>fPercentage</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOddLine</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bClosed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1abf157a01cdb9b33f0d4d2a72f7216a64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpCounterLine</definition>
        <argsstring>(Es::String &amp;sText, bool bFoldered, bool bFolder, const Es::String &amp;sName, UInt32 uValue, UInt64 uTotal, bool bHistory, bool bOddLine)</argsstring>
        <name>DumpCounterLine</name>
        <param>
          <type>Es::String &amp;</type>
          <declname>sText</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFoldered</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFolder</declname>
        </param>
        <param>
          <type>const Es::String &amp;</type>
          <declname>sName</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uValue</declname>
        </param>
        <param>
          <type>UInt64</type>
          <declname>uTotal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bHistory</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOddLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1ad16321414825be6788d49be80c7b439a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpHistoryIntervalLine</definition>
        <argsstring>(Es::String &amp;sText, const Es::String &amp;sName, Float64 dTimeMS, UInt32 uEntries, Float64 dMax, Float64 dMin, bool bOddLine)</argsstring>
        <name>DumpHistoryIntervalLine</name>
        <param>
          <type>Es::String &amp;</type>
          <declname>sText</declname>
        </param>
        <param>
          <type>const Es::String &amp;</type>
          <declname>sName</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dTimeMS</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uEntries</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dMax</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dMin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOddLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_c_performance_interval_file_dump_1aa22e9c66cba08ebc30ecf4c113e72620" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPerformanceIntervalFileDump::DumpPacketCounterLine</definition>
        <argsstring>(Es::String &amp;sText, UInt32 packtID, UInt32 uSize, UInt32 uCount, UInt32 uTotal, UInt32 uRealTotal, bool bOddLine)</argsstring>
        <name>DumpPacketCounterLine</name>
        <param>
          <type>Es::String &amp;</type>
          <declname>sText</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>packtID</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uSize</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uCount</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uTotal</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uRealTotal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOddLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1031">
        <label>CPerformanceIntervalFileDump</label>
        <link refid="class_c_performance_interval_file_dump"/>
        <childnode refid="1032" relation="public-inheritance">
        </childnode>
        <childnode refid="1032" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1032">
        <label>CPerformanceTimingSink</label>
        <link refid="class_c_performance_timing_sink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1036">
        <label>IPerformaceTiming</label>
        <link refid="class_i_performace_timing"/>
      </node>
      <node id="1033">
        <label>CPerformanceIntervalFileDump</label>
        <link refid="class_c_performance_interval_file_dump"/>
        <childnode refid="1034" relation="public-inheritance">
        </childnode>
        <childnode refid="1034" relation="public-inheritance">
        </childnode>
        <childnode refid="1035" relation="usage">
          <edgelabel>m_pOwner</edgelabel>
        </childnode>
        <childnode refid="1039" relation="usage">
          <edgelabel>m_sStatsFolder</edgelabel>
        </childnode>
        <childnode refid="1053" relation="usage">
          <edgelabel>m_Config</edgelabel>
        </childnode>
      </node>
      <node id="1043">
        <label>K</label>
      </node>
      <node id="1044">
        <label>T</label>
      </node>
      <node id="1050">
        <label>PerformanceTiming::CInterval</label>
        <link refid="class_performance_timing_1_1_c_interval"/>
        <childnode refid="1038" relation="public-inheritance">
        </childnode>
        <childnode refid="1047" relation="public-inheritance">
        </childnode>
        <childnode refid="1038" relation="public-inheritance">
        </childnode>
        <childnode refid="1047" relation="public-inheritance">
        </childnode>
        <childnode refid="1051" relation="usage">
          <edgelabel>m_vChildren</edgelabel>
        </childnode>
      </node>
      <node id="1046">
        <label>std::map&lt; TeMD5, UInt32 &gt;</label>
        <childnode refid="1045" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1042">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="1043" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="1044" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1049">
        <label>std::vector&lt; CCounter * &gt;</label>
      </node>
      <node id="1052">
        <label>std::vector&lt; CPerformanceTimingSink * &gt;</label>
        <childnode refid="1034" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1035">
        <label>CPerformanceTiming</label>
        <link refid="class_c_performance_timing"/>
        <childnode refid="1036" relation="public-inheritance">
        </childnode>
        <childnode refid="1036" relation="public-inheritance">
        </childnode>
        <childnode refid="1037" relation="usage">
          <edgelabel>m_pPackCounter</edgelabel>
        </childnode>
        <childnode refid="1047" relation="usage">
          <edgelabel>_InnerArray</edgelabel>
        </childnode>
        <childnode refid="1048" relation="usage">
          <edgelabel>m_vHistoryCounters</edgelabel>
        </childnode>
        <childnode refid="1049" relation="usage">
          <edgelabel>m_vCounters</edgelabel>
        </childnode>
        <childnode refid="1050" relation="usage">
          <edgelabel>s_maxFramePktHandlerInterval</edgelabel>
        </childnode>
        <childnode refid="1052" relation="usage">
          <edgelabel>m_vSinks</edgelabel>
        </childnode>
      </node>
      <node id="1051">
        <label>std::vector&lt; CInterval * &gt;</label>
        <childnode refid="1050" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1040">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="1045">
        <label>TeMD5</label>
        <link refid="struct_te_m_d5"/>
      </node>
      <node id="1034">
        <label>CPerformanceTimingSink</label>
        <link refid="class_c_performance_timing_sink"/>
      </node>
      <node id="1037">
        <label>PerformanceTiming::CPackCounter</label>
        <link refid="class_performance_timing_1_1_c_pack_counter"/>
        <childnode refid="1038" relation="public-inheritance">
        </childnode>
        <childnode refid="1038" relation="public-inheritance">
        </childnode>
        <childnode refid="1041" relation="usage">
          <edgelabel>m_mRacePackDatas</edgelabel>
        </childnode>
        <childnode refid="1046" relation="usage">
          <edgelabel>m_mRacePackTotalSize</edgelabel>
          <edgelabel>m_mRaceRealPackTotalSize</edgelabel>
        </childnode>
      </node>
      <node id="1048">
        <label>std::vector&lt; CHistoryCounter * &gt;</label>
      </node>
      <node id="1038">
        <label>PerformanceTiming::CPerformanceStat</label>
        <link refid="class_performance_timing_1_1_c_performance_stat"/>
        <childnode refid="1039" relation="usage">
          <edgelabel>m_sFolderName</edgelabel>
          <edgelabel>m_sName</edgelabel>
        </childnode>
      </node>
      <node id="1041">
        <label>std::map&lt; TeMD5, TPackCounterMap &gt;</label>
        <childnode refid="1042" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="1045" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1053">
        <label>CPerformanceIntervalFileDump::Config</label>
        <link refid="struct_c_performance_interval_file_dump_1_1_config"/>
        <childnode refid="1039" relation="usage">
          <edgelabel>sApplicationName</edgelabel>
          <edgelabel>sLogDir</edgelabel>
        </childnode>
      </node>
      <node id="1047">
        <label>IInterval</label>
        <link refid="class_i_interval"/>
      </node>
      <node id="1039">
        <label>std::string</label>
        <childnode refid="1040" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" line="8" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h" bodystart="7" bodyend="59"/>
    <listofallmembers>
      <member refid="class_c_performance_interval_file_dump_1ab01ad3a269493af0dfccff5f879f54fb" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>BeginTrack</name></member>
      <member refid="class_c_performance_interval_file_dump_1a4b50b30de961117351fe73ef2826893c" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>BeginTrack</name></member>
      <member refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" prot="public" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>CPerformanceIntervalFileDump</name></member>
      <member refid="class_c_performance_interval_file_dump_1af79156d5745952ace60d969fd4c82f98" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>CPerformanceIntervalFileDump</name></member>
      <member refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" prot="public" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>CPerformanceIntervalFileDump</name></member>
      <member refid="class_c_performance_interval_file_dump_1af79156d5745952ace60d969fd4c82f98" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>CPerformanceIntervalFileDump</name></member>
      <member refid="class_c_performance_interval_file_dump_1abf157a01cdb9b33f0d4d2a72f7216a64" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpCounterLine</name></member>
      <member refid="class_c_performance_interval_file_dump_1abf157a01cdb9b33f0d4d2a72f7216a64" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpCounterLine</name></member>
      <member refid="class_c_performance_interval_file_dump_1ad16321414825be6788d49be80c7b439a" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpHistoryIntervalLine</name></member>
      <member refid="class_c_performance_interval_file_dump_1ad16321414825be6788d49be80c7b439a" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpHistoryIntervalLine</name></member>
      <member refid="class_c_performance_interval_file_dump_1a67c0021f0948c6f07f30712ee3e89d3a" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpIntervalLine</name></member>
      <member refid="class_c_performance_interval_file_dump_1a67c0021f0948c6f07f30712ee3e89d3a" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpIntervalLine</name></member>
      <member refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpIntervals</name></member>
      <member refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpIntervals</name></member>
      <member refid="class_c_performance_interval_file_dump_1aa22e9c66cba08ebc30ecf4c113e72620" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpPacketCounterLine</name></member>
      <member refid="class_c_performance_interval_file_dump_1aa22e9c66cba08ebc30ecf4c113e72620" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>DumpPacketCounterLine</name></member>
      <member refid="class_c_performance_interval_file_dump_1acf5a5fe5b1304c36ee5ccaa5a12134f1" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>EndTrack</name></member>
      <member refid="class_c_performance_interval_file_dump_1af1180c0119df22525ece7ccc5c91070a" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>EndTrack</name></member>
      <member refid="class_c_performance_interval_file_dump_1ad2591c1146f6080e163195b2eb9a0b16" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>ForceDump</name></member>
      <member refid="class_c_performance_interval_file_dump_1ab1d9165173a26eb16129a7d7c0f42189" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>ForceDump</name></member>
      <member refid="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>GetOwnerInst</name></member>
      <member refid="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>GetOwnerInst</name></member>
      <member refid="class_c_performance_interval_file_dump_1a83376eda7e57dde6a321a2d05f9b5c1f" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_bTracking</name></member>
      <member refid="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_Config</name></member>
      <member refid="class_c_performance_interval_file_dump_1a0c46a1a22b96cd70d2a0a36b377babbd" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_dLastDumpTimeSec</name></member>
      <member refid="class_c_performance_interval_file_dump_1a37a429eecc533d097a8a8c08b95a0d92" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_dMaxDumpTimeSec</name></member>
      <member refid="class_c_performance_interval_file_dump_1a34b2cc6bc36bc3ed9e0167ff294d679f" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_fLastDumpDeltaTime</name></member>
      <member refid="class_c_performance_interval_file_dump_1a679fa8671e40545dc721cde10dff67e0" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_fNextWriteTime</name></member>
      <member refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_pOwner</name></member>
      <member refid="class_c_performance_interval_file_dump_1a04c5d92c6ccc83a0d20a3bfc3dc12d69" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_sStatsFolder</name></member>
      <member refid="class_c_performance_interval_file_dump_1a99b0b3df10615151335ebb9e1175dd2b" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>m_tmBeginTrack</name></member>
      <member refid="class_c_performance_interval_file_dump_1a998e48e519fae35efc3e8d41236c44a8" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>operator=</name></member>
      <member refid="class_c_performance_interval_file_dump_1a998e48e519fae35efc3e8d41236c44a8" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>operator=</name></member>
      <member refid="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>ResetNextWriteTime</name></member>
      <member refid="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" prot="private" virt="non-virtual"><scope>CPerformanceIntervalFileDump</scope><name>ResetNextWriteTime</name></member>
      <member refid="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>SetOwner</name></member>
      <member refid="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>SetOwner</name></member>
      <member refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>Tick</name></member>
      <member refid="class_c_performance_interval_file_dump_1a89caf4a5f37f6cfc7dba25b5538e39a0" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>Tick</name></member>
      <member refid="class_c_performance_timing_sink_1abc214d8b51908d2030da7b14470adb22" prot="public" virt="virtual" ambiguityscope="CPerformanceTimingSink::"><scope>CPerformanceIntervalFileDump</scope><name>Tick</name></member>
      <member refid="class_c_performance_interval_file_dump_1a5bbcd3f0b21aeec73935a61556a50ca3" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>~CPerformanceIntervalFileDump</name></member>
      <member refid="class_c_performance_interval_file_dump_1a9456feeb3e997ba50357a69f57df196e" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>~CPerformanceIntervalFileDump</name></member>
      <member refid="class_c_performance_timing_sink_1a8c266a5029f70d73173c954f92b6e951" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>~CPerformanceTimingSink</name></member>
      <member refid="class_c_performance_timing_sink_1a8c266a5029f70d73173c954f92b6e951" prot="public" virt="virtual"><scope>CPerformanceIntervalFileDump</scope><name>~CPerformanceTimingSink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
