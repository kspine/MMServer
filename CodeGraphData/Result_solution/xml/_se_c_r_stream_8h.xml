<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_se_c_r_stream_8h" kind="file">
    <compoundname>SeCRStream.h</compoundname>
    <includes refid="_se_ptl_define_8h" local="yes">SePtlDefine.h</includes>
    <includes refid="_se_ptl___c_l___to___r_s_8h" local="yes">SePtl_CL_To_RS.h</includes>
    <includes refid="_se_comm_stream_8h" local="yes">SeCommStream.h</includes>
    <includedby refid="_se_c_r_stream_8cpp" local="yes">F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp</includedby>
    <includedby refid="src_2_race_server_def_8h" local="yes">RaceServer/src/RaceServerDef.h</includedby>
    <includedby refid="_src_2_race_server_def_8h" local="yes">RaceServer/Src/RaceServerDef.h</includedby>
    <incdepgraph>
      <node id="112606">
        <label>SeCommStream.h</label>
        <link refid="_se_comm_stream_8h"/>
        <childnode refid="112567" relation="include">
        </childnode>
        <childnode refid="112602" relation="include">
        </childnode>
      </node>
      <node id="112589">
        <label>list</label>
      </node>
      <node id="112583">
        <label>locale</label>
      </node>
      <node id="112593">
        <label>queue</label>
      </node>
      <node id="112587">
        <label>limits</label>
      </node>
      <node id="112602">
        <label>SePtlCommDefine.h</label>
        <link refid="_se_ptl_comm_define_8h"/>
      </node>
      <node id="112603">
        <label>SeMemPool.h</label>
        <link refid="_se_mem_pool_8h"/>
        <childnode refid="112568" relation="include">
        </childnode>
        <childnode refid="112604" relation="include">
        </childnode>
        <childnode refid="112575" relation="include">
        </childnode>
      </node>
      <node id="112570">
        <label>windows.h</label>
      </node>
      <node id="112575">
        <label>assert.h</label>
      </node>
      <node id="112573">
        <label>stdlib.h</label>
      </node>
      <node id="112604">
        <label>EsLock.h</label>
      </node>
      <node id="112577">
        <label>cmath</label>
      </node>
      <node id="112586">
        <label>string</label>
      </node>
      <node id="112590">
        <label>map</label>
      </node>
      <node id="112572">
        <label>conio.h</label>
      </node>
      <node id="112601">
        <label>SePtlRandomNumDef.h</label>
        <link refid="_se_ptl_random_num_def_8h"/>
      </node>
      <node id="112571">
        <label>direct.h</label>
      </node>
      <node id="112566">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h</label>
        <link refid="SeCRStream.h"/>
        <childnode refid="112567" relation="include">
        </childnode>
        <childnode refid="112605" relation="include">
        </childnode>
        <childnode refid="112606" relation="include">
        </childnode>
      </node>
      <node id="112584">
        <label>fstream</label>
      </node>
      <node id="112597">
        <label>SeTool.h</label>
        <link refid="_se_tool_8h"/>
        <childnode refid="112568" relation="include">
        </childnode>
        <childnode refid="112596" relation="include">
        </childnode>
        <childnode refid="112598" relation="include">
        </childnode>
        <childnode refid="112599" relation="include">
        </childnode>
        <childnode refid="112581" relation="include">
        </childnode>
        <childnode refid="112600" relation="include">
        </childnode>
      </node>
      <node id="112569">
        <label>winsock2.h</label>
      </node>
      <node id="112605">
        <label>SePtl_CL_To_RS.h</label>
        <link refid="_se_ptl___c_l___to___r_s_8h"/>
        <childnode refid="112567" relation="include">
        </childnode>
        <childnode refid="112602" relation="include">
        </childnode>
      </node>
      <node id="112599">
        <label>TeMisc.h</label>
        <link refid="_te_misc_8h"/>
        <childnode refid="112580" relation="include">
        </childnode>
      </node>
      <node id="112580">
        <label>string.h</label>
      </node>
      <node id="112578">
        <label>ctime</label>
      </node>
      <node id="112588">
        <label>vector</label>
      </node>
      <node id="112594">
        <label>new</label>
      </node>
      <node id="112567">
        <label>SePtlDefine.h</label>
        <link refid="_se_ptl_define_8h"/>
        <childnode refid="112568" relation="include">
        </childnode>
        <childnode refid="112596" relation="include">
        </childnode>
        <childnode refid="112597" relation="include">
        </childnode>
        <childnode refid="112601" relation="include">
        </childnode>
        <childnode refid="112602" relation="include">
        </childnode>
        <childnode refid="112603" relation="include">
        </childnode>
      </node>
      <node id="112596">
        <label>SeShareDef.h</label>
        <link refid="_se_share_def_8h"/>
        <childnode refid="112568" relation="include">
        </childnode>
      </node>
      <node id="112585">
        <label>sstream</label>
      </node>
      <node id="112600">
        <label>EsString.h</label>
      </node>
      <node id="112568">
        <label>SeInclude.h</label>
        <link refid="_se_include_8h"/>
        <childnode refid="112569" relation="include">
        </childnode>
        <childnode refid="112570" relation="include">
        </childnode>
        <childnode refid="112571" relation="include">
        </childnode>
        <childnode refid="112572" relation="include">
        </childnode>
        <childnode refid="112573" relation="include">
        </childnode>
        <childnode refid="112574" relation="include">
        </childnode>
        <childnode refid="112575" relation="include">
        </childnode>
        <childnode refid="112576" relation="include">
        </childnode>
        <childnode refid="112577" relation="include">
        </childnode>
        <childnode refid="112578" relation="include">
        </childnode>
        <childnode refid="112579" relation="include">
        </childnode>
        <childnode refid="112580" relation="include">
        </childnode>
        <childnode refid="112581" relation="include">
        </childnode>
        <childnode refid="112582" relation="include">
        </childnode>
        <childnode refid="112583" relation="include">
        </childnode>
        <childnode refid="112584" relation="include">
        </childnode>
        <childnode refid="112585" relation="include">
        </childnode>
        <childnode refid="112586" relation="include">
        </childnode>
        <childnode refid="112587" relation="include">
        </childnode>
        <childnode refid="112588" relation="include">
        </childnode>
        <childnode refid="112589" relation="include">
        </childnode>
        <childnode refid="112590" relation="include">
        </childnode>
        <childnode refid="112591" relation="include">
        </childnode>
        <childnode refid="112592" relation="include">
        </childnode>
        <childnode refid="112593" relation="include">
        </childnode>
        <childnode refid="112594" relation="include">
        </childnode>
        <childnode refid="112595" relation="include">
        </childnode>
      </node>
      <node id="112574">
        <label>math.h</label>
      </node>
      <node id="112581">
        <label>EsType.h</label>
      </node>
      <node id="112576">
        <label>cctype</label>
      </node>
      <node id="112598">
        <label>SeToolTemplate.inl</label>
        <link refid="_se_tool_template_8inl"/>
      </node>
      <node id="112591">
        <label>unordered_map</label>
      </node>
      <node id="112595">
        <label>SeDefine.h</label>
        <link refid="_se_define_8h"/>
      </node>
      <node id="112592">
        <label>set</label>
      </node>
      <node id="112582">
        <label>algorithm</label>
      </node>
      <node id="112579">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="112629">
        <label>RaceServer/src/SeRCSend.cpp</label>
        <link refid="src_2_se_r_c_send_8cpp"/>
      </node>
      <node id="112654">
        <label>RaceServer/Src/SeRaceRoomMgr.cpp</label>
        <link refid="_src_2_se_race_room_mgr_8cpp"/>
      </node>
      <node id="112659">
        <label>RaceServer/Src/SeRBLSend.cpp</label>
        <link refid="_src_2_se_r_b_l_send_8cpp"/>
      </node>
      <node id="112669">
        <label>RaceServer/Src/SeRaceMgr.h</label>
        <link refid="_race_server_2_src_2_se_race_mgr_8h"/>
        <childnode refid="112641" relation="include">
        </childnode>
        <childnode refid="112646" relation="include">
        </childnode>
        <childnode refid="112653" relation="include">
        </childnode>
      </node>
      <node id="112650">
        <label>RaceServer/Src/SeMRProcess.cpp</label>
        <link refid="_src_2_se_m_r_process_8cpp"/>
      </node>
      <node id="112619">
        <label>RaceServer/src/SeMRProcess.cpp</label>
        <link refid="src_2_se_m_r_process_8cpp"/>
      </node>
      <node id="112633">
        <label>RaceServer/src/SeRWCSSend.cpp</label>
        <link refid="src_2_se_r_w_c_s_send_8cpp"/>
      </node>
      <node id="112627">
        <label>RaceServer/src/SeRaceSvrOther.cpp</label>
        <link refid="src_2_se_race_svr_other_8cpp"/>
      </node>
      <node id="112623">
        <label>RaceServer/src/SeRaceRoomMgr.cpp</label>
        <link refid="src_2_se_race_room_mgr_8cpp"/>
      </node>
      <node id="112663">
        <label>RaceServer/Src/SeRNSend.cpp</label>
        <link refid="_src_2_se_r_n_send_8cpp"/>
      </node>
      <node id="112645">
        <label>RaceServer/Src/RaceServer.cpp</label>
        <link refid="_src_2_race_server_8cpp"/>
      </node>
      <node id="112658">
        <label>RaceServer/Src/SeRaceSvrOther.cpp</label>
        <link refid="_src_2_se_race_svr_other_8cpp"/>
      </node>
      <node id="112635">
        <label>RaceServer/src/SeThreadRaceMgr.cpp</label>
        <link refid="src_2_se_thread_race_mgr_8cpp"/>
      </node>
      <node id="112664">
        <label>RaceServer/Src/SeRWCSSend.cpp</label>
        <link refid="_src_2_se_r_w_c_s_send_8cpp"/>
      </node>
      <node id="112632">
        <label>RaceServer/src/SeRNSend.cpp</label>
        <link refid="src_2_se_r_n_send_8cpp"/>
      </node>
      <node id="112636">
        <label>RaceServer/src/SeWCSRProcess.cpp</label>
        <link refid="src_2_se_w_c_s_r_process_8cpp"/>
      </node>
      <node id="112607">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h</label>
        <link refid="SeCRStream.h"/>
        <childnode refid="112608" relation="include">
        </childnode>
        <childnode refid="112609" relation="include">
        </childnode>
        <childnode refid="112640" relation="include">
        </childnode>
      </node>
      <node id="112608">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp</label>
        <link refid="_se_c_r_stream_8cpp"/>
      </node>
      <node id="112616">
        <label>RaceServer/src/SeBLRProcess.cpp</label>
        <link refid="src_2_se_b_l_r_process_8cpp"/>
      </node>
      <node id="112657">
        <label>RaceServer/Src/SeRaceServicePush.cpp</label>
        <link refid="_src_2_se_race_service_push_8cpp"/>
      </node>
      <node id="112615">
        <label>RaceServer/src/RaceService.cpp</label>
        <link refid="src_2_race_service_8cpp"/>
      </node>
      <node id="112611">
        <label>RaceServer/src/PerformanceIntervalFileDump.cpp</label>
        <link refid="src_2_performance_interval_file_dump_8cpp"/>
      </node>
      <node id="112614">
        <label>RaceServer/src/RaceServer.cpp</label>
        <link refid="src_2_race_server_8cpp"/>
      </node>
      <node id="112626">
        <label>RaceServer/src/SeRaceServicePush.cpp</label>
        <link refid="src_2_se_race_service_push_8cpp"/>
      </node>
      <node id="112646">
        <label>RaceServer/Src/RaceService.cpp</label>
        <link refid="_src_2_race_service_8cpp"/>
      </node>
      <node id="112637">
        <label>RaceServer/src/SeWRProcess.cpp</label>
        <link refid="src_2_se_w_r_process_8cpp"/>
      </node>
      <node id="112662">
        <label>RaceServer/Src/SeRMSend.cpp</label>
        <link refid="_src_2_se_r_m_send_8cpp"/>
      </node>
      <node id="112668">
        <label>RaceServer/Src/SeWRProcess.cpp</label>
        <link refid="_src_2_se_w_r_process_8cpp"/>
      </node>
      <node id="112622">
        <label>RaceServer/src/SeRaceMgr.cpp</label>
        <link refid="_race_server_2src_2_se_race_mgr_8cpp"/>
      </node>
      <node id="112655">
        <label>RaceServer/Src/SeRaceServerPush.cpp</label>
        <link refid="_src_2_se_race_server_push_8cpp"/>
      </node>
      <node id="112628">
        <label>RaceServer/src/SeRBLSend.cpp</label>
        <link refid="src_2_se_r_b_l_send_8cpp"/>
      </node>
      <node id="112651">
        <label>RaceServer/Src/SeNRProcess.cpp</label>
        <link refid="_src_2_se_n_r_process_8cpp"/>
      </node>
      <node id="112631">
        <label>RaceServer/src/SeRMSend.cpp</label>
        <link refid="src_2_se_r_m_send_8cpp"/>
      </node>
      <node id="112620">
        <label>RaceServer/src/SeNRProcess.cpp</label>
        <link refid="src_2_se_n_r_process_8cpp"/>
      </node>
      <node id="112630">
        <label>RaceServer/src/SeReconMgr.cpp</label>
        <link refid="src_2_se_recon_mgr_8cpp"/>
      </node>
      <node id="112644">
        <label>RaceServer/Src/raceRecordSaveThread.cpp</label>
        <link refid="_race_server_2_src_2race_record_save_thread_8cpp"/>
      </node>
      <node id="112618">
        <label>RaceServer/src/SeMatchPlayer.cpp</label>
        <link refid="src_2_se_match_player_8cpp"/>
      </node>
      <node id="112667">
        <label>RaceServer/Src/SeWCSRProcess.cpp</label>
        <link refid="_src_2_se_w_c_s_r_process_8cpp"/>
      </node>
      <node id="112624">
        <label>RaceServer/src/SeRaceServerPush.cpp</label>
        <link refid="src_2_se_race_server_push_8cpp"/>
      </node>
      <node id="112656">
        <label>RaceServer/Src/SeRaceServiceProcess.cpp</label>
        <link refid="_src_2_se_race_service_process_8cpp"/>
      </node>
      <node id="112648">
        <label>RaceServer/Src/SeCRProcess.cpp</label>
        <link refid="_src_2_se_c_r_process_8cpp"/>
      </node>
      <node id="112666">
        <label>RaceServer/Src/SeThreadRaceMgr.cpp</label>
        <link refid="_src_2_se_thread_race_mgr_8cpp"/>
      </node>
      <node id="112661">
        <label>RaceServer/Src/SeReconMgr.cpp</label>
        <link refid="_src_2_se_recon_mgr_8cpp"/>
      </node>
      <node id="112640">
        <label>RaceServer/Src/RaceServerDef.h</label>
        <link refid="_src_2_race_server_def_8h"/>
        <childnode refid="112641" relation="include">
        </childnode>
        <childnode refid="112669" relation="include">
        </childnode>
        <childnode refid="112670" relation="include">
        </childnode>
      </node>
      <node id="112617">
        <label>RaceServer/src/SeCRProcess.cpp</label>
        <link refid="src_2_se_c_r_process_8cpp"/>
      </node>
      <node id="112613">
        <label>RaceServer/src/raceRecordSaveThread.cpp</label>
        <link refid="_race_server_2src_2race_record_save_thread_8cpp"/>
      </node>
      <node id="112609">
        <label>RaceServer/src/RaceServerDef.h</label>
        <link refid="src_2_race_server_def_8h"/>
        <childnode refid="112610" relation="include">
        </childnode>
        <childnode refid="112638" relation="include">
        </childnode>
        <childnode refid="112639" relation="include">
        </childnode>
      </node>
      <node id="112652">
        <label>RaceServer/Src/SeRaceData.cpp</label>
        <link refid="_src_2_se_race_data_8cpp"/>
      </node>
      <node id="112625">
        <label>RaceServer/src/SeRaceServiceProcess.cpp</label>
        <link refid="src_2_se_race_service_process_8cpp"/>
      </node>
      <node id="112612">
        <label>RaceServer/src/RaceDetailMgr.cpp</label>
        <link refid="src_2_race_detail_mgr_8cpp"/>
      </node>
      <node id="112642">
        <label>RaceServer/Src/PerformanceIntervalFileDump.cpp</label>
        <link refid="_src_2_performance_interval_file_dump_8cpp"/>
      </node>
      <node id="112647">
        <label>RaceServer/Src/SeBLRProcess.cpp</label>
        <link refid="_src_2_se_b_l_r_process_8cpp"/>
      </node>
      <node id="112639">
        <label>RaceServer/src/RaceDetailMgr.h</label>
        <link refid="src_2_race_detail_mgr_8h"/>
        <childnode refid="112612" relation="include">
        </childnode>
        <childnode refid="112622" relation="include">
        </childnode>
      </node>
      <node id="112665">
        <label>RaceServer/Src/SeRWSend.cpp</label>
        <link refid="_src_2_se_r_w_send_8cpp"/>
      </node>
      <node id="112670">
        <label>RaceServer/Src/RaceDetailMgr.h</label>
        <link refid="_src_2_race_detail_mgr_8h"/>
        <childnode refid="112643" relation="include">
        </childnode>
        <childnode refid="112653" relation="include">
        </childnode>
      </node>
      <node id="112610">
        <label>RaceServer/src/RaceServer.h</label>
        <link refid="src_2_race_server_8h"/>
        <childnode refid="112611" relation="include">
        </childnode>
        <childnode refid="112612" relation="include">
        </childnode>
        <childnode refid="112613" relation="include">
        </childnode>
        <childnode refid="112614" relation="include">
        </childnode>
        <childnode refid="112615" relation="include">
        </childnode>
        <childnode refid="112616" relation="include">
        </childnode>
        <childnode refid="112617" relation="include">
        </childnode>
        <childnode refid="112618" relation="include">
        </childnode>
        <childnode refid="112619" relation="include">
        </childnode>
        <childnode refid="112620" relation="include">
        </childnode>
        <childnode refid="112621" relation="include">
        </childnode>
        <childnode refid="112622" relation="include">
        </childnode>
        <childnode refid="112623" relation="include">
        </childnode>
        <childnode refid="112624" relation="include">
        </childnode>
        <childnode refid="112625" relation="include">
        </childnode>
        <childnode refid="112626" relation="include">
        </childnode>
        <childnode refid="112627" relation="include">
        </childnode>
        <childnode refid="112628" relation="include">
        </childnode>
        <childnode refid="112629" relation="include">
        </childnode>
        <childnode refid="112630" relation="include">
        </childnode>
        <childnode refid="112631" relation="include">
        </childnode>
        <childnode refid="112632" relation="include">
        </childnode>
        <childnode refid="112633" relation="include">
        </childnode>
        <childnode refid="112634" relation="include">
        </childnode>
        <childnode refid="112635" relation="include">
        </childnode>
        <childnode refid="112636" relation="include">
        </childnode>
        <childnode refid="112637" relation="include">
        </childnode>
      </node>
      <node id="112621">
        <label>RaceServer/src/SeRaceData.cpp</label>
        <link refid="src_2_se_race_data_8cpp"/>
      </node>
      <node id="112643">
        <label>RaceServer/Src/RaceDetailMgr.cpp</label>
        <link refid="_src_2_race_detail_mgr_8cpp"/>
      </node>
      <node id="112653">
        <label>RaceServer/Src/SeRaceMgr.cpp</label>
        <link refid="_race_server_2_src_2_se_race_mgr_8cpp"/>
      </node>
      <node id="112660">
        <label>RaceServer/Src/SeRCSend.cpp</label>
        <link refid="_src_2_se_r_c_send_8cpp"/>
      </node>
      <node id="112634">
        <label>RaceServer/src/SeRWSend.cpp</label>
        <link refid="src_2_se_r_w_send_8cpp"/>
      </node>
      <node id="112638">
        <label>RaceServer/src/SeRaceMgr.h</label>
        <link refid="_race_server_2src_2_se_race_mgr_8h"/>
        <childnode refid="112610" relation="include">
        </childnode>
        <childnode refid="112615" relation="include">
        </childnode>
        <childnode refid="112622" relation="include">
        </childnode>
      </node>
      <node id="112649">
        <label>RaceServer/Src/SeMatchPlayer.cpp</label>
        <link refid="_src_2_se_match_player_8cpp"/>
      </node>
      <node id="112641">
        <label>RaceServer/Src/RaceServer.h</label>
        <link refid="_src_2_race_server_8h"/>
        <childnode refid="112642" relation="include">
        </childnode>
        <childnode refid="112643" relation="include">
        </childnode>
        <childnode refid="112644" relation="include">
        </childnode>
        <childnode refid="112645" relation="include">
        </childnode>
        <childnode refid="112646" relation="include">
        </childnode>
        <childnode refid="112647" relation="include">
        </childnode>
        <childnode refid="112648" relation="include">
        </childnode>
        <childnode refid="112649" relation="include">
        </childnode>
        <childnode refid="112650" relation="include">
        </childnode>
        <childnode refid="112651" relation="include">
        </childnode>
        <childnode refid="112652" relation="include">
        </childnode>
        <childnode refid="112653" relation="include">
        </childnode>
        <childnode refid="112654" relation="include">
        </childnode>
        <childnode refid="112655" relation="include">
        </childnode>
        <childnode refid="112656" relation="include">
        </childnode>
        <childnode refid="112657" relation="include">
        </childnode>
        <childnode refid="112658" relation="include">
        </childnode>
        <childnode refid="112659" relation="include">
        </childnode>
        <childnode refid="112660" relation="include">
        </childnode>
        <childnode refid="112661" relation="include">
        </childnode>
        <childnode refid="112662" relation="include">
        </childnode>
        <childnode refid="112663" relation="include">
        </childnode>
        <childnode refid="112664" relation="include">
        </childnode>
        <childnode refid="112665" relation="include">
        </childnode>
        <childnode refid="112666" relation="include">
        </childnode>
        <childnode refid="112667" relation="include">
        </childnode>
        <childnode refid="112668" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_se_c_r_stream_8h_1a2f7c882d1d717f8d738137892b9e631a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_HeartPackage</definition>
        <argsstring>(const SeCR_HeartPackage &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_HeartPackage</name>
        <param>
          <type>const <ref refid="struct_se_c_r___heart_package" kindref="compound">SeCR_HeartPackage</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="4" bodyend="7"/>
        <references refid="_se_c_r_stream_8cpp_1a2f7c882d1d717f8d738137892b9e631a" compoundref="_se_c_r_stream_8cpp" startline="4" endline="7">EncodeSeCR_HeartPackage</references>
        <referencedby refid="_se_c_r_stream_8h_1a2f7c882d1d717f8d738137892b9e631a" compoundref="_se_c_r_stream_8cpp" startline="4" endline="7">EncodeSeCR_HeartPackage</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a6af74d17aa7909de9fa1cfb1fe7cf72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_HeartPackage</definition>
        <argsstring>(char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_HeartPackage</name>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="9" bodyend="14"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a61533d045cc63ae38aff9d7e335146ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_HeartPackage</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_HeartPackage &amp;kStruct)</argsstring>
        <name>DecodeSeCR_HeartPackage</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___heart_package" kindref="compound">SeCR_HeartPackage</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="8" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="16" bodyend="21"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a5927d7acc494633a0b704ac2de443a3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceValidate</definition>
        <argsstring>(const SeCR_RaceValidate &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceValidate</name>
        <param>
          <type>const <ref refid="struct_se_c_r___race_validate" kindref="compound">SeCR_RaceValidate</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="10" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="23" bodyend="26"/>
        <references refid="struct_se_c_r___race_validate_1a02ead2a1689ecf724c2fb935fc56f09b" compoundref="_se_ptl___c_l___to___r_s_8h" startline="85">SeCR_RaceValidate::dwFrame</references>
        <references refid="struct_se_c_r___race_validate_1ad8b67488740f6d8eecfa52f1ffe8e2ab" compoundref="_se_ptl___c_l___to___r_s_8h" startline="81">SeCR_RaceValidate::dwKey</references>
        <references refid="struct_se_c_r___race_validate_1a1f80f4308c28bb2196a6e7b3eb34d164" compoundref="_se_ptl___c_l___to___r_s_8h" startline="79">SeCR_RaceValidate::dwPlayerID</references>
        <references refid="struct_se_c_r___race_validate_1aee602a7a500c25d9bfd85e1da7715d2c" compoundref="_se_ptl___c_l___to___r_s_8h" startline="80">SeCR_RaceValidate::dwSessionId</references>
        <references refid="_se_c_r_stream_8cpp_1a5927d7acc494633a0b704ac2de443a3c" compoundref="_se_c_r_stream_8cpp" startline="23" endline="26">EncodeSeCR_RaceValidate</references>
        <references refid="struct_se_c_r___race_validate_1a016211036d852ce78e9ba3b4a4d7523f" compoundref="_se_ptl___c_l___to___r_s_8h" startline="82">SeCR_RaceValidate::eValidType</references>
        <references refid="struct_se_c_r___race_validate_1a2ad56c0875e383667f83494f38329f6c" compoundref="_se_ptl___c_l___to___r_s_8h" startline="84">SeCR_RaceValidate::iOffset</references>
        <references refid="struct_se_c_r___race_validate_1a7c89e41d279f875266be4a7a00af5ca0" compoundref="_se_ptl___c_l___to___r_s_8h" startline="83">SeCR_RaceValidate::iSeat</references>
        <referencedby refid="_se_c_r_stream_8h_1a5927d7acc494633a0b704ac2de443a3c" compoundref="_se_c_r_stream_8cpp" startline="23" endline="26">EncodeSeCR_RaceValidate</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a0257d3afbab480ef58579cf2241abfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceValidate</definition>
        <argsstring>(DWord dwPlayerID, DWord dwSessionId, DWord dwKey, SeRaceValidType eValidType, int iSeat, int iOffset, DWord dwFrame, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceValidate</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwSessionId</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwKey</declname>
        </param>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a77f91e01c5c1d6e63aeae4848cd17d45" kindref="member">SeRaceValidType</ref></type>
          <declname>eValidType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwFrame</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="11" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="28" bodyend="61"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a4a94898e138e04855ee82f538371257f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_RaceValidate</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_RaceValidate &amp;kStruct)</argsstring>
        <name>DecodeSeCR_RaceValidate</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___race_validate" kindref="compound">SeCR_RaceValidate</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="12" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="63" bodyend="96"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___race_validate_1a02ead2a1689ecf724c2fb935fc56f09b" compoundref="_se_ptl___c_l___to___r_s_8h" startline="85">SeCR_RaceValidate::dwFrame</references>
        <references refid="struct_se_c_r___race_validate_1ad8b67488740f6d8eecfa52f1ffe8e2ab" compoundref="_se_ptl___c_l___to___r_s_8h" startline="81">SeCR_RaceValidate::dwKey</references>
        <references refid="struct_se_c_r___race_validate_1a1f80f4308c28bb2196a6e7b3eb34d164" compoundref="_se_ptl___c_l___to___r_s_8h" startline="79">SeCR_RaceValidate::dwPlayerID</references>
        <references refid="struct_se_c_r___race_validate_1aee602a7a500c25d9bfd85e1da7715d2c" compoundref="_se_ptl___c_l___to___r_s_8h" startline="80">SeCR_RaceValidate::dwSessionId</references>
        <references refid="struct_se_c_r___race_validate_1a016211036d852ce78e9ba3b4a4d7523f" compoundref="_se_ptl___c_l___to___r_s_8h" startline="82">SeCR_RaceValidate::eValidType</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_c_r___race_validate_1a2ad56c0875e383667f83494f38329f6c" compoundref="_se_ptl___c_l___to___r_s_8h" startline="84">SeCR_RaceValidate::iOffset</references>
        <references refid="struct_se_c_r___race_validate_1a7c89e41d279f875266be4a7a00af5ca0" compoundref="_se_ptl___c_l___to___r_s_8h" startline="83">SeCR_RaceValidate::iSeat</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ac0dcb0a81427cf7065d6a2df71a56ffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceLoadEnd</definition>
        <argsstring>(const SeCR_RaceLoadEnd &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceLoadEnd</name>
        <param>
          <type>const <ref refid="struct_se_c_r___race_load_end" kindref="compound">SeCR_RaceLoadEnd</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="14" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="98" bodyend="101"/>
        <references refid="struct_se_c_r___race_load_end_1aaa1b563ed41293c6547bdd2b3278c267" compoundref="_se_ptl___c_l___to___r_s_8h" startline="96">SeCR_RaceLoadEnd::dwRate</references>
        <references refid="struct_se_c_r___race_load_end_1a16f176834995961640bc8e8d9357e5e6" compoundref="_se_ptl___c_l___to___r_s_8h" startline="95">SeCR_RaceLoadEnd::eLoadType</references>
        <references refid="_se_c_r_stream_8cpp_1ac0dcb0a81427cf7065d6a2df71a56ffe" compoundref="_se_c_r_stream_8cpp" startline="98" endline="101">EncodeSeCR_RaceLoadEnd</references>
        <referencedby refid="_se_c_r_stream_8h_1ac0dcb0a81427cf7065d6a2df71a56ffe" compoundref="_se_c_r_stream_8cpp" startline="98" endline="101">EncodeSeCR_RaceLoadEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a03e208d3615a953e75fc7e9cd339b7e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceLoadEnd</definition>
        <argsstring>(SeRaceLoadType eLoadType, DWord dwRate, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceLoadEnd</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1aea4c319e1925bfc3edfccdb187f5fcaf" kindref="member">SeRaceLoadType</ref></type>
          <declname>eLoadType</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwRate</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="15" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="103" bodyend="116"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a8c958473a3bfff695a8d4554ea1aca9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_RaceLoadEnd</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_RaceLoadEnd &amp;kStruct)</argsstring>
        <name>DecodeSeCR_RaceLoadEnd</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___race_load_end" kindref="compound">SeCR_RaceLoadEnd</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="16" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="118" bodyend="131"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___race_load_end_1aaa1b563ed41293c6547bdd2b3278c267" compoundref="_se_ptl___c_l___to___r_s_8h" startline="96">SeCR_RaceLoadEnd::dwRate</references>
        <references refid="struct_se_c_r___race_load_end_1a16f176834995961640bc8e8d9357e5e6" compoundref="_se_ptl___c_l___to___r_s_8h" startline="95">SeCR_RaceLoadEnd::eLoadType</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a73f2df7cfb3f0a9318b058b1e98d4b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceCmd</definition>
        <argsstring>(const SeCR_RaceCmd &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceCmd</name>
        <param>
          <type>const <ref refid="struct_se_c_r___race_cmd" kindref="compound">SeCR_RaceCmd</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="18" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="133" bodyend="136"/>
        <references refid="struct_se_c_r___race_cmd_1aa59dd89e4503a559574bdd952e5a2277" compoundref="_se_ptl___c_l___to___r_s_8h" startline="107">SeCR_RaceCmd::acData</references>
        <references refid="_se_c_r_stream_8cpp_1a73f2df7cfb3f0a9318b058b1e98d4b17" compoundref="_se_c_r_stream_8cpp" startline="133" endline="136">EncodeSeCR_RaceCmd</references>
        <references refid="struct_se_c_r___race_cmd_1a9f4237b6840566ebf814859efe7f17bd" compoundref="_se_ptl___c_l___to___r_s_8h" startline="106">SeCR_RaceCmd::iSize</references>
        <referencedby refid="_se_c_r_stream_8h_1a73f2df7cfb3f0a9318b058b1e98d4b17" compoundref="_se_c_r_stream_8cpp" startline="133" endline="136">EncodeSeCR_RaceCmd</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a3a18145b3ea8447e4f06b3ac9b11bd80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceCmd</definition>
        <argsstring>(int iSize, const char *acData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceCmd</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="19" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="138" bodyend="151"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a0f180d0abbd7edc7be406c68ed39e4c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceCmd</definition>
        <argsstring>(int iSize, std::vector&lt; char &gt; &amp;acData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceCmd</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="20" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="153" bodyend="169"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a4267efb9bc7685789816225c2f81b813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_RaceCmd</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_RaceCmd &amp;kStruct)</argsstring>
        <name>DecodeSeCR_RaceCmd</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___race_cmd" kindref="compound">SeCR_RaceCmd</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="21" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="171" bodyend="188"/>
        <references refid="struct_se_c_r___race_cmd_1aa59dd89e4503a559574bdd952e5a2277" compoundref="_se_ptl___c_l___to___r_s_8h" startline="107">SeCR_RaceCmd::acData</references>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_c_r___race_cmd_1a9f4237b6840566ebf814859efe7f17bd" compoundref="_se_ptl___c_l___to___r_s_8h" startline="106">SeCR_RaceCmd::iSize</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a2645518afd2f14a211e91f5d62edaa51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceLeave</definition>
        <argsstring>(const SeCR_RaceLeave &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceLeave</name>
        <param>
          <type>const <ref refid="struct_se_c_r___race_leave" kindref="compound">SeCR_RaceLeave</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="23" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="190" bodyend="193"/>
        <references refid="_se_c_r_stream_8cpp_1a2645518afd2f14a211e91f5d62edaa51" compoundref="_se_c_r_stream_8cpp" startline="190" endline="193">EncodeSeCR_RaceLeave</references>
        <referencedby refid="_se_c_r_stream_8h_1a2645518afd2f14a211e91f5d62edaa51" compoundref="_se_c_r_stream_8cpp" startline="190" endline="193">EncodeSeCR_RaceLeave</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a3aac43478f28edf5eb62f2bba982c94f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceLeave</definition>
        <argsstring>(char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceLeave</name>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="24" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="195" bodyend="200"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ab73f4099c53c95ab446ad4e9ea986e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_RaceLeave</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_RaceLeave &amp;kStruct)</argsstring>
        <name>DecodeSeCR_RaceLeave</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___race_leave" kindref="compound">SeCR_RaceLeave</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="25" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="202" bodyend="207"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1aee8cc294917567cdb96e8f15262fc768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceEndRace</definition>
        <argsstring>(const SeCR_RaceEndRace &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceEndRace</name>
        <param>
          <type>const <ref refid="struct_se_c_r___race_end_race" kindref="compound">SeCR_RaceEndRace</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="27" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="209" bodyend="212"/>
        <references refid="struct_se_c_r___race_end_race_1abf99024f5bf801ab9226e9d2ee059692" compoundref="_se_ptl___c_l___to___r_s_8h" startline="130">SeCR_RaceEndRace::akPlayerInfo</references>
        <references refid="struct_se_c_r___race_end_race_1ac0c8c69e1239032cb7cca913de3c31a4" compoundref="_se_ptl___c_l___to___r_s_8h" startline="128">SeCR_RaceEndRace::bValid</references>
        <references refid="struct_se_c_r___race_end_race_1a2c103b9c3dd160b0a13df1ee7b0a2084" compoundref="_se_ptl___c_l___to___r_s_8h" startline="126">SeCR_RaceEndRace::dwRaceTime</references>
        <references refid="_se_c_r_stream_8cpp_1aee8cc294917567cdb96e8f15262fc768" compoundref="_se_c_r_stream_8cpp" startline="209" endline="212">EncodeSeCR_RaceEndRace</references>
        <references refid="struct_se_c_r___race_end_race_1a686cfd22d863cc71fb4c2c03a1746aee" compoundref="_se_ptl___c_l___to___r_s_8h" startline="127">SeCR_RaceEndRace::iMapID</references>
        <references refid="struct_se_c_r___race_end_race_1ad5962166503e94443d40990e6e6c8317" compoundref="_se_ptl___c_l___to___r_s_8h" startline="129">SeCR_RaceEndRace::iNums</references>
        <referencedby refid="_se_c_r_stream_8h_1aee8cc294917567cdb96e8f15262fc768" compoundref="_se_c_r_stream_8cpp" startline="209" endline="212">EncodeSeCR_RaceEndRace</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1aa2d39fc14eae7cd7b589f392dac30d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceEndRace</definition>
        <argsstring>(DWord dwRaceTime, int iMapID, bool bValid, int iNums, const SeRaceSendInfo *akPlayerInfo, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceEndRace</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMapID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bValid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNums</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_race_send_info" kindref="compound">SeRaceSendInfo</ref> *</type>
          <declname>akPlayerInfo</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="28" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="214" bodyend="244"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="_se_comm_stream_8cpp_1a8272263fed46f9df449059c63b0e6de6" compoundref="_se_comm_stream_8cpp" startline="380" endline="383">EncodeSeRaceSendInfo</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a338e08ef1f71584360dce7a1162f2074" compoundref="_se_net_stream_8cpp" startline="44" endline="50">SeNetStream::SetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1af6044209751afb5ddd013ba8b5d9751a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceEndRace</definition>
        <argsstring>(DWord dwRaceTime, int iMapID, bool bValid, int iNums, std::vector&lt; SeRaceSendInfo &gt; &amp;akPlayerInfo, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceEndRace</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMapID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bValid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNums</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_race_send_info" kindref="compound">SeRaceSendInfo</ref> &gt; &amp;</type>
          <declname>akPlayerInfo</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="29" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="246" bodyend="276"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="_se_comm_stream_8cpp_1a8272263fed46f9df449059c63b0e6de6" compoundref="_se_comm_stream_8cpp" startline="380" endline="383">EncodeSeRaceSendInfo</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a338e08ef1f71584360dce7a1162f2074" compoundref="_se_net_stream_8cpp" startline="44" endline="50">SeNetStream::SetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ac6a07b2601c7d46750d630cd532e6ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_RaceEndRace</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_RaceEndRace &amp;kStruct)</argsstring>
        <name>DecodeSeCR_RaceEndRace</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___race_end_race" kindref="compound">SeCR_RaceEndRace</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="30" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="278" bodyend="312"/>
        <references refid="struct_se_c_r___race_end_race_1abf99024f5bf801ab9226e9d2ee059692" compoundref="_se_ptl___c_l___to___r_s_8h" startline="130">SeCR_RaceEndRace::akPlayerInfo</references>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___race_end_race_1ac0c8c69e1239032cb7cca913de3c31a4" compoundref="_se_ptl___c_l___to___r_s_8h" startline="128">SeCR_RaceEndRace::bValid</references>
        <references refid="_se_comm_stream_8cpp_1aeb393395acd4fa78bb3fc9f33bb5035e" compoundref="_se_comm_stream_8cpp" startline="665" endline="807">DecodeSeRaceSendInfo</references>
        <references refid="struct_se_c_r___race_end_race_1a2c103b9c3dd160b0a13df1ee7b0a2084" compoundref="_se_ptl___c_l___to___r_s_8h" startline="126">SeCR_RaceEndRace::dwRaceTime</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_c_r___race_end_race_1a686cfd22d863cc71fb4c2c03a1746aee" compoundref="_se_ptl___c_l___to___r_s_8h" startline="127">SeCR_RaceEndRace::iMapID</references>
        <references refid="struct_se_c_r___race_end_race_1ad5962166503e94443d40990e6e6c8317" compoundref="_se_ptl___c_l___to___r_s_8h" startline="129">SeCR_RaceEndRace::iNums</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
        <references refid="class_se_net_stream_1a338e08ef1f71584360dce7a1162f2074" compoundref="_se_net_stream_8cpp" startline="44" endline="50">SeNetStream::SetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1adb9258fba30ddb1b099f77628ad2e594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceEndGuanqia</definition>
        <argsstring>(const SeCR_RaceEndGuanqia &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceEndGuanqia</name>
        <param>
          <type>const <ref refid="struct_se_c_r___race_end_guanqia" kindref="compound">SeCR_RaceEndGuanqia</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="32" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="314" bodyend="317"/>
        <references refid="struct_se_c_r___race_end_guanqia_1acdecb98d5072bef192baf6d8219cfb0b" compoundref="_se_ptl___c_l___to___r_s_8h" startline="146">SeCR_RaceEndGuanqia::akPlayerInfo</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a22264eaaf1f04906d5d831f5e32e1888" compoundref="_se_ptl___c_l___to___r_s_8h" startline="144">SeCR_RaceEndGuanqia::bValid</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a629c66b15d98412039e0c65b43e34563" compoundref="_se_ptl___c_l___to___r_s_8h" startline="142">SeCR_RaceEndGuanqia::dwRaceTime</references>
        <references refid="_se_c_r_stream_8cpp_1adb9258fba30ddb1b099f77628ad2e594" compoundref="_se_c_r_stream_8cpp" startline="314" endline="317">EncodeSeCR_RaceEndGuanqia</references>
        <references refid="struct_se_c_r___race_end_guanqia_1adb35f1d97ef05fb3d8aaa0418474f603" compoundref="_se_ptl___c_l___to___r_s_8h" startline="143">SeCR_RaceEndGuanqia::iMapID</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a3940dac3944d6e91cd7f75b84c9aca7f" compoundref="_se_ptl___c_l___to___r_s_8h" startline="145">SeCR_RaceEndGuanqia::iNums</references>
        <referencedby refid="_se_c_r_stream_8h_1adb9258fba30ddb1b099f77628ad2e594" compoundref="_se_c_r_stream_8cpp" startline="314" endline="317">EncodeSeCR_RaceEndGuanqia</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a5bec992df4e88d8228d14ac889f8f57c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceEndGuanqia</definition>
        <argsstring>(DWord dwRaceTime, int iMapID, bool bValid, int iNums, const SeGuanqiaSendInfo *akPlayerInfo, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceEndGuanqia</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMapID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bValid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNums</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_guanqia_send_info" kindref="compound">SeGuanqiaSendInfo</ref> *</type>
          <declname>akPlayerInfo</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="33" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="319" bodyend="349"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="_se_comm_stream_8cpp_1a87c80643bddfbd63dd53be7172a4a428" compoundref="_se_comm_stream_8cpp" startline="1012" endline="1015">EncodeSeGuanqiaSendInfo</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a338e08ef1f71584360dce7a1162f2074" compoundref="_se_net_stream_8cpp" startline="44" endline="50">SeNetStream::SetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ab3dec6f0a7138901600f38a53a66a91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceEndGuanqia</definition>
        <argsstring>(DWord dwRaceTime, int iMapID, bool bValid, int iNums, std::vector&lt; SeGuanqiaSendInfo &gt; &amp;akPlayerInfo, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceEndGuanqia</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMapID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bValid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNums</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_guanqia_send_info" kindref="compound">SeGuanqiaSendInfo</ref> &gt; &amp;</type>
          <declname>akPlayerInfo</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="34" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="351" bodyend="381"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="_se_comm_stream_8cpp_1a87c80643bddfbd63dd53be7172a4a428" compoundref="_se_comm_stream_8cpp" startline="1012" endline="1015">EncodeSeGuanqiaSendInfo</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a338e08ef1f71584360dce7a1162f2074" compoundref="_se_net_stream_8cpp" startline="44" endline="50">SeNetStream::SetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a494c772b19cb42348d45515d983be033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_RaceEndGuanqia</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_RaceEndGuanqia &amp;kStruct)</argsstring>
        <name>DecodeSeCR_RaceEndGuanqia</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___race_end_guanqia" kindref="compound">SeCR_RaceEndGuanqia</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="35" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="383" bodyend="417"/>
        <references refid="struct_se_c_r___race_end_guanqia_1acdecb98d5072bef192baf6d8219cfb0b" compoundref="_se_ptl___c_l___to___r_s_8h" startline="146">SeCR_RaceEndGuanqia::akPlayerInfo</references>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a22264eaaf1f04906d5d831f5e32e1888" compoundref="_se_ptl___c_l___to___r_s_8h" startline="144">SeCR_RaceEndGuanqia::bValid</references>
        <references refid="_se_comm_stream_8cpp_1a4eee89525e1605551da91adf2cad54b0" compoundref="_se_comm_stream_8cpp" startline="1164" endline="1242">DecodeSeGuanqiaSendInfo</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a629c66b15d98412039e0c65b43e34563" compoundref="_se_ptl___c_l___to___r_s_8h" startline="142">SeCR_RaceEndGuanqia::dwRaceTime</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_c_r___race_end_guanqia_1adb35f1d97ef05fb3d8aaa0418474f603" compoundref="_se_ptl___c_l___to___r_s_8h" startline="143">SeCR_RaceEndGuanqia::iMapID</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a3940dac3944d6e91cd7f75b84c9aca7f" compoundref="_se_ptl___c_l___to___r_s_8h" startline="145">SeCR_RaceEndGuanqia::iNums</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
        <references refid="class_se_net_stream_1a338e08ef1f71584360dce7a1162f2074" compoundref="_se_net_stream_8cpp" startline="44" endline="50">SeNetStream::SetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1aed9b1f46373b4ee886efa1350f7702ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SelHeroChoiceHero</definition>
        <argsstring>(const SeCR_SelHeroChoiceHero &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SelHeroChoiceHero</name>
        <param>
          <type>const <ref refid="struct_se_c_r___sel_hero_choice_hero" kindref="compound">SeCR_SelHeroChoiceHero</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="37" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="419" bodyend="422"/>
        <references refid="struct_se_c_r___sel_hero_choice_hero_1a0260e245b7928c726f16f8e89476ac8e" compoundref="_se_ptl___c_l___to___r_s_8h" startline="157">SeCR_SelHeroChoiceHero::bDreamHero</references>
        <references refid="struct_se_c_r___sel_hero_choice_hero_1a9145eaf8450b90d6274f9c80afe323c3" compoundref="_se_ptl___c_l___to___r_s_8h" startline="156">SeCR_SelHeroChoiceHero::dwHeroCardID</references>
        <references refid="_se_c_r_stream_8cpp_1aed9b1f46373b4ee886efa1350f7702ed" compoundref="_se_c_r_stream_8cpp" startline="419" endline="422">EncodeSeCR_SelHeroChoiceHero</references>
        <referencedby refid="_se_c_r_stream_8h_1aed9b1f46373b4ee886efa1350f7702ed" compoundref="_se_c_r_stream_8cpp" startline="419" endline="422">EncodeSeCR_SelHeroChoiceHero</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a710afc79629bc704df4a72bd21ece16a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SelHeroChoiceHero</definition>
        <argsstring>(DWord dwHeroCardID, bool bDreamHero, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SelHeroChoiceHero</name>
        <param>
          <type>DWord</type>
          <declname>dwHeroCardID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bDreamHero</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="38" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="424" bodyend="437"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ac21b87072dc488df87ee144aedf25354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_SelHeroChoiceHero</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_SelHeroChoiceHero &amp;kStruct)</argsstring>
        <name>DecodeSeCR_SelHeroChoiceHero</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_choice_hero" kindref="compound">SeCR_SelHeroChoiceHero</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="39" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="439" bodyend="452"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___sel_hero_choice_hero_1a0260e245b7928c726f16f8e89476ac8e" compoundref="_se_ptl___c_l___to___r_s_8h" startline="157">SeCR_SelHeroChoiceHero::bDreamHero</references>
        <references refid="struct_se_c_r___sel_hero_choice_hero_1a9145eaf8450b90d6274f9c80afe323c3" compoundref="_se_ptl___c_l___to___r_s_8h" startline="156">SeCR_SelHeroChoiceHero::dwHeroCardID</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a6fadddfe0424719b6fe60fda1a64fd78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SelHeroCancelHero</definition>
        <argsstring>(const SeCR_SelHeroCancelHero &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SelHeroCancelHero</name>
        <param>
          <type>const <ref refid="struct_se_c_r___sel_hero_cancel_hero" kindref="compound">SeCR_SelHeroCancelHero</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="41" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="454" bodyend="457"/>
        <references refid="_se_c_r_stream_8cpp_1a6fadddfe0424719b6fe60fda1a64fd78" compoundref="_se_c_r_stream_8cpp" startline="454" endline="457">EncodeSeCR_SelHeroCancelHero</references>
        <referencedby refid="_se_c_r_stream_8h_1a6fadddfe0424719b6fe60fda1a64fd78" compoundref="_se_c_r_stream_8cpp" startline="454" endline="457">EncodeSeCR_SelHeroCancelHero</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1acc86930eaaeb3c12ff893265ed8ae7a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SelHeroCancelHero</definition>
        <argsstring>(char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SelHeroCancelHero</name>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="42" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="459" bodyend="464"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1aa3c5243b6a96e9603bee300e80d4cdd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_SelHeroCancelHero</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_SelHeroCancelHero &amp;kStruct)</argsstring>
        <name>DecodeSeCR_SelHeroCancelHero</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_cancel_hero" kindref="compound">SeCR_SelHeroCancelHero</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="43" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="466" bodyend="471"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a2b49b50053a6f55f8d02a5195b19e06d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SelHeroPrapared</definition>
        <argsstring>(const SeCR_SelHeroPrapared &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SelHeroPrapared</name>
        <param>
          <type>const <ref refid="struct_se_c_r___sel_hero_prapared" kindref="compound">SeCR_SelHeroPrapared</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="45" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="473" bodyend="476"/>
        <references refid="_se_c_r_stream_8cpp_1a2b49b50053a6f55f8d02a5195b19e06d" compoundref="_se_c_r_stream_8cpp" startline="473" endline="476">EncodeSeCR_SelHeroPrapared</references>
        <referencedby refid="_se_c_r_stream_8h_1a2b49b50053a6f55f8d02a5195b19e06d" compoundref="_se_c_r_stream_8cpp" startline="473" endline="476">EncodeSeCR_SelHeroPrapared</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1aa665a924e7940bc5dc72458c67d25a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SelHeroPrapared</definition>
        <argsstring>(char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SelHeroPrapared</name>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="46" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="478" bodyend="483"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a9231ac6b70d528405e0c3f10f9d299a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_SelHeroPrapared</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_SelHeroPrapared &amp;kStruct)</argsstring>
        <name>DecodeSeCR_SelHeroPrapared</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_prapared" kindref="compound">SeCR_SelHeroPrapared</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="47" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="485" bodyend="490"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ab127671fd4ee533668a05106004be9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceReportSyn</definition>
        <argsstring>(const SeCR_RaceReportSyn &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceReportSyn</name>
        <param>
          <type>const <ref refid="struct_se_c_r___race_report_syn" kindref="compound">SeCR_RaceReportSyn</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="49" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="492" bodyend="495"/>
        <references refid="struct_se_c_r___race_report_syn_1a17b71ec6916bf448e01b7d32a3c91669" compoundref="_se_ptl___c_l___to___r_s_8h" startline="181">SeCR_RaceReportSyn::dwFrame</references>
        <references refid="_se_c_r_stream_8cpp_1ab127671fd4ee533668a05106004be9b9" compoundref="_se_c_r_stream_8cpp" startline="492" endline="495">EncodeSeCR_RaceReportSyn</references>
        <references refid="struct_se_c_r___race_report_syn_1ae17f25f56d093ae6e5cecbe66418a144" compoundref="_se_ptl___c_l___to___r_s_8h" startline="182">SeCR_RaceReportSyn::iFrameRand</references>
        <referencedby refid="_se_c_r_stream_8h_1ab127671fd4ee533668a05106004be9b9" compoundref="_se_c_r_stream_8cpp" startline="492" endline="495">EncodeSeCR_RaceReportSyn</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ae16899d1c2efd3113176f657b744c654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceReportSyn</definition>
        <argsstring>(DWord dwFrame, int iFrameRand, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceReportSyn</name>
        <param>
          <type>DWord</type>
          <declname>dwFrame</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iFrameRand</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="50" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="497" bodyend="510"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a6a006820246d5fe0cf7eada97897a7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_RaceReportSyn</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_RaceReportSyn &amp;kStruct)</argsstring>
        <name>DecodeSeCR_RaceReportSyn</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___race_report_syn" kindref="compound">SeCR_RaceReportSyn</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="51" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="512" bodyend="525"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___race_report_syn_1a17b71ec6916bf448e01b7d32a3c91669" compoundref="_se_ptl___c_l___to___r_s_8h" startline="181">SeCR_RaceReportSyn::dwFrame</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_c_r___race_report_syn_1ae17f25f56d093ae6e5cecbe66418a144" compoundref="_se_ptl___c_l___to___r_s_8h" startline="182">SeCR_RaceReportSyn::iFrameRand</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1af4ac55d9947b3e6174e5a44d4859646c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_Talk</definition>
        <argsstring>(const SeCR_Talk &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_Talk</name>
        <param>
          <type>const <ref refid="struct_se_c_r___talk" kindref="compound">SeCR_Talk</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="53" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="527" bodyend="530"/>
        <references refid="struct_se_c_r___talk_1a466c57d78ec72210dac7a21b38cb7747" compoundref="_se_ptl___c_l___to___r_s_8h" startline="193">SeCR_Talk::acMessage</references>
        <references refid="_se_c_r_stream_8cpp_1af4ac55d9947b3e6174e5a44d4859646c" compoundref="_se_c_r_stream_8cpp" startline="527" endline="530">EncodeSeCR_Talk</references>
        <references refid="struct_se_c_r___talk_1a36bf9f17074db21aec45e8cf61f98880" compoundref="_se_ptl___c_l___to___r_s_8h" startline="192">SeCR_Talk::eType</references>
        <referencedby refid="_se_c_r_stream_8h_1af4ac55d9947b3e6174e5a44d4859646c" compoundref="_se_c_r_stream_8cpp" startline="527" endline="530">EncodeSeCR_Talk</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a079368cbab8fd4c3ebb3756569b6d1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_Talk</definition>
        <argsstring>(SeTalkType eType, const char *acMessage, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_Talk</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a1c935381ad9f824965c7b1b128e32466" kindref="member">SeTalkType</ref></type>
          <declname>eType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acMessage</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="54" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="532" bodyend="545"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
        <references refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" compoundref="_se_net_stream_8cpp" startline="231" endline="249">SeNetStream::WriteString</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a44e909f39ae2e99723970ccfbf3507e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_Talk</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_Talk &amp;kStruct)</argsstring>
        <name>DecodeSeCR_Talk</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___talk" kindref="compound">SeCR_Talk</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="55" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="547" bodyend="560"/>
        <references refid="struct_se_c_r___talk_1a466c57d78ec72210dac7a21b38cb7747" compoundref="_se_ptl___c_l___to___r_s_8h" startline="193">SeCR_Talk::acMessage</references>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___talk_1a36bf9f17074db21aec45e8cf61f98880" compoundref="_se_ptl___c_l___to___r_s_8h" startline="192">SeCR_Talk::eType</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
        <references refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" compoundref="_se_net_stream_8cpp" startline="123" endline="132">SeNetStream::ReadString</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a9d9127d0d7439c7e13d5422a874181c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceRobotLogin</definition>
        <argsstring>(const SeCR_RaceRobotLogin &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceRobotLogin</name>
        <param>
          <type>const <ref refid="struct_se_c_r___race_robot_login" kindref="compound">SeCR_RaceRobotLogin</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="57" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="562" bodyend="565"/>
        <references refid="struct_se_c_r___race_robot_login_1ac5fb215463344e895322eb46da1900ac" compoundref="_se_ptl___c_l___to___r_s_8h" startline="205">SeCR_RaceRobotLogin::dwMapID</references>
        <references refid="struct_se_c_r___race_robot_login_1aefb094b103ee1b1e98c99a79cb526fef" compoundref="_se_ptl___c_l___to___r_s_8h" startline="204">SeCR_RaceRobotLogin::dwPlayerID</references>
        <references refid="_se_c_r_stream_8cpp_1a9d9127d0d7439c7e13d5422a874181c2" compoundref="_se_c_r_stream_8cpp" startline="562" endline="565">EncodeSeCR_RaceRobotLogin</references>
        <referencedby refid="_se_c_r_stream_8h_1a9d9127d0d7439c7e13d5422a874181c2" compoundref="_se_c_r_stream_8cpp" startline="562" endline="565">EncodeSeCR_RaceRobotLogin</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a08234822b089a5d7513ab14b97771ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_RaceRobotLogin</definition>
        <argsstring>(DWord dwPlayerID, DWord dwMapID, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_RaceRobotLogin</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="58" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="567" bodyend="580"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a9f0d74563f962833d9c47f9af5d655dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_RaceRobotLogin</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_RaceRobotLogin &amp;kStruct)</argsstring>
        <name>DecodeSeCR_RaceRobotLogin</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___race_robot_login" kindref="compound">SeCR_RaceRobotLogin</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="59" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="582" bodyend="595"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___race_robot_login_1ac5fb215463344e895322eb46da1900ac" compoundref="_se_ptl___c_l___to___r_s_8h" startline="205">SeCR_RaceRobotLogin::dwMapID</references>
        <references refid="struct_se_c_r___race_robot_login_1aefb094b103ee1b1e98c99a79cb526fef" compoundref="_se_ptl___c_l___to___r_s_8h" startline="204">SeCR_RaceRobotLogin::dwPlayerID</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a4cd9186e3c1b27808a8de57ff116c423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_Ping</definition>
        <argsstring>(const SeCR_Ping &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_Ping</name>
        <param>
          <type>const <ref refid="struct_se_c_r___ping" kindref="compound">SeCR_Ping</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="61" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="597" bodyend="600"/>
        <references refid="struct_se_c_r___ping_1a702582bf849692030620f06f4b63c15a" compoundref="_se_ptl___c_l___to___r_s_8h" startline="214">SeCR_Ping::dwPackIndex</references>
        <references refid="_se_c_r_stream_8cpp_1a4cd9186e3c1b27808a8de57ff116c423" compoundref="_se_c_r_stream_8cpp" startline="597" endline="600">EncodeSeCR_Ping</references>
        <referencedby refid="_se_c_r_stream_8h_1a4cd9186e3c1b27808a8de57ff116c423" compoundref="_se_c_r_stream_8cpp" startline="597" endline="600">EncodeSeCR_Ping</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a5ba7dfb08fb4e10a7a4ef6e8b981249b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_Ping</definition>
        <argsstring>(DWord dwPackIndex, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_Ping</name>
        <param>
          <type>DWord</type>
          <declname>dwPackIndex</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="62" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="602" bodyend="611"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1adfdb1adca8ca5a3d6911551e6f5b3574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_Ping</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_Ping &amp;kStruct)</argsstring>
        <name>DecodeSeCR_Ping</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___ping" kindref="compound">SeCR_Ping</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="63" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="613" bodyend="622"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___ping_1a702582bf849692030620f06f4b63c15a" compoundref="_se_ptl___c_l___to___r_s_8h" startline="214">SeCR_Ping::dwPackIndex</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a2654268b216cdfbbf7f92e014e61db40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_BuyRaceItem</definition>
        <argsstring>(const SeCR_BuyRaceItem &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_BuyRaceItem</name>
        <param>
          <type>const <ref refid="struct_se_c_r___buy_race_item" kindref="compound">SeCR_BuyRaceItem</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="65" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="624" bodyend="627"/>
        <references refid="struct_se_c_r___buy_race_item_1a7dfa1210acb00b911007c983ea43c0dd" compoundref="_se_ptl___c_l___to___r_s_8h" startline="224">SeCR_BuyRaceItem::dwItemTypeID</references>
        <references refid="struct_se_c_r___buy_race_item_1a21a20d07a5e8494176416c7a179cbc49" compoundref="_se_ptl___c_l___to___r_s_8h" startline="225">SeCR_BuyRaceItem::dwTarUnitID</references>
        <references refid="_se_c_r_stream_8cpp_1a2654268b216cdfbbf7f92e014e61db40" compoundref="_se_c_r_stream_8cpp" startline="624" endline="627">EncodeSeCR_BuyRaceItem</references>
        <referencedby refid="_se_c_r_stream_8h_1a2654268b216cdfbbf7f92e014e61db40" compoundref="_se_c_r_stream_8cpp" startline="624" endline="627">EncodeSeCR_BuyRaceItem</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ae95fd654d0da3b660e5889356f1868cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_BuyRaceItem</definition>
        <argsstring>(DWord dwItemTypeID, DWord dwTarUnitID, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_BuyRaceItem</name>
        <param>
          <type>DWord</type>
          <declname>dwItemTypeID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTarUnitID</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="66" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="629" bodyend="642"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a04c24f4289581768506f5a9d56d6e705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_BuyRaceItem</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_BuyRaceItem &amp;kStruct)</argsstring>
        <name>DecodeSeCR_BuyRaceItem</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___buy_race_item" kindref="compound">SeCR_BuyRaceItem</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="67" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="644" bodyend="657"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___buy_race_item_1a7dfa1210acb00b911007c983ea43c0dd" compoundref="_se_ptl___c_l___to___r_s_8h" startline="224">SeCR_BuyRaceItem::dwItemTypeID</references>
        <references refid="struct_se_c_r___buy_race_item_1a21a20d07a5e8494176416c7a179cbc49" compoundref="_se_ptl___c_l___to___r_s_8h" startline="225">SeCR_BuyRaceItem::dwTarUnitID</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1adb83db5e37aace8e9d80591bb8f912e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_GetHeroInfo</definition>
        <argsstring>(const SeCR_GetHeroInfo &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_GetHeroInfo</name>
        <param>
          <type>const <ref refid="struct_se_c_r___get_hero_info" kindref="compound">SeCR_GetHeroInfo</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="69" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="659" bodyend="662"/>
        <references refid="_se_c_r_stream_8cpp_1adb83db5e37aace8e9d80591bb8f912e1" compoundref="_se_c_r_stream_8cpp" startline="659" endline="662">EncodeSeCR_GetHeroInfo</references>
        <references refid="struct_se_c_r___get_hero_info_1a6c859706ad78d25c75a64ad06542da79" compoundref="_se_ptl___c_l___to___r_s_8h" startline="235">SeCR_GetHeroInfo::iSeat</references>
        <referencedby refid="_se_c_r_stream_8h_1adb83db5e37aace8e9d80591bb8f912e1" compoundref="_se_c_r_stream_8cpp" startline="659" endline="662">EncodeSeCR_GetHeroInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1acc192a1252e8ffd442ab6c215909a3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_GetHeroInfo</definition>
        <argsstring>(int iSeat, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_GetHeroInfo</name>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="70" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="664" bodyend="673"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a84de0380220648457b1fa40dc875d55b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_GetHeroInfo</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_GetHeroInfo &amp;kStruct)</argsstring>
        <name>DecodeSeCR_GetHeroInfo</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___get_hero_info" kindref="compound">SeCR_GetHeroInfo</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="71" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="675" bodyend="684"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_c_r___get_hero_info_1a6c859706ad78d25c75a64ad06542da79" compoundref="_se_ptl___c_l___to___r_s_8h" startline="235">SeCR_GetHeroInfo::iSeat</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a7f6bd1f07141f6a147be1458359d9a50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_ReplayReport</definition>
        <argsstring>(const SeCR_ReplayReport &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_ReplayReport</name>
        <param>
          <type>const <ref refid="struct_se_c_r___replay_report" kindref="compound">SeCR_ReplayReport</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="73" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="686" bodyend="689"/>
        <references refid="struct_se_c_r___replay_report_1a62040c461d7bd1f280921ee6375d4257" compoundref="_se_ptl___c_l___to___r_s_8h" startline="251">SeCR_ReplayReport::acMessage</references>
        <references refid="struct_se_c_r___replay_report_1a6dd3aac95ef3ee29a0f5f1d577921554" compoundref="_se_ptl___c_l___to___r_s_8h" startline="249">SeCR_ReplayReport::Camera_x</references>
        <references refid="struct_se_c_r___replay_report_1ae3fc7da4982da0a4c300e0a98d57c798" compoundref="_se_ptl___c_l___to___r_s_8h" startline="250">SeCR_ReplayReport::Camera_y</references>
        <references refid="_se_c_r_stream_8cpp_1a7f6bd1f07141f6a147be1458359d9a50" compoundref="_se_c_r_stream_8cpp" startline="686" endline="689">EncodeSeCR_ReplayReport</references>
        <references refid="struct_se_c_r___replay_report_1a357404e415da9549fa4ea488c72df00b" compoundref="_se_ptl___c_l___to___r_s_8h" startline="248">SeCR_ReplayReport::iReportFrame</references>
        <referencedby refid="_se_c_r_stream_8h_1a7f6bd1f07141f6a147be1458359d9a50" compoundref="_se_c_r_stream_8cpp" startline="686" endline="689">EncodeSeCR_ReplayReport</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a34debe61b3e00f83019bbf8529529ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_ReplayReport</definition>
        <argsstring>(int iReportFrame, int Camera_x, int Camera_y, const char *acMessage, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_ReplayReport</name>
        <param>
          <type>int</type>
          <declname>iReportFrame</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Camera_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Camera_y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acMessage</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="74" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="691" bodyend="712"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
        <references refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" compoundref="_se_net_stream_8cpp" startline="231" endline="249">SeNetStream::WriteString</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ad6ac40e9d6122c9bc373fa815c9d080e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_ReplayReport</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_ReplayReport &amp;kStruct)</argsstring>
        <name>DecodeSeCR_ReplayReport</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___replay_report" kindref="compound">SeCR_ReplayReport</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="75" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="714" bodyend="735"/>
        <references refid="struct_se_c_r___replay_report_1a62040c461d7bd1f280921ee6375d4257" compoundref="_se_ptl___c_l___to___r_s_8h" startline="251">SeCR_ReplayReport::acMessage</references>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___replay_report_1a6dd3aac95ef3ee29a0f5f1d577921554" compoundref="_se_ptl___c_l___to___r_s_8h" startline="249">SeCR_ReplayReport::Camera_x</references>
        <references refid="struct_se_c_r___replay_report_1ae3fc7da4982da0a4c300e0a98d57c798" compoundref="_se_ptl___c_l___to___r_s_8h" startline="250">SeCR_ReplayReport::Camera_y</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_c_r___replay_report_1a357404e415da9549fa4ea488c72df00b" compoundref="_se_ptl___c_l___to___r_s_8h" startline="248">SeCR_ReplayReport::iReportFrame</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
        <references refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" compoundref="_se_net_stream_8cpp" startline="123" endline="132">SeNetStream::ReadString</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a1cdeba6f69274c827acc914a880cb597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SetEquipSetReq</definition>
        <argsstring>(const SeCR_SetEquipSetReq &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SetEquipSetReq</name>
        <param>
          <type>const <ref refid="struct_se_c_r___set_equip_set_req" kindref="compound">SeCR_SetEquipSetReq</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="77" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="737" bodyend="740"/>
        <references refid="struct_se_c_r___set_equip_set_req_1a36fe23a35484072819efa943ad863e08" compoundref="_se_ptl___c_l___to___r_s_8h" startline="261">SeCR_SetEquipSetReq::byIndex</references>
        <references refid="_se_c_r_stream_8cpp_1a1cdeba6f69274c827acc914a880cb597" compoundref="_se_c_r_stream_8cpp" startline="737" endline="740">EncodeSeCR_SetEquipSetReq</references>
        <referencedby refid="_se_c_r_stream_8h_1a1cdeba6f69274c827acc914a880cb597" compoundref="_se_c_r_stream_8cpp" startline="737" endline="740">EncodeSeCR_SetEquipSetReq</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a71677f1fc3d64562371d39e5d038dae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SetEquipSetReq</definition>
        <argsstring>(Byte byIndex, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SetEquipSetReq</name>
        <param>
          <type>Byte</type>
          <declname>byIndex</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="78" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="742" bodyend="751"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1afb0404fa11a378e5d7a13a7c189f672c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_SetEquipSetReq</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_SetEquipSetReq &amp;kStruct)</argsstring>
        <name>DecodeSeCR_SetEquipSetReq</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___set_equip_set_req" kindref="compound">SeCR_SetEquipSetReq</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="79" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="753" bodyend="762"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___set_equip_set_req_1a36fe23a35484072819efa943ad863e08" compoundref="_se_ptl___c_l___to___r_s_8h" startline="261">SeCR_SetEquipSetReq::byIndex</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1ae185d51d3655841f9e360d7f95e4c35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SetAvatarReq</definition>
        <argsstring>(const SeCR_SetAvatarReq &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SetAvatarReq</name>
        <param>
          <type>const <ref refid="struct_se_c_r___set_avatar_req" kindref="compound">SeCR_SetAvatarReq</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="81" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="764" bodyend="767"/>
        <references refid="struct_se_c_r___set_avatar_req_1a35e40e2d68dc1e79958ba1ab93aff900" compoundref="_se_ptl___c_l___to___r_s_8h" startline="271">SeCR_SetAvatarReq::dwItemID</references>
        <references refid="_se_c_r_stream_8cpp_1ae185d51d3655841f9e360d7f95e4c35e" compoundref="_se_c_r_stream_8cpp" startline="764" endline="767">EncodeSeCR_SetAvatarReq</references>
        <referencedby refid="_se_c_r_stream_8h_1ae185d51d3655841f9e360d7f95e4c35e" compoundref="_se_c_r_stream_8cpp" startline="764" endline="767">EncodeSeCR_SetAvatarReq</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a7548229fec200fbdf96e9d09a970cbb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeCR_SetAvatarReq</definition>
        <argsstring>(DWord dwItemID, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeCR_SetAvatarReq</name>
        <param>
          <type>DWord</type>
          <declname>dwItemID</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="82" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="769" bodyend="778"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_c_r_stream_8h_1a33adb4cb26929b21cfc32261f98302c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeCR_SetAvatarReq</definition>
        <argsstring>(const char *pkData, int iLen, SeCR_SetAvatarReq &amp;kStruct)</argsstring>
        <name>DecodeSeCR_SetAvatarReq</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_c_r___set_avatar_req" kindref="compound">SeCR_SetAvatarReq</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h" line="83" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.cpp" bodystart="780" bodyend="789"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_c_r___set_avatar_req_1a35e40e2d68dc1e79958ba1ab93aff900" compoundref="_se_ptl___c_l___to___r_s_8h" startline="271">SeCR_SetAvatarReq::dwItemID</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_ptl_define_8h" kindref="compound">SePtlDefine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_ptl___c_l___to___r_s_8h" kindref="compound">SePtl_CL_To_RS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_comm_stream_8h" kindref="compound">SeCommStream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a2f7c882d1d717f8d738137892b9e631a" kindref="member">EncodeSeCR_HeartPackage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___heart_package" kindref="compound">SeCR_HeartPackage</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a2f7c882d1d717f8d738137892b9e631a" kindref="member">EncodeSeCR_HeartPackage</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a61533d045cc63ae38aff9d7e335146ba" kindref="member">DecodeSeCR_HeartPackage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___heart_package" kindref="compound">SeCR_HeartPackage</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a5927d7acc494633a0b704ac2de443a3c" kindref="member">EncodeSeCR_RaceValidate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___race_validate" kindref="compound">SeCR_RaceValidate</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a5927d7acc494633a0b704ac2de443a3c" kindref="member">EncodeSeCR_RaceValidate</ref>(DWord<sp/>dwPlayerID,<sp/>DWord<sp/>dwSessionId,<sp/>DWord<sp/>dwKey,<sp/><ref refid="_se_ptl_comm_define_8h_1a77f91e01c5c1d6e63aeae4848cd17d45" kindref="member">SeRaceValidType</ref><sp/>eValidType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSeat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iOffset,<sp/>DWord<sp/>dwFrame,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a4a94898e138e04855ee82f538371257f" kindref="member">DecodeSeCR_RaceValidate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___race_validate" kindref="compound">SeCR_RaceValidate</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ac0dcb0a81427cf7065d6a2df71a56ffe" kindref="member">EncodeSeCR_RaceLoadEnd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___race_load_end" kindref="compound">SeCR_RaceLoadEnd</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ac0dcb0a81427cf7065d6a2df71a56ffe" kindref="member">EncodeSeCR_RaceLoadEnd</ref>(<ref refid="_se_ptl_comm_define_8h_1aea4c319e1925bfc3edfccdb187f5fcaf" kindref="member">SeRaceLoadType</ref><sp/>eLoadType,<sp/>DWord<sp/>dwRate,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a8c958473a3bfff695a8d4554ea1aca9e" kindref="member">DecodeSeCR_RaceLoadEnd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___race_load_end" kindref="compound">SeCR_RaceLoadEnd</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a73f2df7cfb3f0a9318b058b1e98d4b17" kindref="member">EncodeSeCR_RaceCmd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___race_cmd" kindref="compound">SeCR_RaceCmd</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a73f2df7cfb3f0a9318b058b1e98d4b17" kindref="member">EncodeSeCR_RaceCmd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a73f2df7cfb3f0a9318b058b1e98d4b17" kindref="member">EncodeSeCR_RaceCmd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize,<sp/>std::vector&lt;char&gt;&amp;<sp/>acData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a4267efb9bc7685789816225c2f81b813" kindref="member">DecodeSeCR_RaceCmd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___race_cmd" kindref="compound">SeCR_RaceCmd</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a2645518afd2f14a211e91f5d62edaa51" kindref="member">EncodeSeCR_RaceLeave</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___race_leave" kindref="compound">SeCR_RaceLeave</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a2645518afd2f14a211e91f5d62edaa51" kindref="member">EncodeSeCR_RaceLeave</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ab73f4099c53c95ab446ad4e9ea986e6a" kindref="member">DecodeSeCR_RaceLeave</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___race_leave" kindref="compound">SeCR_RaceLeave</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1aee8cc294917567cdb96e8f15262fc768" kindref="member">EncodeSeCR_RaceEndRace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___race_end_race" kindref="compound">SeCR_RaceEndRace</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1aee8cc294917567cdb96e8f15262fc768" kindref="member">EncodeSeCR_RaceEndRace</ref>(DWord<sp/>dwRaceTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMapID,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bValid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iNums,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_race_send_info" kindref="compound">SeRaceSendInfo</ref>*<sp/>akPlayerInfo,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1aee8cc294917567cdb96e8f15262fc768" kindref="member">EncodeSeCR_RaceEndRace</ref>(DWord<sp/>dwRaceTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMapID,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bValid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iNums,<sp/>std::vector&lt;SeRaceSendInfo&gt;&amp;<sp/>akPlayerInfo,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ac6a07b2601c7d46750d630cd532e6ce4" kindref="member">DecodeSeCR_RaceEndRace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___race_end_race" kindref="compound">SeCR_RaceEndRace</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1adb9258fba30ddb1b099f77628ad2e594" kindref="member">EncodeSeCR_RaceEndGuanqia</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___race_end_guanqia" kindref="compound">SeCR_RaceEndGuanqia</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1adb9258fba30ddb1b099f77628ad2e594" kindref="member">EncodeSeCR_RaceEndGuanqia</ref>(DWord<sp/>dwRaceTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMapID,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bValid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iNums,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_guanqia_send_info" kindref="compound">SeGuanqiaSendInfo</ref>*<sp/>akPlayerInfo,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1adb9258fba30ddb1b099f77628ad2e594" kindref="member">EncodeSeCR_RaceEndGuanqia</ref>(DWord<sp/>dwRaceTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMapID,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bValid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iNums,<sp/>std::vector&lt;SeGuanqiaSendInfo&gt;&amp;<sp/>akPlayerInfo,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a494c772b19cb42348d45515d983be033" kindref="member">DecodeSeCR_RaceEndGuanqia</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___race_end_guanqia" kindref="compound">SeCR_RaceEndGuanqia</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1aed9b1f46373b4ee886efa1350f7702ed" kindref="member">EncodeSeCR_SelHeroChoiceHero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___sel_hero_choice_hero" kindref="compound">SeCR_SelHeroChoiceHero</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1aed9b1f46373b4ee886efa1350f7702ed" kindref="member">EncodeSeCR_SelHeroChoiceHero</ref>(DWord<sp/>dwHeroCardID,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bDreamHero,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ac21b87072dc488df87ee144aedf25354" kindref="member">DecodeSeCR_SelHeroChoiceHero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___sel_hero_choice_hero" kindref="compound">SeCR_SelHeroChoiceHero</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a6fadddfe0424719b6fe60fda1a64fd78" kindref="member">EncodeSeCR_SelHeroCancelHero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___sel_hero_cancel_hero" kindref="compound">SeCR_SelHeroCancelHero</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a6fadddfe0424719b6fe60fda1a64fd78" kindref="member">EncodeSeCR_SelHeroCancelHero</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1aa3c5243b6a96e9603bee300e80d4cdd9" kindref="member">DecodeSeCR_SelHeroCancelHero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___sel_hero_cancel_hero" kindref="compound">SeCR_SelHeroCancelHero</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a2b49b50053a6f55f8d02a5195b19e06d" kindref="member">EncodeSeCR_SelHeroPrapared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___sel_hero_prapared" kindref="compound">SeCR_SelHeroPrapared</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a2b49b50053a6f55f8d02a5195b19e06d" kindref="member">EncodeSeCR_SelHeroPrapared</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a9231ac6b70d528405e0c3f10f9d299a8" kindref="member">DecodeSeCR_SelHeroPrapared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___sel_hero_prapared" kindref="compound">SeCR_SelHeroPrapared</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ab127671fd4ee533668a05106004be9b9" kindref="member">EncodeSeCR_RaceReportSyn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___race_report_syn" kindref="compound">SeCR_RaceReportSyn</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ab127671fd4ee533668a05106004be9b9" kindref="member">EncodeSeCR_RaceReportSyn</ref>(DWord<sp/>dwFrame,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iFrameRand,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a6a006820246d5fe0cf7eada97897a7e8" kindref="member">DecodeSeCR_RaceReportSyn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___race_report_syn" kindref="compound">SeCR_RaceReportSyn</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1af4ac55d9947b3e6174e5a44d4859646c" kindref="member">EncodeSeCR_Talk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___talk" kindref="compound">SeCR_Talk</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1af4ac55d9947b3e6174e5a44d4859646c" kindref="member">EncodeSeCR_Talk</ref>(<ref refid="_se_ptl_comm_define_8h_1a1c935381ad9f824965c7b1b128e32466" kindref="member">SeTalkType</ref><sp/>eType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acMessage,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a44e909f39ae2e99723970ccfbf3507e5" kindref="member">DecodeSeCR_Talk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___talk" kindref="compound">SeCR_Talk</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a9d9127d0d7439c7e13d5422a874181c2" kindref="member">EncodeSeCR_RaceRobotLogin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___race_robot_login" kindref="compound">SeCR_RaceRobotLogin</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a9d9127d0d7439c7e13d5422a874181c2" kindref="member">EncodeSeCR_RaceRobotLogin</ref>(DWord<sp/>dwPlayerID,<sp/>DWord<sp/>dwMapID,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a9f0d74563f962833d9c47f9af5d655dc" kindref="member">DecodeSeCR_RaceRobotLogin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___race_robot_login" kindref="compound">SeCR_RaceRobotLogin</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a4cd9186e3c1b27808a8de57ff116c423" kindref="member">EncodeSeCR_Ping</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___ping" kindref="compound">SeCR_Ping</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a4cd9186e3c1b27808a8de57ff116c423" kindref="member">EncodeSeCR_Ping</ref>(DWord<sp/>dwPackIndex,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1adfdb1adca8ca5a3d6911551e6f5b3574" kindref="member">DecodeSeCR_Ping</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___ping" kindref="compound">SeCR_Ping</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a2654268b216cdfbbf7f92e014e61db40" kindref="member">EncodeSeCR_BuyRaceItem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___buy_race_item" kindref="compound">SeCR_BuyRaceItem</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a2654268b216cdfbbf7f92e014e61db40" kindref="member">EncodeSeCR_BuyRaceItem</ref>(DWord<sp/>dwItemTypeID,<sp/>DWord<sp/>dwTarUnitID,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a04c24f4289581768506f5a9d56d6e705" kindref="member">DecodeSeCR_BuyRaceItem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___buy_race_item" kindref="compound">SeCR_BuyRaceItem</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1adb83db5e37aace8e9d80591bb8f912e1" kindref="member">EncodeSeCR_GetHeroInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___get_hero_info" kindref="compound">SeCR_GetHeroInfo</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1adb83db5e37aace8e9d80591bb8f912e1" kindref="member">EncodeSeCR_GetHeroInfo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSeat,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a84de0380220648457b1fa40dc875d55b" kindref="member">DecodeSeCR_GetHeroInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___get_hero_info" kindref="compound">SeCR_GetHeroInfo</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a7f6bd1f07141f6a147be1458359d9a50" kindref="member">EncodeSeCR_ReplayReport</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___replay_report" kindref="compound">SeCR_ReplayReport</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a7f6bd1f07141f6a147be1458359d9a50" kindref="member">EncodeSeCR_ReplayReport</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iReportFrame,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Camera_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Camera_y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acMessage,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ad6ac40e9d6122c9bc373fa815c9d080e" kindref="member">DecodeSeCR_ReplayReport</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___replay_report" kindref="compound">SeCR_ReplayReport</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a1cdeba6f69274c827acc914a880cb597" kindref="member">EncodeSeCR_SetEquipSetReq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___set_equip_set_req" kindref="compound">SeCR_SetEquipSetReq</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a1cdeba6f69274c827acc914a880cb597" kindref="member">EncodeSeCR_SetEquipSetReq</ref>(Byte<sp/>byIndex,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1afb0404fa11a378e5d7a13a7c189f672c" kindref="member">DecodeSeCR_SetEquipSetReq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___set_equip_set_req" kindref="compound">SeCR_SetEquipSetReq</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ae185d51d3655841f9e360d7f95e4c35e" kindref="member">EncodeSeCR_SetAvatarReq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_c_r___set_avatar_req" kindref="compound">SeCR_SetAvatarReq</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1ae185d51d3655841f9e360d7f95e4c35e" kindref="member">EncodeSeCR_SetAvatarReq</ref>(DWord<sp/>dwItemID,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_c_r_stream_8h_1a33adb4cb26929b21cfc32261f98302c4" kindref="member">DecodeSeCR_SetAvatarReq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_c_r___set_avatar_req" kindref="compound">SeCR_SetAvatarReq</ref>&amp;<sp/>kStruct);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeCRStream.h"/>
  </compounddef>
</doxygen>
