<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_performance_timing_1_1_c_interval" kind="class" prot="public">
    <compoundname>PerformanceTiming::CInterval</compoundname>
    <basecompoundref refid="class_performance_timing_1_1_c_performance_stat" prot="public" virt="non-virtual">PerformanceTiming::CPerformanceStat</basecompoundref>
    <basecompoundref refid="class_i_interval" prot="public" virt="non-virtual">IInterval</basecompoundref>
    <basecompoundref refid="class_performance_timing_1_1_c_performance_stat" prot="public" virt="non-virtual">PerformanceTiming::CPerformanceStat</basecompoundref>
    <basecompoundref refid="class_i_interval" prot="public" virt="non-virtual">IInterval</basecompoundref>
    <includes refid="src_2_performance_timing_8h" local="no">PerformanceTiming.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" prot="private" static="no" mutable="no">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::m_uiFlags</definition>
        <argsstring></argsstring>
        <name>m_uiFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="752" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="752" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a73816275cc4f6c934d2a5c2ceeeec03a" compoundref="src_2_performance_timing_8h" startline="715" endline="718">CheckFlag</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1adc3a0f98e50eebfaf42fd8e45f6e6541" compoundref="src_2_performance_timing_8h" startline="725" endline="728">ClearFlag</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1ae61559ac559e042c63535870176f2654" compoundref="src_2_performance_timing_8h" startline="730" endline="733">GetVerboseLevel</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a50e5d7009bbaced9312d0a90f5931276" compoundref="src_2_performance_timing_8h" startline="720" endline="723">SetFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a1d55047c2e79af22333c0f4290c3a0ab" prot="private" static="no" mutable="no">
        <type>UInt64</type>
        <definition>UInt64 PerformanceTiming::CInterval::m_EntryTime</definition>
        <argsstring></argsstring>
        <name>m_EntryTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="753" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="753" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1ac16ad6e0970452ba73c1087d0018af1f" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::m_dMaxIntervalTimeSec</definition>
        <argsstring></argsstring>
        <name>m_dMaxIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="754" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="754" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a04b414adb56226f61d6998f62f1bff58" compoundref="src_2_performance_timing_8h" startline="635" endline="638">GetMaxIntervalTimeSec</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a422d7cb3501af7e6d669405b83610d6f" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::m_dMinIntervalTimeSec</definition>
        <argsstring></argsstring>
        <name>m_dMinIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="755" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="755" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a10144cd3deafa3edf99b44bdbf846fd8" compoundref="src_2_performance_timing_8h" startline="630" endline="633">GetMinIntervalTimeSec</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a22ce78af269cf334bb2123963a565738" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::m_dLastIntervalTimeSec</definition>
        <argsstring></argsstring>
        <name>m_dLastIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="756" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="756" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a3f0b42b044023de8d06ad85a8af1c1b0" compoundref="src_2_performance_timing_8h" startline="640" endline="643">GetLastIntervalTimeSec</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a84bcfb920dc8f3a350472a5d9ebababf" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::m_dTotalIntervalTimeSec</definition>
        <argsstring></argsstring>
        <name>m_dTotalIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="757" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="757" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a2dfc87e4ab8481348489472a758e577c" compoundref="src_2_performance_timing_8h" startline="655" endline="658">GetAverageIntervalTimeSec</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1aece495b6b04748318f82795084e2cb12" compoundref="src_2_performance_timing_8h" startline="645" endline="648">GetTotalIntervalTimeSec</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a26f083bbf102059dea61626d4b3fc2ce" prot="private" static="no" mutable="no">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::m_iTotalIntervalEntries</definition>
        <argsstring></argsstring>
        <name>m_iTotalIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="758" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="758" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a2dfc87e4ab8481348489472a758e577c" compoundref="src_2_performance_timing_8h" startline="655" endline="658">GetAverageIntervalTimeSec</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1afb404fa870bbb32ab7dd0bbd88dafc69" compoundref="src_2_performance_timing_8h" startline="650" endline="653">GetTotalIntervalEntries</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a7386448f9882c4854a7f8fd7bc1042c9" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::m_dThisFrameIntervalTimeSec</definition>
        <argsstring></argsstring>
        <name>m_dThisFrameIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>time spent in the interval this frame/tick - accumulator </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="759" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="759" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" compoundref="src_2_performance_timing_8h" startline="695" endline="707">AdvanceFrame</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a21436de178038d32ede2f1aa6432dd39" compoundref="src_2_performance_timing_8h" startline="675" endline="678">GetThisFrameIntervalTimeSec</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a5c74f728f68f429d325e98b1d34e37ec" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::m_dLastFrameIntervalTimeSec</definition>
        <argsstring></argsstring>
        <name>m_dLastFrameIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>time spent in the interval last frame/tick </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="760" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="760" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" compoundref="src_2_performance_timing_8h" startline="695" endline="707">AdvanceFrame</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1aa83b2b192b2cdf562afb68a118f4ddeb" compoundref="src_2_performance_timing_8h" startline="665" endline="668">GetLastFrameIntervalTimeSec</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1ae009a449b5d064c39610ee28b65864c8" prot="private" static="no" mutable="no">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::m_iThisFrameIntervalEntries</definition>
        <argsstring></argsstring>
        <name>m_iThisFrameIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>number of times the interval was start/ended (entered) this frame/tick - accumulator </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="761" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="761" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" compoundref="src_2_performance_timing_8h" startline="695" endline="707">AdvanceFrame</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a42fd717830714b06a8d85548a670acff" compoundref="src_2_performance_timing_8h" startline="680" endline="683">GetThisFrameIntervalEntries</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a474d4d1a820db830baa96932dca830b1" prot="private" static="no" mutable="no">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::m_iLastFrameIntervalEntries</definition>
        <argsstring></argsstring>
        <name>m_iLastFrameIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>number of times the interval was start/ended (entered) last frame/tick </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="762" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="762" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" compoundref="src_2_performance_timing_8h" startline="695" endline="707">AdvanceFrame</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a83ce0154483f4b782858becda70a6108" compoundref="src_2_performance_timing_8h" startline="670" endline="673">GetLastFrameIntervalEntries</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">HardReset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a0bb38ec8c39f9710226504b3ce86f6a0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_performance_timing_1a6e234b77fd83d40ae331150fecc0baaf" kindref="member">PerformanceTiming::TIntervalArray</ref></type>
        <definition>PerformanceTiming::TIntervalArray PerformanceTiming::CInterval::m_vChildren</definition>
        <argsstring></argsstring>
        <name>m_vChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="763" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="763" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a07df2b2cd69021c9c0f4fc86a6109340" compoundref="src_2_performance_timing_8h" startline="735" endline="742">AddChild</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a2c00cac56e1d8b8c8dfabe4f1f43fe6f" prot="private" static="no" mutable="no">
        <type>Int32</type>
        <definition>Int32 PerformanceTiming::CInterval::m_iDepth</definition>
        <argsstring></argsstring>
        <name>m_iDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="764" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="764" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" compoundref="src_2_performance_timing_8h" startline="695" endline="707">AdvanceFrame</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1af287c0863769a08cf032483aad05d7b8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PerformanceTiming::CInterval::m_bLastFrameClosed</definition>
        <argsstring></argsstring>
        <name>m_bLastFrameClosed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="765" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="765" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" compoundref="src_2_performance_timing_8h" startline="695" endline="707">AdvanceFrame</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1abf524b8731c32cc6e6fba1617393a995" compoundref="src_2_performance_timing_8h" startline="685" endline="688">IsLastFrameClosed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a66bc56c075a0eb1c626fee0c707ebe71" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::m_dWarningThresholdMS</definition>
        <argsstring></argsstring>
        <name>m_dWarningThresholdMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="766" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="766" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a63f00993e82d763b8c10cef0b4a6fcd6" compoundref="src_2_performance_timing_8h" startline="620" endline="623">GetWarningThresholdMS</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1ae255c7b3c8d30bb90c9dcffb27828522" prot="private" static="no" mutable="no">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::m_dCriticalThresholdMS</definition>
        <argsstring></argsstring>
        <name>m_dCriticalThresholdMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="767" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="767" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a517bfa00869cbca0bbf2a8e8a9a4d276" compoundref="src_2_performance_timing_8h" startline="625" endline="628">GetCriticalThresholdMS</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1ac64c695bf259d32f57b7f68a8d7cbbe3" prot="private" static="yes" mutable="no">
        <type>Float64</type>
        <definition>static Float64 PerformanceTiming::CInterval::s_dLastFrameNegIntervalTimeSec</definition>
        <argsstring></argsstring>
        <name>s_dLastFrameNegIntervalTimeSec</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="768" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="768" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a56f0db05638f8f054cb0224f4e99ff1d" compoundref="src_2_performance_timing_8h" startline="709" endline="713">AdvanceFrameStatic</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a1cd3084ecc07d19f164bc1e4af2294d1" compoundref="src_2_performance_timing_8h" startline="660" endline="663">GetLastFrameNegIntervalTimeSec</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_1a32f18388da0a3ce266f5943c0caedc35" prot="private" static="yes" mutable="no">
        <type>Float64</type>
        <definition>static Float64 PerformanceTiming::CInterval::s_dThisFrameNegIntervalTimeSec</definition>
        <argsstring></argsstring>
        <name>s_dThisFrameNegIntervalTimeSec</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="769" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="769" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a56f0db05638f8f054cb0224f4e99ff1d" compoundref="src_2_performance_timing_8h" startline="709" endline="713">AdvanceFrameStatic</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1ad029011c17ad6d2f07da43265bdfa5b1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::CInterval::CInterval</definition>
        <argsstring>(const std::string &amp;sName, UInt32 uiFlags, Float64 dWarning=0.0, Float64 dCritical=0.0)</argsstring>
        <name>CInterval</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sName</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uiFlags</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dWarning</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>Float64</type>
          <declname>dCritical</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="585" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="585" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void PerformanceTiming::CInterval::HardReset</definition>
        <argsstring>()</argsstring>
        <name>HardReset</name>
        <reimplements refid="class_performance_timing_1_1_c_performance_stat_1ac49696dfa0ed2caeb759cfd45071f11f">HardReset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="606" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="606" bodyend="618"/>
        <references refid="class_performance_timing_1_1_c_interval_1a5c74f728f68f429d325e98b1d34e37ec" compoundref="src_2_performance_timing_8h" startline="760">m_dLastFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a22ce78af269cf334bb2123963a565738" compoundref="src_2_performance_timing_8h" startline="756">m_dLastIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1ac16ad6e0970452ba73c1087d0018af1f" compoundref="src_2_performance_timing_8h" startline="754">m_dMaxIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a422d7cb3501af7e6d669405b83610d6f" compoundref="src_2_performance_timing_8h" startline="755">m_dMinIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a7386448f9882c4854a7f8fd7bc1042c9" compoundref="src_2_performance_timing_8h" startline="759">m_dThisFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a84bcfb920dc8f3a350472a5d9ebababf" compoundref="src_2_performance_timing_8h" startline="757">m_dTotalIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a474d4d1a820db830baa96932dca830b1" compoundref="src_2_performance_timing_8h" startline="762">m_iLastFrameIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_interval_1ae009a449b5d064c39610ee28b65864c8" compoundref="src_2_performance_timing_8h" startline="761">m_iThisFrameIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_interval_1a26f083bbf102059dea61626d4b3fc2ce" compoundref="src_2_performance_timing_8h" startline="758">m_iTotalIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" compoundref="src_2_performance_timing_8h" startline="382" endline="385">PerformanceTiming::CPerformanceStat::ResetTouch</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a63f00993e82d763b8c10cef0b4a6fcd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetWarningThresholdMS</definition>
        <argsstring>() const </argsstring>
        <name>GetWarningThresholdMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="620" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="620" bodyend="623"/>
        <references refid="class_performance_timing_1_1_c_interval_1a66bc56c075a0eb1c626fee0c707ebe71" compoundref="src_2_performance_timing_8h" startline="766">m_dWarningThresholdMS</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a517bfa00869cbca0bbf2a8e8a9a4d276" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetCriticalThresholdMS</definition>
        <argsstring>() const </argsstring>
        <name>GetCriticalThresholdMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="625" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="625" bodyend="628"/>
        <references refid="class_performance_timing_1_1_c_interval_1ae255c7b3c8d30bb90c9dcffb27828522" compoundref="src_2_performance_timing_8h" startline="767">m_dCriticalThresholdMS</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a10144cd3deafa3edf99b44bdbf846fd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetMinIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetMinIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="630" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="630" bodyend="633"/>
        <references refid="class_performance_timing_1_1_c_interval_1a422d7cb3501af7e6d669405b83610d6f" compoundref="src_2_performance_timing_8h" startline="755">m_dMinIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a04b414adb56226f61d6998f62f1bff58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetMaxIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetMaxIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="635" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="635" bodyend="638"/>
        <references refid="class_performance_timing_1_1_c_interval_1ac16ad6e0970452ba73c1087d0018af1f" compoundref="src_2_performance_timing_8h" startline="754">m_dMaxIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a3f0b42b044023de8d06ad85a8af1c1b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetLastIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetLastIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="640" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="640" bodyend="643"/>
        <references refid="class_performance_timing_1_1_c_interval_1a22ce78af269cf334bb2123963a565738" compoundref="src_2_performance_timing_8h" startline="756">m_dLastIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1aece495b6b04748318f82795084e2cb12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetTotalIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetTotalIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="645" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="645" bodyend="648"/>
        <references refid="class_performance_timing_1_1_c_interval_1a84bcfb920dc8f3a350472a5d9ebababf" compoundref="src_2_performance_timing_8h" startline="757">m_dTotalIntervalTimeSec</references>
        <referencedby refid="struct_performance_timing_1_1_pred___interval_by_order_1af4ba13975b049675372b15e9a0b774e7" compoundref="src_2_performance_timing_8h" startline="809" endline="812">PerformanceTiming::Pred_IntervalByOrder::operator()</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1afb404fa870bbb32ab7dd0bbd88dafc69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::GetTotalIntervalEntries</definition>
        <argsstring>() const </argsstring>
        <name>GetTotalIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="650" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="650" bodyend="653"/>
        <references refid="class_performance_timing_1_1_c_interval_1a26f083bbf102059dea61626d4b3fc2ce" compoundref="src_2_performance_timing_8h" startline="758">m_iTotalIntervalEntries</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a2dfc87e4ab8481348489472a758e577c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetAverageIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetAverageIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="655" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="655" bodyend="658"/>
        <references refid="class_performance_timing_1_1_c_interval_1a84bcfb920dc8f3a350472a5d9ebababf" compoundref="src_2_performance_timing_8h" startline="757">m_dTotalIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a26f083bbf102059dea61626d4b3fc2ce" compoundref="src_2_performance_timing_8h" startline="758">m_iTotalIntervalEntries</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1aa83b2b192b2cdf562afb68a118f4ddeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetLastFrameIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetLastFrameIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="665" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="665" bodyend="668"/>
        <references refid="class_performance_timing_1_1_c_interval_1a5c74f728f68f429d325e98b1d34e37ec" compoundref="src_2_performance_timing_8h" startline="760">m_dLastFrameIntervalTimeSec</references>
        <referencedby refid="class_c_performance_timing_1a38561b85313af8dcbef1bac3b4d6087f" compoundref="src_2_performance_timing_8cpp" startline="657" endline="675">CPerformanceTiming::EnumerateIntervals</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a83ce0154483f4b782858becda70a6108" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::GetLastFrameIntervalEntries</definition>
        <argsstring>() const </argsstring>
        <name>GetLastFrameIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="670" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="670" bodyend="673"/>
        <references refid="class_performance_timing_1_1_c_interval_1a474d4d1a820db830baa96932dca830b1" compoundref="src_2_performance_timing_8h" startline="762">m_iLastFrameIntervalEntries</references>
        <referencedby refid="class_c_performance_timing_1a38561b85313af8dcbef1bac3b4d6087f" compoundref="src_2_performance_timing_8cpp" startline="657" endline="675">CPerformanceTiming::EnumerateIntervals</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a21436de178038d32ede2f1aa6432dd39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetThisFrameIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetThisFrameIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="675" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="675" bodyend="678"/>
        <references refid="class_performance_timing_1_1_c_interval_1a7386448f9882c4854a7f8fd7bc1042c9" compoundref="src_2_performance_timing_8h" startline="759">m_dThisFrameIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a42fd717830714b06a8d85548a670acff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::GetThisFrameIntervalEntries</definition>
        <argsstring>() const </argsstring>
        <name>GetThisFrameIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="680" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="680" bodyend="683"/>
        <references refid="class_performance_timing_1_1_c_interval_1ae009a449b5d064c39610ee28b65864c8" compoundref="src_2_performance_timing_8h" startline="761">m_iThisFrameIntervalEntries</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1abf524b8731c32cc6e6fba1617393a995" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PerformanceTiming::CInterval::IsLastFrameClosed</definition>
        <argsstring>() const </argsstring>
        <name>IsLastFrameClosed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="685" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="685" bodyend="688"/>
        <references refid="class_performance_timing_1_1_c_interval_1af287c0863769a08cf032483aad05d7b8" compoundref="src_2_performance_timing_8h" startline="765">m_bLastFrameClosed</references>
        <referencedby refid="class_c_performance_timing_1a38561b85313af8dcbef1bac3b4d6087f" compoundref="src_2_performance_timing_8cpp" startline="657" endline="675">CPerformanceTiming::EnumerateIntervals</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a78e81d64e188c8544069f2d44bbfb15d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PerformanceTiming::CInterval::GetIntervalPercentage</definition>
        <argsstring>() const </argsstring>
        <name>GetIntervalPercentage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="690" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="788" bodyend="792"/>
        <references refid="class_c_performance_timing_1a884eea574a1bf703273f51715075b10b" compoundref="src_2_performance_timing_8h" startline="264" endline="267">CPerformanceTiming::GetTotalElapsedTime</references>
        <references refid="class_c_performance_timing_1a0cd9ac671cfeca01bd8fb12f948f6ba3" compoundref="src_2_performance_timing_8h" startline="223" endline="226">CPerformanceTiming::InstanceQuick</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1ac7dffd5c24210fa8b55f2fe59eb9b5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <reimplements refid="class_i_interval_1a64e6d0f313e9c1ed8027fda14e1874c4">Start</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts interval timing. Takes a timestamp of the current time. Only functions if the interval is not already started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="692" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="797" bodyend="818"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_scope_1a99b0778a7cf62313b7bc35b2bc84a91b" compoundref="src_2_performance_timing_8h" startline="778" endline="782">PerformanceTiming::CIntervalScope::CIntervalScope</referencedby>
        <referencedby refid="class_c_performance_timing_1a38cc438ad24d97b86a37a4e0fd63e185" compoundref="src_2_performance_timing_8cpp" startline="559" endline="623">CPerformanceTiming::TickNotify</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a05192a46041bdca7c17ff4d95d239025" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::End</definition>
        <argsstring>()</argsstring>
        <name>End</name>
        <reimplements refid="class_i_interval_1a911a00b4d3243fb8bc743b01689298f0">End</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ends interval timing. Takes a timestamp of the current time, and computes interval from start time. Only functions if the interval is started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="693" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="824" bodyend="844"/>
        <references refid="namespacemake_callback_1a0c646a8863d44327e020456c954f4b2d" compoundref="make_callback_8py" startline="145">makeCallback.f</references>
        <referencedby refid="class_c_performance_timing_1a38cc438ad24d97b86a37a4e0fd63e185" compoundref="src_2_performance_timing_8cpp" startline="559" endline="623">CPerformanceTiming::TickNotify</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_scope_1ae21de130cf46b767bd8dd22e843818ab" compoundref="src_2_performance_timing_8h" startline="783" endline="786">PerformanceTiming::CIntervalScope::~CIntervalScope</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::AdvanceFrame</definition>
        <argsstring>()</argsstring>
        <name>AdvanceFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="695" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="695" bodyend="707"/>
        <references refid="class_performance_timing_1_1_c_interval_1af287c0863769a08cf032483aad05d7b8" compoundref="src_2_performance_timing_8h" startline="765">m_bLastFrameClosed</references>
        <references refid="class_performance_timing_1_1_c_interval_1a5c74f728f68f429d325e98b1d34e37ec" compoundref="src_2_performance_timing_8h" startline="760">m_dLastFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a7386448f9882c4854a7f8fd7bc1042c9" compoundref="src_2_performance_timing_8h" startline="759">m_dThisFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a2c00cac56e1d8b8c8dfabe4f1f43fe6f" compoundref="src_2_performance_timing_8h" startline="764">m_iDepth</references>
        <references refid="class_performance_timing_1_1_c_interval_1a474d4d1a820db830baa96932dca830b1" compoundref="src_2_performance_timing_8h" startline="762">m_iLastFrameIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_interval_1ae009a449b5d064c39610ee28b65864c8" compoundref="src_2_performance_timing_8h" startline="761">m_iThisFrameIntervalEntries</references>
        <referencedby refid="class_c_performance_timing_1a38cc438ad24d97b86a37a4e0fd63e185" compoundref="src_2_performance_timing_8cpp" startline="559" endline="623">CPerformanceTiming::TickNotify</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a73816275cc4f6c934d2a5c2ceeeec03a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::CheckFlag</definition>
        <argsstring>(UInt32 uFlag) const </argsstring>
        <name>CheckFlag</name>
        <param>
          <type>UInt32</type>
          <declname>uFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="715" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="715" bodyend="718"/>
        <references refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" compoundref="src_2_performance_timing_8h" startline="752">m_uiFlags</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a50e5d7009bbaced9312d0a90f5931276" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::SetFlag</definition>
        <argsstring>(UInt32 uFlag)</argsstring>
        <name>SetFlag</name>
        <param>
          <type>UInt32</type>
          <declname>uFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="720" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="720" bodyend="723"/>
        <references refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" compoundref="src_2_performance_timing_8h" startline="752">m_uiFlags</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1adc3a0f98e50eebfaf42fd8e45f6e6541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::ClearFlag</definition>
        <argsstring>(UInt32 uFlag)</argsstring>
        <name>ClearFlag</name>
        <param>
          <type>UInt32</type>
          <declname>uFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="725" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="725" bodyend="728"/>
        <references refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" compoundref="src_2_performance_timing_8h" startline="752">m_uiFlags</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1ae61559ac559e042c63535870176f2654" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::GetVerboseLevel</definition>
        <argsstring>()</argsstring>
        <name>GetVerboseLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="730" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="730" bodyend="733"/>
        <references refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" compoundref="src_2_performance_timing_8h" startline="752">m_uiFlags</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a07df2b2cd69021c9c0f4fc86a6109340" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::AddChild</definition>
        <argsstring>(CInterval *pChild)</argsstring>
        <name>AddChild</name>
        <param>
          <type><ref refid="class_performance_timing_1_1_c_interval" kindref="compound">CInterval</ref> *</type>
          <declname>pChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="735" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="735" bodyend="742"/>
        <references refid="class_performance_timing_1_1_c_interval_1a0bb38ec8c39f9710226504b3ce86f6a0" compoundref="src_2_performance_timing_8h" startline="763">m_vChildren</references>
        <referencedby refid="class_c_performance_timing_1ab9b24d90377352506b39c6b7d0214170" compoundref="src_2_performance_timing_8cpp" startline="521" endline="527">CPerformanceTiming::CreateOrLookupChildInterval</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a3572cb5c021a91c7708b898159a62fdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_i_interval" kindref="compound">IInterval</ref> *</type>
        <definition>IInterval* PerformanceTiming::CInterval::SetFolderName</definition>
        <argsstring>(const char *szFolderName)</argsstring>
        <name>SetFolderName</name>
        <reimplements refid="class_i_interval_1abe2b0e8b0142c003e71bb69450337425">SetFolderName</reimplements>
        <param>
          <type>const char *</type>
          <declname>szFolderName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="744" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="744" bodyend="748"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad9d23cd316f85d975cb7cb4cdfb30979" compoundref="src_2_performance_timing_8cpp" startline="759" endline="767">PerformanceTiming::CPerformanceStat::DoSetFolderName</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1ad029011c17ad6d2f07da43265bdfa5b1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::CInterval::CInterval</definition>
        <argsstring>(const std::string &amp;sName, UInt32 uiFlags, Float64 dWarning=0.0, Float64 dCritical=0.0)</argsstring>
        <name>CInterval</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sName</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>uiFlags</declname>
        </param>
        <param>
          <type>Float64</type>
          <declname>dWarning</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>Float64</type>
          <declname>dCritical</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="585" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="585" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void PerformanceTiming::CInterval::HardReset</definition>
        <argsstring>()</argsstring>
        <name>HardReset</name>
        <reimplements refid="class_performance_timing_1_1_c_performance_stat_1ac49696dfa0ed2caeb759cfd45071f11f">HardReset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="606" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="606" bodyend="618"/>
        <references refid="class_performance_timing_1_1_c_interval_1a5c74f728f68f429d325e98b1d34e37ec" compoundref="src_2_performance_timing_8h" startline="760">m_dLastFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a22ce78af269cf334bb2123963a565738" compoundref="src_2_performance_timing_8h" startline="756">m_dLastIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1ac16ad6e0970452ba73c1087d0018af1f" compoundref="src_2_performance_timing_8h" startline="754">m_dMaxIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a422d7cb3501af7e6d669405b83610d6f" compoundref="src_2_performance_timing_8h" startline="755">m_dMinIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a7386448f9882c4854a7f8fd7bc1042c9" compoundref="src_2_performance_timing_8h" startline="759">m_dThisFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a84bcfb920dc8f3a350472a5d9ebababf" compoundref="src_2_performance_timing_8h" startline="757">m_dTotalIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a474d4d1a820db830baa96932dca830b1" compoundref="src_2_performance_timing_8h" startline="762">m_iLastFrameIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_interval_1ae009a449b5d064c39610ee28b65864c8" compoundref="src_2_performance_timing_8h" startline="761">m_iThisFrameIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_interval_1a26f083bbf102059dea61626d4b3fc2ce" compoundref="src_2_performance_timing_8h" startline="758">m_iTotalIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" compoundref="src_2_performance_timing_8h" startline="382" endline="385">PerformanceTiming::CPerformanceStat::ResetTouch</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a63f00993e82d763b8c10cef0b4a6fcd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetWarningThresholdMS</definition>
        <argsstring>() const </argsstring>
        <name>GetWarningThresholdMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="620" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="620" bodyend="623"/>
        <references refid="class_performance_timing_1_1_c_interval_1a66bc56c075a0eb1c626fee0c707ebe71" compoundref="src_2_performance_timing_8h" startline="766">m_dWarningThresholdMS</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a517bfa00869cbca0bbf2a8e8a9a4d276" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetCriticalThresholdMS</definition>
        <argsstring>() const </argsstring>
        <name>GetCriticalThresholdMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="625" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="625" bodyend="628"/>
        <references refid="class_performance_timing_1_1_c_interval_1ae255c7b3c8d30bb90c9dcffb27828522" compoundref="src_2_performance_timing_8h" startline="767">m_dCriticalThresholdMS</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a10144cd3deafa3edf99b44bdbf846fd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetMinIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetMinIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="630" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="630" bodyend="633"/>
        <references refid="class_performance_timing_1_1_c_interval_1a422d7cb3501af7e6d669405b83610d6f" compoundref="src_2_performance_timing_8h" startline="755">m_dMinIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a04b414adb56226f61d6998f62f1bff58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetMaxIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetMaxIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="635" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="635" bodyend="638"/>
        <references refid="class_performance_timing_1_1_c_interval_1ac16ad6e0970452ba73c1087d0018af1f" compoundref="src_2_performance_timing_8h" startline="754">m_dMaxIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a3f0b42b044023de8d06ad85a8af1c1b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetLastIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetLastIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="640" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="640" bodyend="643"/>
        <references refid="class_performance_timing_1_1_c_interval_1a22ce78af269cf334bb2123963a565738" compoundref="src_2_performance_timing_8h" startline="756">m_dLastIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1aece495b6b04748318f82795084e2cb12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetTotalIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetTotalIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="645" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="645" bodyend="648"/>
        <references refid="class_performance_timing_1_1_c_interval_1a84bcfb920dc8f3a350472a5d9ebababf" compoundref="src_2_performance_timing_8h" startline="757">m_dTotalIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1afb404fa870bbb32ab7dd0bbd88dafc69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::GetTotalIntervalEntries</definition>
        <argsstring>() const </argsstring>
        <name>GetTotalIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="650" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="650" bodyend="653"/>
        <references refid="class_performance_timing_1_1_c_interval_1a26f083bbf102059dea61626d4b3fc2ce" compoundref="src_2_performance_timing_8h" startline="758">m_iTotalIntervalEntries</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a2dfc87e4ab8481348489472a758e577c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetAverageIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetAverageIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="655" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="655" bodyend="658"/>
        <references refid="class_performance_timing_1_1_c_interval_1a84bcfb920dc8f3a350472a5d9ebababf" compoundref="src_2_performance_timing_8h" startline="757">m_dTotalIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a26f083bbf102059dea61626d4b3fc2ce" compoundref="src_2_performance_timing_8h" startline="758">m_iTotalIntervalEntries</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1aa83b2b192b2cdf562afb68a118f4ddeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetLastFrameIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetLastFrameIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="665" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="665" bodyend="668"/>
        <references refid="class_performance_timing_1_1_c_interval_1a5c74f728f68f429d325e98b1d34e37ec" compoundref="src_2_performance_timing_8h" startline="760">m_dLastFrameIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a83ce0154483f4b782858becda70a6108" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::GetLastFrameIntervalEntries</definition>
        <argsstring>() const </argsstring>
        <name>GetLastFrameIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="670" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="670" bodyend="673"/>
        <references refid="class_performance_timing_1_1_c_interval_1a474d4d1a820db830baa96932dca830b1" compoundref="src_2_performance_timing_8h" startline="762">m_iLastFrameIntervalEntries</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a21436de178038d32ede2f1aa6432dd39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>Float64 PerformanceTiming::CInterval::GetThisFrameIntervalTimeSec</definition>
        <argsstring>() const </argsstring>
        <name>GetThisFrameIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="675" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="675" bodyend="678"/>
        <references refid="class_performance_timing_1_1_c_interval_1a7386448f9882c4854a7f8fd7bc1042c9" compoundref="src_2_performance_timing_8h" startline="759">m_dThisFrameIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a42fd717830714b06a8d85548a670acff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::GetThisFrameIntervalEntries</definition>
        <argsstring>() const </argsstring>
        <name>GetThisFrameIntervalEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="680" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="680" bodyend="683"/>
        <references refid="class_performance_timing_1_1_c_interval_1ae009a449b5d064c39610ee28b65864c8" compoundref="src_2_performance_timing_8h" startline="761">m_iThisFrameIntervalEntries</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1abf524b8731c32cc6e6fba1617393a995" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PerformanceTiming::CInterval::IsLastFrameClosed</definition>
        <argsstring>() const </argsstring>
        <name>IsLastFrameClosed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="685" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="685" bodyend="688"/>
        <references refid="class_performance_timing_1_1_c_interval_1af287c0863769a08cf032483aad05d7b8" compoundref="src_2_performance_timing_8h" startline="765">m_bLastFrameClosed</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a78e81d64e188c8544069f2d44bbfb15d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PerformanceTiming::CInterval::GetIntervalPercentage</definition>
        <argsstring>() const </argsstring>
        <name>GetIntervalPercentage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="690" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1ac7dffd5c24210fa8b55f2fe59eb9b5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <reimplements refid="class_i_interval_1a64e6d0f313e9c1ed8027fda14e1874c4">Start</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="692" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a05192a46041bdca7c17ff4d95d239025" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::End</definition>
        <argsstring>()</argsstring>
        <name>End</name>
        <reimplements refid="class_i_interval_1a911a00b4d3243fb8bc743b01689298f0">End</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::AdvanceFrame</definition>
        <argsstring>()</argsstring>
        <name>AdvanceFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="695" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="695" bodyend="707"/>
        <references refid="class_performance_timing_1_1_c_interval_1af287c0863769a08cf032483aad05d7b8" compoundref="src_2_performance_timing_8h" startline="765">m_bLastFrameClosed</references>
        <references refid="class_performance_timing_1_1_c_interval_1a5c74f728f68f429d325e98b1d34e37ec" compoundref="src_2_performance_timing_8h" startline="760">m_dLastFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a7386448f9882c4854a7f8fd7bc1042c9" compoundref="src_2_performance_timing_8h" startline="759">m_dThisFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a2c00cac56e1d8b8c8dfabe4f1f43fe6f" compoundref="src_2_performance_timing_8h" startline="764">m_iDepth</references>
        <references refid="class_performance_timing_1_1_c_interval_1a474d4d1a820db830baa96932dca830b1" compoundref="src_2_performance_timing_8h" startline="762">m_iLastFrameIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_interval_1ae009a449b5d064c39610ee28b65864c8" compoundref="src_2_performance_timing_8h" startline="761">m_iThisFrameIntervalEntries</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a73816275cc4f6c934d2a5c2ceeeec03a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::CheckFlag</definition>
        <argsstring>(UInt32 uFlag) const </argsstring>
        <name>CheckFlag</name>
        <param>
          <type>UInt32</type>
          <declname>uFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="715" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="715" bodyend="718"/>
        <references refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" compoundref="src_2_performance_timing_8h" startline="752">m_uiFlags</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a50e5d7009bbaced9312d0a90f5931276" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::SetFlag</definition>
        <argsstring>(UInt32 uFlag)</argsstring>
        <name>SetFlag</name>
        <param>
          <type>UInt32</type>
          <declname>uFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="720" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="720" bodyend="723"/>
        <references refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" compoundref="src_2_performance_timing_8h" startline="752">m_uiFlags</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1adc3a0f98e50eebfaf42fd8e45f6e6541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::ClearFlag</definition>
        <argsstring>(UInt32 uFlag)</argsstring>
        <name>ClearFlag</name>
        <param>
          <type>UInt32</type>
          <declname>uFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="725" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="725" bodyend="728"/>
        <references refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" compoundref="src_2_performance_timing_8h" startline="752">m_uiFlags</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1ae61559ac559e042c63535870176f2654" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>UInt32 PerformanceTiming::CInterval::GetVerboseLevel</definition>
        <argsstring>()</argsstring>
        <name>GetVerboseLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="730" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="730" bodyend="733"/>
        <references refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" compoundref="src_2_performance_timing_8h" startline="752">m_uiFlags</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a07df2b2cd69021c9c0f4fc86a6109340" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CInterval::AddChild</definition>
        <argsstring>(CInterval *pChild)</argsstring>
        <name>AddChild</name>
        <param>
          <type><ref refid="class_performance_timing_1_1_c_interval" kindref="compound">CInterval</ref> *</type>
          <declname>pChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="735" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="735" bodyend="742"/>
        <references refid="class_performance_timing_1_1_c_interval_1a0bb38ec8c39f9710226504b3ce86f6a0" compoundref="src_2_performance_timing_8h" startline="763">m_vChildren</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a3572cb5c021a91c7708b898159a62fdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_i_interval" kindref="compound">IInterval</ref> *</type>
        <definition>IInterval* PerformanceTiming::CInterval::SetFolderName</definition>
        <argsstring>(const char *szFolderName)</argsstring>
        <name>SetFolderName</name>
        <reimplements refid="class_i_interval_1abe2b0e8b0142c003e71bb69450337425">SetFolderName</reimplements>
        <param>
          <type>const char *</type>
          <declname>szFolderName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="744" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="744" bodyend="748"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad9d23cd316f85d975cb7cb4cdfb30979" compoundref="src_2_performance_timing_8cpp" startline="759" endline="767">PerformanceTiming::CPerformanceStat::DoSetFolderName</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a1cd3084ecc07d19f164bc1e4af2294d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>static Float64 PerformanceTiming::CInterval::GetLastFrameNegIntervalTimeSec</definition>
        <argsstring>()</argsstring>
        <name>GetLastFrameNegIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="660" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="660" bodyend="663"/>
        <references refid="class_performance_timing_1_1_c_interval_1ac64c695bf259d32f57b7f68a8d7cbbe3" compoundref="src_2_performance_timing_8h" startline="768">s_dLastFrameNegIntervalTimeSec</references>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">CPerformanceIntervalFileDump::Tick</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a56f0db05638f8f054cb0224f4e99ff1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PerformanceTiming::CInterval::AdvanceFrameStatic</definition>
        <argsstring>()</argsstring>
        <name>AdvanceFrameStatic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="709" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="709" bodyend="713"/>
        <references refid="class_performance_timing_1_1_c_interval_1ac64c695bf259d32f57b7f68a8d7cbbe3" compoundref="src_2_performance_timing_8h" startline="768">s_dLastFrameNegIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a32f18388da0a3ce266f5943c0caedc35" compoundref="src_2_performance_timing_8h" startline="769">s_dThisFrameNegIntervalTimeSec</references>
        <referencedby refid="class_c_performance_timing_1a38cc438ad24d97b86a37a4e0fd63e185" compoundref="src_2_performance_timing_8cpp" startline="559" endline="623">CPerformanceTiming::TickNotify</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a1cd3084ecc07d19f164bc1e4af2294d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Float64</type>
        <definition>static Float64 PerformanceTiming::CInterval::GetLastFrameNegIntervalTimeSec</definition>
        <argsstring>()</argsstring>
        <name>GetLastFrameNegIntervalTimeSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="660" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="660" bodyend="663"/>
        <references refid="class_performance_timing_1_1_c_interval_1ac64c695bf259d32f57b7f68a8d7cbbe3" compoundref="src_2_performance_timing_8h" startline="768">s_dLastFrameNegIntervalTimeSec</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_1a56f0db05638f8f054cb0224f4e99ff1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PerformanceTiming::CInterval::AdvanceFrameStatic</definition>
        <argsstring>()</argsstring>
        <name>AdvanceFrameStatic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="709" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="709" bodyend="713"/>
        <references refid="class_performance_timing_1_1_c_interval_1ac64c695bf259d32f57b7f68a8d7cbbe3" compoundref="src_2_performance_timing_8h" startline="768">s_dLastFrameNegIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_interval_1a32f18388da0a3ce266f5943c0caedc35" compoundref="src_2_performance_timing_8h" startline="769">s_dThisFrameNegIntervalTimeSec</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Performance Timing Interval object </para>    </detaileddescription>
    <inheritancegraph>
      <node id="887">
        <label>PerformanceTiming::CInterval</label>
        <link refid="class_performance_timing_1_1_c_interval"/>
        <childnode refid="888" relation="public-inheritance">
        </childnode>
        <childnode refid="889" relation="public-inheritance">
        </childnode>
        <childnode refid="888" relation="public-inheritance">
        </childnode>
        <childnode refid="889" relation="public-inheritance">
        </childnode>
      </node>
      <node id="888">
        <label>PerformanceTiming::CPerformanceStat</label>
        <link refid="class_performance_timing_1_1_c_performance_stat"/>
      </node>
      <node id="889">
        <label>IInterval</label>
        <link refid="class_i_interval"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="890">
        <label>PerformanceTiming::CInterval</label>
        <link refid="class_performance_timing_1_1_c_interval"/>
        <childnode refid="891" relation="public-inheritance">
        </childnode>
        <childnode refid="894" relation="public-inheritance">
        </childnode>
        <childnode refid="891" relation="public-inheritance">
        </childnode>
        <childnode refid="894" relation="public-inheritance">
        </childnode>
        <childnode refid="895" relation="usage">
          <edgelabel>m_vChildren</edgelabel>
        </childnode>
      </node>
      <node id="895">
        <label>std::vector&lt; CInterval * &gt;</label>
        <childnode refid="890" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="893">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="891">
        <label>PerformanceTiming::CPerformanceStat</label>
        <link refid="class_performance_timing_1_1_c_performance_stat"/>
        <childnode refid="892" relation="usage">
          <edgelabel>m_sFolderName</edgelabel>
          <edgelabel>m_sName</edgelabel>
        </childnode>
      </node>
      <node id="894">
        <label>IInterval</label>
        <link refid="class_i_interval"/>
      </node>
      <node id="892">
        <label>std::string</label>
        <childnode refid="893" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="583" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="582" bodyend="770"/>
    <listofallmembers>
      <member refid="class_performance_timing_1_1_c_interval_1a07df2b2cd69021c9c0f4fc86a6109340" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>AddChild</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a07df2b2cd69021c9c0f4fc86a6109340" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>AddChild</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>AdvanceFrame</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1aa7f6f231b8eb7b78bdb3f641c2478738" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>AdvanceFrame</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a56f0db05638f8f054cb0224f4e99ff1d" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>AdvanceFrameStatic</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a56f0db05638f8f054cb0224f4e99ff1d" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>AdvanceFrameStatic</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a73816275cc4f6c934d2a5c2ceeeec03a" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>CheckFlag</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a73816275cc4f6c934d2a5c2ceeeec03a" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>CheckFlag</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ad029011c17ad6d2f07da43265bdfa5b1" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>CInterval</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ad029011c17ad6d2f07da43265bdfa5b1" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>CInterval</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1adc3a0f98e50eebfaf42fd8e45f6e6541" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>ClearFlag</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1adc3a0f98e50eebfaf42fd8e45f6e6541" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>ClearFlag</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a424b2bbaa5f6457ea8990b33e943bddc" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>CPerformanceStat</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a424b2bbaa5f6457ea8990b33e943bddc" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>CPerformanceStat</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a007f1a93611053b600a6e50bfbc88d61" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>DoSetFolderFlag</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a007f1a93611053b600a6e50bfbc88d61" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>DoSetFolderFlag</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad9d23cd316f85d975cb7cb4cdfb30979" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>DoSetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad9d23cd316f85d975cb7cb4cdfb30979" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>DoSetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a05192a46041bdca7c17ff4d95d239025" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>End</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a05192a46041bdca7c17ff4d95d239025" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>End</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a2dfc87e4ab8481348489472a758e577c" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetAverageIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a2dfc87e4ab8481348489472a758e577c" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetAverageIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a517bfa00869cbca0bbf2a8e8a9a4d276" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetCriticalThresholdMS</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a517bfa00869cbca0bbf2a8e8a9a4d276" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetCriticalThresholdMS</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad29415a1240f66800c4330e2053c0dd1" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad29415a1240f66800c4330e2053c0dd1" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a6cb5b9cb52e92cbd593b1fbb8a1a37cb" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetFolderNameCRC</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a6cb5b9cb52e92cbd593b1fbb8a1a37cb" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetFolderNameCRC</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a78e81d64e188c8544069f2d44bbfb15d" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetIntervalPercentage</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a78e81d64e188c8544069f2d44bbfb15d" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetIntervalPercentage</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a83ce0154483f4b782858becda70a6108" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetLastFrameIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a83ce0154483f4b782858becda70a6108" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetLastFrameIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1aa83b2b192b2cdf562afb68a118f4ddeb" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetLastFrameIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1aa83b2b192b2cdf562afb68a118f4ddeb" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetLastFrameIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a1cd3084ecc07d19f164bc1e4af2294d1" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetLastFrameNegIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a1cd3084ecc07d19f164bc1e4af2294d1" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetLastFrameNegIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a3f0b42b044023de8d06ad85a8af1c1b0" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetLastIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a3f0b42b044023de8d06ad85a8af1c1b0" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetLastIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a04b414adb56226f61d6998f62f1bff58" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetMaxIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a04b414adb56226f61d6998f62f1bff58" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetMaxIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a10144cd3deafa3edf99b44bdbf846fd8" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetMinIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a10144cd3deafa3edf99b44bdbf846fd8" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetMinIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a42fd717830714b06a8d85548a670acff" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetThisFrameIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a42fd717830714b06a8d85548a670acff" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetThisFrameIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a21436de178038d32ede2f1aa6432dd39" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetThisFrameIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a21436de178038d32ede2f1aa6432dd39" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetThisFrameIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1afb404fa870bbb32ab7dd0bbd88dafc69" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetTotalIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1afb404fa870bbb32ab7dd0bbd88dafc69" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetTotalIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1aece495b6b04748318f82795084e2cb12" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetTotalIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1aece495b6b04748318f82795084e2cb12" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetTotalIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ae61559ac559e042c63535870176f2654" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetVerboseLevel</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ae61559ac559e042c63535870176f2654" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetVerboseLevel</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a63f00993e82d763b8c10cef0b4a6fcd6" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetWarningThresholdMS</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a63f00993e82d763b8c10cef0b4a6fcd6" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>GetWarningThresholdMS</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>HardReset</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>HardReset</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1abf524b8731c32cc6e6fba1617393a995" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>IsLastFrameClosed</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1abf524b8731c32cc6e6fba1617393a995" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>IsLastFrameClosed</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a30c9f32df81a8b04a88ff77d4b1ed99f" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>IsTouched</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a30c9f32df81a8b04a88ff77d4b1ed99f" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>IsTouched</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1af287c0863769a08cf032483aad05d7b8" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_bLastFrameClosed</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ae255c7b3c8d30bb90c9dcffb27828522" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_dCriticalThresholdMS</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a5c74f728f68f429d325e98b1d34e37ec" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_dLastFrameIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a22ce78af269cf334bb2123963a565738" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_dLastIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ac16ad6e0970452ba73c1087d0018af1f" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_dMaxIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a422d7cb3501af7e6d669405b83610d6f" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_dMinIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a7386448f9882c4854a7f8fd7bc1042c9" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_dThisFrameIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a84bcfb920dc8f3a350472a5d9ebababf" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_dTotalIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a66bc56c075a0eb1c626fee0c707ebe71" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_dWarningThresholdMS</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a1d55047c2e79af22333c0f4290c3a0ab" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_EntryTime</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a2c00cac56e1d8b8c8dfabe4f1f43fe6f" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_iDepth</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a474d4d1a820db830baa96932dca830b1" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_iLastFrameIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ae009a449b5d064c39610ee28b65864c8" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_iThisFrameIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a26f083bbf102059dea61626d4b3fc2ce" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_iTotalIntervalEntries</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a8f60dc1083a17c8ee21ea19a52aa904d" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_uiFlags</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a0bb38ec8c39f9710226504b3ce86f6a0" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>m_vChildren</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a52826ace51151b5511dc91d2bff39a4a" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>Name</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a757d210669b62d6ca1c1e9d94f81dc47" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>Name</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>ResetTouch</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>ResetTouch</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ac64c695bf259d32f57b7f68a8d7cbbe3" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>s_dLastFrameNegIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a32f18388da0a3ce266f5943c0caedc35" prot="private" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>s_dThisFrameNegIntervalTimeSec</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a50e5d7009bbaced9312d0a90f5931276" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>SetFlag</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a50e5d7009bbaced9312d0a90f5931276" prot="public" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>SetFlag</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a3572cb5c021a91c7708b898159a62fdb" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>SetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1a3572cb5c021a91c7708b898159a62fdb" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>SetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ac7dffd5c24210fa8b55f2fe59eb9b5e3" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>Start</name></member>
      <member refid="class_performance_timing_1_1_c_interval_1ac7dffd5c24210fa8b55f2fe59eb9b5e3" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>Start</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a8759102951a2b02084f33c6565e1b9d4" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>Touch</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a8759102951a2b02084f33c6565e1b9d4" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CInterval</scope><name>Touch</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a24d2ef1fb91699902def98e91ff3bf28" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>~CPerformanceStat</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a24d2ef1fb91699902def98e91ff3bf28" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>~CPerformanceStat</name></member>
      <member refid="class_i_interval_1adb687906c3763ac263fe267d035b1d20" prot="public" virt="virtual"><scope>PerformanceTiming::CInterval</scope><name>~IInterval</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
