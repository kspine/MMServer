<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_se_shared_ptr" kind="class" prot="public">
    <compoundname>SeSharedPtr</compoundname>
    <includes refid="_se_share_ptr_8h" local="no">SeSharePtr.h</includes>
    <innerclass refid="struct_se_shared_ptr_1_1_share_use_count" prot="private">SeSharedPtr::ShareUseCount</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" prot="protected" static="no" mutable="no">
        <type>T *</type>
        <definition>T* SeSharedPtr&lt; T &gt;::m_pkRep</definition>
        <argsstring></argsstring>
        <name>m_pkRep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="19" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="19" bodyend="-1"/>
        <referencedby refid="class_se_shared_ptr_1a21bee9a2d514028fd1670f32fc1f84d2" compoundref="_se_share_ptr_8h" startline="110" endline="118">SeSharedPtr&lt; T &gt;::Bind</referencedby>
        <referencedby refid="class_se_shared_ptr_1a7fc7a2f1bee96baa9af4a98667230b15" compoundref="_se_share_ptr_8h" startline="173" endline="184">SeSharedPtr&lt; T &gt;::Destroy</referencedby>
        <referencedby refid="class_se_shared_ptr_1a1290b737fc1b86d6d218861dd5f008b8" compoundref="_se_share_ptr_8h" startline="94" endline="101">SeSharedPtr&lt; T &gt;::Get</referencedby>
        <referencedby refid="class_se_shared_ptr_1a61d6f03503c2ab728ac9d1918ff7556e" compoundref="_se_share_ptr_8h" startline="125" endline="132">SeSharedPtr&lt; T &gt;::GetPointer</referencedby>
        <referencedby refid="class_se_shared_ptr_1aec262839d4dcc132ed53ddeb1b233130" compoundref="_se_share_ptr_8h" startline="133" endline="140">SeSharedPtr&lt; T &gt;::IsNull</referencedby>
        <referencedby refid="class_se_shared_ptr_1ab0a1a0f620c85564ef09b76cef5d6792" compoundref="_se_share_ptr_8h" startline="37" endline="45">SeSharedPtr&lt; T &gt;::SeSharedPtr</referencedby>
        <referencedby refid="class_se_shared_ptr_1a7460af58f8f892da3d7dbbb996648aac" compoundref="_se_share_ptr_8h" startline="143" endline="153">SeSharedPtr&lt; T &gt;::SetNull</referencedby>
        <referencedby refid="class_se_shared_ptr_1a95f399b2cf040ebe6880b78ba19bddfa" compoundref="_se_share_ptr_8h" startline="186" endline="190">SeSharedPtr&lt; T &gt;::Swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_se_shared_ptr_1_1_share_use_count" kindref="compound">ShareUseCount</ref> *</type>
        <definition>ShareUseCount* SeSharedPtr&lt; T &gt;::m_pkUserPtr</definition>
        <argsstring></argsstring>
        <name>m_pkUserPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="20" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="20" bodyend="-1"/>
        <referencedby refid="class_se_shared_ptr_1a21bee9a2d514028fd1670f32fc1f84d2" compoundref="_se_share_ptr_8h" startline="110" endline="118">SeSharedPtr&lt; T &gt;::Bind</referencedby>
        <referencedby refid="class_se_shared_ptr_1a7fc7a2f1bee96baa9af4a98667230b15" compoundref="_se_share_ptr_8h" startline="173" endline="184">SeSharedPtr&lt; T &gt;::Destroy</referencedby>
        <referencedby refid="class_se_shared_ptr_1a1290b737fc1b86d6d218861dd5f008b8" compoundref="_se_share_ptr_8h" startline="94" endline="101">SeSharedPtr&lt; T &gt;::Get</referencedby>
        <referencedby refid="class_se_shared_ptr_1a61d6f03503c2ab728ac9d1918ff7556e" compoundref="_se_share_ptr_8h" startline="125" endline="132">SeSharedPtr&lt; T &gt;::GetPointer</referencedby>
        <referencedby refid="class_se_shared_ptr_1ab7fcf1b13fa3c061d33f078db33d7a49" compoundref="_se_share_ptr_8h" startline="122" endline="122">SeSharedPtr&lt; T &gt;::GetUseCount</referencedby>
        <referencedby refid="class_se_shared_ptr_1a3b81c8700bb304eb013c6ba2896a2605" compoundref="_se_share_ptr_8h" startline="123" endline="123">SeSharedPtr&lt; T &gt;::GetUseCountPointer</referencedby>
        <referencedby refid="class_se_shared_ptr_1aec262839d4dcc132ed53ddeb1b233130" compoundref="_se_share_ptr_8h" startline="133" endline="140">SeSharedPtr&lt; T &gt;::IsNull</referencedby>
        <referencedby refid="class_se_shared_ptr_1a4a0d8817294bac7527abf7535b4ae61c" compoundref="_se_share_ptr_8h" startline="156" endline="171">SeSharedPtr&lt; T &gt;::Release</referencedby>
        <referencedby refid="class_se_shared_ptr_1ab0a1a0f620c85564ef09b76cef5d6792" compoundref="_se_share_ptr_8h" startline="37" endline="45">SeSharedPtr&lt; T &gt;::SeSharedPtr</referencedby>
        <referencedby refid="class_se_shared_ptr_1a7460af58f8f892da3d7dbbb996648aac" compoundref="_se_share_ptr_8h" startline="143" endline="153">SeSharedPtr&lt; T &gt;::SetNull</referencedby>
        <referencedby refid="class_se_shared_ptr_1a58eb9b4e9a888127f7ba841cdb976da8" compoundref="_se_share_ptr_8h" startline="103" endline="109">SeSharedPtr&lt; T &gt;::SetOutDestroy</referencedby>
        <referencedby refid="class_se_shared_ptr_1a95f399b2cf040ebe6880b78ba19bddfa" compoundref="_se_share_ptr_8h" startline="186" endline="190">SeSharedPtr&lt; T &gt;::Swap</referencedby>
        <referencedby refid="class_se_shared_ptr_1aca1c63325a78327668ace58a6628a3f1" compoundref="_se_share_ptr_8h" startline="120" endline="121">SeSharedPtr&lt; T &gt;::Unique</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_se_shared_ptr_1a3d0b229407c0cf654eaca17d1bc0ac1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SeSharedPtr&lt; T &gt;::SeSharedPtr</definition>
        <argsstring>()</argsstring>
        <name>SeSharedPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="23" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1ab0a1a0f620c85564ef09b76cef5d6792" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SeSharedPtr&lt; T &gt;::SeSharedPtr</definition>
        <argsstring>(const SeSharedPtr &amp;rkSeSharedPtr)</argsstring>
        <name>SeSharedPtr</name>
        <param>
          <type>const <ref refid="class_se_shared_ptr" kindref="compound">SeSharedPtr</ref> &amp;</type>
          <declname>rkSeSharedPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="37" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="37" bodyend="45"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1a4a2c268dc7a69bc43fb5586e03e86809" compoundref="_se_share_ptr_8h" startline="14">SeSharedPtr&lt; T &gt;::ShareUseCount::iUseCount</references>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a2615a49d986b6f7d113989eb9b26cef6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_shared_ptr" kindref="compound">SeSharedPtr</ref> &amp;</type>
        <definition>SeSharedPtr&amp; SeSharedPtr&lt; T &gt;::operator=</definition>
        <argsstring>(const SeSharedPtr &amp;rkSeSharedPtr)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_se_shared_ptr" kindref="compound">SeSharedPtr</ref> &amp;</type>
          <declname>rkSeSharedPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="47" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="47" bodyend="52"/>
        <references refid="class_se_shared_ptr_1a95f399b2cf040ebe6880b78ba19bddfa" compoundref="_se_share_ptr_8h" startline="186" endline="190">SeSharedPtr&lt; T &gt;::Swap</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1aa17c372919cb7164c5c52a8431b91fdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Y</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>SeSharedPtr&lt; T &gt;::SeSharedPtr</definition>
        <argsstring>(const SeSharedPtr&lt; Y &gt; &amp;rkSeSharedPtr)</argsstring>
        <name>SeSharedPtr</name>
        <param>
          <type>const <ref refid="class_se_shared_ptr" kindref="compound">SeSharedPtr</ref>&lt; Y &gt; &amp;</type>
          <declname>rkSeSharedPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="55" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="55" bodyend="63"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1a4a2c268dc7a69bc43fb5586e03e86809" compoundref="_se_share_ptr_8h" startline="14">SeSharedPtr&lt; T &gt;::ShareUseCount::iUseCount</references>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a050cc7463d92690e048c3ca638e09fd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Y</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_se_shared_ptr" kindref="compound">SeSharedPtr</ref> &amp;</type>
        <definition>SeSharedPtr&amp; SeSharedPtr&lt; T &gt;::operator=</definition>
        <argsstring>(const SeSharedPtr&lt; Y &gt; &amp;rkSeSharedPtr)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_se_shared_ptr" kindref="compound">SeSharedPtr</ref>&lt; Y &gt; &amp;</type>
          <declname>rkSeSharedPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="66" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="66" bodyend="71"/>
        <references refid="class_se_shared_ptr_1a95f399b2cf040ebe6880b78ba19bddfa" compoundref="_se_share_ptr_8h" startline="186" endline="190">SeSharedPtr&lt; T &gt;::Swap</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1aab6d560851a1554a214eedf48c9de831" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SeSharedPtr&lt; T &gt;::~SeSharedPtr</definition>
        <argsstring>()</argsstring>
        <name>~SeSharedPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="81" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="81" bodyend="84"/>
        <references refid="class_se_shared_ptr_1a4a0d8817294bac7527abf7535b4ae61c" compoundref="_se_share_ptr_8h" startline="156" endline="171">SeSharedPtr&lt; T &gt;::Release</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1ab8613a61f2449ab9ccb01f71c023fa7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; SeSharedPtr&lt; T &gt;::operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="86" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="86" bodyend="89"/>
        <references refid="class_se_shared_ptr_1a1290b737fc1b86d6d218861dd5f008b8" compoundref="_se_share_ptr_8h" startline="94" endline="101">SeSharedPtr&lt; T &gt;::Get</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1aeabe1517a18b02000fe0091e69c9e54c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* SeSharedPtr&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="90" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="90" bodyend="93"/>
        <references refid="class_se_shared_ptr_1a1290b737fc1b86d6d218861dd5f008b8" compoundref="_se_share_ptr_8h" startline="94" endline="101">SeSharedPtr&lt; T &gt;::Get</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a1290b737fc1b86d6d218861dd5f008b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* SeSharedPtr&lt; T &gt;::Get</definition>
        <argsstring>() const </argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="94" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="94" bodyend="101"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1af983981e812b5aa36984755931732f06" compoundref="_se_share_ptr_8h" startline="16">SeSharedPtr&lt; T &gt;::ShareUseCount::bSetNull</references>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
        <referencedby refid="class_se_shared_ptr_1ab8613a61f2449ab9ccb01f71c023fa7a" compoundref="_se_share_ptr_8h" startline="86" endline="89">SeSharedPtr&lt; T &gt;::operator*</referencedby>
        <referencedby refid="class_se_shared_ptr_1aeabe1517a18b02000fe0091e69c9e54c" compoundref="_se_share_ptr_8h" startline="90" endline="93">SeSharedPtr&lt; T &gt;::operator-&gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a58eb9b4e9a888127f7ba841cdb976da8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SeSharedPtr&lt; T &gt;::SetOutDestroy</definition>
        <argsstring>(bool bOut)</argsstring>
        <name>SetOutDestroy</name>
        <param>
          <type>bool</type>
          <declname>bOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="103" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="103" bodyend="109"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1af9a8279c4836d0227610a565ede255bb" compoundref="_se_share_ptr_8h" startline="15">SeSharedPtr&lt; T &gt;::ShareUseCount::bOutDestroy</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a21bee9a2d514028fd1670f32fc1f84d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SeSharedPtr&lt; T &gt;::Bind</definition>
        <argsstring>(T *pkPtr)</argsstring>
        <name>Bind</name>
        <param>
          <type>T *</type>
          <declname>pkPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="110" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="110" bodyend="118"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1a4a2c268dc7a69bc43fb5586e03e86809" compoundref="_se_share_ptr_8h" startline="14">SeSharedPtr&lt; T &gt;::ShareUseCount::iUseCount</references>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1aca1c63325a78327668ace58a6628a3f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SeSharedPtr&lt; T &gt;::Unique</definition>
        <argsstring>() const </argsstring>
        <name>Unique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="120" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="120" bodyend="121"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1a4a2c268dc7a69bc43fb5586e03e86809" compoundref="_se_share_ptr_8h" startline="14">SeSharedPtr&lt; T &gt;::ShareUseCount::iUseCount</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1ab7fcf1b13fa3c061d33f078db33d7a49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int SeSharedPtr&lt; T &gt;::GetUseCount</definition>
        <argsstring>() const </argsstring>
        <name>GetUseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="122" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="122" bodyend="122"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1a4a2c268dc7a69bc43fb5586e03e86809" compoundref="_se_share_ptr_8h" startline="14">SeSharedPtr&lt; T &gt;::ShareUseCount::iUseCount</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a3b81c8700bb304eb013c6ba2896a2605" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int *</type>
        <definition>unsigned int* SeSharedPtr&lt; T &gt;::GetUseCountPointer</definition>
        <argsstring>() const </argsstring>
        <name>GetUseCountPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="123" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="123" bodyend="123"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1a4a2c268dc7a69bc43fb5586e03e86809" compoundref="_se_share_ptr_8h" startline="14">SeSharedPtr&lt; T &gt;::ShareUseCount::iUseCount</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a61d6f03503c2ab728ac9d1918ff7556e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* SeSharedPtr&lt; T &gt;::GetPointer</definition>
        <argsstring>() const </argsstring>
        <name>GetPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="125" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="125" bodyend="132"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1af983981e812b5aa36984755931732f06" compoundref="_se_share_ptr_8h" startline="16">SeSharedPtr&lt; T &gt;::ShareUseCount::bSetNull</references>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
        <referencedby refid="_se_share_ptr_8h_1adffca5e22d5d4243ec66313320732008" compoundref="_se_share_ptr_8h" startline="200" endline="203">operator!=</referencedby>
        <referencedby refid="_se_share_ptr_8h_1a18c25927f09a7daedfdd32bbc844269c" compoundref="_se_share_ptr_8h" startline="194" endline="197">operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1aec262839d4dcc132ed53ddeb1b233130" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SeSharedPtr&lt; T &gt;::IsNull</definition>
        <argsstring>() const </argsstring>
        <name>IsNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="133" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="133" bodyend="140"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1af983981e812b5aa36984755931732f06" compoundref="_se_share_ptr_8h" startline="16">SeSharedPtr&lt; T &gt;::ShareUseCount::bSetNull</references>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a7460af58f8f892da3d7dbbb996648aac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SeSharedPtr&lt; T &gt;::SetNull</definition>
        <argsstring>()</argsstring>
        <name>SetNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="143" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="143" bodyend="153"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1af983981e812b5aa36984755931732f06" compoundref="_se_share_ptr_8h" startline="16">SeSharedPtr&lt; T &gt;::ShareUseCount::bSetNull</references>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_se_shared_ptr_1a4a0d8817294bac7527abf7535b4ae61c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SeSharedPtr&lt; T &gt;::Release</definition>
        <argsstring>()</argsstring>
        <name>Release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="156" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="156" bodyend="171"/>
        <references refid="class_se_shared_ptr_1a7fc7a2f1bee96baa9af4a98667230b15" compoundref="_se_share_ptr_8h" startline="173" endline="184">SeSharedPtr&lt; T &gt;::Destroy</references>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1a4a2c268dc7a69bc43fb5586e03e86809" compoundref="_se_share_ptr_8h" startline="14">SeSharedPtr&lt; T &gt;::ShareUseCount::iUseCount</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
        <referencedby refid="class_se_shared_ptr_1aab6d560851a1554a214eedf48c9de831" compoundref="_se_share_ptr_8h" startline="81" endline="84">SeSharedPtr&lt; T &gt;::~SeSharedPtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a7fc7a2f1bee96baa9af4a98667230b15" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SeSharedPtr&lt; T &gt;::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="173" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="173" bodyend="184"/>
        <references refid="struct_se_shared_ptr_1_1_share_use_count_1af9a8279c4836d0227610a565ede255bb" compoundref="_se_share_ptr_8h" startline="15">SeSharedPtr&lt; T &gt;::ShareUseCount::bOutDestroy</references>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
        <references refid="_se_define_8h_1abdf73516460d2bbbfdea4a92bcecc080" compoundref="_se_define_8h" startline="8">SAFE_DELETE</references>
        <referencedby refid="class_se_shared_ptr_1a4a0d8817294bac7527abf7535b4ae61c" compoundref="_se_share_ptr_8h" startline="156" endline="171">SeSharedPtr&lt; T &gt;::Release</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_shared_ptr_1a95f399b2cf040ebe6880b78ba19bddfa" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SeSharedPtr&lt; T &gt;::Swap</definition>
        <argsstring>(SeSharedPtr&lt; T &gt; &amp;rkOther)</argsstring>
        <name>Swap</name>
        <param>
          <type><ref refid="class_se_shared_ptr" kindref="compound">SeSharedPtr</ref>&lt; T &gt; &amp;</type>
          <declname>rkOther</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="186" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="186" bodyend="190"/>
        <references refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" compoundref="_se_share_ptr_8h" startline="19">SeSharedPtr&lt; T &gt;::m_pkRep</references>
        <references refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" compoundref="_se_share_ptr_8h" startline="20">SeSharedPtr&lt; T &gt;::m_pkUserPtr</references>
        <referencedby refid="class_se_shared_ptr_1a2615a49d986b6f7d113989eb9b26cef6" compoundref="_se_share_ptr_8h" startline="47" endline="52">SeSharedPtr&lt; T &gt;::operator=</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="7040">
        <label>SeSharedPtr&lt; T &gt;</label>
        <link refid="class_se_shared_ptr"/>
        <childnode refid="7041" relation="usage">
          <edgelabel>m_pkUserPtr</edgelabel>
        </childnode>
      </node>
      <node id="7041">
        <label>SeSharedPtr&lt; T &gt;::ShareUseCount</label>
        <link refid="struct_se_shared_ptr_1_1_share_use_count"/>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeSharePtr.h" bodystart="4" bodyend="191"/>
    <listofallmembers>
      <member refid="class_se_shared_ptr_1a21bee9a2d514028fd1670f32fc1f84d2" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>Bind</name></member>
      <member refid="class_se_shared_ptr_1a7fc7a2f1bee96baa9af4a98667230b15" prot="protected" virt="non-virtual"><scope>SeSharedPtr</scope><name>Destroy</name></member>
      <member refid="class_se_shared_ptr_1a1290b737fc1b86d6d218861dd5f008b8" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>Get</name></member>
      <member refid="class_se_shared_ptr_1a61d6f03503c2ab728ac9d1918ff7556e" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>GetPointer</name></member>
      <member refid="class_se_shared_ptr_1ab7fcf1b13fa3c061d33f078db33d7a49" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>GetUseCount</name></member>
      <member refid="class_se_shared_ptr_1a3b81c8700bb304eb013c6ba2896a2605" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>GetUseCountPointer</name></member>
      <member refid="class_se_shared_ptr_1aec262839d4dcc132ed53ddeb1b233130" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>IsNull</name></member>
      <member refid="class_se_shared_ptr_1a2ce961d04436b70c9964041b1b8ce38e" prot="protected" virt="non-virtual"><scope>SeSharedPtr</scope><name>m_pkRep</name></member>
      <member refid="class_se_shared_ptr_1a52e6a6b7f7a60f6cd393ef9ec878a522" prot="protected" virt="non-virtual"><scope>SeSharedPtr</scope><name>m_pkUserPtr</name></member>
      <member refid="class_se_shared_ptr_1ab8613a61f2449ab9ccb01f71c023fa7a" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>operator*</name></member>
      <member refid="class_se_shared_ptr_1aeabe1517a18b02000fe0091e69c9e54c" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>operator-&gt;</name></member>
      <member refid="class_se_shared_ptr_1a2615a49d986b6f7d113989eb9b26cef6" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>operator=</name></member>
      <member refid="class_se_shared_ptr_1a050cc7463d92690e048c3ca638e09fd2" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>operator=</name></member>
      <member refid="class_se_shared_ptr_1a4a0d8817294bac7527abf7535b4ae61c" prot="protected" virt="non-virtual"><scope>SeSharedPtr</scope><name>Release</name></member>
      <member refid="class_se_shared_ptr_1a3d0b229407c0cf654eaca17d1bc0ac1b" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>SeSharedPtr</name></member>
      <member refid="class_se_shared_ptr_1ab0a1a0f620c85564ef09b76cef5d6792" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>SeSharedPtr</name></member>
      <member refid="class_se_shared_ptr_1aa17c372919cb7164c5c52a8431b91fdc" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>SeSharedPtr</name></member>
      <member refid="class_se_shared_ptr_1a7460af58f8f892da3d7dbbb996648aac" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>SetNull</name></member>
      <member refid="class_se_shared_ptr_1a58eb9b4e9a888127f7ba841cdb976da8" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>SetOutDestroy</name></member>
      <member refid="class_se_shared_ptr_1a95f399b2cf040ebe6880b78ba19bddfa" prot="protected" virt="non-virtual"><scope>SeSharedPtr</scope><name>Swap</name></member>
      <member refid="class_se_shared_ptr_1aca1c63325a78327668ace58a6628a3f1" prot="public" virt="non-virtual"><scope>SeSharedPtr</scope><name>Unique</name></member>
      <member refid="class_se_shared_ptr_1aab6d560851a1554a214eedf48c9de831" prot="public" virt="virtual"><scope>SeSharedPtr</scope><name>~SeSharedPtr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
