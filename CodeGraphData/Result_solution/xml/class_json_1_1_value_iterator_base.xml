<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_json_1_1_value_iterator_base" kind="class" prot="public">
    <compoundname>Json::ValueIteratorBase</compoundname>
    <derivedcompoundref refid="class_json_1_1_value_const_iterator" prot="public" virt="non-virtual">Json::ValueConstIterator</derivedcompoundref>
    <derivedcompoundref refid="class_json_1_1_value_iterator" prot="public" virt="non-virtual">Json::ValueIterator</derivedcompoundref>
    <includes refid="value_8h" local="no">value.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_base_1a02fd11a4fbdc0007da1e8bcf5e6b83c3" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>typedef std::bidirectional_iterator_tag Json::ValueIteratorBase::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="673" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_base_1a9d3a3c7ce5cdefe23cb486239cf07bb5" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int Json::ValueIteratorBase::size_t</definition>
        <argsstring></argsstring>
        <name>size_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="674" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_base_1a4e44bf8cbd17ec8d6e2c185904a15ebd" prot="public" static="no">
        <type>int</type>
        <definition>typedef int Json::ValueIteratorBase::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="675" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" prot="public" static="no">
        <type><ref refid="class_json_1_1_value_iterator_base" kindref="compound">ValueIteratorBase</ref></type>
        <definition>typedef ValueIteratorBase Json::ValueIteratorBase::SelfType</definition>
        <argsstring></argsstring>
        <name>SelfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="676" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" prot="private" static="no" mutable="no">
        <type>Value::ObjectValues::iterator</type>
        <definition>Value::ObjectValues::iterator Json::ValueIteratorBase::current_</definition>
        <argsstring></argsstring>
        <name>current_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="722" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="722" bodyend="-1"/>
        <referencedby refid="class_json_1_1_value_iterator_base_1ad6c553b249e89e3dc9933e100ccbe064" compoundref="json__valueiterator_8inl" startline="39" endline="64">computeDistance</referencedby>
        <referencedby refid="class_json_1_1_value_iterator_base_1a496e6aba44808433ec5858c178be5719" compoundref="json__valueiterator_8inl" startline="73" endline="76">copy</referencedby>
        <referencedby refid="class_json_1_1_value_iterator_base_1affc8cf5ff54a9f432cc693362c153fa6" compoundref="json__valueiterator_8inl" startline="34" endline="36">decrement</referencedby>
        <referencedby refid="class_json_1_1_value_iterator_base_1a40a20c65abc423a26e3aae68d9a0525c" compoundref="json__valueiterator_8inl" startline="26" endline="28">deref</referencedby>
        <referencedby refid="class_json_1_1_value_iterator_base_1afe58f9534e1fd2033419fd9fe244551e" compoundref="json__valueiterator_8inl" startline="30" endline="32">increment</referencedby>
        <referencedby refid="class_json_1_1_value_iterator_base_1a21820d6ee564e541bd118b21e4741962" compoundref="json__valueiterator_8inl" startline="66" endline="71">isEqual</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_json_1_1_value_iterator_base_1a3e08b114a1aed9bde518c527f94a8c59" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::ValueIteratorBase::isNull_</definition>
        <argsstring></argsstring>
        <name>isNull_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="724" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="724" bodyend="-1"/>
        <referencedby refid="class_json_1_1_value_iterator_base_1ad6c553b249e89e3dc9933e100ccbe064" compoundref="json__valueiterator_8inl" startline="39" endline="64">computeDistance</referencedby>
        <referencedby refid="class_json_1_1_value_iterator_base_1a496e6aba44808433ec5858c178be5719" compoundref="json__valueiterator_8inl" startline="73" endline="76">copy</referencedby>
        <referencedby refid="class_json_1_1_value_iterator_base_1a21820d6ee564e541bd118b21e4741962" compoundref="json__valueiterator_8inl" startline="66" endline="71">isEqual</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1afc656672ac28502f640ade32c38c1b56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::ValueIteratorBase::operator==</definition>
        <argsstring>(const SelfType &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="678" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="678" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1a18c2dd42e0bb989ace141bfe9de52792" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::ValueIteratorBase::operator!=</definition>
        <argsstring>(const SelfType &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="680" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="680" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1ab786787fcad68ca5e8745aaf520fa17f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base_1a4e44bf8cbd17ec8d6e2c185904a15ebd" kindref="member">difference_type</ref></type>
        <definition>difference_type Json::ValueIteratorBase::operator-</definition>
        <argsstring>(const SelfType &amp;other) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="682" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="682" bodyend="684"/>
        <references refid="class_json_1_1_value_iterator_base_1ad6c553b249e89e3dc9933e100ccbe064" compoundref="json__valueiterator_8inl" startline="39" endline="64">computeDistance</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1aa2ff5e79fc96acd4c3cd288e92614fc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value" kindref="compound">Value</ref></type>
        <definition>Value Json::ValueIteratorBase::key</definition>
        <argsstring>() const </argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return either the index or the member name of the referenced value as a <ref refid="class_json_1_1_value" kindref="compound">Value</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="688" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="78" bodyend="86"/>
        <references refid="class_json_1_1_value_1_1_c_z_string_1a02482793b88b1062c4a0dd0a53f3d2a7" compoundref="json__value_8cpp" startline="287" endline="287">Json::Value::CZString::data</references>
        <references refid="class_json_1_1_value_1_1_c_z_string_1a4e9f305dbc4a4700abd955fde673a01c" compoundref="json__value_8cpp" startline="284" endline="284">Json::Value::CZString::index</references>
        <references refid="class_json_1_1_value_1_1_c_z_string_1af3cc02b77c2cd79d4646fcea3575c1fd" compoundref="json__value_8cpp" startline="289" endline="289">Json::Value::CZString::isStaticString</references>
        <references refid="class_json_1_1_value_1_1_c_z_string_1a4e697840c41fb56756be7a75efa114cb" compoundref="json__value_8cpp" startline="288" endline="288">Json::Value::CZString::length</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1aa90591f5f7f8d2f06cc4605816b53738" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref></type>
        <definition>UInt Json::ValueIteratorBase::index</definition>
        <argsstring>() const </argsstring>
        <name>index</name>
        <briefdescription>
<para>Return the index of the referenced <ref refid="class_json_1_1_value" kindref="compound">Value</ref>, or -1 if it is not an arrayValue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="691" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="88" bodyend="93"/>
        <references refid="class_json_1_1_value_1_1_c_z_string_1a02482793b88b1062c4a0dd0a53f3d2a7" compoundref="json__value_8cpp" startline="287" endline="287">Json::Value::CZString::data</references>
        <references refid="class_json_1_1_value_1_1_c_z_string_1a4e9f305dbc4a4700abd955fde673a01c" compoundref="json__value_8cpp" startline="284" endline="284">Json::Value::CZString::index</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1a46a67081a5ef8d83f25ec15035403ce0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Json::ValueIteratorBase::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the member name of the referenced <ref refid="class_json_1_1_value" kindref="compound">Value</ref>, or &quot;&quot; if it is not an objectValue. <simplesect kind="note"><para>Avoid <computeroutput>c_str()</computeroutput> on result, as embedded zeroes are possible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="696" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="95" bodyend="101"/>
        <references refid="class_json_1_1_value_iterator_base_1ac3aa3870761342e47c6486d81f643c6c" compoundref="json__valueiterator_8inl" startline="103" endline="106">memberName</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1ac3aa3870761342e47c6486d81f643c6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>char const * Json::ValueIteratorBase::memberName</definition>
        <argsstring>() const </argsstring>
        <name>memberName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the member name of the referenced <ref refid="class_json_1_1_value" kindref="compound">Value</ref>. &quot;&quot; if it is not an objectValue. <xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This cannot be used for UTF-8 strings, since there can be embedded nulls. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="702" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="103" bodyend="106"/>
        <referencedby refid="class_json_1_1_value_iterator_base_1a46a67081a5ef8d83f25ec15035403ce0" compoundref="json__valueiterator_8inl" startline="95" endline="101">name</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1a543d4e73e3d2d121bc287b24231386c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char const *</type>
        <definition>char const * Json::ValueIteratorBase::memberName</definition>
        <argsstring>(char const **end) const </argsstring>
        <name>memberName</name>
        <param>
          <type>char const **</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the member name of the referenced <ref refid="class_json_1_1_value" kindref="compound">Value</ref>, or NULL if it is not an objectValue. <simplesect kind="note"><para>Better version than <ref refid="class_json_1_1_value_iterator_base_1ac3aa3870761342e47c6486d81f643c6c" kindref="member">memberName()</ref>. Allows embedded nulls. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="706" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="108" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1af45b028d9ff9cbd2554a87878b42dd75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::ValueIteratorBase::ValueIteratorBase</definition>
        <argsstring>()</argsstring>
        <name>ValueIteratorBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="729" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1a640e990e5f03a96fd650122a2906f59d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::ValueIteratorBase::ValueIteratorBase</definition>
        <argsstring>(const Value::ObjectValues::iterator &amp;current)</argsstring>
        <name>ValueIteratorBase</name>
        <param>
          <type>const Value::ObjectValues::iterator &amp;</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="730" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="22" bodyend="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1a40a20c65abc423a26e3aae68d9a0525c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value" kindref="compound">Value</ref> &amp;</type>
        <definition>Value &amp; Json::ValueIteratorBase::deref</definition>
        <argsstring>() const </argsstring>
        <name>deref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="709" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="26" bodyend="28"/>
        <references refid="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" compoundref="value_8h" startline="722">current_</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1afe58f9534e1fd2033419fd9fe244551e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::ValueIteratorBase::increment</definition>
        <argsstring>()</argsstring>
        <name>increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="711" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="30" bodyend="32"/>
        <references refid="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" compoundref="value_8h" startline="722">current_</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1affc8cf5ff54a9f432cc693362c153fa6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::ValueIteratorBase::decrement</definition>
        <argsstring>()</argsstring>
        <name>decrement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="713" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="34" bodyend="36"/>
        <references refid="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" compoundref="value_8h" startline="722">current_</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1ad6c553b249e89e3dc9933e100ccbe064" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base_1a4e44bf8cbd17ec8d6e2c185904a15ebd" kindref="member">difference_type</ref></type>
        <definition>ValueIteratorBase::difference_type Json::ValueIteratorBase::computeDistance</definition>
        <argsstring>(const SelfType &amp;other) const </argsstring>
        <name>computeDistance</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="715" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="39" bodyend="64"/>
        <references refid="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" compoundref="value_8h" startline="722">current_</references>
        <references refid="class_json_1_1_value_iterator_base_1a3e08b114a1aed9bde518c527f94a8c59" compoundref="value_8h" startline="724">isNull_</references>
        <referencedby refid="class_json_1_1_value_iterator_base_1ab786787fcad68ca5e8745aaf520fa17f" compoundref="value_8h" startline="682" endline="684">operator-</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1a21820d6ee564e541bd118b21e4741962" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::ValueIteratorBase::isEqual</definition>
        <argsstring>(const SelfType &amp;other) const </argsstring>
        <name>isEqual</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="717" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="66" bodyend="71"/>
        <references refid="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" compoundref="value_8h" startline="722">current_</references>
        <references refid="class_json_1_1_value_iterator_base_1a3e08b114a1aed9bde518c527f94a8c59" compoundref="value_8h" startline="724">isNull_</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_base_1a496e6aba44808433ec5858c178be5719" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::ValueIteratorBase::copy</definition>
        <argsstring>(const SelfType &amp;other)</argsstring>
        <name>copy</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="719" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="73" bodyend="76"/>
        <references refid="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" compoundref="value_8h" startline="722">current_</references>
        <references refid="class_json_1_1_value_iterator_base_1a3e08b114a1aed9bde518c527f94a8c59" compoundref="value_8h" startline="724">isNull_</references>
        <referencedby refid="class_json_1_1_value_const_iterator_1ad1b1c11f8d7fb22d4d3c231915f2b15b" compoundref="json__valueiterator_8inl" startline="136" endline="139">Json::ValueConstIterator::operator=</referencedby>
        <referencedby refid="class_json_1_1_value_iterator_1a8e23312b1db874f7e403fd7e76611bdc" compoundref="json__valueiterator_8inl" startline="162" endline="165">Json::ValueIterator::operator=</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>base class for <ref refid="class_json_1_1_value" kindref="compound">Value</ref> iterators. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9488">
        <label>Json::ValueIterator</label>
        <link refid="class_json_1_1_value_iterator"/>
        <childnode refid="9486" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9486">
        <label>Json::ValueIteratorBase</label>
        <link refid="class_json_1_1_value_iterator_base"/>
      </node>
      <node id="9487">
        <label>Json::ValueConstIterator</label>
        <link refid="class_json_1_1_value_const_iterator"/>
        <childnode refid="9486" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9490">
        <label>std::map&lt; K, T &gt;::iterator</label>
      </node>
      <node id="9489">
        <label>Json::ValueIteratorBase</label>
        <link refid="class_json_1_1_value_iterator_base"/>
        <childnode refid="9490" relation="usage">
          <edgelabel>current_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="671" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="671" bodyend="731"/>
    <listofallmembers>
      <member refid="class_json_1_1_value_iterator_base_1ad6c553b249e89e3dc9933e100ccbe064" prot="protected" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>computeDistance</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a496e6aba44808433ec5858c178be5719" prot="protected" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>copy</name></member>
      <member refid="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" prot="private" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>current_</name></member>
      <member refid="class_json_1_1_value_iterator_base_1affc8cf5ff54a9f432cc693362c153fa6" prot="protected" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>decrement</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a40a20c65abc423a26e3aae68d9a0525c" prot="protected" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>deref</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a4e44bf8cbd17ec8d6e2c185904a15ebd" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>difference_type</name></member>
      <member refid="class_json_1_1_value_iterator_base_1afe58f9534e1fd2033419fd9fe244551e" prot="protected" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>increment</name></member>
      <member refid="class_json_1_1_value_iterator_base_1aa90591f5f7f8d2f06cc4605816b53738" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>index</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a21820d6ee564e541bd118b21e4741962" prot="protected" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>isEqual</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a3e08b114a1aed9bde518c527f94a8c59" prot="private" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>isNull_</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a02fd11a4fbdc0007da1e8bcf5e6b83c3" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>iterator_category</name></member>
      <member refid="class_json_1_1_value_iterator_base_1aa2ff5e79fc96acd4c3cd288e92614fc7" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>key</name></member>
      <member refid="class_json_1_1_value_iterator_base_1ac3aa3870761342e47c6486d81f643c6c" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>memberName</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a543d4e73e3d2d121bc287b24231386c3" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>memberName</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a46a67081a5ef8d83f25ec15035403ce0" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>name</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a18c2dd42e0bb989ace141bfe9de52792" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>operator!=</name></member>
      <member refid="class_json_1_1_value_iterator_base_1ab786787fcad68ca5e8745aaf520fa17f" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>operator-</name></member>
      <member refid="class_json_1_1_value_iterator_base_1afc656672ac28502f640ade32c38c1b56" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>operator==</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>SelfType</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a9d3a3c7ce5cdefe23cb486239cf07bb5" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>size_t</name></member>
      <member refid="class_json_1_1_value_iterator_base_1af45b028d9ff9cbd2554a87878b42dd75" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>ValueIteratorBase</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a640e990e5f03a96fd650122a2906f59d" prot="public" virt="non-virtual"><scope>Json::ValueIteratorBase</scope><name>ValueIteratorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
