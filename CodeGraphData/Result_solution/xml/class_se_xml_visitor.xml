<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_se_xml_visitor" kind="class" prot="public">
    <compoundname>SeXmlVisitor</compoundname>
    <derivedcompoundref refid="class_se_xml_printer" prot="public" virt="non-virtual">SeXmlPrinter</derivedcompoundref>
    <includes refid="_se_xml_8h" local="no">SeXml.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_se_xml_visitor_1aaeaabe5af7a3d7a7027facc5a13dc1c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SeXmlVisitor::~SeXmlVisitor</definition>
        <argsstring>()</argsstring>
        <name>~SeXmlVisitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="122" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_visitor_1a98938adf237ea2a9a53738e49c6a8f7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SeXmlVisitor::VisitEnter</definition>
        <argsstring>(const SeXmlDocument &amp;)</argsstring>
        <name>VisitEnter</name>
        <reimplementedby refid="class_se_xml_printer_1afb5be7ba4759f6164ecfca20d4fea653">VisitEnter</reimplementedby>
        <param>
          <type>const <ref refid="class_se_xml_document" kindref="compound">SeXmlDocument</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="125" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="125" bodyend="125"/>
        <referencedby refid="class_se_xml_element_1a798939ef336fa72002d0e75a5bfd1e46" compoundref="_se_xml_8cpp" startline="2475" endline="2486">SeXmlElement::Accept</referencedby>
        <referencedby refid="class_se_xml_document_1a80565e1627b2fbe70e8166acc2e5a574" compoundref="_se_xml_8cpp" startline="2756" endline="2767">SeXmlDocument::Accept</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_visitor_1ab2ccd0003863bc10cf2fcc559547b963" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SeXmlVisitor::VisitExit</definition>
        <argsstring>(const SeXmlDocument &amp;)</argsstring>
        <name>VisitExit</name>
        <reimplementedby refid="class_se_xml_printer_1a7a4f71b6e4485e919995d779a03b4b65">VisitExit</reimplementedby>
        <param>
          <type>const <ref refid="class_se_xml_document" kindref="compound">SeXmlDocument</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="127" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="127" bodyend="127"/>
        <referencedby refid="class_se_xml_element_1a798939ef336fa72002d0e75a5bfd1e46" compoundref="_se_xml_8cpp" startline="2475" endline="2486">SeXmlElement::Accept</referencedby>
        <referencedby refid="class_se_xml_document_1a80565e1627b2fbe70e8166acc2e5a574" compoundref="_se_xml_8cpp" startline="2756" endline="2767">SeXmlDocument::Accept</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_visitor_1a553bc6a3195596352241d2d5822442b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SeXmlVisitor::VisitEnter</definition>
        <argsstring>(const SeXmlElement &amp;, const SeXmlAttribute *)</argsstring>
        <name>VisitEnter</name>
        <reimplementedby refid="class_se_xml_printer_1ae93803a026178e5c3ed9cab3198f0bdd">VisitEnter</reimplementedby>
        <param>
          <type>const <ref refid="class_se_xml_element" kindref="compound">SeXmlElement</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_se_xml_attribute" kindref="compound">SeXmlAttribute</ref> *</type>
        </param>
        <briefdescription>
<para>Visit an element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="130" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_visitor_1a2a4e6bc0f4753a6c8ee2e621bb6317ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SeXmlVisitor::VisitExit</definition>
        <argsstring>(const SeXmlElement &amp;)</argsstring>
        <name>VisitExit</name>
        <reimplementedby refid="class_se_xml_printer_1ae188eaedef85b8775cad9f24d4ea9563">VisitExit</reimplementedby>
        <param>
          <type>const <ref refid="class_se_xml_element" kindref="compound">SeXmlElement</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit an element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="132" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_visitor_1a9fa30ba184552e6b9652cfb482a34e62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SeXmlVisitor::Visit</definition>
        <argsstring>(const SeXmlDeclaration &amp;)</argsstring>
        <name>Visit</name>
        <reimplementedby refid="class_se_xml_printer_1a5953a588bd8fb9f649b1e20bf7f4d440">Visit</reimplementedby>
        <param>
          <type>const <ref refid="class_se_xml_declaration" kindref="compound">SeXmlDeclaration</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a declaration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="135" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="135" bodyend="135"/>
        <referencedby refid="class_se_xml_comment_1a77e0e880339c1fcc5cc2429c2d630924" compoundref="_se_xml_8cpp" startline="2914" endline="2917">SeXmlComment::Accept</referencedby>
        <referencedby refid="class_se_xml_text_1ac33b61ed97045c3f124564811fd03358" compoundref="_se_xml_8cpp" startline="2960" endline="2963">SeXmlText::Accept</referencedby>
        <referencedby refid="class_se_xml_declaration_1a0826ce2a68dd1b3a89f479a88566f853" compoundref="_se_xml_8cpp" startline="3048" endline="3051">SeXmlDeclaration::Accept</referencedby>
        <referencedby refid="class_se_xml_unknown_1aa3a642c36386e1ad8dec2c774dd29b85" compoundref="_se_xml_8cpp" startline="3080" endline="3083">SeXmlUnknown::Accept</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_visitor_1a3fa49a1fa21e2ebf73b638ae7603e7e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SeXmlVisitor::Visit</definition>
        <argsstring>(const SeXmlText &amp;)</argsstring>
        <name>Visit</name>
        <reimplementedby refid="class_se_xml_printer_1a9a072352bdc7027060e6399bf6baec83">Visit</reimplementedby>
        <param>
          <type>const <ref refid="class_se_xml_text" kindref="compound">SeXmlText</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a text node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="137" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_visitor_1a847b493d2b329891030114e060186a34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SeXmlVisitor::Visit</definition>
        <argsstring>(const SeXmlComment &amp;)</argsstring>
        <name>Visit</name>
        <reimplementedby refid="class_se_xml_printer_1ace1ae28f1cbef703c6522873f78eebf0">Visit</reimplementedby>
        <param>
          <type>const <ref refid="class_se_xml_comment" kindref="compound">SeXmlComment</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a comment node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="139" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_visitor_1aeba9805fc4f1b3de2aad22aa5ab5a21b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SeXmlVisitor::Visit</definition>
        <argsstring>(const SeXmlUnknown &amp;)</argsstring>
        <name>Visit</name>
        <reimplementedby refid="class_se_xml_printer_1ace06a5df7a505185010a2e2ca4954d6a">Visit</reimplementedby>
        <param>
          <type>const <ref refid="class_se_xml_unknown" kindref="compound">SeXmlUnknown</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit an unknown node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="141" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="141" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements the interface to the &quot;Visitor pattern&quot; (see the Accept() method.) If you call the Accept() method, it requires being passed a <ref refid="class_se_xml_visitor" kindref="compound">SeXmlVisitor</ref> class to handle callbacks. For nodes that contain other nodes (Document, Element) you will get called with a VisitEnter/VisitExit pair. Nodes that are always leaves are simply called with <ref refid="class_se_xml_visitor_1a9fa30ba184552e6b9652cfb482a34e62" kindref="member">Visit()</ref>.</para><para>If you return &apos;true&apos; from a Visit method, recursive parsing will continue. If you return false, <bold>no children of this node or its sibilings</bold> will be Visited.</para><para>All flavors of Visit methods have a default implementation that returns &apos;true&apos; (continue visiting). You need to only override methods that are interesting to you.</para><para>Generally Accept() is called on the <ref refid="class_se_xml_document" kindref="compound">SeXmlDocument</ref>, although all nodes suppert Visiting.</para><para>You should never change the document from a callback.</para><para><simplesect kind="see"><para><ref refid="class_se_xml_node_1a0bd5f8ed750944abaf9f0d5018d93ce4" kindref="member">SeXmlNode::Accept()</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8941">
        <label>SeXmlVisitor</label>
        <link refid="class_se_xml_visitor"/>
      </node>
      <node id="8942">
        <label>SeXmlPrinter</label>
        <link refid="class_se_xml_printer"/>
        <childnode refid="8941" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="120" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="119" bodyend="142"/>
    <listofallmembers>
      <member refid="class_se_xml_visitor_1a9fa30ba184552e6b9652cfb482a34e62" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>Visit</name></member>
      <member refid="class_se_xml_visitor_1a3fa49a1fa21e2ebf73b638ae7603e7e3" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>Visit</name></member>
      <member refid="class_se_xml_visitor_1a847b493d2b329891030114e060186a34" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>Visit</name></member>
      <member refid="class_se_xml_visitor_1aeba9805fc4f1b3de2aad22aa5ab5a21b" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>Visit</name></member>
      <member refid="class_se_xml_visitor_1a98938adf237ea2a9a53738e49c6a8f7f" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>VisitEnter</name></member>
      <member refid="class_se_xml_visitor_1a553bc6a3195596352241d2d5822442b7" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>VisitEnter</name></member>
      <member refid="class_se_xml_visitor_1ab2ccd0003863bc10cf2fcc559547b963" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>VisitExit</name></member>
      <member refid="class_se_xml_visitor_1a2a4e6bc0f4753a6c8ee2e621bb6317ad" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>VisitExit</name></member>
      <member refid="class_se_xml_visitor_1aaeaabe5af7a3d7a7027facc5a13dc1c2" prot="public" virt="virtual"><scope>SeXmlVisitor</scope><name>~SeXmlVisitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
