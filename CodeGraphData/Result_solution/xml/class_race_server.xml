<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_race_server" kind="class" prot="public">
    <compoundname>RaceServer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TeNetCall</basecompoundref>
    <basecompoundref refid="class_se_base_server" prot="public" virt="non-virtual">SeBaseServer</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">TeNetCall</basecompoundref>
    <basecompoundref refid="class_se_base_server" prot="public" virt="non-virtual">SeBaseServer</basecompoundref>
    <includes refid="src_2_race_server_8h" local="no">RaceServer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_race_server_1a18f81a0417307628e9183e05b5e79112" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char RaceServer::m_acSend</definition>
        <argsstring>[RACE_SEND_SIZE]</argsstring>
        <name>m_acSend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="108" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="108" bodyend="-1"/>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a349aa3fdb8f1f7fa099a2e3c2be9c63f" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char RaceServer::m_acPraseBuf</definition>
        <argsstring>[SSD_PRASER_SIZE]</argsstring>
        <name>m_acPraseBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="109" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="109" bodyend="-1"/>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a8888a83de6cd0573002e1b346b1889ee" prot="private" static="no" mutable="no">
        <type>DWord</type>
        <definition>DWord RaceServer::m_dwTickCount</definition>
        <argsstring></argsstring>
        <name>m_dwTickCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="110" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" prot="private" static="no" mutable="no">
        <type>DWord</type>
        <definition>DWord RaceServer::m_dwCurTime</definition>
        <argsstring></argsstring>
        <name>m_dwCurTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="111" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="111" bodyend="-1"/>
        <referencedby refid="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" compoundref="src_2_race_server_8cpp" startline="1208" endline="1251">CheckConnect</referencedby>
        <referencedby refid="class_race_server_1a924fcf4c3c662c1dc028129aae9a5f45" compoundref="src_2_race_server_8cpp" startline="1115" endline="1134">CheckFreq</referencedby>
        <referencedby refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</referencedby>
        <referencedby refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" compoundref="src_2_race_server_8cpp" startline="284" endline="316">OnNetAccept</referencedby>
        <referencedby refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" compoundref="src_2_race_server_8cpp" startline="1253" endline="1277">OnPlayerConnected</referencedby>
        <referencedby refid="class_race_server_1a1c42ac7e0125281dc862361d60ba27b4" compoundref="src_2_se_n_r_process_8cpp" startline="7" endline="11">PreProcessNR</referencedby>
        <referencedby refid="class_race_server_1a2f596ad8edeb2676a18fa9d820bc7dd5" compoundref="src_2_se_w_r_process_8cpp" startline="8" endline="12">PreProcessWR</referencedby>
        <referencedby refid="class_race_server_1a0327ec22cd90fde20725c9c6f1242551" compoundref="src_2_se_c_r_process_8cpp" startline="458" endline="485">ProcessCR_RaceRobotLogin</referencedby>
        <referencedby refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" compoundref="src_2_se_c_r_process_8cpp" startline="52" endline="211">ProcessCR_RaceValidate</referencedby>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
        <referencedby refid="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" compoundref="src_2_race_server_8cpp" startline="1152" endline="1170">RegisterToMS</referencedby>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a3a3bff84b94f764521c4d23de3bbebc7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RaceServer::m_bMSReady</definition>
        <argsstring></argsstring>
        <name>m_bMSReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="112" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" compoundref="src_2_race_server_8cpp" startline="1177" endline="1184">IsMSReady</referencedby>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
        <referencedby refid="class_race_server_1ac49797d4eba032d969df83d1c76ddbea" compoundref="src_2_race_server_8cpp" startline="1172" endline="1175">SetMSReady</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" prot="private" static="no" mutable="no">
        <type><ref refid="struct_se_race_config" kindref="compound">SeRaceConfig</ref></type>
        <definition>SeRaceConfig RaceServer::m_kConfig</definition>
        <argsstring></argsstring>
        <name>m_kConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="113" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" compoundref="src_2_race_server_8cpp" startline="1208" endline="1251">CheckConnect</referencedby>
        <referencedby refid="class_race_server_1ac6f65726c94e33f0b6f9bbfa57acde4d" compoundref="src_2_race_server_8cpp" startline="1136" endline="1150">ConnectToMS</referencedby>
        <referencedby refid="class_race_server_1a171d5bec27c5a1955ffd46351fe5ab0b" compoundref="src_2_race_server_8cpp" startline="1311" endline="1333">DelConnectByID</referencedby>
        <referencedby refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" compoundref="src_2_race_server_8cpp" startline="1196" endline="1206">DisconnectPlayer</referencedby>
        <referencedby refid="class_race_server_1ac742e033d875f5d171d463a8892a151c" compoundref="src_2_se_race_svr_other_8cpp" startline="63" endline="66">GetAreaID</referencedby>
        <referencedby refid="class_race_server_1a9eb0e365d5a6450ae5894e53f91d4d9f" compoundref="src_2_se_race_svr_other_8cpp" startline="3" endline="6">GetDebugLevel</referencedby>
        <referencedby refid="class_race_server_1aa26ceba287df3840748965362ddfc03c" compoundref="src_2_se_race_svr_other_8cpp" startline="23" endline="26">GetGameLogFilePath</referencedby>
        <referencedby refid="class_race_server_1a5a1835ed84eb2e50c4a9d1fa203ac928" compoundref="src_2_se_race_svr_other_8cpp" startline="38" endline="41">GetMaxPacketSize</referencedby>
        <referencedby refid="class_race_server_1a326f1a2926dde54ccf7d43a8a3bfcbed" compoundref="src_2_se_race_svr_other_8cpp" startline="43" endline="46">GetMaxReconTime</referencedby>
        <referencedby refid="class_race_server_1a788a00bd15f61a8dadb074c05658b108" compoundref="src_2_race_server_8cpp" startline="1191" endline="1194">GetRaceConfig</referencedby>
        <referencedby refid="class_race_server_1a8e0a4da2c1a515ac9eeb1634fccc2c06" compoundref="src_2_se_race_svr_other_8cpp" startline="13" endline="21">GetRacePackTime</referencedby>
        <referencedby refid="class_race_server_1ae7388ef7da3a30046cf017d40e355669" compoundref="src_2_se_race_svr_other_8cpp" startline="33" endline="36">GetRacePrintTime</referencedby>
        <referencedby refid="class_race_server_1a8132622c0568a827ae4c490478b52cff" compoundref="src_2_se_race_svr_other_8cpp" startline="58" endline="61">GetServerID</referencedby>
        <referencedby refid="class_race_server_1a2fb70d03c78c196a8d0a59c7a3a93277" compoundref="src_2_se_race_svr_other_8cpp" startline="48" endline="51">GetServerModePackTime</referencedby>
        <referencedby refid="class_race_server_1a6503e33ca41e829ab6338083b73f6af4" compoundref="src_2_race_server_8cpp" startline="927" endline="973">InitializeNet</referencedby>
        <referencedby refid="class_race_server_1a65a33b72bda3aa9083d8c91e6879501c" compoundref="src_2_se_race_svr_other_8cpp" startline="53" endline="56">IsTestRobotMode</referencedby>
        <referencedby refid="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" compoundref="src_2_race_server_8cpp" startline="588" endline="614">LoadConfig</referencedby>
        <referencedby refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" compoundref="src_2_race_server_8cpp" startline="284" endline="316">OnNetAccept</referencedby>
        <referencedby refid="class_race_server_1a1cfd0d7b06dc6972eddd99e414101ac8" compoundref="src_2_race_server_8cpp" startline="258" endline="282">OnNetConnected</referencedby>
        <referencedby refid="class_race_server_1a915457d69cfd32d5db80be534beeeec2" compoundref="src_2_race_server_8cpp" startline="490" endline="515">OnNetUdpAccept</referencedby>
        <referencedby refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" compoundref="src_2_race_server_8cpp" startline="1253" endline="1277">OnPlayerConnected</referencedby>
        <referencedby refid="class_race_server_1ab40781b3f26bee9ecf2847769400b3b6" compoundref="src_2_se_m_r_process_8cpp" startline="21" endline="54">ProcessMR_RegisterRet</referencedby>
        <referencedby refid="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" compoundref="src_2_race_server_8cpp" startline="1152" endline="1170">RegisterToMS</referencedby>
        <referencedby refid="class_race_server_1ad98e4b64bed4e582131dd353ae56f74e" compoundref="src_2_race_server_8cpp" startline="1358" endline="1386">ReLoadServerAddr</referencedby>
        <referencedby refid="class_race_server_1a5d27bdd027268d10784e20f5a7507805" compoundref="src_2_se_r_c_send_8cpp" startline="7" endline="58">SendRCData</referencedby>
        <referencedby refid="class_race_server_1a08814d99b1b3da887b982485a54a2f3d" compoundref="src_2_se_race_svr_other_8cpp" startline="8" endline="11">SetDebugLevel</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a2153b24b298ed79b71ebf9f45d832540" prot="private" static="no" mutable="no">
        <type><ref refid="class_se_rand_num" kindref="compound">SeRandNum</ref></type>
        <definition>SeRandNum RaceServer::m_kRandNum</definition>
        <argsstring></argsstring>
        <name>m_kRandNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="114" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="114" bodyend="-1"/>
        <referencedby refid="class_race_server_1ada98d505789737be58f73923400943b3" compoundref="src_2_se_race_svr_other_8cpp" startline="73" endline="76">RandInt</referencedby>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1af734c61940c3f436a681ab8726d54ce7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int RaceServer::m_iRegisterCount</definition>
        <argsstring></argsstring>
        <name>m_iRegisterCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="115" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="115" bodyend="-1"/>
        <referencedby refid="class_race_server_1ab40781b3f26bee9ecf2847769400b3b6" compoundref="src_2_se_m_r_process_8cpp" startline="21" endline="54">ProcessMR_RegisterRet</referencedby>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
        <referencedby refid="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" compoundref="src_2_race_server_8cpp" startline="1152" endline="1170">RegisterToMS</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" prot="private" static="no" mutable="no">
        <type>TeNetMgr</type>
        <definition>TeNetMgr RaceServer::m_kNetMgr</definition>
        <argsstring></argsstring>
        <name>m_kNetMgr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="118" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="118" bodyend="-1"/>
        <referencedby refid="class_race_server_1ac6f65726c94e33f0b6f9bbfa57acde4d" compoundref="src_2_race_server_8cpp" startline="1136" endline="1150">ConnectToMS</referencedby>
        <referencedby refid="class_race_server_1a171d5bec27c5a1955ffd46351fe5ab0b" compoundref="src_2_race_server_8cpp" startline="1311" endline="1333">DelConnectByID</referencedby>
        <referencedby refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" compoundref="src_2_race_server_8cpp" startline="1196" endline="1206">DisconnectPlayer</referencedby>
        <referencedby refid="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" compoundref="src_2_race_server_8cpp" startline="218" endline="239">Finialize</referencedby>
        <referencedby refid="class_race_server_1a6503e33ca41e829ab6338083b73f6af4" compoundref="src_2_race_server_8cpp" startline="927" endline="973">InitializeNet</referencedby>
        <referencedby refid="class_race_server_1a7e66b0db1cc4963931ab50079fae9d09" compoundref="src_2_race_server_8cpp" startline="975" endline="1019">InitializeNetEx</referencedby>
        <referencedby refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" compoundref="src_2_race_server_8cpp" startline="284" endline="316">OnNetAccept</referencedby>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
        <referencedby refid="class_race_server_1ad98e4b64bed4e582131dd353ae56f74e" compoundref="src_2_race_server_8cpp" startline="1358" endline="1386">ReLoadServerAddr</referencedby>
        <referencedby refid="class_race_server_1a5d27bdd027268d10784e20f5a7507805" compoundref="src_2_se_r_c_send_8cpp" startline="7" endline="58">SendRCData</referencedby>
        <referencedby refid="class_race_server_1ac3544c0db3d315a02e92be55310e23df" compoundref="src_2_se_r_m_send_8cpp" startline="7" endline="23">SendRMData</referencedby>
        <referencedby refid="class_race_server_1a45c90353d4656860e91362d9cf861ed6" compoundref="src_2_se_r_n_send_8cpp" startline="7" endline="22">SendRNData</referencedby>
        <referencedby refid="class_race_server_1aa9402144cbc9f4acd9bb537a96bc0ce8" compoundref="src_2_se_r_w_c_s_send_8cpp" startline="7" endline="10">SendRWCSData</referencedby>
        <referencedby refid="class_race_server_1a6f197fd5a5d11ddb22deb4c8c8f21786" compoundref="src_2_se_r_w_send_8cpp" startline="7" endline="22">SendRWData</referencedby>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
        <referencedby refid="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" compoundref="src_2_race_server_8cpp" startline="1412" endline="1438">UpdateMSHeartPackage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" prot="private" static="no" mutable="no">
        <type>TeUdpMgr</type>
        <definition>TeUdpMgr RaceServer::m_kUdpMgr</definition>
        <argsstring></argsstring>
        <name>m_kUdpMgr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="119" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="119" bodyend="-1"/>
        <referencedby refid="class_race_server_1a171d5bec27c5a1955ffd46351fe5ab0b" compoundref="src_2_race_server_8cpp" startline="1311" endline="1333">DelConnectByID</referencedby>
        <referencedby refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" compoundref="src_2_race_server_8cpp" startline="1196" endline="1206">DisconnectPlayer</referencedby>
        <referencedby refid="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" compoundref="src_2_race_server_8cpp" startline="218" endline="239">Finialize</referencedby>
        <referencedby refid="class_race_server_1a6503e33ca41e829ab6338083b73f6af4" compoundref="src_2_race_server_8cpp" startline="927" endline="973">InitializeNet</referencedby>
        <referencedby refid="class_race_server_1a915457d69cfd32d5db80be534beeeec2" compoundref="src_2_race_server_8cpp" startline="490" endline="515">OnNetUdpAccept</referencedby>
        <referencedby refid="class_race_server_1a5d27bdd027268d10784e20f5a7507805" compoundref="src_2_se_r_c_send_8cpp" startline="7" endline="58">SendRCData</referencedby>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" prot="private" static="no" mutable="no">
        <type><ref refid="struct_se_server_data" kindref="compound">SeServerData</ref></type>
        <definition>SeServerData RaceServer::m_kMSData</definition>
        <argsstring></argsstring>
        <name>m_kMSData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="120" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="120" bodyend="-1"/>
        <referencedby refid="class_race_server_1ac6f65726c94e33f0b6f9bbfa57acde4d" compoundref="src_2_race_server_8cpp" startline="1136" endline="1150">ConnectToMS</referencedby>
        <referencedby refid="class_race_server_1a5232b4e0b931f53fa7fceca6f226b6ee" compoundref="src_2_race_server_8cpp" startline="1186" endline="1189">GetMSID</referencedby>
        <referencedby refid="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" compoundref="src_2_race_server_8cpp" startline="1177" endline="1184">IsMSReady</referencedby>
        <referencedby refid="class_race_server_1a1cfd0d7b06dc6972eddd99e414101ac8" compoundref="src_2_race_server_8cpp" startline="258" endline="282">OnNetConnected</referencedby>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
        <referencedby refid="class_race_server_1a84bf84fd9809f77ef3c287a6f93e2826" compoundref="src_2_se_m_r_process_8cpp" startline="56" endline="59">ProcessMR_HeartPackageRet</referencedby>
        <referencedby refid="class_race_server_1ab40781b3f26bee9ecf2847769400b3b6" compoundref="src_2_se_m_r_process_8cpp" startline="21" endline="54">ProcessMR_RegisterRet</referencedby>
        <referencedby refid="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" compoundref="src_2_race_server_8cpp" startline="1152" endline="1170">RegisterToMS</referencedby>
        <referencedby refid="class_race_server_1ad98e4b64bed4e582131dd353ae56f74e" compoundref="src_2_race_server_8cpp" startline="1358" endline="1386">ReLoadServerAddr</referencedby>
        <referencedby refid="class_race_server_1ac3544c0db3d315a02e92be55310e23df" compoundref="src_2_se_r_m_send_8cpp" startline="7" endline="23">SendRMData</referencedby>
        <referencedby refid="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" compoundref="src_2_race_server_8cpp" startline="1412" endline="1438">UpdateMSHeartPackage</referencedby>
        <referencedby refid="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" compoundref="src_2_race_server_8cpp" startline="1094" endline="1113">UpdateMSState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a4f4c0a3aa486d64460330802db1e287e" prot="private" static="no" mutable="no">
        <type><ref refid="src_2_race_server_def_8h_1ac0e2859a83c31a17e73dda4ee321dd5c" kindref="member">MapWCSConnect</ref></type>
        <definition>MapWCSConnect RaceServer::m_kWCSConnect</definition>
        <argsstring></argsstring>
        <name>m_kWCSConnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="121" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="121" bodyend="-1"/>
        <referencedby refid="class_race_server_1ad8a8ba8e58f5b47e50540ec529470fa2" compoundref="src_2_race_server_8h" startline="149" endline="152">GetWCSConnectMap</referencedby>
        <referencedby refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" compoundref="src_2_race_server_8cpp" startline="284" endline="316">OnNetAccept</referencedby>
        <referencedby refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" compoundref="src_2_race_server_8cpp" startline="395" endline="463">OnNetDisconnect</referencedby>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" prot="private" static="no" mutable="no">
        <type><ref refid="struct_se_virt_conn" kindref="compound">SeVirtConn</ref> *</type>
        <definition>SeVirtConn * RaceServer::m_pkWSConn</definition>
        <argsstring></argsstring>
        <name>m_pkWSConn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="122" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="122" bodyend="-1"/>
        <referencedby refid="class_race_server_1a7e66b0db1cc4963931ab50079fae9d09" compoundref="src_2_race_server_8cpp" startline="975" endline="1019">InitializeNetEx</referencedby>
        <referencedby refid="class_race_server_1a1cfd0d7b06dc6972eddd99e414101ac8" compoundref="src_2_race_server_8cpp" startline="258" endline="282">OnNetConnected</referencedby>
        <referencedby refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" compoundref="src_2_race_server_8cpp" startline="395" endline="463">OnNetDisconnect</referencedby>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
        <referencedby refid="class_race_server_1a2f596ad8edeb2676a18fa9d820bc7dd5" compoundref="src_2_se_w_r_process_8cpp" startline="8" endline="12">PreProcessWR</referencedby>
        <referencedby refid="class_race_server_1a6bb96643b45811c92173759fc5ed6a6a" compoundref="src_2_se_w_r_process_8cpp" startline="14" endline="28">ProcessWR_RegisterRet</referencedby>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
        <referencedby refid="class_race_server_1a6f197fd5a5d11ddb22deb4c8c8f21786" compoundref="src_2_se_r_w_send_8cpp" startline="7" endline="22">SendRWData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a2b315093a42944ffd320f0d03cde512d" prot="private" static="no" mutable="no">
        <type><ref refid="struct_se_virt_conn" kindref="compound">SeVirtConn</ref> *</type>
        <definition>SeVirtConn * RaceServer::m_pkNSConn</definition>
        <argsstring></argsstring>
        <name>m_pkNSConn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="123" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="123" bodyend="-1"/>
        <referencedby refid="class_race_server_1a7e66b0db1cc4963931ab50079fae9d09" compoundref="src_2_race_server_8cpp" startline="975" endline="1019">InitializeNetEx</referencedby>
        <referencedby refid="class_race_server_1a1cfd0d7b06dc6972eddd99e414101ac8" compoundref="src_2_race_server_8cpp" startline="258" endline="282">OnNetConnected</referencedby>
        <referencedby refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" compoundref="src_2_race_server_8cpp" startline="395" endline="463">OnNetDisconnect</referencedby>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
        <referencedby refid="class_race_server_1a1c42ac7e0125281dc862361d60ba27b4" compoundref="src_2_se_n_r_process_8cpp" startline="7" endline="11">PreProcessNR</referencedby>
        <referencedby refid="class_race_server_1a3e8c21430941f2620c53c25ac804245a" compoundref="src_2_se_n_r_process_8cpp" startline="12" endline="26">ProcessNR_RegisterRet</referencedby>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
        <referencedby refid="class_race_server_1a45c90353d4656860e91362d9cf861ed6" compoundref="src_2_se_r_n_send_8cpp" startline="7" endline="22">SendRNData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a040a147adb097cc9e71923519017ef4b" prot="private" static="no" mutable="no">
        <type><ref refid="_src_2_match_server_def_8h_1a4932e253766909a605e124d24249d8d2" kindref="member">MapAllConnect</ref></type>
        <definition>MapAllConnect RaceServer::m_kAllConnect</definition>
        <argsstring></argsstring>
        <name>m_kAllConnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="126" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="126" bodyend="-1"/>
        <referencedby refid="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" compoundref="src_2_race_server_8cpp" startline="1208" endline="1251">CheckConnect</referencedby>
        <referencedby refid="class_race_server_1a924fcf4c3c662c1dc028129aae9a5f45" compoundref="src_2_race_server_8cpp" startline="1115" endline="1134">CheckFreq</referencedby>
        <referencedby refid="class_race_server_1af6b7d3e4ec57890e9d02aedcf6b135c0" compoundref="src_2_race_server_8cpp" startline="1289" endline="1298">ClearAllPlayerConn</referencedby>
        <referencedby refid="class_race_server_1a171d5bec27c5a1955ffd46351fe5ab0b" compoundref="src_2_race_server_8cpp" startline="1311" endline="1333">DelConnectByID</referencedby>
        <referencedby refid="class_race_server_1a168a19b0f8e671d9f95604a84728547a" compoundref="src_2_race_server_8cpp" startline="1345" endline="1356">GetConnectByID</referencedby>
        <referencedby refid="class_race_server_1a39397dd580cff537f231ae1537cd2e33" compoundref="src_2_race_server_8cpp" startline="1335" endline="1343">GetConnectBySock</referencedby>
        <referencedby refid="class_race_server_1a646c8d5e3d5695db7957b6e302c3c3e7" compoundref="src_2_race_server_8cpp" startline="1306" endline="1309">GetConnectNum</referencedby>
        <referencedby refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" compoundref="src_2_race_server_8cpp" startline="284" endline="316">OnNetAccept</referencedby>
        <referencedby refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" compoundref="src_2_race_server_8cpp" startline="395" endline="463">OnNetDisconnect</referencedby>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
        <referencedby refid="class_race_server_1a915457d69cfd32d5db80be534beeeec2" compoundref="src_2_race_server_8cpp" startline="490" endline="515">OnNetUdpAccept</referencedby>
        <referencedby refid="class_race_server_1af108d3fdc437f3f84b1fbb5f39b059b5" compoundref="src_2_race_server_8cpp" startline="544" endline="586">OnNetUdpDisconnect</referencedby>
        <referencedby refid="class_race_server_1a72aff476ef33f2168f6f60651a59cb0e" compoundref="src_2_race_server_8cpp" startline="517" endline="542">OnNetUdpRecv</referencedby>
        <referencedby refid="class_race_server_1a5d709a99a45f4cabf057a7c49fa22e0b" compoundref="src_2_race_server_8cpp" startline="1279" endline="1287">OnPlayerDisconnect</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a157a410e9c3094696baa76bfcc6ecb41" prot="private" static="no" mutable="no">
        <type>DWord</type>
        <definition>DWord RaceServer::m_dwFreqTime</definition>
        <argsstring></argsstring>
        <name>m_dwFreqTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="127" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="127" bodyend="-1"/>
        <referencedby refid="class_race_server_1a924fcf4c3c662c1dc028129aae9a5f45" compoundref="src_2_race_server_8cpp" startline="1115" endline="1134">CheckFreq</referencedby>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1adeb19bd97b6c95a9601128046d4597ae" prot="private" static="no" mutable="no">
        <type><ref refid="src_2_race_server_def_8h_1aee675e55de3eef00f45d19f300ed318c" kindref="member">Map2WaitRobot</ref></type>
        <definition>Map2WaitRobot RaceServer::m_kWaitRobot</definition>
        <argsstring></argsstring>
        <name>m_kWaitRobot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="131" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="131" bodyend="-1"/>
        <referencedby refid="class_race_server_1a5eecf4d2a6a3b6eb694aef835621f05e" compoundref="src_2_se_race_svr_other_8cpp" startline="143" endline="162">DelWaitRobot</referencedby>
        <referencedby refid="class_race_server_1a0327ec22cd90fde20725c9c6f1242551" compoundref="src_2_se_c_r_process_8cpp" startline="458" endline="485">ProcessCR_RaceRobotLogin</referencedby>
        <referencedby refid="class_race_server_1a3aef2a30ec9b8184aaeb6b3edb1237f8" compoundref="src_2_se_race_svr_other_8cpp" startline="164" endline="209">UpdateWaitRobot</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a18f7983c50d14a59b70cca1f104ccebc" prot="private" static="no" mutable="no">
        <type><ref refid="src_2_race_server_def_8h_1ae1eb692732c2491d79861a7aab88bb74" kindref="member">QInt</ref></type>
        <definition>QInt RaceServer::m_akThreadTime</definition>
        <argsstring>[Stat_TIME_THREAD_NUM]</argsstring>
        <name>m_akThreadTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="134" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="134" bodyend="-1"/>
        <referencedby refid="class_race_server_1ab3d920d30fb6d3c8e76148fc2b1bef0a" compoundref="src_2_se_race_service_process_8cpp" startline="155" endline="178">ProcessRC_ThreadOverTime</referencedby>
        <referencedby refid="class_race_server_1a3692dac1f1a18f397de386f4f7a98684" compoundref="src_2_race_server_8cpp" startline="1473" endline="1521">UpdateSaveThreadUpdateTime</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a63863da92e46f041b8505cd3755ad32a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int RaceServer::m_iRaceServiceNum</definition>
        <argsstring></argsstring>
        <name>m_iRaceServiceNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="137" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="137" bodyend="-1"/>
        <referencedby refid="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" compoundref="src_2_race_server_8cpp" startline="218" endline="239">Finialize</referencedby>
        <referencedby refid="class_race_server_1a7eaaaf0e1bb43533568788c11939627f" compoundref="src_2_se_race_svr_other_8cpp" startline="28" endline="31">GetRaceServiceNum</referencedby>
        <referencedby refid="class_race_server_1a0c77af41b0b3b16bf8809597d30e123e" compoundref="src_2_race_server_8cpp" startline="1028" endline="1051">InitializeRaceService</referencedby>
        <referencedby refid="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" compoundref="src_2_race_server_8cpp" startline="621" endline="925">LoadRSTempConfig</referencedby>
        <referencedby refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</referencedby>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1ad05c3786c53feb3ab6356db773445310" prot="private" static="no" mutable="no">
        <type><ref refid="class_race_service" kindref="compound">RaceService</ref> *</type>
        <definition>RaceService * RaceServer::m_pakRaceService</definition>
        <argsstring></argsstring>
        <name>m_pakRaceService</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="138" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="138" bodyend="-1"/>
        <referencedby refid="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" compoundref="src_2_race_server_8cpp" startline="218" endline="239">Finialize</referencedby>
        <referencedby refid="class_race_server_1a0c77af41b0b3b16bf8809597d30e123e" compoundref="src_2_race_server_8cpp" startline="1028" endline="1051">InitializeRaceService</referencedby>
        <referencedby refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</referencedby>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1adb8735c836a598c39f601078fe100240" prot="private" static="no" mutable="no">
        <type><ref refid="class_se_thread_msg_mgr" kindref="compound">SeThreadMsgMgr</ref></type>
        <definition>SeThreadMsgMgr RaceServer::m_kThreadMsgMgr</definition>
        <argsstring></argsstring>
        <name>m_kThreadMsgMgr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="140" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="140" bodyend="-1"/>
        <referencedby refid="class_race_server_1a0c77af41b0b3b16bf8809597d30e123e" compoundref="src_2_race_server_8cpp" startline="1028" endline="1051">InitializeRaceService</referencedby>
        <referencedby refid="class_race_server_1a51639bd7785f6dd43a8f31bc2256dc46" compoundref="src_2_se_race_svr_other_8cpp" startline="288" endline="291">PushRSMsg</referencedby>
        <referencedby refid="class_race_server_1a1d04e77d743cd19eb6ac6b20f09bc855" compoundref="src_2_race_server_8cpp" startline="1388" endline="1396">UpdateRSMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a52e5e5c638506c53e51dcdad1636b7be" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int RaceServer::m_iRobotRaceNum</definition>
        <argsstring></argsstring>
        <name>m_iRobotRaceNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="142" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="142" bodyend="-1"/>
        <referencedby refid="class_race_server_1a66b1d68ffc570732242915bc09651c27" compoundref="src_2_race_server_8cpp" startline="74" endline="132">Initialize</referencedby>
        <referencedby refid="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" compoundref="src_2_race_server_8cpp" startline="621" endline="925">LoadRSTempConfig</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1a2080e7e14eec53f1995f75fed071e72f" prot="private" static="no" mutable="no">
        <type><ref refid="class_se_race_record_save_thread" kindref="compound">SeRaceRecordSaveThread</ref> *</type>
        <definition>SeRaceRecordSaveThread * RaceServer::m_pkSaveRecordThread</definition>
        <argsstring></argsstring>
        <name>m_pkSaveRecordThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="144" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="144" bodyend="-1"/>
        <referencedby refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" compoundref="src_2_race_server_8cpp" startline="53" endline="68">RaceServer</referencedby>
        <referencedby refid="class_race_server_1acfd8886b9d300d53a533746a67b750e8" compoundref="src_2_race_server_8cpp" startline="1531" endline="1539">RaceThreadFinialize</referencedby>
        <referencedby refid="class_race_server_1a2303f7152794a0be3a6c6639b7373dba" compoundref="src_2_race_server_8cpp" startline="1523" endline="1529">RaceThreadInitialize</referencedby>
        <referencedby refid="class_race_server_1ae92da288f2c535c4c897c82381e205cd" compoundref="src_2_race_server_8cpp" startline="1541" endline="1549">RaceThreadUpdate</referencedby>
        <referencedby refid="class_race_server_1a09463facb5a9bebcc97f7d4b2c0945d2" compoundref="src_2_race_server_8cpp" startline="210" endline="216">SaveRecord</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_race_server_1aa7eff4248424ec791546a7d1d9209ea2" prot="private" static="no" mutable="no">
        <type><ref refid="_race_server_2src_2_se_race_mgr_def_8h_1aeed613093b51c809e7e1cf84a9a88cd1" kindref="member">TWCSViewArray</ref></type>
        <definition>TWCSViewArray RaceServer::m_vWCSView</definition>
        <argsstring></argsstring>
        <name>m_vWCSView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="145" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="145" bodyend="-1"/>
        <referencedby refid="class_race_server_1a63cbffba0462486cde6e03f6efeecf76" compoundref="src_2_race_server_8h" startline="80" endline="80">GetWCSView</referencedby>
        <referencedby refid="class_race_server_1a5d5e0df8480369231da14cca6e9e20d2" compoundref="src_2_race_server_8cpp" startline="465" endline="488">OnWCSDisconnect</referencedby>
        <referencedby refid="class_race_server_1ac9bcdeb502380af98bff7c7234e0aff6" compoundref="src_2_se_w_c_s_r_process_8cpp" startline="12" endline="42">ProcessWCSR_Register</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RaceServer::RaceServer</definition>
        <argsstring>(void)</argsstring>
        <name>RaceServer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="25" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="53" bodyend="68"/>
        <references refid="class_race_server_1a349aa3fdb8f1f7fa099a2e3c2be9c63f" compoundref="src_2_race_server_8h" startline="109">m_acPraseBuf</references>
        <references refid="class_race_server_1a18f81a0417307628e9183e05b5e79112" compoundref="src_2_race_server_8h" startline="108">m_acSend</references>
        <references refid="class_race_server_1a3a3bff84b94f764521c4d23de3bbebc7" compoundref="src_2_race_server_8h" startline="112">m_bMSReady</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1a157a410e9c3094696baa76bfcc6ecb41" compoundref="src_2_race_server_8h" startline="127">m_dwFreqTime</references>
        <references refid="class_race_server_1a8888a83de6cd0573002e1b346b1889ee" compoundref="src_2_race_server_8h" startline="110">m_dwTickCount</references>
        <references refid="class_race_server_1a63863da92e46f041b8505cd3755ad32a" compoundref="src_2_race_server_8h" startline="137">m_iRaceServiceNum</references>
        <references refid="class_race_server_1af734c61940c3f436a681ab8726d54ce7" compoundref="src_2_race_server_8h" startline="115">m_iRegisterCount</references>
        <references refid="class_race_server_1ad05c3786c53feb3ab6356db773445310" compoundref="src_2_race_server_8h" startline="138">m_pakRaceService</references>
        <references refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" compoundref="src_2_race_server_8h" startline="123">m_pkNSConn</references>
        <references refid="class_race_server_1a2080e7e14eec53f1995f75fed071e72f" compoundref="src_2_race_server_8h" startline="144">m_pkSaveRecordThread</references>
        <references refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" compoundref="src_2_race_server_8h" startline="122">m_pkWSConn</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae4fc1e3b7856572c43c1160c9a6f8a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RaceServer::~RaceServer</definition>
        <argsstring>(void)</argsstring>
        <name>~RaceServer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="26" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a66b1d68ffc570732242915bc09651c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool RaceServer::Initialize</definition>
        <argsstring>(void)</argsstring>
        <name>Initialize</name>
        <reimplements refid="class_se_base_server_1a6bb58d0849eb78ffd85d1fcad67d21b2">Initialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="28" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="74" bodyend="132"/>
        <references refid="class_se_race_mgr_1aeec6e7ffa9c8414f904f53d4509dde0e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1775" endline="1908">SeRaceMgr::CreateRobotRace</references>
        <references refid="_se_file_log_8cpp_1abb047e4624b8c6795da25cd3162cea07" compoundref="_se_file_log_8cpp" startline="357">g_kFileLog</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="class_se_race_mgr_1ad8a3196595fc71a878194e2a199f368c" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="110" endline="115">SeRaceMgr::Initialize</references>
        <references refid="class_race_server_1a6503e33ca41e829ab6338083b73f6af4" compoundref="src_2_race_server_8cpp" startline="927" endline="973">InitializeNet</references>
        <references refid="class_race_server_1a7e66b0db1cc4963931ab50079fae9d09" compoundref="src_2_race_server_8cpp" startline="975" endline="1019">InitializeNetEx</references>
        <references refid="class_race_server_1a0c77af41b0b3b16bf8809597d30e123e" compoundref="src_2_race_server_8cpp" startline="1028" endline="1051">InitializeRaceService</references>
        <references refid="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" compoundref="src_2_race_server_8cpp" startline="588" endline="614">LoadConfig</references>
        <references refid="class_table_mgr_1ae1ceeb5a4a6212a8497ef7dd92f87885" compoundref="_table_mgr_8h" startline="79" endline="132">TableMgr::LoadTable</references>
        <references refid="class_race_server_1a52e5e5c638506c53e51dcdad1636b7be" compoundref="src_2_race_server_8h" startline="142">m_iRobotRaceNum</references>
        <references refid="class_race_server_1a2303f7152794a0be3a6c6639b7373dba" compoundref="src_2_race_server_8cpp" startline="1523" endline="1529">RaceThreadInitialize</references>
        <references refid="_se_file_log_8h_1a7c727baeafcf8b1ef6ca798fad4d738c" compoundref="_se_file_log_8h" startline="86">SeLogHideTime</references>
        <references refid="class_se_file_log_1a342cb7ea909bb981a4412ce751c72c9f" compoundref="_se_file_log_8cpp" startline="261" endline="264">SeFileLog::SetLogConsole</references>
        <references refid="class_se_race_mgr_1af9bdaa8e5dbcee175c8e38b4bbb47f8b" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1762" endline="1773">SeRaceMgr::StartRobotRace</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::Update</definition>
        <argsstring>(void)</argsstring>
        <name>Update</name>
        <reimplements refid="class_se_base_server_1a07a0cf8e7406a136e92dcf88875cfd77">Update</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="29" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="134" bodyend="208"/>
        <references refid="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" compoundref="src_2_race_server_8cpp" startline="1208" endline="1251">CheckConnect</references>
        <references refid="class_race_server_1a924fcf4c3c662c1dc028129aae9a5f45" compoundref="src_2_race_server_8cpp" startline="1115" endline="1134">CheckFreq</references>
        <references refid="src_2_se_recon_mgr_8cpp_1ac9809af7eb2b9209c6973a9c5f11389a" compoundref="src_2_se_recon_mgr_8cpp" startline="7">g_kMatchReconMgr</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="_se_virt_conn_mgr_8cpp_1aa8e9d5beed961f4e26b9cadd49603980" compoundref="_se_virt_conn_mgr_8cpp" startline="7">g_kVirtConnMgr</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1a8888a83de6cd0573002e1b346b1889ee" compoundref="src_2_race_server_8h" startline="110">m_dwTickCount</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a2153b24b298ed79b71ebf9f45d832540" compoundref="src_2_race_server_8h" startline="114">m_kRandNum</references>
        <references refid="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" compoundref="src_2_race_server_8h" startline="119">m_kUdpMgr</references>
        <references refid="class_race_server_1ae92da288f2c535c4c897c82381e205cd" compoundref="src_2_race_server_8cpp" startline="1541" endline="1549">RaceThreadUpdate</references>
        <references refid="class_se_rand_num_1a8007e7959093d37680c20767a795b343" compoundref="_se_rand_num_8cpp" startline="59" endline="83">SeRandNum::RandInt</references>
        <references refid="class_se_race_room_mgr_1a0f4e7aca864545340ce738b822c454b2" compoundref="src_2_se_race_room_mgr_8cpp" startline="111" endline="122">SeRaceRoomMgr::Update</references>
        <references refid="class_se_match_recon_mgr_1aea63f9cf7ed122c6d46fb413743b9cd7" compoundref="src_2_se_recon_mgr_8cpp" startline="34" endline="98">SeMatchReconMgr::Update</references>
        <references refid="class_se_race_mgr_1aafd553791a7d76ad61d8e54ea226f84c" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="117" endline="133">SeRaceMgr::Update</references>
        <references refid="class_se_virt_conn_mgr_1a1a2056beaab510c633febd91090592ee" compoundref="_se_virt_conn_mgr_8cpp" startline="37" endline="53">SeVirtConnMgr::Update</references>
        <references refid="class_race_server_1a2a40385bfddbe46765ad5f1bd1e0f870" compoundref="src_2_race_server_8cpp" startline="1398" endline="1410">UpdateHeartPackage</references>
        <references refid="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" compoundref="src_2_race_server_8cpp" startline="1094" endline="1113">UpdateMSState</references>
        <references refid="class_race_server_1aa09b74ef284ae258769b65ed2ecc07e3" compoundref="src_2_race_server_8cpp" startline="1440" endline="1454">UpdateRSConfig</references>
        <references refid="class_race_server_1a1d04e77d743cd19eb6ac6b20f09bc855" compoundref="src_2_race_server_8cpp" startline="1388" endline="1396">UpdateRSMsg</references>
        <references refid="class_race_server_1a3692dac1f1a18f397de386f4f7a98684" compoundref="src_2_race_server_8cpp" startline="1473" endline="1521">UpdateSaveThreadUpdateTime</references>
        <references refid="class_race_server_1a3aef2a30ec9b8184aaeb6b3edb1237f8" compoundref="src_2_se_race_svr_other_8cpp" startline="164" endline="209">UpdateWaitRobot</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::Finialize</definition>
        <argsstring>(void)</argsstring>
        <name>Finialize</name>
        <reimplements refid="class_se_base_server_1af5e58035250986682d2810757069233b">Finialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="30" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="218" bodyend="239"/>
        <references refid="class_race_service_1a45c4bf4771b10ebc22ded6c3f8905c4b" compoundref="src_2_race_service_8cpp" startline="127" endline="133">RaceService::Finialize</references>
        <references refid="class_race_server_1a63863da92e46f041b8505cd3755ad32a" compoundref="src_2_race_server_8h" startline="137">m_iRaceServiceNum</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" compoundref="src_2_race_server_8h" startline="119">m_kUdpMgr</references>
        <references refid="class_race_server_1ad05c3786c53feb3ab6356db773445310" compoundref="src_2_race_server_8h" startline="138">m_pakRaceService</references>
        <references refid="class_race_server_1acfd8886b9d300d53a533746a67b750e8" compoundref="src_2_race_server_8cpp" startline="1531" endline="1539">RaceThreadFinialize</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a54cb7d1172fd8b14c335874dc954ebe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::ShowConsoleTitle</definition>
        <argsstring>(int iDTime)</argsstring>
        <name>ShowConsoleTitle</name>
        <reimplements refid="class_se_base_server_1aab49ca32b654abc948c4d2b163746591">ShowConsoleTitle</reimplements>
        <param>
          <type>int</type>
          <declname>iDTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="31" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="241" bodyend="256"/>
        <references refid="class_race_server_1a646c8d5e3d5695db7957b6e302c3c3e7" compoundref="src_2_race_server_8cpp" startline="1306" endline="1309">GetConnectNum</references>
        <references refid="_se_tool_8h_1ada81d4ae5d39c42af0a02b45f4a6f715" compoundref="_se_tool_8h" startline="66">GetID2Str</references>
        <references refid="class_race_server_1a8132622c0568a827ae4c490478b52cff" compoundref="src_2_se_race_svr_other_8cpp" startline="58" endline="61">GetServerID</references>
        <references refid="class_race_server_1aae7e2004f6045cb4ad87e2809a853551" compoundref="src_2_race_server_8cpp" startline="1300" endline="1304">GetServerRunState</references>
        <references refid="_se_server_tool_8cpp_1ad2735ec90511f0d6ec1535cf448709b8" compoundref="_se_server_tool_8cpp" startline="31" endline="64">SPrintf</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a83c381dd5580152733352009687c5b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_se_server_main_def_8h_1a6856d2f3d34c3913f55b991c0d63e89d" kindref="member">SeServerActionResult</ref></type>
        <definition>SeServerActionResult RaceServer::ExecuteAction</definition>
        <argsstring>(SeServerActionIndex eActionIndex)</argsstring>
        <name>ExecuteAction</name>
        <reimplements refid="class_se_base_server_1ab4a7f5d600833220b84b2c1e143f0605">ExecuteAction</reimplements>
        <param>
          <type><ref refid="_se_server_main_def_8h_1abbd63e694a43e9bc292e0e0b55ae79bd" kindref="member">SeServerActionIndex</ref></type>
          <declname>eActionIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="32" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/Main.cpp" bodystart="5" bodyend="50"/>
        <references refid="_se_server_main_def_8h_1a6856d2f3d34c3913f55b991c0d63e89dac7f0df5db209cf47b037a31ee2946d0c" compoundref="_se_server_main_def_8h" startline="8">AER_OK</references>
        <references refid="_se_server_main_def_8h_1abbd63e694a43e9bc292e0e0b55ae79bdab240074b0f8ea39e74f33d2dab2c86b6" compoundref="_se_server_main_def_8h" startline="17">AI_F1</references>
        <references refid="_se_server_main_def_8h_1abbd63e694a43e9bc292e0e0b55ae79bda733ca771adfc533f43b29f32dc60fbaf" compoundref="_se_server_main_def_8h" startline="19">AI_F3</references>
        <references refid="_se_server_main_def_8h_1abbd63e694a43e9bc292e0e0b55ae79bda650354bdbd2abe28dc6965362eae64e3" compoundref="_se_server_main_def_8h" startline="21">AI_F5</references>
        <references refid="_se_server_main_def_8h_1abbd63e694a43e9bc292e0e0b55ae79bda0fe66ecf806646f05a9d92eed770fc88" compoundref="_se_server_main_def_8h" startline="22">AI_F6</references>
        <references refid="class_se_race_mgr_1a997e91ab188e50ad85660bce13b40aa4" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3302" endline="3305">SeRaceMgr::EnableCheating</references>
        <references refid="_se_file_log_8cpp_1abb047e4624b8c6795da25cd3162cea07" compoundref="_se_file_log_8cpp" startline="357">g_kFileLog</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="class_se_file_log_1a8750f7935a037a1e520cf014abce8ef6" compoundref="_se_file_log_8cpp" startline="256" endline="259">SeFileLog::GetLogConsole</references>
        <references refid="class_se_race_mgr_1a3109728966992f81a306fd86ab92d746" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3307" endline="3310">SeRaceMgr::IsCheating</references>
        <references refid="class_race_server_1afd28fa51db9bbe338d72e8998ecb9dd8" compoundref="src_2_race_server_8cpp" startline="616" endline="619">ReLoadConfig</references>
        <references refid="_se_file_log_8h_1a7c727baeafcf8b1ef6ca798fad4d738c" compoundref="_se_file_log_8h" startline="86">SeLogHideTime</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_se_file_log_1a342cb7ea909bb981a4412ce751c72c9f" compoundref="_se_file_log_8cpp" startline="261" endline="264">SeFileLog::SetLogConsole</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1cfd0d7b06dc6972eddd99e414101ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::OnNetConnected</definition>
        <argsstring>(const HSock &amp;rkSock, const char *pcIP, int iPort)</argsstring>
        <name>OnNetConnected</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="34" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="258" bodyend="282"/>
        <references refid="struct_se_net_addr_1a23b51e87d8b7b2201a03833c9adde232" compoundref="_se_share_def_8h" startline="41">SeNetAddr::acIP</references>
        <references refid="struct_se_server_data_1a53fcdfea60106f5c7179d39b1e259a3e" compoundref="_se_server_define_8h" startline="20">SeServerData::bConnecting</references>
        <references refid="_se_virt_conn_mgr_8cpp_1aa8e9d5beed961f4e26b9cadd49603980" compoundref="_se_virt_conn_mgr_8cpp" startline="7">g_kVirtConnMgr</references>
        <references refid="struct_se_net_addr_1a989fa5b025bc039122e8d2a29838fde9" compoundref="_se_share_def_8h" startline="42">SeNetAddr::iPort</references>
        <references refid="struct_se_race_config_1a06732c2e787bea54b171459976f4844e" compoundref="src_2_race_server_def_8h" startline="95">SeRaceConfig::kMSServer</references>
        <references refid="struct_se_virt_conn_1ad05e8487648793f2d2340a47856acb71" compoundref="_se_virt_conn_mgr_8h" startline="46">SeVirtConn::kNetAddr</references>
        <references refid="struct_se_server_data_1a2777bbfd27a6afe42ebd71c5d14010a0" compoundref="_se_server_define_8h" startline="19">SeServerData::kSock</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" compoundref="src_2_race_server_8h" startline="123">m_pkNSConn</references>
        <references refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" compoundref="src_2_race_server_8h" startline="122">m_pkWSConn</references>
        <references refid="class_se_virt_conn_mgr_1adca74d2f39a17051600b0ea23d600b74" compoundref="_se_virt_conn_mgr_8cpp" startline="83" endline="108">SeVirtConnMgr::OnServerConnected</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::OnNetAccept</definition>
        <argsstring>(const HSock &amp;rkSock, int iListenPort, const char *pcIP, int iPort)</argsstring>
        <name>OnNetAccept</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iListenPort</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="35" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="284" bodyend="316"/>
        <references refid="struct_se_net_addr_1a23b51e87d8b7b2201a03833c9adde232" compoundref="_se_share_def_8h" startline="41">SeNetAddr::acIP</references>
        <references refid="struct_se_watch_server_connect_1ae9052ebb7bfd5ddab403f4aabd5b67e6" compoundref="src_2_race_server_def_8h" startline="172">SeWatchServerConnect::bRegister</references>
        <references refid="struct_se_watch_server_connect_1a6cf0b35fe75506f47f328d6df734509c" compoundref="src_2_race_server_def_8h" startline="173">SeWatchServerConnect::dwStateTime</references>
        <references refid="struct_se_net_addr_1a989fa5b025bc039122e8d2a29838fde9" compoundref="_se_share_def_8h" startline="42">SeNetAddr::iPort</references>
        <references refid="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" compoundref="src_2_race_server_8cpp" startline="1177" endline="1184">IsMSReady</references>
        <references refid="struct_se_race_config_1a3c54b6d17703bcfd643736f3c4d6ea1a" compoundref="src_2_race_server_def_8h" startline="92">SeRaceConfig::kAddrToPlayer</references>
        <references refid="struct_se_race_config_1a6bb4eaef04af40f9455804034cf24b0a" compoundref="src_2_race_server_def_8h" startline="94">SeRaceConfig::kAddrToWCS</references>
        <references refid="struct_se_watch_server_connect_1a5d99c45efffaa3f6b3c27ad57dc3d3ed" compoundref="src_2_race_server_def_8h" startline="171">SeWatchServerConnect::kNetAddr</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="struct_se_watch_server_connect_1a86a2bf90f2c87605c654224857743236" compoundref="src_2_race_server_def_8h" startline="170">SeWatchServerConnect::kSock</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a4f4c0a3aa486d64460330802db1e287e" compoundref="src_2_race_server_8h" startline="121">m_kWCSConnect</references>
        <references refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" compoundref="src_2_race_server_8cpp" startline="1253" endline="1277">OnPlayerConnected</references>
        <references refid="_se_tool_8cpp_1a4d30fbe56257fc998ebc1346e53be0d8" compoundref="_se_tool_8cpp" startline="50" endline="73">StrCpy</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a55117a86da427b396cd756bbe483fd52" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::OnNetRecv</definition>
        <argsstring>(const HSock &amp;rkSock, void *pkData, int iSize)</argsstring>
        <name>OnNetRecv</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="36" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="318" bodyend="393"/>
        <references refid="struct_se_watch_server_connect_1ae9052ebb7bfd5ddab403f4aabd5b67e6" compoundref="src_2_race_server_def_8h" startline="172">SeWatchServerConnect::bRegister</references>
        <references refid="_se_ptl___c_l___to___r_s_8h_1ac9117c81dcfc880b130fc39b57dc9b36ac3422d95f4e2ff38f9b019402a888c0d" compoundref="_se_ptl___c_l___to___r_s_8h" startline="11">CMD_CR_RACEVALIDATE</references>
        <references refid="_se_ptl___w_c_s___to___r_s_8h_1ac5844638f2f79722cdb9eb37d2bf7dada287bfb70420d94798bdb0f9bf30bb86a" compoundref="_se_ptl___w_c_s___to___r_s_8h" startline="9">CMD_WCSR_REGISTER</references>
        <references refid="struct_se_connect_1af90c5d0ae32665bd3b89980926896f0c" compoundref="_tcp_server_def_8h" startline="88">SeConnect::dwLastRecvTime</references>
        <references refid="struct_se_connect_1a126e1a8628edb2c2cf4a26af590ec12d" compoundref="_tcp_server_def_8h" startline="85">SeConnect::dwPackCount</references>
        <references refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</references>
        <references refid="struct_se_server_data_1a2777bbfd27a6afe42ebd71c5d14010a0" compoundref="_se_server_define_8h" startline="19">SeServerData::kSock</references>
        <references refid="struct_se_virt_conn_1a2ed0654cfe8f298d1dc8fbe76a310df0" compoundref="_se_virt_conn_mgr_8h" startline="47">SeVirtConn::kSock</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a4f4c0a3aa486d64460330802db1e287e" compoundref="src_2_race_server_8h" startline="121">m_kWCSConnect</references>
        <references refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" compoundref="src_2_race_server_8h" startline="123">m_pkNSConn</references>
        <references refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" compoundref="src_2_race_server_8h" startline="122">m_pkWSConn</references>
        <references refid="class_race_server_1a45cac7826a45bb10e88cbcbc97e13000">ProcessBLRData</references>
        <references refid="class_race_server_1acd84e7d35f146e25c1c902dcf118832b">ProcessCRData</references>
        <references refid="class_race_server_1a011cf29ff6d4b802529b7fd4ee96e648">ProcessMRData</references>
        <references refid="class_race_server_1af1aaa9dca040f647d3690a6df76c833c">ProcessNRData</references>
        <references refid="class_race_server_1a06e59df570fa80d88ccba647d071346b">ProcessWCSRData</references>
        <references refid="class_race_server_1ad838f776e2962783429f71a20130cbd1">ProcessWRData</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="_se_server_define_8h_1a5ef39269c62c879ff0b5584312980bc2a62d3d7677c7987e1c8986a6928a079a0" compoundref="_se_server_define_8h" startline="94">STCB_BLS_RS</references>
        <references refid="_se_server_define_8h_1a7e57d75ea3d17743d491908f4fb5cc93" compoundref="_se_server_define_8h" startline="88">STCB_INTERVAL</references>
        <references refid="struct_se_c_m_d_1a2efa122a60040d09cfca777f9155394c" compoundref="_se_ptl_define_8h" startline="97">SeCMD::wCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae340f2c6d93ebee26b390132906d961d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::OnNetDisconnect</definition>
        <argsstring>(const HSock &amp;rkSock, TeDisconnectCode eCode, int iParam)</argsstring>
        <name>OnNetDisconnect</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <param>
          <type>TeDisconnectCode</type>
          <declname>eCode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="37" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="395" bodyend="463"/>
        <references refid="struct_se_net_addr_1a23b51e87d8b7b2201a03833c9adde232" compoundref="_se_share_def_8h" startline="41">SeNetAddr::acIP</references>
        <references refid="class_se_race_room_mgr_1ab8e0b44001c07b6cc049080088f6ab7e" compoundref="src_2_se_race_room_mgr_8cpp" startline="336" endline="348">SeRaceRoomMgr::DelPlayer</references>
        <references refid="class_race_server_1a5eecf4d2a6a3b6eb694aef835621f05e" compoundref="src_2_se_race_svr_other_8cpp" startline="143" endline="162">DelWaitRobot</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_watch_server_connect_1a7b47e71b990a9955211f37ab0a297ea7" compoundref="src_2_race_server_def_8h" startline="174">SeWatchServerConnect::dwServerID</references>
        <references refid="_se_ptl_comm_define_8h_1ab4760fe302c6e66814cca89c0675d97fa0fe956bcc181690961b1ff86e9560a3f" compoundref="_se_ptl_comm_define_8h" startline="656">ENState_Online</references>
        <references refid="struct_se_connect_1a149d84058a462e8833764a6dd2aa2d04" compoundref="_src_2_match_server_def_8h" startline="64">SeConnect::eState</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="_se_virt_conn_mgr_8cpp_1aa8e9d5beed961f4e26b9cadd49603980" compoundref="_se_virt_conn_mgr_8cpp" startline="7">g_kVirtConnMgr</references>
        <references refid="class_se_match_player_1a16a600b4d1b8e280ce15eab4ac07a3bf" compoundref="src_2_se_match_player_8h" startline="145" endline="148">SeMatchPlayer::GetAreaID</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="_se_tool_8h_1ada81d4ae5d39c42af0a02b45f4a6f715" compoundref="_se_tool_8h" startline="66">GetID2Str</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_match_player_1af0c84fc4c6edfd8c60dd722cb49ff84d" compoundref="src_2_se_match_player_8h" startline="150" endline="153">SeMatchPlayer::GetServerID</references>
        <references refid="struct_se_net_addr_1a989fa5b025bc039122e8d2a29838fde9" compoundref="_se_share_def_8h" startline="42">SeNetAddr::iPort</references>
        <references refid="struct_se_watch_server_connect_1a5d99c45efffaa3f6b3c27ad57dc3d3ed" compoundref="src_2_race_server_def_8h" startline="171">SeWatchServerConnect::kNetAddr</references>
        <references refid="struct_se_virt_conn_1a2ed0654cfe8f298d1dc8fbe76a310df0" compoundref="_se_virt_conn_mgr_8h" startline="47">SeVirtConn::kSock</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="class_se_race_room_mgr_1aa72f69df89660ff8ccbe4a8d187c1267" compoundref="src_2_se_race_room_mgr_8cpp" startline="830" endline="865">SeRaceRoomMgr::LeaveRaceView</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="class_race_server_1a4f4c0a3aa486d64460330802db1e287e" compoundref="src_2_race_server_8h" startline="121">m_kWCSConnect</references>
        <references refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" compoundref="src_2_race_server_8h" startline="123">m_pkNSConn</references>
        <references refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" compoundref="src_2_race_server_8h" startline="122">m_pkWSConn</references>
        <references refid="_se_ptl_define_8h_1a0439ce57b5c52e594faa12cea06edf1dadaba700b75c2bf5ca8411d5e079204e0" compoundref="_se_ptl_define_8h" startline="203">MM_VIEW_STATE</references>
        <references refid="class_se_race_mgr_1ad035a9b9b6bb4f73e3d343988eb6c9f5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2485" endline="2555">SeRaceMgr::OnPlayerRaceLeave</references>
        <references refid="class_se_race_mgr_1a013cc1a6b7786dbff71dde43ef20d93b" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3096" endline="3118">SeRaceMgr::OnPlayerViewQuit</references>
        <references refid="class_se_race_room_mgr_1a337c88f7753fce325ed9daf56611302c" compoundref="src_2_se_race_room_mgr_8cpp" startline="404" endline="515">SeRaceRoomMgr::OnRaceLeave</references>
        <references refid="class_se_virt_conn_mgr_1ad75abfada4de2eb3107aca79b1c99642" compoundref="_se_virt_conn_mgr_8cpp" startline="126" endline="139">SeVirtConnMgr::OnServerDisconnect</references>
        <references refid="class_race_server_1a5d5e0df8480369231da14cca6e9e20d2" compoundref="src_2_race_server_8cpp" startline="465" endline="488">OnWCSDisconnect</references>
        <references refid="class_race_server_1af7633fe0658191bed28add297940f8eb" compoundref="src_2_race_server_8cpp" startline="1551" endline="1554">RaceLinkUserSync</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_race_server_1a25c8b9d20d5ad61cf81b4b23e1ce9669">SendRM_UpdateMisc</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0aa95df7e6e38e9c04a74363fdde296556" compoundref="src_2_se_match_player_8h" startline="16">SMPS_RACEVIEW</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a915457d69cfd32d5db80be534beeeec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::OnNetUdpAccept</definition>
        <argsstring>(int iID, int iListtenPort, const char *pcIP, int iPort)</argsstring>
        <name>OnNetUdpAccept</name>
        <param>
          <type>int</type>
          <declname>iID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iListtenPort</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="39" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="490" bodyend="515"/>
        <references refid="struct_se_net_addr_1a989fa5b025bc039122e8d2a29838fde9" compoundref="_se_share_def_8h" startline="42">SeNetAddr::iPort</references>
        <references refid="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" compoundref="src_2_race_server_8cpp" startline="1177" endline="1184">IsMSReady</references>
        <references refid="class_race_server_1a65a33b72bda3aa9083d8c91e6879501c" compoundref="src_2_se_race_svr_other_8cpp" startline="53" endline="56">IsTestRobotMode</references>
        <references refid="struct_se_race_config_1a80d8a2c6f28d8484261ae341b0d76de7" compoundref="src_2_race_server_def_8h" startline="93">SeRaceConfig::kAddrToPlayerUdp</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" compoundref="src_2_race_server_8h" startline="119">m_kUdpMgr</references>
        <references refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" compoundref="src_2_race_server_8cpp" startline="1253" endline="1277">OnPlayerConnected</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a72aff476ef33f2168f6f60651a59cb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::OnNetUdpRecv</definition>
        <argsstring>(int iID, void *pkData, int iSize)</argsstring>
        <name>OnNetUdpRecv</name>
        <param>
          <type>int</type>
          <declname>iID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="40" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="517" bodyend="542"/>
        <references refid="_se_ptl___c_l___to___r_s_8h_1ac9117c81dcfc880b130fc39b57dc9b36ac3422d95f4e2ff38f9b019402a888c0d" compoundref="_se_ptl___c_l___to___r_s_8h" startline="11">CMD_CR_RACEVALIDATE</references>
        <references refid="struct_se_connect_1af90c5d0ae32665bd3b89980926896f0c" compoundref="_tcp_server_def_8h" startline="88">SeConnect::dwLastRecvTime</references>
        <references refid="struct_se_connect_1a126e1a8628edb2c2cf4a26af590ec12d" compoundref="_tcp_server_def_8h" startline="85">SeConnect::dwPackCount</references>
        <references refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="class_race_server_1acd84e7d35f146e25c1c902dcf118832b">ProcessCRData</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="struct_se_c_m_d_1a2efa122a60040d09cfca777f9155394c" compoundref="_se_ptl_define_8h" startline="97">SeCMD::wCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af108d3fdc437f3f84b1fbb5f39b059b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::OnNetUdpDisconnect</definition>
        <argsstring>(int iID)</argsstring>
        <name>OnNetUdpDisconnect</name>
        <param>
          <type>int</type>
          <declname>iID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="41" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="544" bodyend="586"/>
        <references refid="class_se_race_room_mgr_1ab8e0b44001c07b6cc049080088f6ab7e" compoundref="src_2_se_race_room_mgr_8cpp" startline="336" endline="348">SeRaceRoomMgr::DelPlayer</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a16a600b4d1b8e280ce15eab4ac07a3bf" compoundref="src_2_se_match_player_8h" startline="145" endline="148">SeMatchPlayer::GetAreaID</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_match_player_1af0c84fc4c6edfd8c60dd722cb49ff84d" compoundref="src_2_se_match_player_8h" startline="150" endline="153">SeMatchPlayer::GetServerID</references>
        <references refid="class_se_race_room_mgr_1aa72f69df89660ff8ccbe4a8d187c1267" compoundref="src_2_se_race_room_mgr_8cpp" startline="830" endline="865">SeRaceRoomMgr::LeaveRaceView</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="_se_ptl_define_8h_1a0439ce57b5c52e594faa12cea06edf1dadaba700b75c2bf5ca8411d5e079204e0" compoundref="_se_ptl_define_8h" startline="203">MM_VIEW_STATE</references>
        <references refid="class_se_race_mgr_1ad035a9b9b6bb4f73e3d343988eb6c9f5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2485" endline="2555">SeRaceMgr::OnPlayerRaceLeave</references>
        <references refid="class_se_race_mgr_1a013cc1a6b7786dbff71dde43ef20d93b" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3096" endline="3118">SeRaceMgr::OnPlayerViewQuit</references>
        <references refid="class_se_race_room_mgr_1a337c88f7753fce325ed9daf56611302c" compoundref="src_2_se_race_room_mgr_8cpp" startline="404" endline="515">SeRaceRoomMgr::OnRaceLeave</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_race_server_1a25c8b9d20d5ad61cf81b4b23e1ce9669">SendRM_UpdateMisc</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0aa95df7e6e38e9c04a74363fdde296556" compoundref="src_2_se_match_player_8h" startline="16">SMPS_RACEVIEW</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a32736c15ec790dcfcd7abfd44a2a64b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_EncryptKey</definition>
        <argsstring>(const char *abyEncryptKey, DWord dwVersion, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_EncryptKey</name>
        <param>
          <type>const char *</type>
          <declname>abyEncryptKey</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwVersion</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" compoundref="src_2_race_server_8cpp" startline="1253" endline="1277">OnPlayerConnected</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a63dd563aff508c15caf878cfafd5069f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_HeartBeat</definition>
        <argsstring>(void *pkReceiver=NULL)</argsstring>
        <name>SendRC_HeartBeat</name>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="3" column="1"/>
        <referencedby refid="class_race_server_1a89a32c300069bdd16c765f680752ab97" compoundref="src_2_se_c_r_process_8cpp" startline="43" endline="50">ProcessCR_HeartPackage</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad8d11728fba3a3077c8c62b21e55ea9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ValidateRet</definition>
        <argsstring>(bool bReturn, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ValidateRet</name>
        <param>
          <type>bool</type>
          <declname>bReturn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="4" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1a8f18f14665bf6d44be8ea1a0ea0f4761" compoundref="src_2_se_race_room_mgr_8cpp" startline="713" endline="745">SeRaceRoomMgr::OnReconValidOK</referencedby>
        <referencedby refid="class_se_race_room_mgr_1ad14198273113890408ab10fad2ba605f" compoundref="src_2_se_race_room_mgr_8cpp" startline="800" endline="828">SeRaceRoomMgr::OnViewValidOKRet</referencedby>
        <referencedby refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" compoundref="src_2_se_c_r_process_8cpp" startline="52" endline="211">ProcessCR_RaceValidate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ab594c9f07d76b41ae58c8ed820dd6e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ShowNotice</definition>
        <argsstring>(SeNoticeCode eNoticeCode, DWord dwParam, int iSize, const char *acMessage, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ShowNotice</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a9e8a0c48a4141863c0a26f1c12a43877" kindref="member">SeNoticeCode</ref></type>
          <declname>eNoticeCode</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acMessage</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="5" column="1"/>
        <referencedby refid="class_se_race_mgr_1a17512d648face94dd24933efff4c94c2" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3719" endline="3826">SeRaceMgr::OnRaceEndArenaDetail</referencedby>
        <referencedby refid="class_race_server_1a624351ac9226d75b6f48ac74db48640b" compoundref="src_2_se_b_l_r_process_8cpp" startline="12" endline="43">ProcessBLR_SelectHeroAck</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a0c86c0726f682bf5eb1e11e670831d3c" compoundref="src_2_se_race_room_mgr_8cpp" startline="1561" endline="1601">SeRaceRoomMgr::SelHero</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a6a280fd813b1854dd3b3c9b0551336e4" compoundref="src_2_se_race_room_mgr_8cpp" startline="1646" endline="1707">SeRaceRoomMgr::SelHeroFight</referencedby>
        <referencedby refid="class_race_server_1a9486f43f73deddb3a0ad359e729766b5" compoundref="src_2_se_race_svr_other_8cpp" startline="136" endline="141">SendPlayer_ReconNoticePlayerJoin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3729392cf9152652902bee9843011e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ShowNotice</definition>
        <argsstring>(SeNoticeCode eNoticeCode, DWord dwParam, int iSize, std::vector&lt; char &gt; &amp;acMessage, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ShowNotice</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a9e8a0c48a4141863c0a26f1c12a43877" kindref="member">SeNoticeCode</ref></type>
          <declname>eNoticeCode</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acMessage</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a355725b3308c189b219bd69741f413cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RoomPlayerBaseInfo</definition>
        <argsstring>(DWord dwMapID, SeRaceModel eRaceModel, int iNum, const SeMatchSelPlayerInfo *akPlayerInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RoomPlayerBaseInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1ae44613edbcae64afcfd2982887ad4245" kindref="member">SeRaceModel</ref></type>
          <declname>eRaceModel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_match_sel_player_info" kindref="compound">SeMatchSelPlayerInfo</ref> *</type>
          <declname>akPlayerInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="7" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1ad44de83ae9693e08325f35d88eefb13b" compoundref="src_2_se_race_room_mgr_8cpp" startline="1309" endline="1350">SeRaceRoomMgr::SendRacePlayerBaseInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acdb7aad182efb1062c4227a2aa1927f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RoomPlayerBaseInfo</definition>
        <argsstring>(DWord dwMapID, SeRaceModel eRaceModel, int iNum, std::vector&lt; SeMatchSelPlayerInfo &gt; &amp;akPlayerInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RoomPlayerBaseInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1ae44613edbcae64afcfd2982887ad4245" kindref="member">SeRaceModel</ref></type>
          <declname>eRaceModel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_match_sel_player_info" kindref="compound">SeMatchSelPlayerInfo</ref> &gt; &amp;</type>
          <declname>akPlayerInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a251a613438a14c869541c24f001d462c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RacePack</definition>
        <argsstring>(DWord dwPackIndex, int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RacePack</name>
        <param>
          <type>DWord</type>
          <declname>dwPackIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="9" column="1"/>
        <referencedby refid="class_se_race_mgr_1ad035a9b9b6bb4f73e3d343988eb6c9f5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2485" endline="2555">SeRaceMgr::OnPlayerRaceLeave</referencedby>
        <referencedby refid="class_se_race_mgr_1a59c745d406675a73ec84583d6a5184db" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2868" endline="3015">SeRaceMgr::OnPlayerReconBegin</referencedby>
        <referencedby refid="class_se_race_mgr_1a6f86cab772c6473217e3f4e3cfe06747" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1925" endline="2285">SeRaceMgr::OnRaceModeEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1a13ec3323cfe46579df8af8b641df3557" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="977" endline="1056">SeRaceMgr::UpdateLoadEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1ac54339f9ca99b5f396f89acf4d246e3d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="46" endline="97">SeRaceMgr::UpdateRace</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aaec6b68465c032fcd00cf579f0c95c43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RacePack</definition>
        <argsstring>(DWord dwPackIndex, int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RacePack</name>
        <param>
          <type>DWord</type>
          <declname>dwPackIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae04d43348017e6e0809c8cbcb123e87f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RaceStream</definition>
        <argsstring>(int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RaceStream</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="11" column="1"/>
        <referencedby refid="class_race_server_1aef64bcc5362e7c3595c5dd2706c58426" compoundref="src_2_se_race_svr_other_8cpp" startline="98" endline="134">OnSendPlayerRaceStream</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af5eb22c37e787f629ad07224b82cca6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RaceStream</definition>
        <argsstring>(int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RaceStream</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a07c6c3625de04840147b859f62a6b7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RacePlayerLoadEnd</definition>
        <argsstring>(int iSeat, DWord dwRate, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RacePlayerLoadEnd</name>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwRate</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="13" column="1"/>
        <referencedby refid="class_se_race_mgr_1a066be1339f6f60af684da22a2e1f907a" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2287" endline="2321">SeRaceMgr::OnPlayerRaceLoadEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2585d732235061e2dbf7bd4d30111746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_BeginSelectHero</definition>
        <argsstring>(DWord dwCamp, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_BeginSelectHero</name>
        <param>
          <type>DWord</type>
          <declname>dwCamp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="14" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1a51bf8ba39d383f028bd4d4515c78988c" compoundref="src_2_se_race_room_mgr_8cpp" startline="1352" endline="1425">SeRaceRoomMgr::IntoSelHero</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af11bc98330467a2375671c987cc7d631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHeroMessage</definition>
        <argsstring>(SeSelHeroMsgType eMessageType, DWord dwHeroID, bool bDreamHero, int iDecMoney, DWord dwOrgPlayerID, DWord dwDstPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHeroMessage</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a951c7caca34fe5f722878a9c7a32ee6d" kindref="member">SeSelHeroMsgType</ref></type>
          <declname>eMessageType</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bDreamHero</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDecMoney</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwOrgPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwDstPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="15" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1a2e7a9a1da5d04a41dce1160351639a20" compoundref="src_2_se_race_room_mgr_8cpp" startline="1603" endline="1644">SeRaceRoomMgr::CancelHero</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a6a280fd813b1854dd3b3c9b0551336e4" compoundref="src_2_se_race_room_mgr_8cpp" startline="1646" endline="1707">SeRaceRoomMgr::SelHeroFight</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a0c260c10ca7b948bd8d2544de7ff6095" compoundref="src_2_se_race_room_mgr_8cpp" startline="1427" endline="1519">SeRaceRoomMgr::SelHeroReady</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aff0cfbedb88874c01364417020a0f9d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ReconResult</definition>
        <argsstring>(SeReconResultType eResult, int iData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ReconResult</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a8747e5c478664a893f6a4cfa5e9118e6" kindref="member">SeReconResultType</ref></type>
          <declname>eResult</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="16" column="1"/>
        <referencedby refid="class_se_race_mgr_1a59c745d406675a73ec84583d6a5184db" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2868" endline="3015">SeRaceMgr::OnPlayerReconBegin</referencedby>
        <referencedby refid="class_se_race_mgr_1acd989f02f8da3508a720e2870259b306" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1121" endline="1281">SeRaceMgr::UpdateReconBegin</referencedby>
        <referencedby refid="class_se_race_mgr_1a8bc74f34b4b13a65b21d4c0ef3638d9d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1283" endline="1375">SeRaceMgr::UpdateReconEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa23188daa6e22b83a71aadddf6e69507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ReconPack</definition>
        <argsstring>(int iOffset, int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ReconPack</name>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="17" column="1"/>
        <referencedby refid="class_se_race_mgr_1acd989f02f8da3508a720e2870259b306" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1121" endline="1281">SeRaceMgr::UpdateReconBegin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3b57f1f3c54ceaa2a0b263d15ce9affd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ReconPack</definition>
        <argsstring>(int iOffset, int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ReconPack</name>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a623d9772ba61e232a4b93342211d428a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewPack</definition>
        <argsstring>(int iOffset, int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewPack</name>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="19" column="1"/>
        <referencedby refid="class_se_race_mgr_1a3bd92d366a3ebf2c9f70d5ef400305b3" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="99" endline="264">SeRaceMgr::UpdateView</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af04817ab3b4f7df9024dcdc2e0df3ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewPack</definition>
        <argsstring>(int iOffset, int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewPack</name>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aca4f9fbf8677ac12aa9736f066a520c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewResult</definition>
        <argsstring>(SeViewResultType eResult, int iData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewResult</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a026458e992a3e7549fb0eb75edfc92d1" kindref="member">SeViewResultType</ref></type>
          <declname>eResult</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="21" column="1"/>
        <referencedby refid="class_se_race_mgr_1ab60ba508298450b49c72e0b5cd0c1b5e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3017" endline="3070">SeRaceMgr::OnPlayerRaceViewBegin</referencedby>
        <referencedby refid="class_se_race_mgr_1a013cc1a6b7786dbff71dde43ef20d93b" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3096" endline="3118">SeRaceMgr::OnPlayerViewQuit</referencedby>
        <referencedby refid="class_se_race_mgr_1a3bd92d366a3ebf2c9f70d5ef400305b3" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="99" endline="264">SeRaceMgr::UpdateView</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acc24c7451d6583c58dcf743eb97224e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewPlayerInfo</definition>
        <argsstring>(int iNum, const SePlayerInfoSeat *akSeat, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewPlayerInfo</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_player_info_seat" kindref="compound">SePlayerInfoSeat</ref> *</type>
          <declname>akSeat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="22" column="1"/>
        <referencedby refid="class_se_race_mgr_1ab60ba508298450b49c72e0b5cd0c1b5e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3017" endline="3070">SeRaceMgr::OnPlayerRaceViewBegin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a422b40c6dcca911b21e6535b7e886fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewPlayerInfo</definition>
        <argsstring>(int iNum, std::vector&lt; SePlayerInfoSeat &gt; &amp;akSeat, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewPlayerInfo</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_player_info_seat" kindref="compound">SePlayerInfoSeat</ref> &gt; &amp;</type>
          <declname>akSeat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6eaf23bf78ca73a853ab8be15ac023b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_Talk</definition>
        <argsstring>(SeTalkType eType, DWord dwSrcID, int iSize, const char *acMsg, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_Talk</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a1c935381ad9f824965c7b1b128e32466" kindref="member">SeTalkType</ref></type>
          <declname>eType</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwSrcID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acMsg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="24" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1af07714f0f0574d66d77003d0eb22e839" compoundref="src_2_se_race_room_mgr_8cpp" startline="867" endline="892">SeRaceRoomMgr::OnPlayerTalk</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af338b8cccda7170236ba26692c81749f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelPetList</definition>
        <argsstring>(int iNum, const int *akPetID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelPetList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>akPetID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8dd22f391fafac6375251c721255e114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelPetList</definition>
        <argsstring>(int iNum, std::vector&lt; int &gt; &amp;akPetID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelPetList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>akPetID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a36bf21dcabbb812cc025810ca904b9f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHeroList</definition>
        <argsstring>(int iNum, const SeSelHeroInfo *akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHeroList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_sel_hero_info" kindref="compound">SeSelHeroInfo</ref> *</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="27" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1a51bf8ba39d383f028bd4d4515c78988c" compoundref="src_2_se_race_room_mgr_8cpp" startline="1352" endline="1425">SeRaceRoomMgr::IntoSelHero</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1a65f7cdce369addbd0a4e9a755cc782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHeroList</definition>
        <argsstring>(int iNum, std::vector&lt; SeSelHeroInfo &gt; &amp;akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHeroList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_sel_hero_info" kindref="compound">SeSelHeroInfo</ref> &gt; &amp;</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a793ad5922a415b247ffcd8596859264d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHorseList</definition>
        <argsstring>(int iNum, const int *akHorseID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHorseList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>akHorseID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac4584f0203e97264c186e445f181a603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHorseList</definition>
        <argsstring>(int iNum, std::vector&lt; int &gt; &amp;akHorseID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHorseList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>akHorseID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a62b1078c2e0ce17af3ca58120209d824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_PingRet</definition>
        <argsstring>(DWord dwPackIndex, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_PingRet</name>
        <param>
          <type>DWord</type>
          <declname>dwPackIndex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="31" column="1"/>
        <referencedby refid="class_race_server_1ad4d3f26f7c58299a8bb30a7917e87f07" compoundref="src_2_se_c_r_process_8cpp" startline="487" endline="495">ProcessCR_Ping</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2f5f1ed1e48ce157703f9a2bc41ac2b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_GetHeroInfoRet</definition>
        <argsstring>(int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_GetHeroInfoRet</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="32" column="1"/>
        <referencedby refid="class_se_logic_race_data_1a5a14ca1fd749888fd2ad02c4de0ba34f" compoundref="src_2_se_race_data_8cpp" startline="86" endline="96">SeLogicRaceData::SendHeroInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af9f364672ed6d21a1b87c4b007cbac43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_GetHeroInfoRet</definition>
        <argsstring>(int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_GetHeroInfoRet</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa8387be820644e859ee9567cd243b543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RaceEndNotifyDown</definition>
        <argsstring>(const char *acURLBase, const char *acRaceID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RaceEndNotifyDown</name>
        <param>
          <type>const char *</type>
          <declname>acURLBase</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acRaceID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="34" column="1"/>
        <referencedby refid="class_se_race_mgr_1a54d76275402dab1b4b2815e52889e684" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="267" endline="367">SeRaceMgr::UpdateView</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aaa30262929dad0f59613813238630487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RaceGoldExpPlus</definition>
        <argsstring>(int RaceGold, int RaceExp, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RaceGoldExpPlus</name>
        <param>
          <type>int</type>
          <declname>RaceGold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>RaceExp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="35" column="1"/>
        <referencedby refid="class_se_race_mgr_1a17512d648face94dd24933efff4c94c2" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3719" endline="3826">SeRaceMgr::OnRaceEndArenaDetail</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af09262c79ab448b1478854997ba76390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SetEquipSetAck</definition>
        <argsstring>(int iResult, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SetEquipSetAck</name>
        <param>
          <type>int</type>
          <declname>iResult</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="36" column="1"/>
        <referencedby refid="class_race_server_1afacefe00ea688058623e130755f5922b" compoundref="src_2_se_c_r_process_8cpp" startline="545" endline="573">ProcessCR_SetEquipSetReq</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1584f8fba3994c3547100c5af741eec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SetAvatarAck</definition>
        <argsstring>(int iResult, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SetAvatarAck</name>
        <param>
          <type>int</type>
          <declname>iResult</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="37" column="1"/>
        <referencedby refid="class_race_server_1a5eb54db8dd16183d4e12fafd2925f815" compoundref="src_2_se_c_r_process_8cpp" startline="575" endline="609">ProcessCR_SetAvatarReq</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a740261b42e94e049f935f9f218f471e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SeatScoreNtf</definition>
        <argsstring>(const SeSeatScore *scores, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SeatScoreNtf</name>
        <param>
          <type>const <ref refid="struct_se_seat_score" kindref="compound">SeSeatScore</ref> *</type>
          <declname>scores</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="38" column="1"/>
        <referencedby refid="class_se_race_mgr_1aeb079abe070d16c29aefc0cc8df54ea7" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3588" endline="3699">SeRaceMgr::OnRaceEndGradeDetail</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6631522a08041596317abe2910e8f2e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SeatScoreNtf</definition>
        <argsstring>(std::vector&lt; SeSeatScore &gt; &amp;scores, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SeatScoreNtf</name>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_seat_score" kindref="compound">SeSeatScore</ref> &gt; &amp;</type>
          <declname>scores</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5d27bdd027268d10784e20f5a7507805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRCData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRCData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="42" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRCSend.cpp" bodystart="7" bodyend="58"/>
        <references refid="struct_se_race_config_1a4bb1eb7b91ae54afec70f30f4052b9c9" compoundref="src_2_race_server_def_8h" startline="115">SeRaceConfig::bRCPacketToFile</references>
        <references refid="struct_se_race_config_1aeb8a2be38bbebf6ac9dfb52b428f799f" compoundref="src_2_race_server_def_8h" startline="96">SeRaceConfig::bTcpClient</references>
        <references refid="struct_se_u_d_p_sender_1a04f15c188268135c345e93ab4ccadd43" compoundref="src_2_race_server_def_8h" startline="193">SeUDPSender::iFlag</references>
        <references refid="struct_se_u_d_p_sender_1a990aa49bea9fb54ffaaedaf439ca7bd2" compoundref="src_2_race_server_def_8h" startline="192">SeUDPSender::iProtocolFlag</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" compoundref="src_2_race_server_8h" startline="119">m_kUdpMgr</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="struct_se_c_m_d_1ac0ecd6c295ba1347fc1a57621d44bbf5" compoundref="_se_ptl_define_8h" startline="98">SeCMD::wFlag</references>
        <references refid="class_race_server_1a6993deeef7a6287b2f968edda5bf0405" compoundref="src_2_race_server_8cpp" startline="1456" endline="1471">WriteToLogFile</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acd84e7d35f146e25c1c902dcf118832b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessCRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessCRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
        <referencedby refid="class_race_server_1a72aff476ef33f2168f6f60651a59cb0e" compoundref="src_2_race_server_8cpp" startline="517" endline="542">OnNetUdpRecv</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a89919e980ba49b4d4fedfd9732938040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessCR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessCR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="8" bodyend="41"/>
        <references refid="_se_ptl___c_l___to___r_s_8h_1ac9117c81dcfc880b130fc39b57dc9b36a48d3f2987eb590f64e19479588c628b4" compoundref="_se_ptl___c_l___to___r_s_8h" startline="10">CMD_CR_HEARTPACKAGE</references>
        <references refid="_se_ptl___c_l___to___r_s_8h_1ac9117c81dcfc880b130fc39b57dc9b36aacba1feb90a4773c3a5b6bb7a1d12ac0" compoundref="_se_ptl___c_l___to___r_s_8h" startline="23">CMD_CR_PING</references>
        <references refid="_se_ptl___c_l___to___r_s_8h_1ac9117c81dcfc880b130fc39b57dc9b36a7fa731383989893cb4267b1d4eff339e" compoundref="_se_ptl___c_l___to___r_s_8h" startline="13">CMD_CR_RACECMD</references>
        <references refid="_se_ptl___c_l___to___r_s_8h_1af8ba3136e2a18ece5a5cff8615c0ccfe" compoundref="_se_ptl___c_l___to___r_s_8h" startline="31" endline="56">getCRCmdNameMap</references>
        <references refid="_se_file_log_8h_1ab19c516672348b15ddabafb0bfb9d0a7" compoundref="_se_file_log_8h" startline="89">SeLogDebug</references>
        <references refid="struct_se_c_m_d_1a2efa122a60040d09cfca777f9155394c" compoundref="_se_ptl_define_8h" startline="97">SeCMD::wCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a89a32c300069bdd16c765f680752ab97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_HeartPackage</definition>
        <argsstring>(SeCR_HeartPackage *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_HeartPackage</name>
        <param>
          <type><ref refid="struct_se_c_r___heart_package" kindref="compound">SeCR_HeartPackage</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="43" bodyend="50"/>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_race_server_1a63dd563aff508c15caf878cfafd5069f">SendRC_HeartBeat</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceValidate</definition>
        <argsstring>(SeCR_RaceValidate *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceValidate</name>
        <param>
          <type><ref refid="struct_se_c_r___race_validate" kindref="compound">SeCR_RaceValidate</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="52" bodyend="211"/>
        <references refid="struct_se_recon_player_1a7babc78ed7cba1034d2167bc57ea28c0" compoundref="src_2_se_recon_mgr_def_8h" startline="32">SeReconPlayer::acName</references>
        <references refid="struct_se_recon_player_name_1abd6a4e6f7306d8cca6ab0215a0d13dae" compoundref="src_2_se_recon_mgr_def_8h" startline="49">SeReconPlayerName::acName</references>
        <references refid="struct_se_recon_init_info_1ad062035d1792d84f4f6cd0d8a8a77752" compoundref="_se_ptl_define_8h" startline="593">SeReconInitInfo::acName</references>
        <references refid="class_se_match_recon_mgr_1a7fa393920e98d288da773680e0c43ca8" compoundref="src_2_se_recon_mgr_8cpp" startline="346" endline="358">SeMatchReconMgr::CheckCon2OldRace</references>
        <references refid="class_se_match_recon_mgr_1a59d1c8dbf8e66b5a40c8c6fa2b65cf6a" compoundref="src_2_se_recon_mgr_8cpp" startline="137" endline="151">SeMatchReconMgr::DelPlayer</references>
        <references refid="struct_se_recon_player_1afa4b57acb194e9d56b6188a9bd2ba284" compoundref="src_2_se_recon_mgr_def_8h" startline="29">SeReconPlayer::dwAreaID</references>
        <references refid="struct_se_recon_init_info_1a216df485f3c329a0f0c3af4980689dc1" compoundref="_se_ptl_define_8h" startline="587">SeReconInitInfo::dwAreaID</references>
        <references refid="struct_se_c_r___race_validate_1a02ead2a1689ecf724c2fb935fc56f09b" compoundref="_se_ptl___c_l___to___r_s_8h" startline="85">SeCR_RaceValidate::dwFrame</references>
        <references refid="struct_se_recon_init_info_1a398975087c588a0d1e24819776396ebf" compoundref="_se_ptl_define_8h" startline="591">SeReconInitInfo::dwFrame</references>
        <references refid="struct_se_c_r___race_validate_1ad8b67488740f6d8eecfa52f1ffe8e2ab" compoundref="_se_ptl___c_l___to___r_s_8h" startline="81">SeCR_RaceValidate::dwKey</references>
        <references refid="struct_se_race_room_1a2a8712c2c9c65fdd2c8ef4e4ad93ff95" compoundref="src_2_se_race_room_mgr_def_8h" startline="81">SeRaceRoom::dwKey</references>
        <references refid="struct_se_c_r___race_validate_1a1f80f4308c28bb2196a6e7b3eb34d164" compoundref="_se_ptl___c_l___to___r_s_8h" startline="79">SeCR_RaceValidate::dwPlayerID</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_recon_init_info_1a7f437dec8704d1d44ae84bb6246287fa" compoundref="_se_ptl_define_8h" startline="586">SeReconInitInfo::dwPlayerID</references>
        <references refid="struct_se_recon_player_1a1ef3f61ceb2646199d0c99622d0e81cd" compoundref="src_2_se_recon_mgr_def_8h" startline="30">SeReconPlayer::dwServerID</references>
        <references refid="struct_se_recon_init_info_1a7825add0975c95e566fd2dec658f8e2f" compoundref="_se_ptl_define_8h" startline="588">SeReconInitInfo::dwServerID</references>
        <references refid="struct_se_c_r___race_validate_1aee602a7a500c25d9bfd85e1da7715d2c" compoundref="_se_ptl___c_l___to___r_s_8h" startline="80">SeCR_RaceValidate::dwSessionId</references>
        <references refid="struct_se_connect_1ae90bd507e6e1e36dc4ee9e4d5e849cd3" compoundref="_src_2_match_server_def_8h" startline="65">SeConnect::dwStateTime</references>
        <references refid="struct_se_recon_player_1a83063f4afd0c5fb24fbf2d3bee28afb8" compoundref="src_2_se_recon_mgr_def_8h" startline="31">SeReconPlayer::eCamp</references>
        <references refid="struct_se_recon_init_info_1a86761036d6dc5a7b31f2966a09d5c1a2" compoundref="_se_ptl_define_8h" startline="592">SeReconInitInfo::eCamp</references>
        <references refid="_se_ptl_comm_define_8h_1ab4760fe302c6e66814cca89c0675d97fa2f1ae5d7084be70dceca0942db45b3a4" compoundref="_se_ptl_comm_define_8h" startline="658">ENState_Racing</references>
        <references refid="struct_se_connect_1a149d84058a462e8833764a6dd2aa2d04" compoundref="_src_2_match_server_def_8h" startline="64">SeConnect::eState</references>
        <references refid="struct_se_c_r___race_validate_1a016211036d852ce78e9ba3b4a4d7523f" compoundref="_se_ptl___c_l___to___r_s_8h" startline="82">SeCR_RaceValidate::eValidType</references>
        <references refid="src_2_se_recon_mgr_8cpp_1ac9809af7eb2b9209c6973a9c5f11389a" compoundref="src_2_se_recon_mgr_8cpp" startline="7">g_kMatchReconMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="src_2_race_server_8cpp_1a11ebf86c50956d92a423e490dfbd05be" compoundref="src_2_race_server_8cpp" startline="9">g_kRaceServer</references>
        <references refid="class_se_match_player_1a16a600b4d1b8e280ce15eab4ac07a3bf" compoundref="src_2_se_match_player_8h" startline="145" endline="148">SeMatchPlayer::GetAreaID</references>
        <references refid="class_race_server_1a168a19b0f8e671d9f95604a84728547a" compoundref="src_2_race_server_8cpp" startline="1345" endline="1356">GetConnectByID</references>
        <references refid="struct_se_race_room_1a576861c697112d7cd3f280649aacc9ef" compoundref="src_2_se_race_room_mgr_8cpp" startline="87" endline="95">SeRaceRoom::GetDroppedPlayer</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_recon_mgr_1a3c86e47bd4a6b4027fa7b0cec9d61f8c" compoundref="src_2_se_recon_mgr_8cpp" startline="153" endline="170">SeMatchReconMgr::GetReconPlayer</references>
        <references refid="class_se_match_recon_mgr_1a376e6f67ab88b1acbd9e8f7923a5d111" compoundref="src_2_se_recon_mgr_8cpp" startline="360" endline="369">SeMatchReconMgr::GetReconPlayerName</references>
        <references refid="class_se_race_room_mgr_1a806bdfea8ed0bd338b03c4ef82578cfd" compoundref="src_2_se_race_room_mgr_8cpp" startline="367" endline="376">SeRaceRoomMgr::GetRoom</references>
        <references refid="class_se_match_player_1afffa1b75dd5c8a86617c8d9264781a45" compoundref="src_2_se_match_player_8h" startline="82" endline="85">SeMatchPlayer::GetRoomPlayerCamp</references>
        <references refid="class_se_match_player_1af0c84fc4c6edfd8c60dd722cb49ff84d" compoundref="src_2_se_match_player_8h" startline="150" endline="153">SeMatchPlayer::GetServerID</references>
        <references refid="struct_se_c_r___race_validate_1a2ad56c0875e383667f83494f38329f6c" compoundref="_se_ptl___c_l___to___r_s_8h" startline="84">SeCR_RaceValidate::iOffset</references>
        <references refid="struct_se_recon_init_info_1ac0b8316a68b47118d208fb6dba29631a" compoundref="_se_ptl_define_8h" startline="590">SeReconInitInfo::iOffset</references>
        <references refid="struct_se_c_r___race_validate_1a7c89e41d279f875266be4a7a00af5ca0" compoundref="_se_ptl___c_l___to___r_s_8h" startline="83">SeCR_RaceValidate::iSeat</references>
        <references refid="struct_se_recon_init_info_1a07cced237848a7b028b33936c72dc2c2" compoundref="_se_ptl_define_8h" startline="589">SeReconInitInfo::iSeat</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_se_race_room_mgr_1a34eefc0036846a6dd6fb6551928673b9" compoundref="src_2_se_race_room_mgr_8cpp" startline="655" endline="711">SeRaceRoomMgr::OnPlayerReconQuery</references>
        <references refid="class_se_race_room_mgr_1a8f18f14665bf6d44be8ea1a0ea0f4761" compoundref="src_2_se_race_room_mgr_8cpp" startline="713" endline="745">SeRaceRoomMgr::OnReconValidOK</references>
        <references refid="class_race_server_1af7633fe0658191bed28add297940f8eb" compoundref="src_2_race_server_8cpp" startline="1551" endline="1554">RaceLinkUserSync</references>
        <references refid="_src_2_town_server_def_8h_1a66f85fac7c2312bb587ad3f33324085ea8294b81023de7598689131414ad4d5b3" compoundref="_src_2_town_server_def_8h" startline="84">SCS_VALID_OK</references>
        <references refid="_se_file_log_8h_1ab19c516672348b15ddabafb0bfb9d0a7" compoundref="_se_file_log_8h" startline="89">SeLogDebug</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_race_server_1ad8d11728fba3a3077c8c62b21e55ea9c">SendRC_ValidateRet</references>
        <references refid="class_race_server_1a822c5067cdf25dcb1f94fa5b47f456e3">SendRM_ReconViewValid</references>
        <references refid="class_se_match_player_1ae1f19f6ef60711f0d33fbb119ff5bded" compoundref="src_2_se_match_player_8h" startline="22" endline="25">SeMatchPlayer::SetHSock</references>
        <references refid="class_se_match_player_1a740a9a99a4ff4062e41d7e34d1bd0f30" compoundref="src_2_se_match_player_8cpp" startline="54" endline="57">SeMatchPlayer::SetPlayerState</references>
        <references refid="class_se_match_player_1a6e9ef02c97d1fb7dbdcc48989ae618a9" compoundref="src_2_se_match_player_8h" startline="42" endline="45">SeMatchPlayer::SetValidate</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0aea8c2fe72c4a3f4cf1646e1cc680c61c" compoundref="src_2_se_match_player_8h" startline="10">SMPS_CONNECT</references>
        <references refid="_se_ptl_comm_define_8h_1a1db4f0d41049e036acff5dfb4a360e9ca485813faed862ea617efa177f56d93f6" compoundref="_se_ptl_comm_define_8h" startline="346">SRQF_NULL</references>
        <references refid="_se_ptl_comm_define_8h_1a77f91e01c5c1d6e63aeae4848cd17d45a05a102a489ec1aa2cfd3420bdefc4d5c" compoundref="_se_ptl_comm_define_8h" startline="182">SRVT_RACE</references>
        <references refid="_se_ptl_comm_define_8h_1a77f91e01c5c1d6e63aeae4848cd17d45a823d1a771c071c7d6f2b560dc758920d" compoundref="_se_ptl_comm_define_8h" startline="183">SRVT_RECON</references>
        <references refid="_se_ptl_comm_define_8h_1a77f91e01c5c1d6e63aeae4848cd17d45a32121b6f4ca7f86ab06da20db0949f2b" compoundref="_se_ptl_comm_define_8h" startline="184">SRVT_VIEW</references>
        <references refid="_se_tool_8cpp_1a4d30fbe56257fc998ebc1346e53be0d8" compoundref="_se_tool_8cpp" startline="50" endline="73">StrCpy</references>
        <referencedby refid="class_race_server_1a287dc3e17be22595f717278e9deaa532" compoundref="src_2_se_race_svr_other_8cpp" startline="211" endline="273">StartRobotGame</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a31f56e2b018c43ae14c8bf73644b2520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceLoadEnd</definition>
        <argsstring>(SeCR_RaceLoadEnd *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceLoadEnd</name>
        <param>
          <type><ref refid="struct_se_c_r___race_load_end" kindref="compound">SeCR_RaceLoadEnd</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="8" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="213" bodyend="245"/>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_c_r___race_load_end_1aaa1b563ed41293c6547bdd2b3278c267" compoundref="_se_ptl___c_l___to___r_s_8h" startline="96">SeCR_RaceLoadEnd::dwRate</references>
        <references refid="struct_se_c_r___race_load_end_1a16f176834995961640bc8e8d9357e5e6" compoundref="_se_ptl___c_l___to___r_s_8h" startline="95">SeCR_RaceLoadEnd::eLoadType</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_race_mgr_1a066be1339f6f60af684da22a2e1f907a" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2287" endline="2321">SeRaceMgr::OnPlayerRaceLoadEnd</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1caa9d28ffc0e53c0fd9b80308db965d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceCmd</definition>
        <argsstring>(SeCR_RaceCmd *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceCmd</name>
        <param>
          <type><ref refid="struct_se_c_r___race_cmd" kindref="compound">SeCR_RaceCmd</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="9" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="247" bodyend="278"/>
        <references refid="struct_se_c_r___race_cmd_1aa59dd89e4503a559574bdd952e5a2277" compoundref="_se_ptl___c_l___to___r_s_8h" startline="107">SeCR_RaceCmd::acData</references>
        <references refid="struct_se_race_cmd_1a7a990239f830367580ce4aa46ff1371c" compoundref="_se_race_cmd_8h" startline="146">SeRaceCmd::dwCmd</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="struct_se_c_r___race_cmd_1a9f4237b6840566ebf814859efe7f17bd" compoundref="_se_ptl___c_l___to___r_s_8h" startline="106">SeCR_RaceCmd::iSize</references>
        <references refid="class_se_race_mgr_1ac57a5becc907d30900ed66012e769834" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2364" endline="2414">SeRaceMgr::OnPlayerRaceCmd</references>
        <references refid="_se_race_cmd_8h_1aeefd68b3ac453a8b06d8df8310f4666eaf6377d8f8aef71264b1bd906538d93f4" compoundref="_se_race_cmd_8h" startline="29">SRC_HERO_DIRECT_MOVE</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1abfebb008f1c1458d88b318390ec11382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceLeave</definition>
        <argsstring>(SeCR_RaceLeave *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceLeave</name>
        <param>
          <type><ref refid="struct_se_c_r___race_leave" kindref="compound">SeCR_RaceLeave</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="10" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="280" bodyend="292"/>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_race_mgr_1ad035a9b9b6bb4f73e3d343988eb6c9f5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2485" endline="2555">SeRaceMgr::OnPlayerRaceLeave</references>
        <references refid="class_se_race_room_mgr_1a337c88f7753fce325ed9daf56611302c" compoundref="src_2_se_race_room_mgr_8cpp" startline="404" endline="515">SeRaceRoomMgr::OnRaceLeave</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1adca9684a6852b7761749ae97cad2eab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceEndRace</definition>
        <argsstring>(SeCR_RaceEndRace *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceEndRace</name>
        <param>
          <type><ref refid="struct_se_c_r___race_end_race" kindref="compound">SeCR_RaceEndRace</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="11" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="294" bodyend="317"/>
        <references refid="struct_se_c_r___race_end_race_1abf99024f5bf801ab9226e9d2ee059692" compoundref="_se_ptl___c_l___to___r_s_8h" startline="130">SeCR_RaceEndRace::akPlayerInfo</references>
        <references refid="struct_se_c_r___race_end_race_1ac0c8c69e1239032cb7cca913de3c31a4" compoundref="_se_ptl___c_l___to___r_s_8h" startline="128">SeCR_RaceEndRace::bValid</references>
        <references refid="src_2_race_server_def_8h_1a748426d2b82721fbd41a5faeb15afcff" compoundref="src_2_race_server_def_8h" startline="179">DISCONNECR_PLAYER</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_c_r___race_end_race_1a2c103b9c3dd160b0a13df1ee7b0a2084" compoundref="_se_ptl___c_l___to___r_s_8h" startline="126">SeCR_RaceEndRace::dwRaceTime</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_match_player_1aaafdd0bf4da96713e4ab77cf474d889f" compoundref="src_2_se_match_player_8h" startline="92" endline="95">SeMatchPlayer::GetName</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="struct_se_c_r___race_end_race_1ad5962166503e94443d40990e6e6c8317" compoundref="_se_ptl___c_l___to___r_s_8h" startline="129">SeCR_RaceEndRace::iNums</references>
        <references refid="class_se_race_mgr_1a46c0349b994a94b954d97d802a2bee1a" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2557" endline="2627">SeRaceMgr::OnPlayerRaceEnd</references>
        <references refid="_se_file_log_8h_1ab19c516672348b15ddabafb0bfb9d0a7" compoundref="_se_file_log_8h" startline="89">SeLogDebug</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a0e80963fff8c9c3fe983ba68b6c3a50b" compoundref="src_2_se_match_player_8h" startline="13">SMPS_RACING</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa4d18e8e3cf1c5fba177f688bde4f0738" compoundref="_se_ptl_comm_define_8h" startline="45">SSD_MAX_ROOM_PLAYER</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa1cad298a8d7773611808fd9cd6d66fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceEndGuanqia</definition>
        <argsstring>(SeCR_RaceEndGuanqia *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceEndGuanqia</name>
        <param>
          <type><ref refid="struct_se_c_r___race_end_guanqia" kindref="compound">SeCR_RaceEndGuanqia</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="12" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="319" bodyend="342"/>
        <references refid="struct_se_c_r___race_end_guanqia_1acdecb98d5072bef192baf6d8219cfb0b" compoundref="_se_ptl___c_l___to___r_s_8h" startline="146">SeCR_RaceEndGuanqia::akPlayerInfo</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a22264eaaf1f04906d5d831f5e32e1888" compoundref="_se_ptl___c_l___to___r_s_8h" startline="144">SeCR_RaceEndGuanqia::bValid</references>
        <references refid="src_2_race_server_def_8h_1a748426d2b82721fbd41a5faeb15afcff" compoundref="src_2_race_server_def_8h" startline="179">DISCONNECR_PLAYER</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a629c66b15d98412039e0c65b43e34563" compoundref="_se_ptl___c_l___to___r_s_8h" startline="142">SeCR_RaceEndGuanqia::dwRaceTime</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_match_player_1aaafdd0bf4da96713e4ab77cf474d889f" compoundref="src_2_se_match_player_8h" startline="92" endline="95">SeMatchPlayer::GetName</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="struct_se_c_r___race_end_guanqia_1a3940dac3944d6e91cd7f75b84c9aca7f" compoundref="_se_ptl___c_l___to___r_s_8h" startline="145">SeCR_RaceEndGuanqia::iNums</references>
        <references refid="class_se_race_mgr_1a18b7230ee7e6d15825ce5f8246f7302c" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2629" endline="2691">SeRaceMgr::OnPlayerGuanqiaEnd</references>
        <references refid="_se_file_log_8h_1ab19c516672348b15ddabafb0bfb9d0a7" compoundref="_se_file_log_8h" startline="89">SeLogDebug</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a0e80963fff8c9c3fe983ba68b6c3a50b" compoundref="src_2_se_match_player_8h" startline="13">SMPS_RACING</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa4d18e8e3cf1c5fba177f688bde4f0738" compoundref="_se_ptl_comm_define_8h" startline="45">SSD_MAX_ROOM_PLAYER</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aea34d836902daf4b3cda8a714e3257d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SelHeroChoiceHero</definition>
        <argsstring>(SeCR_SelHeroChoiceHero *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SelHeroChoiceHero</name>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_choice_hero" kindref="compound">SeCR_SelHeroChoiceHero</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="13" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="344" bodyend="375"/>
        <references refid="struct_se_c_r___sel_hero_choice_hero_1a0260e245b7928c726f16f8e89476ac8e" compoundref="_se_ptl___c_l___to___r_s_8h" startline="157">SeCR_SelHeroChoiceHero::bDreamHero</references>
        <references refid="struct_se_c_r___sel_hero_choice_hero_1a9145eaf8450b90d6274f9c80afe323c3" compoundref="_se_ptl___c_l___to___r_s_8h" startline="156">SeCR_SelHeroChoiceHero::dwHeroCardID</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_race_room_1ac9ea7d81816dc06c35f26f0ac2854673" compoundref="src_2_se_race_room_mgr_def_8h" startline="74">SeRaceRoom::eRoomState</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="class_se_race_room_mgr_1a806bdfea8ed0bd338b03c4ef82578cfd" compoundref="src_2_se_race_room_mgr_8cpp" startline="367" endline="376">SeRaceRoomMgr::GetRoom</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_match_player_1ae23139dfd64a1724a199336c87df818f" compoundref="src_2_se_match_player_8cpp" startline="82" endline="94">SeMatchPlayer::HasHero</references>
        <references refid="class_se_race_room_mgr_1ad636d2a05537aac6086c1834aa281269" compoundref="src_2_se_race_room_mgr_8cpp" startline="554" endline="574">SeRaceRoomMgr::OnPlayerChoiceHero</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_race_server_1a0a4431e66fa155e9a51c770f2b4fe0ce">SendRBL_SelectHeroReq</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a7f3153bb5dbe0580e1c8efffdb086226" compoundref="src_2_se_match_player_8h" startline="11">SMPS_SELECT_HERO</references>
        <references refid="src_2_se_race_room_mgr_def_8h_1a8c527d8512227a77571890dff531fefead19b036a5ff4dcce7c4989a48125befb" compoundref="src_2_se_race_room_mgr_def_8h" startline="10">SRRS_SELHERO</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7633530b1b7fa0b761351376da10e885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SelHeroCancelHero</definition>
        <argsstring>(SeCR_SelHeroCancelHero *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SelHeroCancelHero</name>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_cancel_hero" kindref="compound">SeCR_SelHeroCancelHero</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="14" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="377" bodyend="390"/>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_race_room_mgr_1a388ba64cbe2e2c0ae1cb93974235a5bb" compoundref="src_2_se_race_room_mgr_8cpp" startline="576" endline="635">SeRaceRoomMgr::OnPlayerCancelHero</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4463c8682eb3a8ab7d7377daa315dc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SelHeroPrapared</definition>
        <argsstring>(SeCR_SelHeroPrapared *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SelHeroPrapared</name>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_prapared" kindref="compound">SeCR_SelHeroPrapared</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="15" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="392" bodyend="405"/>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_race_room_mgr_1a85eb473e818fc5cdadd60b8d72bc50b1" compoundref="src_2_se_race_room_mgr_8cpp" startline="637" endline="653">SeRaceRoomMgr::OnPlayerSelectHeroReady</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa1922fca73e33a548d0303d2e41f08f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceReportSyn</definition>
        <argsstring>(SeCR_RaceReportSyn *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceReportSyn</name>
        <param>
          <type><ref refid="struct_se_c_r___race_report_syn" kindref="compound">SeCR_RaceReportSyn</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="16" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="407" bodyend="420"/>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_race_mgr_1a7bb80ad2b8505489609418eb85f13f14" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2693" endline="2804">SeRaceMgr::OnPlayerReportSyn</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8f6bb836b9c7ef2a69ec4bb0131be4e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_Talk</definition>
        <argsstring>(SeCR_Talk *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_Talk</name>
        <param>
          <type><ref refid="struct_se_c_r___talk" kindref="compound">SeCR_Talk</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="17" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="422" bodyend="456"/>
        <references refid="struct_se_c_r___talk_1a466c57d78ec72210dac7a21b38cb7747" compoundref="_se_ptl___c_l___to___r_s_8h" startline="193">SeCR_Talk::acMessage</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_c_r___talk_1a36bf9f17074db21aec45e8cf61f98880" compoundref="_se_ptl___c_l___to___r_s_8h" startline="192">SeCR_Talk::eType</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="class_se_race_room_mgr_1a806bdfea8ed0bd338b03c4ef82578cfd" compoundref="src_2_se_race_room_mgr_8cpp" startline="367" endline="376">SeRaceRoomMgr::GetRoom</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_race_room_mgr_1af07714f0f0574d66d77003d0eb22e839" compoundref="src_2_se_race_room_mgr_8cpp" startline="867" endline="892">SeRaceRoomMgr::OnPlayerTalk</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa35507cfa9abf7945ba106ee25873808b" compoundref="_se_ptl_comm_define_8h" startline="37">SDD_MAIL_MSG_LEN</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a0e80963fff8c9c3fe983ba68b6c3a50b" compoundref="src_2_se_match_player_8h" startline="13">SMPS_RACING</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a7f3153bb5dbe0580e1c8efffdb086226" compoundref="src_2_se_match_player_8h" startline="11">SMPS_SELECT_HERO</references>
        <references refid="_se_tool_8cpp_1a4d30fbe56257fc998ebc1346e53be0d8" compoundref="_se_tool_8cpp" startline="50" endline="73">StrCpy</references>
        <references refid="_se_ptl_comm_define_8h_1a1c935381ad9f824965c7b1b128e32466ae43735e5ca76c88dfedcc2a10d82be07" compoundref="_se_ptl_comm_define_8h" startline="412">STT_NORMAL_TALK</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0327ec22cd90fde20725c9c6f1242551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceRobotLogin</definition>
        <argsstring>(SeCR_RaceRobotLogin *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceRobotLogin</name>
        <param>
          <type><ref refid="struct_se_c_r___race_robot_login" kindref="compound">SeCR_RaceRobotLogin</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="18" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="458" bodyend="485"/>
        <references refid="src_2_race_server_def_8h_1a748426d2b82721fbd41a5faeb15afcff" compoundref="src_2_race_server_def_8h" startline="179">DISCONNECR_PLAYER</references>
        <references refid="struct_se_c_r___race_robot_login_1ac5fb215463344e895322eb46da1900ac" compoundref="_se_ptl___c_l___to___r_s_8h" startline="205">SeCR_RaceRobotLogin::dwMapID</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_test_robot_1a8b0405ad87958072270dfc8f6ec82699" compoundref="src_2_race_server_def_8h" startline="204">SeTestRobot::dwPlayerID</references>
        <references refid="struct_se_c_r___race_robot_login_1aefb094b103ee1b1e98c99a79cb526fef" compoundref="_se_ptl___c_l___to___r_s_8h" startline="204">SeCR_RaceRobotLogin::dwPlayerID</references>
        <references refid="struct_se_connect_1ae90bd507e6e1e36dc4ee9e4d5e849cd3" compoundref="_src_2_match_server_def_8h" startline="65">SeConnect::dwStateTime</references>
        <references refid="struct_se_connect_1a149d84058a462e8833764a6dd2aa2d04" compoundref="_src_2_match_server_def_8h" startline="64">SeConnect::eState</references>
        <references refid="class_race_server_1a168a19b0f8e671d9f95604a84728547a" compoundref="src_2_race_server_8cpp" startline="1345" endline="1356">GetConnectByID</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="struct_se_test_robot_1acaaa41f47ae59ac8a3312cd4542b2e27" compoundref="src_2_race_server_def_8h" startline="205">SeTestRobot::kSock</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1adeb19bd97b6c95a9601128046d4597ae" compoundref="src_2_race_server_8h" startline="131">m_kWaitRobot</references>
        <references refid="_src_2_town_server_def_8h_1a66f85fac7c2312bb587ad3f33324085ea8294b81023de7598689131414ad4d5b3" compoundref="_src_2_town_server_def_8h" startline="84">SCS_VALID_OK</references>
        <references refid="_se_file_log_8h_1ab19c516672348b15ddabafb0bfb9d0a7" compoundref="_se_file_log_8h" startline="89">SeLogDebug</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad4d3f26f7c58299a8bb30a7917e87f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_Ping</definition>
        <argsstring>(SeCR_Ping *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_Ping</name>
        <param>
          <type><ref refid="struct_se_c_r___ping" kindref="compound">SeCR_Ping</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="19" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="487" bodyend="495"/>
        <references refid="struct_se_c_r___ping_1a702582bf849692030620f06f4b63c15a" compoundref="_se_ptl___c_l___to___r_s_8h" startline="214">SeCR_Ping::dwPackIndex</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_race_server_1a62b1078c2e0ce17af3ca58120209d824">SendRC_PingRet</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0851d9bb71f9ae9f22030946ffc22f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_BuyRaceItem</definition>
        <argsstring>(SeCR_BuyRaceItem *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_BuyRaceItem</name>
        <param>
          <type><ref refid="struct_se_c_r___buy_race_item" kindref="compound">SeCR_BuyRaceItem</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="20" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="497" bodyend="518"/>
        <references refid="struct_se_race_cmd___town_item_1aaa9e1ec3dd8e1cfb6a22c9dfc043b746" compoundref="_se_race_cmd_8h" startline="1056">SeRaceCmd_TownItem::bSuccess</references>
        <references refid="struct_se_c_r___buy_race_item_1a7dfa1210acb00b911007c983ea43c0dd" compoundref="_se_ptl___c_l___to___r_s_8h" startline="224">SeCR_BuyRaceItem::dwItemTypeID</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_race_cmd___town_item_1a12a29a21c863e2ba7a1a50ee1e46c0ce" compoundref="_se_race_cmd_8h" startline="1058">SeRaceCmd_TownItem::dwTargetUnitID</references>
        <references refid="struct_se_c_r___buy_race_item_1a21a20d07a5e8494176416c7a179cbc49" compoundref="_se_ptl___c_l___to___r_s_8h" startline="225">SeCR_BuyRaceItem::dwTarUnitID</references>
        <references refid="struct_se_race_cmd___town_item_1a20bd5bc6ec19d9002abdf3e2fcd65dbc" compoundref="_se_race_cmd_8h" startline="1057">SeRaceCmd_TownItem::dwTownItemTypeID</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_race_mgr_1a869c9bc3a51ae616f19da45cc63cbc63" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2323" endline="2343">SeRaceMgr::OnPlayerBuyRaceItem</references>
        <references refid="class_se_race_mgr_1ac57a5becc907d30900ed66012e769834" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2364" endline="2414">SeRaceMgr::OnPlayerRaceCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a123a889949008fc47902325dc28cbcb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_GetHeroInfo</definition>
        <argsstring>(SeCR_GetHeroInfo *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_GetHeroInfo</name>
        <param>
          <type><ref refid="struct_se_c_r___get_hero_info" kindref="compound">SeCR_GetHeroInfo</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="21" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="520" bodyend="531"/>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_race_mgr_1a9ab8d7b4289a6a0d4e1fe579f41d30ea" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2451" endline="2465">SeRaceMgr::OnGetHeroInfo</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a043b70937574d7f5e24c1d8b7a82e95b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_ReplayReport</definition>
        <argsstring>(SeCR_ReplayReport *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_ReplayReport</name>
        <param>
          <type><ref refid="struct_se_c_r___replay_report" kindref="compound">SeCR_ReplayReport</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="22" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="533" bodyend="543"/>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_race_mgr_1ac764bb612b9b7dd7c028d27d74ada210" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2416" endline="2438">SeRaceMgr::OnPlayerRaceReplayReport</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1afacefe00ea688058623e130755f5922b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SetEquipSetReq</definition>
        <argsstring>(SeCR_SetEquipSetReq *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SetEquipSetReq</name>
        <param>
          <type><ref refid="struct_se_c_r___set_equip_set_req" kindref="compound">SeCR_SetEquipSetReq</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="23" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="545" bodyend="573"/>
        <references refid="struct_se_c_r___set_equip_set_req_1a36fe23a35484072819efa943ad863e08" compoundref="_se_ptl___c_l___to___r_s_8h" startline="261">SeCR_SetEquipSetReq::byIndex</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_race_room_1ac9ea7d81816dc06c35f26f0ac2854673" compoundref="src_2_se_race_room_mgr_def_8h" startline="74">SeRaceRoom::eRoomState</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="class_se_race_room_mgr_1a806bdfea8ed0bd338b03c4ef82578cfd" compoundref="src_2_se_race_room_mgr_8cpp" startline="367" endline="376">SeRaceRoomMgr::GetRoom</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_race_server_1acdf817ed9d5ad15bb4fabf3e03fe6800">SendRBL_SetEquipSetNtf</references>
        <references refid="class_race_server_1af09262c79ab448b1478854997ba76390">SendRC_SetEquipSetAck</references>
        <references refid="class_se_match_player_1add13d4b142256dc147ead87f72026478" compoundref="src_2_se_match_player_8cpp" startline="150" endline="156">SeMatchPlayer::setEquipSetIndex</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a7f3153bb5dbe0580e1c8efffdb086226" compoundref="src_2_se_match_player_8h" startline="11">SMPS_SELECT_HERO</references>
        <references refid="src_2_se_race_room_mgr_def_8h_1a8c527d8512227a77571890dff531fefead19b036a5ff4dcce7c4989a48125befb" compoundref="src_2_se_race_room_mgr_def_8h" startline="10">SRRS_SELHERO</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5eb54db8dd16183d4e12fafd2925f815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SetAvatarReq</definition>
        <argsstring>(SeCR_SetAvatarReq *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SetAvatarReq</name>
        <param>
          <type><ref refid="struct_se_c_r___set_avatar_req" kindref="compound">SeCR_SetAvatarReq</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="24" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeCRProcess.cpp" bodystart="575" bodyend="609"/>
        <references refid="_avatar__table_8hpp_1a00c21932f6b628f8c05b46b77b511c0fa861f8fe92f9060c6a17090cee4da1b1d" compoundref="_avatar__table_8hpp" startline="13">AVATAR_AVATARTYPE_SKIN</references>
        <references refid="_avatar__table_8hpp_1a00c21932f6b628f8c05b46b77b511c0fa2e6294722e8212fb6dbf9bc5e7f042be" compoundref="_avatar__table_8hpp" startline="16">AVATAR_AVATARTYPE_TRAILING</references>
        <references refid="struct_se_c_r___set_avatar_req_1a35e40e2d68dc1e79958ba1ab93aff900" compoundref="_se_ptl___c_l___to___r_s_8h" startline="271">SeCR_SetAvatarReq::dwItemID</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_race_room_1ac9ea7d81816dc06c35f26f0ac2854673" compoundref="src_2_se_race_room_mgr_def_8h" startline="74">SeRaceRoom::eRoomState</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_match_player_1a9ff47a8eb6151009206a9d91b8c10352" compoundref="src_2_se_match_player_8h" startline="47" endline="50">SeMatchPlayer::GetID</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="class_se_race_room_mgr_1a806bdfea8ed0bd338b03c4ef82578cfd" compoundref="src_2_se_race_room_mgr_8cpp" startline="367" endline="376">SeRaceRoomMgr::GetRoom</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="class_se_match_player_1adb7cd5782a21f1a41b10c7ecf692b67b" compoundref="src_2_se_match_player_8h" startline="41" endline="41">SeMatchPlayer::GetSelHeroID</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_race_server_1a3d67284e8562058c54cd0cc7504c5ea3">SendRBL_SetAvatarNtf</references>
        <references refid="class_race_server_1a1584f8fba3994c3547100c5af741eec0">SendRC_SetAvatarAck</references>
        <references refid="class_se_match_player_1a5dbb5adc727928afc7f8bd0b3df1c3d2" compoundref="src_2_se_match_player_8cpp" startline="252" endline="278">SeMatchPlayer::setAvatar</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a7f3153bb5dbe0580e1c8efffdb086226" compoundref="src_2_se_match_player_8h" startline="11">SMPS_SELECT_HERO</references>
        <references refid="src_2_se_race_room_mgr_def_8h_1a8c527d8512227a77571890dff531fefead19b036a5ff4dcce7c4989a48125befb" compoundref="src_2_se_race_room_mgr_def_8h" startline="10">SRRS_SELHERO</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac14c1d5d9ecd31308b15c01779e7114c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_Register</definition>
        <argsstring>(DWord dwServerID, DWord dwAreaID, const SeNetAddr &amp;kAddrToMatch, const SeNetAddr &amp;kAddrToMatchUdp, int iRegisterCount, bool bOpen, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_Register</name>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_net_addr" kindref="compound">SeNetAddr</ref> &amp;</type>
          <declname>kAddrToMatch</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_net_addr" kindref="compound">SeNetAddr</ref> &amp;</type>
          <declname>kAddrToMatchUdp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iRegisterCount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOpen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" compoundref="src_2_race_server_8cpp" startline="1152" endline="1170">RegisterToMS</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a968ec4bd6adc4afb3b03b3f702ed5c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_HeartPackage</definition>
        <argsstring>(DWord dwCurrRaceNum, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_HeartPackage</name>
        <param>
          <type>DWord</type>
          <declname>dwCurrRaceNum</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="3" column="1"/>
        <referencedby refid="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" compoundref="src_2_race_server_8cpp" startline="1412" endline="1438">UpdateMSHeartPackage</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a02f69f7cdff4b7a63256d2f2f05da7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ValidatePlayerInfoRet</definition>
        <argsstring>(DWord dwSessionID, const SeMatchValidateResult &amp;eResult, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ValidatePlayerInfoRet</name>
        <param>
          <type>DWord</type>
          <declname>dwSessionID</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_define_8h_1a7744414426a2ffadcdaa72f8ceabe6f5" kindref="member">SeMatchValidateResult</ref> &amp;</type>
          <declname>eResult</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="4" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1af726c3559b536f0416cb60f2d47f9b7f" compoundref="src_2_se_race_room_mgr_8cpp" startline="240" endline="312">SeRaceRoomMgr::CreateRoom</referencedby>
        <referencedby refid="class_se_race_room_mgr_1ac66fe751555472b32cc1b6c017259d78" compoundref="src_2_se_race_room_mgr_8cpp" startline="517" endline="552">SeRaceRoomMgr::OnProcessRepeatPlayer</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a337c88f7753fce325ed9daf56611302c" compoundref="src_2_se_race_room_mgr_8cpp" startline="404" endline="515">SeRaceRoomMgr::OnRaceLeave</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a123472270ba397c8a56c80c61e4cafc0" compoundref="src_2_se_race_room_mgr_8cpp" startline="925" endline="966">SeRaceRoomMgr::UpdateWaitRoom</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae4c02fce35d50665888d5e17958c83fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_CommRaceMsg</definition>
        <argsstring>(DWord dwMatchSession, const SeRaceSvrCommMsg &amp;eMsg, DWord dwParam, int iParam, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_CommRaceMsg</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_define_8h_1a6fcdce81cb421a7d62217407f549cb81" kindref="member">SeRaceSvrCommMsg</ref> &amp;</type>
          <declname>eMsg</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iParam</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="5" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1ac66fe751555472b32cc1b6c017259d78" compoundref="src_2_se_race_room_mgr_8cpp" startline="517" endline="552">SeRaceRoomMgr::OnProcessRepeatPlayer</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a337c88f7753fce325ed9daf56611302c" compoundref="src_2_se_race_room_mgr_8cpp" startline="404" endline="515">SeRaceRoomMgr::OnRaceLeave</referencedby>
        <referencedby refid="class_se_race_room_mgr_1abdd3f7321667415ee7c9282f526f60f6" compoundref="src_2_se_race_room_mgr_8cpp" startline="1169" endline="1204">SeRaceRoomMgr::StartLoad</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a95b7a596c0bd1c7525288e11bc45c87d" compoundref="src_2_se_race_room_mgr_8cpp" startline="1100" endline="1167">SeRaceRoomMgr::UpdateRaceEndTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aca0ab80078afb5ca2d69f809dacdbc97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceGetCardInfo</definition>
        <argsstring>(DWord dwSession, DWord dwPlayerID, DWord dwHeroTypeID, DWord dwMapTypeID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceGetCardInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroTypeID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapTypeID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a25c8b9d20d5ad61cf81b4b23e1ce9669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_UpdateMisc</definition>
        <argsstring>(DWord dwPlayerID, DWord dwSession, const SeMMMiscType &amp;eType, int iValue, DWord dwParam1, DWord dwParam2, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_UpdateMisc</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_define_8h_1a0439ce57b5c52e594faa12cea06edf1d" kindref="member">SeMMMiscType</ref> &amp;</type>
          <declname>eType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iValue</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam1</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="7" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1a66dc5df11e24b10c6a705b4db96816d2" compoundref="src_2_se_race_room_mgr_8cpp" startline="1839" endline="1862">SeRaceRoomMgr::BeginRaceView</referencedby>
        <referencedby refid="class_se_race_room_mgr_1ada33be9c67ca2235efacde336cb0774a" compoundref="src_2_se_race_room_mgr_8cpp" startline="747" endline="761">SeRaceRoomMgr::JoinRoomRecon</referencedby>
        <referencedby refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" compoundref="src_2_race_server_8cpp" startline="395" endline="463">OnNetDisconnect</referencedby>
        <referencedby refid="class_race_server_1af108d3fdc437f3f84b1fbb5f39b059b5" compoundref="src_2_race_server_8cpp" startline="544" endline="586">OnNetUdpDisconnect</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a337c88f7753fce325ed9daf56611302c" compoundref="src_2_se_race_room_mgr_8cpp" startline="404" endline="515">SeRaceRoomMgr::OnRaceLeave</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a856181688047427169fc34e85888a7dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceEndReport</definition>
        <argsstring>(DWord dwMatchSession, DWord dwTime, DWord dwMapID, const SeMatchRaceType &amp;eMatchType, int iNum, const SeWSRaceSendInfo *akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceEndReport</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTime</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a841059e2ab065b3a431e8c93193ec60c" kindref="member">SeMatchRaceType</ref> &amp;</type>
          <declname>eMatchType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_w_s_race_send_info" kindref="compound">SeWSRaceSendInfo</ref> *</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="8" column="1"/>
        <referencedby refid="class_se_race_mgr_1a3c0ab40ff6182d79cf6c82b3929b283e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3198" endline="3257">SeRaceMgr::OnCheckRaceEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3b8624cfa66faa2d7b742c23927bbb32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceEndReport</definition>
        <argsstring>(DWord dwMatchSession, DWord dwTime, DWord dwMapID, const SeMatchRaceType &amp;eMatchType, int iNum, std::vector&lt; SeWSRaceSendInfo &gt; &amp;akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceEndReport</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTime</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a841059e2ab065b3a431e8c93193ec60c" kindref="member">SeMatchRaceType</ref> &amp;</type>
          <declname>eMatchType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_w_s_race_send_info" kindref="compound">SeWSRaceSendInfo</ref> &gt; &amp;</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3779a8aa79363a8f52bf0fd9a670b4dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceEndGuanqia</definition>
        <argsstring>(DWord dwMatchSession, DWord dwTime, DWord dwMapID, int iNum, const SeWSGuanqiaSendInfo *akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceEndGuanqia</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTime</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_w_s_guanqia_send_info" kindref="compound">SeWSGuanqiaSendInfo</ref> *</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="10" column="1"/>
        <referencedby refid="class_se_race_mgr_1aae206811ec7efcdd3fa28766d8d75327" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3259" endline="3300">SeRaceMgr::OnCheckGuanqiaEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1afbd8e6c3537b3feb8a865ad4b6cf30c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceEndGuanqia</definition>
        <argsstring>(DWord dwMatchSession, DWord dwTime, DWord dwMapID, int iNum, std::vector&lt; SeWSGuanqiaSendInfo &gt; &amp;akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceEndGuanqia</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTime</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_w_s_guanqia_send_info" kindref="compound">SeWSGuanqiaSendInfo</ref> &gt; &amp;</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad551e4872f5a31815152d030bf0b7aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_MatchRoomLoadInfo</definition>
        <argsstring>(DWord dwSession, int iNum, const SeMatchRoomLoadInfo *akLoadInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_MatchRoomLoadInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_match_room_load_info" kindref="compound">SeMatchRoomLoadInfo</ref> *</type>
          <declname>akLoadInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="12" column="1"/>
        <referencedby refid="class_race_server_1abba46baa0ac501923d0667fb3495c9c8" compoundref="src_2_se_race_svr_other_8cpp" startline="78" endline="96">OnSendMatchRoomLoadInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a93ab495a2dd2adf310b5e62f0dfa1558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_MatchRoomLoadInfo</definition>
        <argsstring>(DWord dwSession, int iNum, std::vector&lt; SeMatchRoomLoadInfo &gt; &amp;akLoadInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_MatchRoomLoadInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_match_room_load_info" kindref="compound">SeMatchRoomLoadInfo</ref> &gt; &amp;</type>
          <declname>akLoadInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af0b257e59ee7711f97d4f528c80911b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RefreshConfigInfo</definition>
        <argsstring>(bool bOpen, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RefreshConfigInfo</name>
        <param>
          <type>bool</type>
          <declname>bOpen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="14" column="1"/>
        <referencedby refid="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" compoundref="src_2_race_server_8cpp" startline="588" endline="614">LoadConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac1812200ef246163a0d065f80f2e75fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReconQuerySuccess</definition>
        <argsstring>(DWord dwRoomID, DWord dwAreaID, DWord dwServerID, DWord dwPlayerID, int iSeat, int iOffset, DWord dwFrame, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReconQuerySuccess</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwFrame</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="15" column="1"/>
        <referencedby refid="class_race_server_1aea2d68398cba87995d032933b2fd00d1" compoundref="src_2_se_m_r_process_8cpp" startline="88" endline="103">ProcessMR_ReconQuery</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af806e16dec8877195afbdfa07a0553e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReconQueryFail</definition>
        <argsstring>(const SeReconQueryFailReason &amp;eReason, DWord dwAreaID, DWord dwServerID, DWord dwPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReconQueryFail</name>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a1db4f0d41049e036acff5dfb4a360e9c" kindref="member">SeReconQueryFailReason</ref> &amp;</type>
          <declname>eReason</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="16" column="1"/>
        <referencedby refid="class_race_server_1aea2d68398cba87995d032933b2fd00d1" compoundref="src_2_se_m_r_process_8cpp" startline="88" endline="103">ProcessMR_ReconQuery</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a034cc87f5200daf062a70c32e07e4abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ViewQuerySuccess</definition>
        <argsstring>(DWord dwSession, DWord dwAreaID, DWord dwServerID, DWord dwPlayerID, int iViewDelay, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ViewQuerySuccess</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iViewDelay</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="17" column="1"/>
        <referencedby refid="class_race_server_1a2a5c41dff4c427ed3563ac6b43aa1844" compoundref="src_2_se_m_r_process_8cpp" startline="105" endline="117">ProcessMR_ViewQuery</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a40641fa80b4617b9438efd6128070f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ViewQueryFail</definition>
        <argsstring>(const SeViewQueryFailReason &amp;eReason, DWord dwAreaID, DWord dwServerID, DWord dwPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ViewQueryFail</name>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a099f96303c4987784812a08a343a5878" kindref="member">SeViewQueryFailReason</ref> &amp;</type>
          <declname>eReason</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="18" column="1"/>
        <referencedby refid="class_race_server_1a2a5c41dff4c427ed3563ac6b43aa1844" compoundref="src_2_se_m_r_process_8cpp" startline="105" endline="117">ProcessMR_ViewQuery</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a822c5067cdf25dcb1f94fa5b47f456e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReconViewValid</definition>
        <argsstring>(DWord dwSession, DWord dwPlayerID, DWord dwKey, const SeRaceValidType &amp;eValidType, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReconViewValid</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwKey</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a77f91e01c5c1d6e63aeae4848cd17d45" kindref="member">SeRaceValidType</ref> &amp;</type>
          <declname>eValidType</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="19" column="1"/>
        <referencedby refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" compoundref="src_2_se_c_r_process_8cpp" startline="52" endline="211">ProcessCR_RaceValidate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a76caa9d1c4894aae95495d0630a4ace5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReLoadRoomInfoList</definition>
        <argsstring>(int iNum, const SeReLoadRoomInfo *akRoomInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReLoadRoomInfoList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_re_load_room_info" kindref="compound">SeReLoadRoomInfo</ref> *</type>
          <declname>akRoomInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="20" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1a8cbcbb765efc9f99fd80024cc04b8307" compoundref="src_2_se_race_room_mgr_8cpp" startline="894" endline="923">SeRaceRoomMgr::UpdateReSendRoomList</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ade4cd702229ee51f69c6758988bbe96d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReLoadRoomInfoList</definition>
        <argsstring>(int iNum, std::vector&lt; SeReLoadRoomInfo &gt; &amp;akRoomInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReLoadRoomInfoList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_re_load_room_info" kindref="compound">SeReLoadRoomInfo</ref> &gt; &amp;</type>
          <declname>akRoomInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2ec6c2db0f8c73b9ce9ff7985d4e32f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_MatchRaceLoad</definition>
        <argsstring>(DWord dwRoomSession, DWord dwMapID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_MatchRaceLoad</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="22" column="1"/>
        <referencedby refid="class_se_race_room_mgr_1adfc8899af32417078035330bff70a344" compoundref="src_2_se_race_room_mgr_8cpp" startline="1056" endline="1097">SeRaceRoomMgr::UpdateReady</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aea2f7f66f5b8fb659a5c98e707047c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceBuy</definition>
        <argsstring>(DWord dwSession, DWord dwPlayerID, int iType, DWord dwParam1, DWord dwParam2, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceBuy</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iType</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam1</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="23" column="1"/>
        <referencedby refid="class_se_race_mgr_1a869c9bc3a51ae616f19da45cc63cbc63" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2323" endline="2343">SeRaceMgr::OnPlayerBuyRaceItem</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0f06eb120b9664d1bc4919682df62ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_AddIncompleteRace</definition>
        <argsstring>(DWord dwRoomSession, int iSeat, DWord dwPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_AddIncompleteRace</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomSession</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="24" column="1"/>
        <referencedby refid="class_se_match_recon_mgr_1aea63f9cf7ed122c6d46fb413743b9cd7" compoundref="src_2_se_recon_mgr_8cpp" startline="34" endline="98">SeMatchReconMgr::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1b1a93f99924c649fa0cba53884be3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RemoveIncompleteRace</definition>
        <argsstring>(DWord dwRoomSession, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RemoveIncompleteRace</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomSession</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6fcd8a15bace1837ee890288e0bc7cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_UpdateIncompleteRace</definition>
        <argsstring>(DWord dwRoomSession, int iSeat, bool bSeat, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_UpdateIncompleteRace</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomSession</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSeat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="26" column="1"/>
        <referencedby refid="class_se_match_recon_mgr_1a1af3dda9ff420b886f35b625a5e03745" compoundref="src_2_se_recon_mgr_8cpp" startline="286" endline="303">SeMatchReconMgr::AddRaceSeat</referencedby>
        <referencedby refid="class_se_match_recon_mgr_1a276514ca42b97b0657128f4b81d4bd7c" compoundref="src_2_se_recon_mgr_8cpp" startline="305" endline="323">SeMatchReconMgr::RemoveRaceSeat</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a091a0aa06d42120d81b6bd0328dd357c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ResIncmpRaceSeatBaseInfo</definition>
        <argsstring>(DWord dwRoomID, int iNum, const SeSeatBaseInfo *oIncmpRaceBaseInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ResIncmpRaceSeatBaseInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_seat_base_info" kindref="compound">SeSeatBaseInfo</ref> *</type>
          <declname>oIncmpRaceBaseInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="27" column="1"/>
        <referencedby refid="class_se_race_mgr_1a261f7138e01869ea6bbbcce029d3c90d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3890" endline="3911">SeRaceMgr::OnRaceKDA</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8dd27f666e7b92029d1dce3cde8c41fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ResIncmpRaceSeatBaseInfo</definition>
        <argsstring>(DWord dwRoomID, int iNum, std::vector&lt; SeSeatBaseInfo &gt; &amp;oIncmpRaceBaseInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ResIncmpRaceSeatBaseInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_seat_base_info" kindref="compound">SeSeatBaseInfo</ref> &gt; &amp;</type>
          <declname>oIncmpRaceBaseInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac3544c0db3d315a02e92be55310e23df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRMData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRMData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="31" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRMSend.cpp" bodystart="7" bodyend="23"/>
        <references refid="_se_ptl___r_s___to___m_s_8h_1a4902cdf521367c85dddfd168fd019783abadbcf4249d0898e8ce5827eec5803d7" compoundref="_se_ptl___r_s___to___m_s_8h" startline="10">CMD_RM_HEARTPACKAGE</references>
        <references refid="_se_ptl___r_s___to___m_s_8h_1a4902cdf521367c85dddfd168fd019783a0bb7debf6608e7485f9a48e4135b438f" compoundref="_se_ptl___r_s___to___m_s_8h" startline="9">CMD_RM_REGISTER</references>
        <references refid="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" compoundref="src_2_race_server_8cpp" startline="1177" endline="1184">IsMSReady</references>
        <references refid="struct_se_server_data_1a2777bbfd27a6afe42ebd71c5d14010a0" compoundref="_se_server_define_8h" startline="19">SeServerData::kSock</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="struct_se_c_m_d_1a2efa122a60040d09cfca777f9155394c" compoundref="_se_ptl_define_8h" startline="97">SeCMD::wCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a011cf29ff6d4b802529b7fd4ee96e648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessMRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessMRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a72f7359b8a6c43741fa85a96e796fef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessMR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessMR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="7" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ab40781b3f26bee9ecf2847769400b3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_RegisterRet</definition>
        <argsstring>(SeMR_RegisterRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_RegisterRet</name>
        <param>
          <type><ref refid="struct_se_m_r___register_ret" kindref="compound">SeMR_RegisterRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="21" bodyend="54"/>
        <references refid="struct_se_server_data_1a4d91e2d15b4bc404ebc4ec42254ac770" compoundref="_se_server_define_8h" startline="21">SeServerData::bRegistered</references>
        <references refid="struct_se_m_r___register_ret_1ae141f5805476290b8572e1336735bde2" compoundref="_se_ptl___m_s___to___r_s_8h" startline="51">SeMR_RegisterRet::bRunning</references>
        <references refid="struct_se_server_data_1a6c75241d7cd68409f25f383feb838ca3" compoundref="_se_server_define_8h" startline="24">SeServerData::dwHeartPackageTime</references>
        <references refid="struct_se_race_config_1a382a646846d8fb8918f0c8b7c1d1e474" compoundref="src_2_race_server_def_8h" startline="91">SeRaceConfig::dwServerID</references>
        <references refid="struct_se_m_r___register_ret_1aca649fecb569d5500dda5b581716d725" compoundref="_se_ptl___m_s___to___r_s_8h" startline="50">SeMR_RegisterRet::eRet</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="_se_tool_8h_1ada81d4ae5d39c42af0a02b45f4a6f715" compoundref="_se_tool_8h" startline="66">GetID2Str</references>
        <references refid="class_race_server_1af734c61940c3f436a681ab8726d54ce7" compoundref="src_2_race_server_8h" startline="115">m_iRegisterCount</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="class_se_race_room_mgr_1ad3ac9e2fccd199573485b01deabe7a19" compoundref="src_2_se_race_room_mgr_8cpp" startline="141" endline="157">SeRaceRoomMgr::OnReSendRoomInfo</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_race_server_1ac49797d4eba032d969df83d1c76ddbea" compoundref="src_2_race_server_8cpp" startline="1172" endline="1175">SetMSReady</references>
        <references refid="_se_server_define_8h_1a83f922065d39660cc6ff3ff3e193daa1ac80442ea100ef13c4582723562f3ea53" compoundref="_se_server_define_8h" startline="109">SRR_REPEAT</references>
        <references refid="_se_server_define_8h_1a83f922065d39660cc6ff3ff3e193daa1a9066cbcd85981ad03cd92ba399a18338" compoundref="_se_server_define_8h" startline="108">SRR_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a84bf84fd9809f77ef3c287a6f93e2826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_HeartPackageRet</definition>
        <argsstring>(SeMR_HeartPackageRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_HeartPackageRet</name>
        <param>
          <type><ref refid="struct_se_m_r___heart_package_ret" kindref="compound">SeMR_HeartPackageRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="56" bodyend="59"/>
        <references refid="struct_se_server_data_1a6c75241d7cd68409f25f383feb838ca3" compoundref="_se_server_define_8h" startline="24">SeServerData::dwHeartPackageTime</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a758f1e202feae4a51ec7bc594f00d3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ValidatePlayerInfo</definition>
        <argsstring>(SeMR_ValidatePlayerInfo *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ValidatePlayerInfo</name>
        <param>
          <type><ref refid="struct_se_m_r___validate_player_info" kindref="compound">SeMR_ValidatePlayerInfo</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="8" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="61" bodyend="76"/>
        <references refid="struct_se_m_r___validate_player_info_1a699982a45c27abc49836a661435ae677" compoundref="_se_ptl___m_s___to___r_s_8h" startline="91">SeMR_ValidatePlayerInfo::acData</references>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_race_room_mgr_1af726c3559b536f0416cb60f2d47f9b7f" compoundref="src_2_se_race_room_mgr_8cpp" startline="240" endline="312">SeRaceRoomMgr::CreateRoom</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="struct_se_m_r___validate_player_info_1a372ffe881de1309c41c5cbd2ea2f3169" compoundref="_se_ptl___m_s___to___r_s_8h" startline="90">SeMR_ValidatePlayerInfo::iSize</references>
        <references refid="_se_net_stream_8h_1a3ae8c2f0b4cd1d60abe502f67c88a9fb" compoundref="_se_net_stream_8h" startline="88" endline="91">Read</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a96ee4e062d0fb584e72fe9eade2fe409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_PlayerModifyInfo</definition>
        <argsstring>(SeMR_PlayerModifyInfo *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_PlayerModifyInfo</name>
        <param>
          <type><ref refid="struct_se_m_r___player_modify_info" kindref="compound">SeMR_PlayerModifyInfo</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="9" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a06dc9a6a093a86fdfa4f9506ffa07f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_UpdateMiscInfo</definition>
        <argsstring>(SeMR_UpdateMiscInfo *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_UpdateMiscInfo</name>
        <param>
          <type><ref refid="struct_se_m_r___update_misc_info" kindref="compound">SeMR_UpdateMiscInfo</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="10" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aea2d68398cba87995d032933b2fd00d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ReconQuery</definition>
        <argsstring>(SeMR_ReconQuery *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ReconQuery</name>
        <param>
          <type><ref refid="struct_se_m_r___recon_query" kindref="compound">SeMR_ReconQuery</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="11" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="88" bodyend="103"/>
        <references refid="struct_se_m_r___recon_query_1af2f8ee1573fbe51b02f9e251c3d9e997" compoundref="_se_ptl___m_s___to___r_s_8h" startline="129">SeMR_ReconQuery::dwAreaID</references>
        <references refid="struct_se_m_r___recon_query_1a3c6d297d82d9608b75d2b92cdad66cfb" compoundref="_se_ptl___m_s___to___r_s_8h" startline="134">SeMR_ReconQuery::dwFrame</references>
        <references refid="struct_se_m_r___recon_query_1a938265a6dbc15f1422c927bab81d04da" compoundref="_se_ptl___m_s___to___r_s_8h" startline="131">SeMR_ReconQuery::dwPlayerID</references>
        <references refid="struct_se_m_r___recon_query_1a237c9a24cf2a5471a4b787a7a6ba7bb5" compoundref="_se_ptl___m_s___to___r_s_8h" startline="128">SeMR_ReconQuery::dwRoomID</references>
        <references refid="struct_se_m_r___recon_query_1a353d3eb2b83a7056542b8b764c84d744" compoundref="_se_ptl___m_s___to___r_s_8h" startline="130">SeMR_ReconQuery::dwServerID</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="struct_se_m_r___recon_query_1a8a0c5d9401c2a3d96363939f00976bdb" compoundref="_se_ptl___m_s___to___r_s_8h" startline="133">SeMR_ReconQuery::iOffset</references>
        <references refid="struct_se_m_r___recon_query_1ad24d8b0f852691bb24eb56d021d2c9fe" compoundref="_se_ptl___m_s___to___r_s_8h" startline="132">SeMR_ReconQuery::iSeat</references>
        <references refid="class_se_race_room_mgr_1a34eefc0036846a6dd6fb6551928673b9" compoundref="src_2_se_race_room_mgr_8cpp" startline="655" endline="711">SeRaceRoomMgr::OnPlayerReconQuery</references>
        <references refid="_se_define_8h_1a6ff2ada9fe9b92e32a01e823f9b3801d" compoundref="_se_define_8h" startline="14">SAFECHECK_INDEX</references>
        <references refid="class_race_server_1af806e16dec8877195afbdfa07a0553e8">SendRM_ReconQueryFail</references>
        <references refid="class_race_server_1ac1812200ef246163a0d065f80f2e75fe">SendRM_ReconQuerySuccess</references>
        <references refid="_se_ptl_comm_define_8h_1a1db4f0d41049e036acff5dfb4a360e9ca485813faed862ea617efa177f56d93f6" compoundref="_se_ptl_comm_define_8h" startline="346">SRQF_NULL</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa4d18e8e3cf1c5fba177f688bde4f0738" compoundref="_se_ptl_comm_define_8h" startline="45">SSD_MAX_ROOM_PLAYER</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2a5c41dff4c427ed3563ac6b43aa1844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ViewQuery</definition>
        <argsstring>(SeMR_ViewQuery *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ViewQuery</name>
        <param>
          <type><ref refid="struct_se_m_r___view_query" kindref="compound">SeMR_ViewQuery</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="12" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="105" bodyend="117"/>
        <references refid="struct_se_m_r___view_query_1a903d88066a75d4450eee32c724b758cd" compoundref="_se_ptl___m_s___to___r_s_8h" startline="148">SeMR_ViewQuery::dwAreaID</references>
        <references refid="struct_se_m_r___view_query_1aeebcbfc6d6dc64d7621855d80716b6ce" compoundref="_se_ptl___m_s___to___r_s_8h" startline="150">SeMR_ViewQuery::dwPlayerID</references>
        <references refid="struct_se_m_r___view_query_1a8c1bed4c21972c476debd77dac1cc4f2" compoundref="_se_ptl___m_s___to___r_s_8h" startline="149">SeMR_ViewQuery::dwServerID</references>
        <references refid="struct_se_m_r___view_query_1ac21c0422ea9165bd1f6c941afa455928" compoundref="_se_ptl___m_s___to___r_s_8h" startline="147">SeMR_ViewQuery::dwSession</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="struct_se_m_r___view_query_1a4c693223876ff0d1739623276aef979b" compoundref="_se_ptl___m_s___to___r_s_8h" startline="151">SeMR_ViewQuery::iViewDelay</references>
        <references refid="class_se_race_room_mgr_1afab02ac8741840d9f9d9e2537fbfe8f6" compoundref="src_2_se_race_room_mgr_8cpp" startline="763" endline="798">SeRaceRoomMgr::OnPlayerViewQuery</references>
        <references refid="class_race_server_1a40641fa80b4617b9438efd6128070f76">SendRM_ViewQueryFail</references>
        <references refid="class_race_server_1a034cc87f5200daf062a70c32e07e4abc">SendRM_ViewQuerySuccess</references>
        <references refid="_se_ptl_comm_define_8h_1a099f96303c4987784812a08a343a5878a5e6439f88c7339e3470a35f2070ba7ac" compoundref="_se_ptl_comm_define_8h" startline="355">SVQF_NULL</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2dc1053a39f7555cd389f5097a05fcc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ViewValidOKRet</definition>
        <argsstring>(SeMR_ViewValidOKRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ViewValidOKRet</name>
        <param>
          <type><ref refid="struct_se_m_r___view_valid_o_k_ret" kindref="compound">SeMR_ViewValidOKRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="13" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="119" bodyend="128"/>
        <references refid="struct_se_view_init_info_1a1f83aceed2c5cc38c6ab77b10d38a5e4" compoundref="_se_ptl_define_8h" startline="606">SeViewInitInfo::dwPlayerID</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_race_server_1a168a19b0f8e671d9f95604a84728547a" compoundref="src_2_race_server_8cpp" startline="1345" endline="1356">GetConnectByID</references>
        <references refid="struct_se_m_r___view_valid_o_k_ret_1a05bf53fce895b47b5e048167da8cfc0b" compoundref="_se_ptl___m_s___to___r_s_8h" startline="161">SeMR_ViewValidOKRet::kInitInfo</references>
        <references refid="class_se_race_room_mgr_1ad14198273113890408ab10fad2ba605f" compoundref="src_2_se_race_room_mgr_8cpp" startline="800" endline="828">SeRaceRoomMgr::OnViewValidOKRet</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a75c896e3c906802be4bbd2d615f782c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ValidFailRet</definition>
        <argsstring>(SeMR_ValidFailRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ValidFailRet</name>
        <param>
          <type><ref refid="struct_se_m_r___valid_fail_ret" kindref="compound">SeMR_ValidFailRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="14" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="130" bodyend="141"/>
        <references refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" compoundref="src_2_race_server_8cpp" startline="1196" endline="1206">DisconnectPlayer</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_m_r___valid_fail_ret_1a97da9a52e985dac0fac77daeb38292d0" compoundref="_se_ptl___m_s___to___r_s_8h" startline="172">SeMR_ValidFailRet::dwPlayerID</references>
        <references refid="struct_se_m_r___valid_fail_ret_1ae46c043e649c99bde3f66f47bb3b9d19" compoundref="_se_ptl___m_s___to___r_s_8h" startline="171">SeMR_ValidFailRet::dwSession</references>
        <references refid="class_race_server_1a168a19b0f8e671d9f95604a84728547a" compoundref="src_2_race_server_8cpp" startline="1345" endline="1356">GetConnectByID</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a25bc7faf3af8acb8fcdccf1d5f1ba32d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_RaceBuyRet</definition>
        <argsstring>(SeMR_RaceBuyRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_RaceBuyRet</name>
        <param>
          <type><ref refid="struct_se_m_r___race_buy_ret" kindref="compound">SeMR_RaceBuyRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="15" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="143" bodyend="177"/>
        <references refid="struct_se_m_r___race_buy_ret_1abf495672ef158cada39683c6d8fd6cd5" compoundref="_se_ptl___m_s___to___r_s_8h" startline="187">SeMR_RaceBuyRet::bSuccess</references>
        <references refid="struct_se_race_cmd___town_item_1aaa9e1ec3dd8e1cfb6a22c9dfc043b746" compoundref="_se_race_cmd_8h" startline="1056">SeRaceCmd_TownItem::bSuccess</references>
        <references refid="struct_se_m_r___race_buy_ret_1a715414b98655e3e1f3418657d3b80037" compoundref="_se_ptl___m_s___to___r_s_8h" startline="190">SeMR_RaceBuyRet::dwParam1</references>
        <references refid="struct_se_m_r___race_buy_ret_1aa2a97c8a6f787d2b6d3b2af04cfb8b27" compoundref="_se_ptl___m_s___to___r_s_8h" startline="191">SeMR_RaceBuyRet::dwParam2</references>
        <references refid="struct_se_m_r___race_buy_ret_1a9f259d2b285c436a1d5049281a422b6d" compoundref="_se_ptl___m_s___to___r_s_8h" startline="188">SeMR_RaceBuyRet::dwPlayerID</references>
        <references refid="struct_se_m_r___race_buy_ret_1a7f27dfd5a3e0659779f84a9e8e2c861b" compoundref="_se_ptl___m_s___to___r_s_8h" startline="186">SeMR_RaceBuyRet::dwSession</references>
        <references refid="struct_se_race_cmd___town_item_1a12a29a21c863e2ba7a1a50ee1e46c0ce" compoundref="_se_race_cmd_8h" startline="1058">SeRaceCmd_TownItem::dwTargetUnitID</references>
        <references refid="struct_se_race_cmd___town_item_1a20bd5bc6ec19d9002abdf3e2fcd65dbc" compoundref="_se_race_cmd_8h" startline="1057">SeRaceCmd_TownItem::dwTownItemTypeID</references>
        <references refid="struct_se_race_room_1ac9ea7d81816dc06c35f26f0ac2854673" compoundref="src_2_se_race_room_mgr_def_8h" startline="74">SeRaceRoom::eRoomState</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="class_se_race_room_mgr_1a806bdfea8ed0bd338b03c4ef82578cfd" compoundref="src_2_se_race_room_mgr_8cpp" startline="367" endline="376">SeRaceRoomMgr::GetRoom</references>
        <references refid="struct_se_m_r___race_buy_ret_1ad65816eb93fb96932ea2e1296c4ae4ad" compoundref="_se_ptl___m_s___to___r_s_8h" startline="189">SeMR_RaceBuyRet::iType</references>
        <references refid="class_se_race_mgr_1ac57a5becc907d30900ed66012e769834" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2364" endline="2414">SeRaceMgr::OnPlayerRaceCmd</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a0e80963fff8c9c3fe983ba68b6c3a50b" compoundref="src_2_se_match_player_8h" startline="13">SMPS_RACING</references>
        <references refid="_se_ptl_comm_define_8h_1adfbf2b48619efa9148fce0317b435166a0b315265c7385e35a3774afce88ec6b6" compoundref="_se_ptl_comm_define_8h" startline="543">SRBT_RACE_ITEM</references>
        <references refid="src_2_se_race_room_mgr_def_8h_1a8c527d8512227a77571890dff531fefea01b6127489ac5119615355095b993016" compoundref="src_2_se_race_room_mgr_def_8h" startline="12">SRRS_RACING</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ab50ac3ba721a70fa1a59637e29ab08fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ReconPLayerName</definition>
        <argsstring>(SeMR_ReconPLayerName *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ReconPLayerName</name>
        <param>
          <type><ref refid="struct_se_m_r___recon_p_layer_name" kindref="compound">SeMR_ReconPLayerName</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="16" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeMRProcess.cpp" bodystart="179" bodyend="183"/>
        <references refid="struct_se_m_r___recon_p_layer_name_1a2cb33e3c26a67ef635b42e29e51a8d15" compoundref="_se_ptl___m_s___to___r_s_8h" startline="202">SeMR_ReconPLayerName::acName</references>
        <references refid="class_se_match_recon_mgr_1a88d370698d760336a8686f04dd76bf5a" compoundref="src_2_se_recon_mgr_8cpp" startline="384" endline="402">SeMatchReconMgr::AddReconPlayerName</references>
        <references refid="struct_se_m_r___recon_p_layer_name_1aba6be1d2ff0a120c35569c3902a8642c" compoundref="_se_ptl___m_s___to___r_s_8h" startline="201">SeMR_ReconPLayerName::dwPlayerID</references>
        <references refid="src_2_se_recon_mgr_8cpp_1ac9809af7eb2b9209c6973a9c5f11389a" compoundref="src_2_se_recon_mgr_8cpp" startline="7">g_kMatchReconMgr</references>
        <references refid="_se_file_log_8h_1ab19c516672348b15ddabafb0bfb9d0a7" compoundref="_se_file_log_8h" startline="89">SeLogDebug</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a842b002db5e307ef61acaf6b1045fb50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RegisterRet</definition>
        <argsstring>(const SeRegisterRet &amp;eRet, bool bRunning, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RegisterRet</name>
        <param>
          <type>const <ref refid="_se_server_define_8h_1a83f922065d39660cc6ff3ff3e193daa1" kindref="member">SeRegisterRet</ref> &amp;</type>
          <declname>eRet</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bRunning</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1ac9bcdeb502380af98bff7c7234e0aff6" compoundref="src_2_se_w_c_s_r_process_8cpp" startline="12" endline="42">ProcessWCSR_Register</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7b5e4389cd7ae38f82516ae1e5de6bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_HeartPackageRet</definition>
        <argsstring>(void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_HeartPackageRet</name>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="3" column="1"/>
        <referencedby refid="class_race_server_1ae007667edd47596a9b7c46fe15036fbc" compoundref="src_2_se_w_c_s_r_process_8cpp" startline="44" endline="47">ProcessWCSR_HeartPackage</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5412567214116b44d3f187fb9d845fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceRecord</definition>
        <argsstring>(const Byte *rID, int iNum, const char *raceDat, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceRecord</name>
        <param>
          <type>const Byte *</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>raceDat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="4" column="1"/>
        <referencedby refid="class_se_race_mgr_1a54d76275402dab1b4b2815e52889e684" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="267" endline="367">SeRaceMgr::UpdateView</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0f2f370627a3740a68e37b136794baa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceRecord</definition>
        <argsstring>(std::vector&lt; Byte &gt; &amp;rID, int iNum, std::vector&lt; char &gt; &amp;raceDat, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceRecord</name>
        <param>
          <type>std::vector&lt; Byte &gt; &amp;</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>raceDat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5e1590de4be31aba332d710d3e86d42f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceEnd</definition>
        <argsstring>(const Byte *rID, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceEnd</name>
        <param>
          <type>const Byte *</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="6" column="1"/>
        <referencedby refid="class_se_race_mgr_1a54d76275402dab1b4b2815e52889e684" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="267" endline="367">SeRaceMgr::UpdateView</referencedby>
        <referencedby refid="class_se_race_mgr_1a16555cc169fe1369cf5a9b0edd4807cd" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="369" endline="382">SeRaceMgr::UpdateViewEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6568577059a2739fa4f4665ef0be5710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceEnd</definition>
        <argsstring>(std::vector&lt; Byte &gt; &amp;rID, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceEnd</name>
        <param>
          <type>std::vector&lt; Byte &gt; &amp;</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a470b2de77c1bec3018e1ed90d64383a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceStart</definition>
        <argsstring>(const Byte *rID, int iNum, const SePlayerInfoSeat *racePlayerSeatInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceStart</name>
        <param>
          <type>const Byte *</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_player_info_seat" kindref="compound">SePlayerInfoSeat</ref> *</type>
          <declname>racePlayerSeatInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="8" column="1"/>
        <referencedby refid="class_se_race_mgr_1a54d76275402dab1b4b2815e52889e684" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="267" endline="367">SeRaceMgr::UpdateView</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7f3faf14b04e82f1b7e65bfc8e8085fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceStart</definition>
        <argsstring>(std::vector&lt; Byte &gt; &amp;rID, int iNum, std::vector&lt; SePlayerInfoSeat &gt; &amp;racePlayerSeatInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceStart</name>
        <param>
          <type>std::vector&lt; Byte &gt; &amp;</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_player_info_seat" kindref="compound">SePlayerInfoSeat</ref> &gt; &amp;</type>
          <declname>racePlayerSeatInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af86699f8253a90b21ea5ca3fcc863a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceDetailInfoSync</definition>
        <argsstring>(int num, const SeRaceDetailInfo *akRaceDetailInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceDetailInfoSync</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_race_detail_info" kindref="compound">SeRaceDetailInfo</ref> *</type>
          <declname>akRaceDetailInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="10" column="1"/>
        <referencedby refid="class_race_detail_mgr_1aab6bd3a6478bb4100526e441ce8699c8" compoundref="src_2_race_detail_mgr_8cpp" startline="204" endline="224">RaceDetailMgr::SyncRaceDetail</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac7b610a2b4958c9ae43fba61194aece9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceDetailInfoSync</definition>
        <argsstring>(int num, std::vector&lt; SeRaceDetailInfo &gt; &amp;akRaceDetailInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceDetailInfoSync</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_race_detail_info" kindref="compound">SeRaceDetailInfo</ref> &gt; &amp;</type>
          <declname>akRaceDetailInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa9402144cbc9f4acd9bb537a96bc0ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCSData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRWCSData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="14" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRWCSSend.cpp" bodystart="7" bodyend="10"/>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a06e59df570fa80d88ccba647d071346b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessWCSRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessWCSRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWCSRProcess.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0f7643a555f12c0dae3ad4b215100ed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessWCSR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessWCSR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWCSRProcess.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeWCSRProcess.cpp" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac9bcdeb502380af98bff7c7234e0aff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessWCSR_Register</definition>
        <argsstring>(SeWCSR_Register *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessWCSR_Register</name>
        <param>
          <type><ref refid="struct_se_w_c_s_r___register" kindref="compound">SeWCSR_Register</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWCSRProcess.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeWCSRProcess.cpp" bodystart="12" bodyend="42"/>
        <references refid="struct_se_net_addr_1a23b51e87d8b7b2201a03833c9adde232" compoundref="_se_share_def_8h" startline="41">SeNetAddr::acIP</references>
        <references refid="struct_se_w_c_s_r___register_1a952f7d51f079728b31b2eb16d92e5e48" compoundref="_se_ptl___w_c_s___to___r_s_8h" startline="34">SeWCSR_Register::acViewInfo</references>
        <references refid="struct_se_watch_server_connect_1ae9052ebb7bfd5ddab403f4aabd5b67e6" compoundref="src_2_race_server_def_8h" startline="172">SeWatchServerConnect::bRegister</references>
        <references refid="struct_se_w_c_s_r___register_1aac5d062f9e6a38f2b87652448488dc96" compoundref="_se_ptl___w_c_s___to___r_s_8h" startline="32">SeWCSR_Register::dwServerID</references>
        <references refid="struct_se_watch_server_connect_1a7b47e71b990a9955211f37ab0a297ea7" compoundref="src_2_race_server_def_8h" startline="174">SeWatchServerConnect::dwServerID</references>
        <references refid="struct_se_w_c_s_view_1a839778a7780da7c3430f9f63a464a84e" compoundref="_race_server_2src_2_se_race_mgr_def_8h" startline="217">SeWCSView::dwWCSID</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="_se_tool_8h_1ada81d4ae5d39c42af0a02b45f4a6f715" compoundref="_se_tool_8h" startline="66">GetID2Str</references>
        <references refid="struct_se_net_addr_1a989fa5b025bc039122e8d2a29838fde9" compoundref="_se_share_def_8h" startline="42">SeNetAddr::iPort</references>
        <references refid="struct_se_w_c_s_r___register_1ab4c312265c7855224bca9db63d7858c3" compoundref="_se_ptl___w_c_s___to___r_s_8h" startline="33">SeWCSR_Register::iSize</references>
        <references refid="struct_se_watch_server_connect_1a5d99c45efffaa3f6b3c27ad57dc3d3ed" compoundref="src_2_race_server_def_8h" startline="171">SeWatchServerConnect::kNetAddr</references>
        <references refid="struct_se_watch_server_connect_1a86a2bf90f2c87605c654224857743236" compoundref="src_2_race_server_def_8h" startline="170">SeWatchServerConnect::kSock</references>
        <references refid="struct_se_w_c_s_view_1acc1e74a9cbc48abab8bbcf1338b2ef8a" compoundref="_race_server_2src_2_se_race_mgr_def_8h" startline="218">SeWCSView::kWCSSock</references>
        <references refid="class_race_server_1aa7eff4248424ec791546a7d1d9209ea2" compoundref="src_2_race_server_8h" startline="145">m_vWCSView</references>
        <references refid="class_se_race_mgr_1a7905dbdda295922e76377cf981650644" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3354" endline="3372">SeRaceMgr::ReflashWCSViewInfo</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_race_server_1a842b002db5e307ef61acaf6b1045fb50">SendRWCS_RegisterRet</references>
        <references refid="_se_server_define_8h_1a83f922065d39660cc6ff3ff3e193daa1ac80442ea100ef13c4582723562f3ea53" compoundref="_se_server_define_8h" startline="109">SRR_REPEAT</references>
        <references refid="_se_server_define_8h_1a83f922065d39660cc6ff3ff3e193daa1a9066cbcd85981ad03cd92ba399a18338" compoundref="_se_server_define_8h" startline="108">SRR_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae007667edd47596a9b7c46fe15036fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessWCSR_HeartPackage</definition>
        <argsstring>(SeWCSR_HeartPackage *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessWCSR_HeartPackage</name>
        <param>
          <type><ref refid="struct_se_w_c_s_r___heart_package" kindref="compound">SeWCSR_HeartPackage</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWCSRProcess.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeWCSRProcess.cpp" bodystart="44" bodyend="47"/>
        <references refid="class_race_server_1a7b5e4389cd7ae38f82516ae1e5de6bfd">SendRWCS_HeartPackageRet</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa311514fab61f8576dc494e4339b65ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_RaceInit</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, int iMapID, int iSeatInfo, VRacePlayer &amp;rkVRacePlayer)</argsstring>
        <name>PushRSC_RaceInit</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMapID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeatInfo</declname>
        </param>
        <param>
          <type><ref refid="_race_server_2src_2_se_race_mgr_def_8h_1a622e0f783c37ecbff30d07e18aa981ee" kindref="member">VRacePlayer</ref> &amp;</type>
          <declname>rkVRacePlayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.inl" line="2" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.cpp" bodystart="4" bodyend="24"/>
        <references refid="struct_se_r_s_c___race_init_1a17aaf75ea2a3715a7fc95d5ba4afce49" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="30">SeRSC_RaceInit::akInfo</references>
        <references refid="struct_se_race_start_info_1a2bdb04cea5d9e52f869b9fb2df0c7787" compoundref="src_2_se_thread_race_def_8h" startline="67">SeRaceStartInfo::bLeave</references>
        <references refid="struct_se_r_s_c___race_init_1a389e56c9aff88bcf12b7d401585a9555" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="28">SeRSC_RaceInit::iMapID</references>
        <references refid="struct_se_r_s_c___race_init_1ac25ecf428ac8c3b4be0c0d200a0d0a33" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="29">SeRSC_RaceInit::iNum</references>
        <references refid="struct_se_race_start_info_1a5b49a0d20ffa94b2dc6fca26f040667e" compoundref="src_2_se_thread_race_def_8h" startline="64">SeRaceStartInfo::iSeatIndex</references>
        <references refid="struct_se_r_s_c___race_init_1a0d5f96adb2ea35c8a56b17bceeb44fe3" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="27">SeRSC_RaceInit::iSeatInfo</references>
        <references refid="struct_se_r_s_c___race_init_1a0f2a6f34ec2c12da30d847527c639297" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="26">SeRSC_RaceInit::kRaceID</references>
        <references refid="struct_se_race_start_info_1af888bd523787803badb1b0f19be4bde5" compoundref="src_2_se_thread_race_def_8h" startline="65">SeRaceStartInfo::kSock</references>
        <references refid="_se_define_8h_1aab50e6cdde3e284ec0854ce27f9b4dcc" compoundref="_se_define_8h" startline="23">MNew</references>
        <references refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aae551c574c3a189b2a44409b830b02afa" compoundref="_se_ptl_comm_define_8h" startline="16">SSD_SEND_SIZE</references>
        <referencedby refid="class_se_race_mgr_1aeec6e7ffa9c8414f904f53d4509dde0e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1775" endline="1908">SeRaceMgr::CreateRobotRace</referencedby>
        <referencedby refid="class_se_race_mgr_1a6f86cab772c6473217e3f4e3cfe06747" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1925" endline="2285">SeRaceMgr::OnRaceModeEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8a5747b16a377f090cce5caf582fee8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_RaceStream</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, char *pcData, int iDataSize)</argsstring>
        <name>PushRSC_RaceStream</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDataSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.inl" line="3" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.cpp" bodystart="26" bodyend="38"/>
        <references refid="struct_se_r_s_c___race_stream_1abce29b3170f9f3dd7289d0e5eb79a593" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="43">SeRSC_RaceStream::acData</references>
        <references refid="struct_se_r_s_c___race_stream_1a42318f02ae6e35059d1e869d7c21296c" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="42">SeRSC_RaceStream::iDataSize</references>
        <references refid="struct_se_r_s_c___race_stream_1a150f019c60480301b837fde3253b0843" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="41">SeRSC_RaceStream::kRaceID</references>
        <references refid="_se_tool_8cpp_1a4697a1b0adee30e7c3810134c6cfe519" compoundref="_se_tool_8cpp" startline="76" endline="91">MemCpy</references>
        <references refid="_se_define_8h_1aab50e6cdde3e284ec0854ce27f9b4dcc" compoundref="_se_define_8h" startline="23">MNew</references>
        <references refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa5b31d4cc364eb59fcd6ab560eebc48cc" compoundref="_se_ptl_comm_define_8h" startline="18">SSD_ENDSTR_LEN</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aae551c574c3a189b2a44409b830b02afa" compoundref="_se_ptl_comm_define_8h" startline="16">SSD_SEND_SIZE</references>
        <referencedby refid="class_se_race_mgr_1aeec6e7ffa9c8414f904f53d4509dde0e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1775" endline="1908">SeRaceMgr::CreateRobotRace</referencedby>
        <referencedby refid="class_se_race_mgr_1a18b7230ee7e6d15825ce5f8246f7302c" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2629" endline="2691">SeRaceMgr::OnPlayerGuanqiaEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1ac57a5becc907d30900ed66012e769834" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2364" endline="2414">SeRaceMgr::OnPlayerRaceCmd</referencedby>
        <referencedby refid="class_se_race_mgr_1a46c0349b994a94b954d97d802a2bee1a" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2557" endline="2627">SeRaceMgr::OnPlayerRaceEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1ad035a9b9b6bb4f73e3d343988eb6c9f5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2485" endline="2555">SeRaceMgr::OnPlayerRaceLeave</referencedby>
        <referencedby refid="class_se_race_mgr_1a59c745d406675a73ec84583d6a5184db" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2868" endline="3015">SeRaceMgr::OnPlayerReconBegin</referencedby>
        <referencedby refid="class_se_race_mgr_1a6f86cab772c6473217e3f4e3cfe06747" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1925" endline="2285">SeRaceMgr::OnRaceModeEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1a13ec3323cfe46579df8af8b641df3557" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="977" endline="1056">SeRaceMgr::UpdateLoadEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1a8bc74f34b4b13a65b21d4c0ef3638d9d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1283" endline="1375">SeRaceMgr::UpdateReconEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af4d35f6be720d325cb342a86eb95528e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_PlayerLeave</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, int iSeat)</argsstring>
        <name>PushRSC_PlayerLeave</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.inl" line="4" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.cpp" bodystart="40" bodyend="47"/>
        <references refid="struct_se_r_s_c___player_leave_1a74238cd72f37d6452d883a93f67bd91f" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="54">SeRSC_PlayerLeave::iSeat</references>
        <references refid="struct_se_r_s_c___player_leave_1a11e80603016118ccdda0b10db04ad35f" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="53">SeRSC_PlayerLeave::kRaceID</references>
        <references refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</references>
        <referencedby refid="class_se_race_mgr_1a18b7230ee7e6d15825ce5f8246f7302c" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2629" endline="2691">SeRaceMgr::OnPlayerGuanqiaEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1a46c0349b994a94b954d97d802a2bee1a" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2557" endline="2627">SeRaceMgr::OnPlayerRaceEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1ad035a9b9b6bb4f73e3d343988eb6c9f5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2485" endline="2555">SeRaceMgr::OnPlayerRaceLeave</referencedby>
        <referencedby refid="class_se_race_mgr_1a13ec3323cfe46579df8af8b641df3557" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="977" endline="1056">SeRaceMgr::UpdateLoadEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a49d352bbd64d7977710ee15bafe10d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_PlayerRelink</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, int iSeat, HSock &amp;rkSock)</argsstring>
        <name>PushRSC_PlayerRelink</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.cpp" bodystart="49" bodyend="57"/>
        <references refid="struct_se_r_s_c___player_relink_1ae6ef9dd0dbf3db2ec82e630fc65b5409" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="66">SeRSC_PlayerRelink::iSeat</references>
        <references refid="struct_se_r_s_c___player_relink_1a64d2ca67e2e17788011d40704ba2f98d" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="65">SeRSC_PlayerRelink::kRaceID</references>
        <references refid="struct_se_r_s_c___player_relink_1a02727a2e295378b0cbaeeee268c74a2a" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="68">SeRSC_PlayerRelink::kSock</references>
        <references refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</references>
        <referencedby refid="class_se_race_mgr_1a59c745d406675a73ec84583d6a5184db" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2868" endline="3015">SeRaceMgr::OnPlayerReconBegin</referencedby>
        <referencedby refid="class_se_race_mgr_1a8bc74f34b4b13a65b21d4c0ef3638d9d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1283" endline="1375">SeRaceMgr::UpdateReconEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8150e6a22c41574411aa12f59298c3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_RaceOver</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID)</argsstring>
        <name>PushRSC_RaceOver</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.cpp" bodystart="59" bodyend="65"/>
        <references refid="struct_se_r_s_c___race_over_1a142b23ebc5c585c7318dc26cc99f645d" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="77">SeRSC_RaceOver::kRaceID</references>
        <references refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</references>
        <referencedby refid="class_se_race_mgr_1acff3e85b5fb533ccfcfbc787b0bb81ef" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1437" endline="1513">SeRaceMgr::UpdateCheckOvertimeRace</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8d774c423cdc2c2ad62bfdafacb82f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_RaceStart</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, VRacePlayer &amp;rkVRacePlayer)</argsstring>
        <name>PushRSC_RaceStart</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type><ref refid="_race_server_2src_2_se_race_mgr_def_8h_1a622e0f783c37ecbff30d07e18aa981ee" kindref="member">VRacePlayer</ref> &amp;</type>
          <declname>rkVRacePlayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.cpp" bodystart="67" bodyend="84"/>
        <references refid="struct_se_r_s_c___race_start_1acbe490316a14a346a79d5548b13a4dcf" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="90">SeRSC_RaceStart::akInfo</references>
        <references refid="struct_se_race_start_info_1a2bdb04cea5d9e52f869b9fb2df0c7787" compoundref="src_2_se_thread_race_def_8h" startline="67">SeRaceStartInfo::bLeave</references>
        <references refid="struct_se_r_s_c___race_start_1a8bbca0b390fbd79bd07c02c302d0fe05" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="89">SeRSC_RaceStart::iNum</references>
        <references refid="struct_se_race_start_info_1a5b49a0d20ffa94b2dc6fca26f040667e" compoundref="src_2_se_thread_race_def_8h" startline="64">SeRaceStartInfo::iSeatIndex</references>
        <references refid="struct_se_r_s_c___race_start_1a5b6bcda111f283cb88e1e0becf50f345" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="88">SeRSC_RaceStart::kRaceID</references>
        <references refid="struct_se_race_start_info_1af888bd523787803badb1b0f19be4bde5" compoundref="src_2_se_thread_race_def_8h" startline="65">SeRaceStartInfo::kSock</references>
        <references refid="_se_define_8h_1aab50e6cdde3e284ec0854ce27f9b4dcc" compoundref="_se_define_8h" startline="23">MNew</references>
        <references refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aae551c574c3a189b2a44409b830b02afa" compoundref="_se_ptl_comm_define_8h" startline="16">SSD_SEND_SIZE</references>
        <referencedby refid="class_se_race_mgr_1a13ec3323cfe46579df8af8b641df3557" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="977" endline="1056">SeRaceMgr::UpdateLoadEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8c8c5a379f9e7f8df13cd6f53c0332d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_GetHeroInfo</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, int iSeat)</argsstring>
        <name>PushRSC_GetHeroInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.inl" line="8" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.cpp" bodystart="86" bodyend="93"/>
        <references refid="struct_se_r_s_c___get_hero_info_1ab7a5c94bf8fe4b9bf338f27b9e6b0ac2" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="102">SeRSC_GetHeroInfo::iSeat</references>
        <references refid="struct_se_r_s_c___get_hero_info_1a0e44402d3b97a6e498840f0bbeaf5c63" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="101">SeRSC_GetHeroInfo::kRaceID</references>
        <references refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</references>
        <referencedby refid="class_se_race_mgr_1a9ab8d7b4289a6a0d4e1fe579f41d30ea" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2451" endline="2465">SeRaceMgr::OnGetHeroInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a39606329049eb1147391402989a76ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_SetRaceIncmpState</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, bool bIncmp)</argsstring>
        <name>PushRSC_SetRaceIncmpState</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bIncmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.inl" line="9" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServicePush.cpp" bodystart="95" bodyend="102"/>
        <references refid="struct_se_r_s_c___set_race_incmp_state_1a18e8c40f2334bf9113d5be471602657a" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="113">SeRSC_SetRaceIncmpState::bIncmp</references>
        <references refid="struct_se_r_s_c___set_race_incmp_state_1a73083625f612e3e7263455b1bbb4e46d" compoundref="src_2_se_ptl___r_s___to___r_s_c_8h" startline="112">SeRSC_SetRaceIncmpState::kRaceID</references>
        <references refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" compoundref="src_2_se_race_svr_other_8cpp" startline="275" endline="286">PushRaceServiceMsg</references>
        <referencedby refid="class_se_match_recon_mgr_1ac2fbfa72bb03419faaa8b8a78dfc664a" compoundref="src_2_se_recon_mgr_8cpp" startline="325" endline="344">SeMatchReconMgr::RemoveRace</referencedby>
        <referencedby refid="class_se_match_recon_mgr_1aea63f9cf7ed122c6d46fb413743b9cd7" compoundref="src_2_se_recon_mgr_8cpp" startline="34" endline="98">SeMatchReconMgr::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1eacc5497059e757745235d24ad2d74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRCR</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRCR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="2" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="4" bodyend="25"/>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664ab2689b0228c48b717da3cfd6df1d9a90" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="15">CMD_RCR_ACHIEVEMENT_COUNTS</references>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664aa3067fecde9e887141e19b1753a26e6b" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="19">CMD_RCR_COMMAND</references>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664a095324175fa7812401d5b6cedaba1fc2" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="14">CMD_RCR_GET_ACHIEVEMENT</references>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664a38f1e2384d73a02e2fbe68eefa96169b" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="9">CMD_RCR_RACE_END</references>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664a02bb238e6960820204e3e6e10b42946b" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="10">CMD_RCR_RACE_ERROR</references>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664ad846cea4f984d1c53b1af3a431d6e271" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="11">CMD_RCR_RACE_INIT_FAIL</references>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664a9a9b54efe93ec3f79ad7c3f322b43079" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="12">CMD_RCR_RACE_OPR</references>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664a51141f000e6865dd7ca79f57fab639fb" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="13">CMD_RCR_RACE_SVR_MODEL_PACK</references>
        <references refid="src_2_se_ptl___r_s_c___to___r_s_8h_1aaa26bf5e88660cb240e085bd38146664ab07e28ad5b58cb071cafc7f956c6c751" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="17">CMD_RCR_THREAD_OVERTIME</references>
        <references refid="class_race_server_1a03ea6ac8033cf82bf82703908fe4d077" compoundref="src_2_se_race_service_process_8cpp" startline="68" endline="93">ProcessRC_AchievementCounts</references>
        <references refid="class_race_server_1a186ca2b41a006c050b4605d240ac7d63" compoundref="src_2_se_race_service_process_8cpp" startline="182" endline="192">ProcessRC_Command</references>
        <references refid="class_race_server_1a2e75561c85233b6b797bc77cfb9227d9" compoundref="src_2_se_race_service_process_8cpp" startline="55" endline="66">ProcessRC_GetAchievement</references>
        <references refid="class_race_server_1a3c978cbb7e12533817366183521cb165" compoundref="src_2_se_race_service_process_8cpp" startline="41" endline="53">ProcessRC_RaceEnd</references>
        <references refid="class_race_server_1a2d1fa502eecb4466ecd56abd99bea627" compoundref="src_2_se_race_service_process_8cpp" startline="95" endline="112">ProcessRC_RaceError</references>
        <references refid="class_race_server_1adf678207cf1dafe7d73f45b209563bec" compoundref="src_2_se_race_service_process_8cpp" startline="114" endline="122">ProcessRC_RaceInitFail</references>
        <references refid="class_race_server_1ac95b66243cc90be4f6816eed00f54e97" compoundref="src_2_se_race_service_process_8cpp" startline="124" endline="134">ProcessRC_RaceOpr</references>
        <references refid="class_race_server_1a05bf858e2c948c6658f32aacd8decec4" compoundref="src_2_se_race_service_process_8cpp" startline="136" endline="153">ProcessRC_RaceSvrModelPack</references>
        <references refid="class_race_server_1ab3d920d30fb6d3c8e76148fc2b1bef0a" compoundref="src_2_se_race_service_process_8cpp" startline="155" endline="178">ProcessRC_ThreadOverTime</references>
        <references refid="struct_se_thread_cmd_1a7d5d7c79f458fbfcee2d989a751aa157" compoundref="src_2_race_service_def_8h" startline="40">SeThreadCmd::wCmd</references>
        <referencedby refid="class_race_server_1a1d04e77d743cd19eb6ac6b20f09bc855" compoundref="src_2_race_server_8cpp" startline="1388" endline="1396">UpdateRSMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a402839c04bff1088bbf629dea278a744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceStream</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceStream</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3c978cbb7e12533817366183521cb165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceEnd</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceEnd</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="41" bodyend="53"/>
        <references refid="struct_se_r_c_r___race_end_1a6ec7f0e20f38475b03caa4b4756218ad" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="53">SeRCR_RaceEnd::acData</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="struct_se_r_c_r___race_end_1a1503c39e25289fad2567dd31c77b4686" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="52">SeRCR_RaceEnd::kRaceID</references>
        <references refid="class_se_race_mgr_1a80ec1c0aac76c1a34f23c8de70204952" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="864" endline="888">SeRaceMgr::OnSvrRaceResult</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa5b31d4cc364eb59fcd6ab560eebc48cc" compoundref="_se_ptl_comm_define_8h" startline="18">SSD_ENDSTR_LEN</references>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2d1fa502eecb4466ecd56abd99bea627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceError</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceError</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="95" bodyend="112"/>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="struct_se_r_c_r___race_error_1a46e57c5de60bd8d65a533d466cb08eb8" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="87">SeRCR_RaceError::kRaceID</references>
        <references refid="class_se_race_mgr_1aa3228aaf93344a01732bf06e7b867475" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="890" endline="916">SeRaceMgr::OnSvrRaceError</references>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1adf678207cf1dafe7d73f45b209563bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceInitFail</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceInitFail</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="114" bodyend="122"/>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac95b66243cc90be4f6816eed00f54e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceOpr</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceOpr</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="8" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="124" bodyend="134"/>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="struct_se_r_c_r___race_opr_1aa3dfff8bf8bd90f8143fa7c26d773d6a" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="99">SeRCR_RaceOpr::iOprType</references>
        <references refid="struct_se_r_c_r___race_opr_1a4dac0aa1cb1b60995bfbd13653b2a89e" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="98">SeRCR_RaceOpr::iThreadIndex</references>
        <references refid="class_se_race_mgr_1a1dcf2284854d010134661a306d4039e1" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="517" endline="544">SeRaceMgr::OprSvrRaceNum</references>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a05bf858e2c948c6658f32aacd8decec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceSvrModelPack</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceSvrModelPack</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="9" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="136" bodyend="153"/>
        <references refid="struct_se_r_c_r___race_svr_model_pack_1a306c4813a8c22736dac44224f8b219e7" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="113">SeRCR_RaceSvrModelPack::acData</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="struct_se_r_c_r___race_svr_model_pack_1a664cf6acebc92858fd9392d7b9e9588a" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="112">SeRCR_RaceSvrModelPack::iSize</references>
        <references refid="struct_se_r_c_r___race_svr_model_pack_1a55a83969d7868c0fc5c7c69d434dcb62" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="111">SeRCR_RaceSvrModelPack::kRaceID</references>
        <references refid="class_se_race_mgr_1a58a9de8d1cc632537d5092f90961660c" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="849" endline="862">SeRaceMgr::OnSvrRaceSvrModelPack</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa5b31d4cc364eb59fcd6ab560eebc48cc" compoundref="_se_ptl_comm_define_8h" startline="18">SSD_ENDSTR_LEN</references>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ab3d920d30fb6d3c8e76148fc2b1bef0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_ThreadOverTime</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_ThreadOverTime</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="10" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="155" bodyend="178"/>
        <references refid="struct_se_r_c_r___thread_over_time_1a3fb591dd1ba5bedf8d93c28789807248" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="125">SeRCR_ThreadOverTime::iDTime</references>
        <references refid="struct_se_r_c_r___thread_over_time_1a551e41a4ce7d5c0ca3f412a23ddf430e" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="124">SeRCR_ThreadOverTime::iThreadIndex</references>
        <references refid="class_race_server_1a18f7983c50d14a59b70cca1f104ccebc" compoundref="src_2_race_server_8h" startline="134">m_akThreadTime</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="src_2_race_server_def_8h_1a9eb95a62743fc812af93eb6ef816f82f" compoundref="src_2_race_server_def_8h" startline="32">Stat_TIME_THREAD_NUM</references>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2e75561c85233b6b797bc77cfb9227d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_GetAchievement</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_GetAchievement</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="11" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="55" bodyend="66"/>
        <references refid="struct_se_r_c_r___get_achievement_1aae9afecd8b3e1cdd414a04ca4f0cc75f" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="64">SeRCR_GetAchievement::dwAID</references>
        <references refid="struct_se_r_c_r___get_achievement_1a983106984d691a089c9dbf9477ee0cb3" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="65">SeRCR_GetAchievement::dwLvl</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="struct_se_r_c_r___get_achievement_1ab963f04dfa4f5e6a817f98895dc1a0f8" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="63">SeRCR_GetAchievement::iSeat</references>
        <references refid="struct_se_r_c_r___get_achievement_1acaff133ce559981e13c1fad869446f73" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="62">SeRCR_GetAchievement::kRaceID</references>
        <references refid="class_se_race_mgr_1acb086e0582ad524b31df30f3e46c300d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2467" endline="2483">SeRaceMgr::OnGetAchievement</references>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a03ea6ac8033cf82bf82703908fe4d077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_AchievementCounts</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_AchievementCounts</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="12" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="68" bodyend="93"/>
        <references refid="struct_te_m_d5_1a4a87587ff2453882ccfb8a1fe64b9b94" compoundref="_te_misc_8h" startline="53">TeMD5::abyMD5</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="_se_tool_8h_1adbd57b0a2e2b5bccf6ba29ea002839e8" compoundref="_se_tool_8h" startline="102">GetMD52Str</references>
        <references refid="class_se_race_mgr_1afc891150076c0efc650aa8989cbe9fd8" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="1107" endline="1115">SeRaceMgr::GetRace</references>
        <references refid="class_se_race_mgr_1a64c89ba33b965a141b2fa0ff03e6749a" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="820" endline="832">SeRaceMgr::GetRacePlayerBySeat</references>
        <references refid="struct_se_r_c_r___achievement_counts_1a5f7de2fa1d9cb76e7b8fb430d345a0fe" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="75">SeRCR_AchievementCounts::iSeat</references>
        <references refid="struct_se_r_c_r___achievement_counts_1a05f9883d2b2f65ed410be8f57b4dfc7f" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="76">SeRCR_AchievementCounts::iSize</references>
        <references refid="struct_se_r_c_r___achievement_counts_1a503a2958356ae9c983414c713d4fbe83" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="74">SeRCR_AchievementCounts::kRaceID</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a186ca2b41a006c050b4605d240ac7d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_Command</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_Command</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.inl" line="13" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceServiceProcess.cpp" bodystart="182" bodyend="192"/>
        <references refid="struct_se_r_c_r___command_1ae911fac4d20209d12ffacb4c60a16885" compoundref="src_2_se_ptl___r_s_c___to___r_s_8h" startline="135">SeRCR_Command::command</references>
        <references refid="classmoba_1_1_command_1af9f5221b6fc4b88ff205f76f6125c364">moba::Command::execute</references>
        <referencedby refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a9eb0e365d5a6450ae5894e53f91d4d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetDebugLevel</definition>
        <argsstring>(void)</argsstring>
        <name>GetDebugLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="3" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="3" bodyend="6"/>
        <references refid="struct_se_race_config_1a025b914a4369ee7f4c8d61894a763b16" compoundref="src_2_race_server_def_8h" startline="104">SeRaceConfig::iDebugLevel</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_se_race_mgr_1ae6a72365fc744c9540911e1e688bf51d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="384" endline="439">SeRaceMgr::UpdateLoadingRace</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a08814d99b1b3da887b982485a54a2f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::SetDebugLevel</definition>
        <argsstring>(int iLevel)</argsstring>
        <name>SetDebugLevel</name>
        <param>
          <type>int</type>
          <declname>iLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="4" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="8" bodyend="11"/>
        <references refid="struct_se_race_config_1a025b914a4369ee7f4c8d61894a763b16" compoundref="src_2_race_server_def_8h" startline="104">SeRaceConfig::iDebugLevel</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8e0a4da2c1a515ac9eeb1634fccc2c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetRacePackTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetRacePackTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="13" bodyend="21"/>
        <references refid="struct_se_race_config_1aa2e7f64455d69ce0024a2203cfa512a5" compoundref="src_2_race_server_def_8h" startline="105">SeRaceConfig::iRacePackTime</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_se_race_mgr_1ac54339f9ca99b5f396f89acf4d246e3d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="46" endline="97">SeRaceMgr::UpdateRace</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa26ceba287df3840748965362ddfc03c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * RaceServer::GetGameLogFilePath</definition>
        <argsstring>()</argsstring>
        <name>GetGameLogFilePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="23" bodyend="26"/>
        <references refid="struct_se_race_config_1a2a46b2a1e0add63f77d52cc3748e2367" compoundref="src_2_race_server_def_8h" startline="103">SeRaceConfig::acGameLogFilePath</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7eaaaf0e1bb43533568788c11939627f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetRaceServiceNum</definition>
        <argsstring>(void)</argsstring>
        <name>GetRaceServiceNum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="28" bodyend="31"/>
        <references refid="class_race_server_1a63863da92e46f041b8505cd3755ad32a" compoundref="src_2_race_server_8h" startline="137">m_iRaceServiceNum</references>
        <referencedby refid="class_se_race_mgr_1ade41d5487b6d97fefb615d5eb4a5a1d8" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3323" endline="3345">SeRaceMgr::GetFreeThreadIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae7388ef7da3a30046cf017d40e355669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetRacePrintTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetRacePrintTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="8" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="33" bodyend="36"/>
        <references refid="struct_se_race_config_1a4aed8d243cf6d513b615f45aa6abd187" compoundref="src_2_race_server_def_8h" startline="97">SeRaceConfig::iRacePrintTime</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_race_service_1a0e549baec6fe2d1d67a662387cfaf4a0" compoundref="src_2_race_service_8cpp" startline="361" endline="369">RaceService::DoWork</referencedby>
        <referencedby refid="class_race_service_1ac75744355bee316fe6e3cfd834d2c76c" compoundref="src_2_race_service_8cpp" startline="62" endline="125">RaceService::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5a1835ed84eb2e50c4a9d1fa203ac928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetMaxPacketSize</definition>
        <argsstring>(void)</argsstring>
        <name>GetMaxPacketSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="9" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="38" bodyend="41"/>
        <references refid="struct_se_race_config_1a6a37ac7f61b6e52467a981d45bef9db8" compoundref="src_2_race_server_def_8h" startline="100">SeRaceConfig::iRacePacketMaxSize</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_race_service_1a0e549baec6fe2d1d67a662387cfaf4a0" compoundref="src_2_race_service_8cpp" startline="361" endline="369">RaceService::DoWork</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2fb70d03c78c196a8d0a59c7a3a93277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetServerModePackTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetServerModePackTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="10" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="48" bodyend="51"/>
        <references refid="struct_se_race_config_1af1c1a0945379d0bfee22df3decd9899d" compoundref="src_2_race_server_def_8h" startline="106">SeRaceConfig::iServerModePackTime</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_se_thread_race_mgr_1ae50d9495ff6e5f6968d5aad75bd75847" compoundref="src_2_se_thread_race_mgr_8cpp" startline="173" endline="208">SeThreadRaceMgr::UpdateRace</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a326f1a2926dde54ccf7d43a8a3bfcbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetMaxReconTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetMaxReconTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="11" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="43" bodyend="46"/>
        <references refid="struct_se_race_config_1a72a9920c01aa5382236ff67e8c7d77af" compoundref="src_2_race_server_def_8h" startline="120">SeRaceConfig::iMaxReconTime</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_se_match_recon_mgr_1aea63f9cf7ed122c6d46fb413743b9cd7" compoundref="src_2_se_recon_mgr_8cpp" startline="34" endline="98">SeMatchReconMgr::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a65a33b72bda3aa9083d8c91e6879501c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::IsTestRobotMode</definition>
        <argsstring>()</argsstring>
        <name>IsTestRobotMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="12" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="53" bodyend="56"/>
        <references refid="struct_se_race_config_1a31a1df022a0a063fad90d6d11c9ef0f9" compoundref="src_2_race_server_def_8h" startline="112">SeRaceConfig::bTestRobotMode</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_se_race_room_mgr_1af726c3559b536f0416cb60f2d47f9b7f" compoundref="src_2_se_race_room_mgr_8cpp" startline="240" endline="312">SeRaceRoomMgr::CreateRoom</referencedby>
        <referencedby refid="class_race_server_1a915457d69cfd32d5db80be534beeeec2" compoundref="src_2_race_server_8cpp" startline="490" endline="515">OnNetUdpAccept</referencedby>
        <referencedby refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" compoundref="src_2_race_server_8cpp" startline="1253" endline="1277">OnPlayerConnected</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8132622c0568a827ae4c490478b52cff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetServerID</definition>
        <argsstring>(void)</argsstring>
        <name>GetServerID</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="14" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="58" bodyend="61"/>
        <references refid="struct_se_race_config_1a382a646846d8fb8918f0c8b7c1d1e474" compoundref="src_2_race_server_def_8h" startline="91">SeRaceConfig::dwServerID</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" compoundref="src_2_race_server_8cpp" startline="1208" endline="1251">CheckConnect</referencedby>
        <referencedby refid="class_se_race_mgr_1aeec6e7ffa9c8414f904f53d4509dde0e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1775" endline="1908">SeRaceMgr::CreateRobotRace</referencedby>
        <referencedby refid="class_se_race_mgr_1ae7b8f0b07008c3a82b118ef3dd8bd5ea" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="728" endline="750">SeRaceMgr::GenRaceID</referencedby>
        <referencedby refid="class_se_race_mgr_1a6f86cab772c6473217e3f4e3cfe06747" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1925" endline="2285">SeRaceMgr::OnRaceModeEnd</referencedby>
        <referencedby refid="src_2_race_server_8cpp_1a03595bfee2a55045aa751deab1e562d0" compoundref="src_2_race_server_8cpp" startline="14" endline="32">sendRegPack</referencedby>
        <referencedby refid="class_race_server_1a54cb7d1172fd8b14c335874dc954ebe6" compoundref="src_2_race_server_8cpp" startline="241" endline="256">ShowConsoleTitle</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac742e033d875f5d171d463a8892a151c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetAreaID</definition>
        <argsstring>(void)</argsstring>
        <name>GetAreaID</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="15" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="63" bodyend="66"/>
        <references refid="struct_se_race_config_1a72013a4bed35c7b1633c2039f1c75d26" compoundref="src_2_race_server_def_8h" startline="90">SeRaceConfig::dwAreaID</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWord</type>
        <definition>DWord RaceServer::GetServerTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetServerTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="16" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="68" bodyend="71"/>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <referencedby refid="class_se_match_recon_mgr_1af056e087b3519aa3689d68e3391be1ec" compoundref="src_2_se_recon_mgr_8cpp" startline="105" endline="120">SeMatchReconMgr::AddPlayer</referencedby>
        <referencedby refid="class_se_match_recon_mgr_1a88d370698d760336a8686f04dd76bf5a" compoundref="src_2_se_recon_mgr_8cpp" startline="384" endline="402">SeMatchReconMgr::AddReconPlayerName</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a66dc5df11e24b10c6a705b4db96816d2" compoundref="src_2_se_race_room_mgr_8cpp" startline="1839" endline="1862">SeRaceRoomMgr::BeginRaceView</referencedby>
        <referencedby refid="class_se_race_room_mgr_1ab44f231bb47c737525b19c318747f53f" compoundref="src_2_se_race_room_mgr_8cpp" startline="350" endline="365">SeRaceRoomMgr::ChangeRoomState</referencedby>
        <referencedby refid="class_race_detail_mgr_1a9b1606933aa7e12bbdc49daad0d8844c" compoundref="src_2_race_detail_mgr_8cpp" startline="262" endline="273">RaceDetailMgr::CheckRace_UserAttr_Bound</referencedby>
        <referencedby refid="class_race_detail_mgr_1a273160080ee8fa1de3ab7f8925bd70bd" compoundref="src_2_race_detail_mgr_8cpp" startline="38" endline="177">RaceDetailMgr::CreateRaceDetail</referencedby>
        <referencedby refid="class_se_race_mgr_1aeec6e7ffa9c8414f904f53d4509dde0e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1775" endline="1908">SeRaceMgr::CreateRobotRace</referencedby>
        <referencedby refid="class_se_race_room_mgr_1af726c3559b536f0416cb60f2d47f9b7f" compoundref="src_2_se_race_room_mgr_8cpp" startline="240" endline="312">SeRaceRoomMgr::CreateRoom</referencedby>
        <referencedby refid="class_se_thread_race_mgr_1aaa32cf1e375425ee1eacf3619e311eb2" compoundref="src_2_se_thread_race_mgr_8cpp" startline="61" endline="77">SeThreadRaceMgr::DelRace</referencedby>
        <referencedby refid="class_se_race_mgr_1ae7b8f0b07008c3a82b118ef3dd8bd5ea" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="728" endline="750">SeRaceMgr::GenRaceID</referencedby>
        <referencedby refid="class_se_race_mgr_1a6daf46a09ba0c58ee333853b973b2fa1" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3312" endline="3321">SeRaceMgr::GetRaceTime</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a51bf8ba39d383f028bd4d4515c78988c" compoundref="src_2_se_race_room_mgr_8cpp" startline="1352" endline="1425">SeRaceRoomMgr::IntoSelHero</referencedby>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
        <referencedby refid="class_race_server_1a72aff476ef33f2168f6f60651a59cb0e" compoundref="src_2_race_server_8cpp" startline="517" endline="542">OnNetUdpRecv</referencedby>
        <referencedby refid="class_se_race_mgr_1ac57a5becc907d30900ed66012e769834" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2364" endline="2414">SeRaceMgr::OnPlayerRaceCmd</referencedby>
        <referencedby refid="class_se_race_mgr_1a6f86cab772c6473217e3f4e3cfe06747" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1925" endline="2285">SeRaceMgr::OnRaceModeEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1a51014b6fe60569121ba5dacbe709ad8b" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3851" endline="3888">SeRaceMgr::OnRealTimeRaceKDA</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a0c260c10ca7b948bd8d2544de7ff6095" compoundref="src_2_se_race_room_mgr_8cpp" startline="1427" endline="1519">SeRaceRoomMgr::SelHeroReady</referencedby>
        <referencedby refid="class_se_match_recon_mgr_1aea63f9cf7ed122c6d46fb413743b9cd7" compoundref="src_2_se_recon_mgr_8cpp" startline="34" endline="98">SeMatchReconMgr::Update</referencedby>
        <referencedby refid="class_se_race_mgr_1acff3e85b5fb533ccfcfbc787b0bb81ef" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1437" endline="1513">SeRaceMgr::UpdateCheckOvertimeRace</referencedby>
        <referencedby refid="class_race_server_1a2a40385bfddbe46765ad5f1bd1e0f870" compoundref="src_2_race_server_8cpp" startline="1398" endline="1410">UpdateHeartPackage</referencedby>
        <referencedby refid="class_se_race_mgr_1a13ec3323cfe46579df8af8b641df3557" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="977" endline="1056">SeRaceMgr::UpdateLoadEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1ae6a72365fc744c9540911e1e688bf51d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="384" endline="439">SeRaceMgr::UpdateLoadingRace</referencedby>
        <referencedby refid="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" compoundref="src_2_race_server_8cpp" startline="1412" endline="1438">UpdateMSHeartPackage</referencedby>
        <referencedby refid="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" compoundref="src_2_race_server_8cpp" startline="1094" endline="1113">UpdateMSState</referencedby>
        <referencedby refid="class_se_thread_race_mgr_1ae50d9495ff6e5f6968d5aad75bd75847" compoundref="src_2_se_thread_race_mgr_8cpp" startline="173" endline="208">SeThreadRaceMgr::UpdateRace</referencedby>
        <referencedby refid="class_se_race_mgr_1acdd43204f73fb2db1f092a2dc6ab3b6c" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1088" endline="1119">SeRaceMgr::UpdateRaceEnd</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a95b7a596c0bd1c7525288e11bc45c87d" compoundref="src_2_se_race_room_mgr_8cpp" startline="1100" endline="1167">SeRaceRoomMgr::UpdateRaceEndTime</referencedby>
        <referencedby refid="class_se_race_room_mgr_1adfc8899af32417078035330bff70a344" compoundref="src_2_se_race_room_mgr_8cpp" startline="1056" endline="1097">SeRaceRoomMgr::UpdateReady</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a8cbcbb765efc9f99fd80024cc04b8307" compoundref="src_2_se_race_room_mgr_8cpp" startline="894" endline="923">SeRaceRoomMgr::UpdateReSendRoomList</referencedby>
        <referencedby refid="class_race_server_1aa09b74ef284ae258769b65ed2ecc07e3" compoundref="src_2_race_server_8cpp" startline="1440" endline="1454">UpdateRSConfig</referencedby>
        <referencedby refid="class_race_server_1a3692dac1f1a18f397de386f4f7a98684" compoundref="src_2_race_server_8cpp" startline="1473" endline="1521">UpdateSaveThreadUpdateTime</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a7a16316f3fb01f55b0b912bfd62b1b6d" compoundref="src_2_se_race_room_mgr_8cpp" startline="968" endline="1054">SeRaceRoomMgr::UpdateSelHero</referencedby>
        <referencedby refid="class_race_server_1a3aef2a30ec9b8184aaeb6b3edb1237f8" compoundref="src_2_se_race_svr_other_8cpp" startline="164" endline="209">UpdateWaitRobot</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a123472270ba397c8a56c80c61e4cafc0" compoundref="src_2_se_race_room_mgr_8cpp" startline="925" endline="966">SeRaceRoomMgr::UpdateWaitRoom</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ada98d505789737be58f73923400943b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::RandInt</definition>
        <argsstring>(void)</argsstring>
        <name>RandInt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="18" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="73" bodyend="76"/>
        <references refid="class_race_server_1a2153b24b298ed79b71ebf9f45d832540" compoundref="src_2_race_server_8h" startline="114">m_kRandNum</references>
        <references refid="class_se_rand_num_1a8007e7959093d37680c20767a795b343" compoundref="_se_rand_num_8cpp" startline="59" endline="83">SeRandNum::RandInt</references>
        <referencedby refid="class_se_race_mgr_1a762c1122fd4f2eeb6687519beebe81a5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1756" endline="1760">SeRaceMgr::GetRandHeroID</referencedby>
        <referencedby refid="class_se_race_room_mgr_1aaa8f3a69821d5bea8687afa40dee0496" compoundref="src_2_se_race_room_mgr_8cpp" startline="1770" endline="1800">SeRaceRoomMgr::GetRandID</referencedby>
        <referencedby refid="class_se_race_mgr_1a7bb80ad2b8505489609418eb85f13f14" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2693" endline="2804">SeRaceMgr::OnPlayerReportSyn</referencedby>
        <referencedby refid="class_se_match_player_1af734f104e6c55f7d466437f80b5b5ba1" compoundref="src_2_se_match_player_8cpp" startline="215" endline="250">SeMatchPlayer::setRandomAvatar</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1abba46baa0ac501923d0667fb3495c9c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnSendMatchRoomLoadInfo</definition>
        <argsstring>(DWord dwSession, VRacePlayer &amp;rkVRacePlayer)</argsstring>
        <name>OnSendMatchRoomLoadInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type><ref refid="_race_server_2src_2_se_race_mgr_def_8h_1a622e0f783c37ecbff30d07e18aa981ee" kindref="member">VRacePlayer</ref> &amp;</type>
          <declname>rkVRacePlayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="20" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="78" bodyend="96"/>
        <references refid="struct_se_race_player_1a6522f576f4381eda8e6760f8a4c38895" compoundref="_race_server_2src_2_se_race_mgr_def_8h" startline="91">SeRacePlayer::acName</references>
        <references refid="struct_se_match_room_load_info_1a8e4579cfa2e221c92f2bb5542528ba99" compoundref="_se_ptl_define_8h" startline="501">SeMatchRoomLoadInfo::acName</references>
        <references refid="struct_se_match_room_load_info_1a183bbb1431a1a58176e6c426e21a868d" compoundref="_se_ptl_define_8h" startline="500">SeMatchRoomLoadInfo::bEscape</references>
        <references refid="struct_se_race_player_1ad077386dd022c176ccbc26db40615bf9" compoundref="_match_server_2_src_2_se_race_mgr_def_8h" startline="40">SeRacePlayer::bLeaveRace</references>
        <references refid="struct_se_match_room_load_info_1aa6425fe2c03564ba0c58676c2db8874f" compoundref="_se_ptl_define_8h" startline="498">SeMatchRoomLoadInfo::dwHeroID</references>
        <references refid="struct_se_race_player_1a0931518409f7624c86925da688945841" compoundref="_race_server_2src_2_se_race_mgr_def_8h" startline="96">SeRacePlayer::dwHeroTypeID</references>
        <references refid="struct_se_match_room_load_info_1a107c94d3c3b03a80e72682a15e7e62f5" compoundref="_se_ptl_define_8h" startline="499">SeMatchRoomLoadInfo::dwSkinTypeID</references>
        <references refid="struct_se_match_room_load_info_1a5e51b8cbb96f5e09f27ef25166e03add" compoundref="_se_ptl_define_8h" startline="497">SeMatchRoomLoadInfo::iSeat</references>
        <references refid="struct_se_race_player_1a1558451c3d50c30090110db7b8d63ca4" compoundref="_match_server_2_src_2_se_race_mgr_def_8h" startline="36">SeRacePlayer::iSeatIndex</references>
        <references refid="_se_tool_8cpp_1a4697a1b0adee30e7c3810134c6cfe519" compoundref="_se_tool_8cpp" startline="76" endline="91">MemCpy</references>
        <references refid="class_race_server_1ad551e4872f5a31815152d030bf0b7aa2">SendRM_MatchRoomLoadInfo</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa60c2838bb5fe85c968e32da4f9958655" compoundref="_se_ptl_comm_define_8h" startline="34">SSD_MAX_CHAR_NAME</references>
        <referencedby refid="class_se_race_mgr_1a6f86cab772c6473217e3f4e3cfe06747" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1925" endline="2285">SeRaceMgr::OnRaceModeEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aef64bcc5362e7c3595c5dd2706c58426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnSendPlayerRaceStream</definition>
        <argsstring>(HSock &amp;rkPlayerSock, bool bMustSend, const char *pkData, int iDataSize)</argsstring>
        <name>OnSendPlayerRaceStream</name>
        <param>
          <type>HSock &amp;</type>
          <declname>rkPlayerSock</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bMustSend</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDataSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="21" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="98" bodyend="134"/>
        <references refid="src_2_race_server_8cpp_1a11ebf86c50956d92a423e490dfbd05be" compoundref="src_2_race_server_8cpp" startline="9">g_kRaceServer</references>
        <references refid="struct_se_u_d_p_sender_1a04f15c188268135c345e93ab4ccadd43" compoundref="src_2_race_server_def_8h" startline="193">SeUDPSender::iFlag</references>
        <references refid="struct_se_u_d_p_sender_1a990aa49bea9fb54ffaaedaf439ca7bd2" compoundref="src_2_race_server_def_8h" startline="192">SeUDPSender::iProtocolFlag</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_race_server_1a5d709a99a45f4cabf057a7c49fa22e0b" compoundref="src_2_race_server_8cpp" startline="1279" endline="1287">OnPlayerDisconnect</references>
        <references refid="_se_ptl_define_8h_1abafc9ef948c5730ee8b9039fdfe8fd9aa7a4475a838a1a89f4828533f5c5cfc9a" compoundref="_se_ptl_define_8h" startline="48">SCF_UDP_UNRELIABLE</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="class_race_server_1ae04d43348017e6e0809c8cbcb123e87f">SendRC_RaceStream</references>
        <referencedby refid="class_se_race_data_mgr_1a87914159ea7e373c23345aae55b27cc2" compoundref="src_2_se_race_data_8cpp" startline="138" endline="187">SeRaceDataMgr::UpdateRaceData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a9486f43f73deddb3a0ad359e729766b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::SendPlayer_ReconNoticePlayerJoin</definition>
        <argsstring>(HSock &amp;rkPlayerSock, int iSeat, int iSize, const char *sName)</argsstring>
        <name>SendPlayer_ReconNoticePlayerJoin</name>
        <param>
          <type>HSock &amp;</type>
          <declname>rkPlayerSock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="22" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="136" bodyend="141"/>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_race_server_1ab594c9f07d76b41ae58c8ed820dd6e4a">SendRC_ShowNotice</references>
        <references refid="_se_ptl_comm_define_8h_1a9e8a0c48a4141863c0a26f1c12a43877a880a4f53ca6cee9c6d7770ac2f8349a6" compoundref="_se_ptl_comm_define_8h" startline="88">SNC_PLAYER_RECON</references>
        <referencedby refid="class_se_race_mgr_1a8bc74f34b4b13a65b21d4c0ef3638d9d" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1283" endline="1375">SeRaceMgr::UpdateReconEnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5eecf4d2a6a3b6eb694aef835621f05e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::DelWaitRobot</definition>
        <argsstring>(DWord dwPlayerID)</argsstring>
        <name>DelWaitRobot</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="24" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="143" bodyend="162"/>
        <references refid="class_race_server_1adeb19bd97b6c95a9601128046d4597ae" compoundref="src_2_race_server_8h" startline="131">m_kWaitRobot</references>
        <referencedby refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" compoundref="src_2_race_server_8cpp" startline="395" endline="463">OnNetDisconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3aef2a30ec9b8184aaeb6b3edb1237f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateWaitRobot</definition>
        <argsstring>()</argsstring>
        <name>UpdateWaitRobot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="25" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="164" bodyend="209"/>
        <references refid="struct_se_test_robot_1a8b0405ad87958072270dfc8f6ec82699" compoundref="src_2_race_server_def_8h" startline="204">SeTestRobot::dwPlayerID</references>
        <references refid="src_2_race_server_8cpp_1a11ebf86c50956d92a423e490dfbd05be" compoundref="src_2_race_server_8cpp" startline="9">g_kRaceServer</references>
        <references refid="class_map_info_table_mgr_1a9449f21c1cae1164722db1429849d982" compoundref="_map_info__table_8cpp" startline="6" endline="13">MapInfoTableMgr::Get</references>
        <references refid="class_map_info_table_mgr_1a39952135dade4b97c37babb2956d299a" compoundref="_map_info__table_8cpp" startline="53" endline="61">MapInfoTableMgr::GetMapInfoTable</references>
        <references refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</references>
        <references refid="struct_map_info_table_1ab6affe9226795011119570d2b95dda7a" compoundref="_map_info__table_8hpp" startline="108">MapInfoTable::iMaxPlayer</references>
        <references refid="class_race_server_1adeb19bd97b6c95a9601128046d4597ae" compoundref="src_2_race_server_8h" startline="131">m_kWaitRobot</references>
        <references refid="class_race_server_1a287dc3e17be22595f717278e9deaa532" compoundref="src_2_se_race_svr_other_8cpp" startline="211" endline="273">StartRobotGame</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a287dc3e17be22595f717278e9deaa532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::StartRobotGame</definition>
        <argsstring>(const MapInfoTable *pkMapRes, VTestRobot &amp;rakRobot)</argsstring>
        <name>StartRobotGame</name>
        <param>
          <type>const <ref refid="struct_map_info_table" kindref="compound">MapInfoTable</ref> *</type>
          <declname>pkMapRes</declname>
        </param>
        <param>
          <type><ref refid="src_2_race_server_def_8h_1af9896ec82bfdccc9c30b142c8539f7bd" kindref="member">VTestRobot</ref> &amp;</type>
          <declname>rakRobot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="26" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="211" bodyend="273"/>
        <references refid="class_se_race_room_mgr_1af726c3559b536f0416cb60f2d47f9b7f" compoundref="src_2_se_race_room_mgr_8cpp" startline="240" endline="312">SeRaceRoomMgr::CreateRoom</references>
        <references refid="struct_se_c_r___race_validate_1ad8b67488740f6d8eecfa52f1ffe8e2ab" compoundref="_se_ptl___c_l___to___r_s_8h" startline="81">SeCR_RaceValidate::dwKey</references>
        <references refid="struct_se_m_r___validate_player_info_1a9d05d0d9f319f536616a32789fbb73bf" compoundref="_se_ptl___m_s___to___r_s_8h" startline="81">SeMR_ValidatePlayerInfo::dwKey</references>
        <references refid="struct_se_m_r___validate_player_info_1a3859e59ddda40f8c364b002c4eb48dc2" compoundref="_se_ptl___m_s___to___r_s_8h" startline="80">SeMR_ValidatePlayerInfo::dwMapID</references>
        <references refid="struct_se_c_r___race_validate_1a1f80f4308c28bb2196a6e7b3eb34d164" compoundref="_se_ptl___c_l___to___r_s_8h" startline="79">SeCR_RaceValidate::dwPlayerID</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_test_robot_1a8b0405ad87958072270dfc8f6ec82699" compoundref="src_2_race_server_def_8h" startline="204">SeTestRobot::dwPlayerID</references>
        <references refid="struct_se_ptl_match_race_info_1a5241b980f42d48d7ed3aa7558ee426ae" compoundref="_se_ptl_define_8h" startline="296">SePtlMatchRaceInfo::dwPlayerID</references>
        <references refid="struct_se_m_r___validate_player_info_1a4de53d329f367f3fdeaff951c05c9bf2" compoundref="_se_ptl___m_s___to___r_s_8h" startline="78">SeMR_ValidatePlayerInfo::dwSessionID</references>
        <references refid="struct_se_c_r___race_validate_1aee602a7a500c25d9bfd85e1da7715d2c" compoundref="_se_ptl___c_l___to___r_s_8h" startline="80">SeCR_RaceValidate::dwSessionId</references>
        <references refid="struct_se_ptl_match_race_info_1a10526f4148604fd52041f08d760a1a02" compoundref="_se_ptl_define_8h" startline="297">SePtlMatchRaceInfo::eCamp</references>
        <references refid="struct_se_c_r___race_validate_1a016211036d852ce78e9ba3b4a4d7523f" compoundref="_se_ptl___c_l___to___r_s_8h" startline="82">SeCR_RaceValidate::eValidType</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="class_race_server_1a39397dd580cff537f231ae1537cd2e33" compoundref="src_2_race_server_8cpp" startline="1335" endline="1343">GetConnectBySock</references>
        <references refid="struct_map_info_table_1af964b291ca0b25d23732cf2860dc4155" compoundref="_map_info__table_8hpp" startline="109">MapInfoTable::iCampNum</references>
        <references refid="struct_map_info_table_1ab6affe9226795011119570d2b95dda7a" compoundref="_map_info__table_8hpp" startline="108">MapInfoTable::iMaxPlayer</references>
        <references refid="struct_se_c_r___race_validate_1a7c89e41d279f875266be4a7a00af5ca0" compoundref="_se_ptl___c_l___to___r_s_8h" startline="83">SeCR_RaceValidate::iSeat</references>
        <references refid="struct_se_ptl_match_race_info_1a9068b1faa9bf887af4f693ed9dfd3026" compoundref="_se_ptl_define_8h" startline="301">SePtlMatchRaceInfo::iSeatIndex</references>
        <references refid="struct_se_test_robot_1acaaa41f47ae59ac8a3312cd4542b2e27" compoundref="src_2_race_server_def_8h" startline="205">SeTestRobot::kSock</references>
        <references refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" compoundref="src_2_se_c_r_process_8cpp" startline="52" endline="211">ProcessCR_RaceValidate</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_ptl_comm_define_8h_1ad8e7aeaeda80b356146ab01dfb71bbf1a94d2e4740f4d1e77d93a252a04187d3e" compoundref="_se_ptl_comm_define_8h" startline="191">SRPC_INVALID</references>
        <references refid="_se_ptl_comm_define_8h_1a77f91e01c5c1d6e63aeae4848cd17d45a05a102a489ec1aa2cfd3420bdefc4d5c" compoundref="_se_ptl_comm_define_8h" startline="182">SRVT_RACE</references>
        <references refid="struct_map_info_table_1af695ae74b8a96c5398ae5178f57b8693" compoundref="_map_info__table_8hpp" startline="87">MapInfoTable::uiMapTypeID</references>
        <referencedby refid="class_race_server_1a3aef2a30ec9b8184aaeb6b3edb1237f8" compoundref="src_2_se_race_svr_other_8cpp" startline="164" endline="209">UpdateWaitRobot</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRaceServiceMsg</definition>
        <argsstring>(DWord dwThreadIndex, void *pkData, int iSize)</argsstring>
        <name>PushRaceServiceMsg</name>
        <param>
          <type>DWord</type>
          <declname>dwThreadIndex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="29" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="275" bodyend="286"/>
        <references refid="class_race_server_1a63863da92e46f041b8505cd3755ad32a" compoundref="src_2_race_server_8h" startline="137">m_iRaceServiceNum</references>
        <references refid="class_race_server_1ad05c3786c53feb3ab6356db773445310" compoundref="src_2_race_server_8h" startline="138">m_pakRaceService</references>
        <references refid="class_race_service_1a830024286ee919364c182cd9c61b4e7c" compoundref="src_2_race_service_8cpp" startline="336" endline="339">RaceService::PushMsg</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <referencedby refid="class_race_server_1a8c8c5a379f9e7f8df13cd6f53c0332d1" compoundref="src_2_se_race_service_push_8cpp" startline="86" endline="93">PushRSC_GetHeroInfo</referencedby>
        <referencedby refid="class_race_server_1af4d35f6be720d325cb342a86eb95528e" compoundref="src_2_se_race_service_push_8cpp" startline="40" endline="47">PushRSC_PlayerLeave</referencedby>
        <referencedby refid="class_race_server_1a49d352bbd64d7977710ee15bafe10d1c" compoundref="src_2_se_race_service_push_8cpp" startline="49" endline="57">PushRSC_PlayerRelink</referencedby>
        <referencedby refid="class_race_server_1aa311514fab61f8576dc494e4339b65ce" compoundref="src_2_se_race_service_push_8cpp" startline="4" endline="24">PushRSC_RaceInit</referencedby>
        <referencedby refid="class_race_server_1a8150e6a22c41574411aa12f59298c3f7" compoundref="src_2_se_race_service_push_8cpp" startline="59" endline="65">PushRSC_RaceOver</referencedby>
        <referencedby refid="class_race_server_1a8d774c423cdc2c2ad62bfdafacb82f46" compoundref="src_2_se_race_service_push_8cpp" startline="67" endline="84">PushRSC_RaceStart</referencedby>
        <referencedby refid="class_race_server_1a8a5747b16a377f090cce5caf582fee8c" compoundref="src_2_se_race_service_push_8cpp" startline="26" endline="38">PushRSC_RaceStream</referencedby>
        <referencedby refid="class_race_server_1a39606329049eb1147391402989a76ee7" compoundref="src_2_se_race_service_push_8cpp" startline="95" endline="102">PushRSC_SetRaceIncmpState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a51639bd7785f6dd43a8f31bc2256dc46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSMsg</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>PushRSMsg</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.inl" line="30" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRaceSvrOther.cpp" bodystart="288" bodyend="291"/>
        <references refid="class_race_server_1adb8735c836a598c39f601078fe100240" compoundref="src_2_race_server_8h" startline="140">m_kThreadMsgMgr</references>
        <references refid="class_se_thread_msg_mgr_1a2138303823638539c975f7cd63cb46d4" compoundref="_se_thread_msg_8cpp" startline="36" endline="58">SeThreadMsgMgr::PushMsg</references>
        <referencedby refid="class_se_thread_race_mgr_1a5087128d5e99691c4539996bb6cb376e" compoundref="src_2_se_thread_race_mgr_8cpp" startline="24" endline="39">SeThreadRaceMgr::AddRace</referencedby>
        <referencedby refid="class_se_thread_race_mgr_1aaa32cf1e375425ee1eacf3619e311eb2" compoundref="src_2_se_thread_race_mgr_8cpp" startline="61" endline="77">SeThreadRaceMgr::DelRace</referencedby>
        <referencedby refid="class_race_service_1a8fc8a0181ec42136cfe0e3bd3492ba39" compoundref="src_2_race_service_8cpp" startline="322" endline="334">RaceService::OnAchievementCounts</referencedby>
        <referencedby refid="class_race_service_1a3e4550f4043e6e543490062bcbdd58cc" compoundref="src_2_race_service_8cpp" startline="239" endline="247">RaceService::OnAddRaceRet</referencedby>
        <referencedby refid="class_race_service_1a0bcb6fe33ef74244de0c5c22ecb639b9" compoundref="src_2_race_service_8cpp" startline="371" endline="376">RaceService::OnDecRespawnItem</referencedby>
        <referencedby refid="class_race_service_1aca476353c346c6b1259b46418d6f3c13" compoundref="src_2_race_service_8cpp" startline="290" endline="299">RaceService::OnGetAchievement</referencedby>
        <referencedby refid="class_race_service_1ab283f9dd5d705e66c9cf108fab699f58" compoundref="src_2_race_service_8cpp" startline="308" endline="313">RaceService::OnPlayerItemChange</referencedby>
        <referencedby refid="class_race_service_1a0133ffb9bf1e584dfff364aaf9fa06d2" compoundref="src_2_race_service_8cpp" startline="315" endline="320">RaceService::OnRaceEndArenaDetail</referencedby>
        <referencedby refid="class_race_service_1aafbbac9cefc27f6ba6cbadf4a8ecbc09" compoundref="src_2_race_service_8cpp" startline="301" endline="306">RaceService::OnRaceEndGradeDetail</referencedby>
        <referencedby refid="class_race_service_1aab14866a2a8f9a18002de7f3382bf323" compoundref="src_2_race_service_8cpp" startline="194" endline="201">RaceService::OnRaceErrorRet</referencedby>
        <referencedby refid="class_race_service_1a682d00a8b87522fd1e27245a150021df" compoundref="src_2_race_service_8cpp" startline="203" endline="224">RaceService::OnRaceEvent</referencedby>
        <referencedby refid="class_race_service_1ad6519fa134508dcced70946d3356d16b" compoundref="src_2_race_service_8cpp" startline="269" endline="274">RaceService::OnRaceKDA</referencedby>
        <referencedby refid="class_race_service_1a0ca5013b8c78bacbcf81ab063b83006e" compoundref="src_2_race_service_8cpp" startline="226" endline="237">RaceService::OnRaceSvrModelPack</referencedby>
        <referencedby refid="class_race_service_1add36927477834ade57c347253ad8b569" compoundref="src_2_race_service_8cpp" startline="276" endline="281">RaceService::OnRealTimeRaceKDA</referencedby>
        <referencedby refid="class_race_service_1a1d1f294bda3343b60c07fb51230b704d" compoundref="src_2_race_service_8cpp" startline="283" endline="288">RaceService::OnRealTimeRaceMapDetail</referencedby>
        <referencedby refid="class_race_service_1ac75744355bee316fe6e3cfd834d2c76c" compoundref="src_2_race_service_8cpp" startline="62" endline="125">RaceService::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6f7ca06ca648046238a73d4c1437846f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRN_Register</definition>
        <argsstring>(DWord dwLoginMagic, DWord dwServerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRN_Register</name>
        <param>
          <type>DWord</type>
          <declname>dwLoginMagic</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRNSend.inl" line="2" column="1"/>
        <referencedby refid="src_2_race_server_8cpp_1a03595bfee2a55045aa751deab1e562d0" compoundref="src_2_race_server_8cpp" startline="14" endline="32">sendRegPack</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acc62a21adc0dfbf5a525fbf934c215a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRN_HeartPackage</definition>
        <argsstring>(void *pkReceiver=NULL)</argsstring>
        <name>SendRN_HeartPackage</name>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRNSend.inl" line="3" column="1"/>
        <referencedby refid="src_2_race_server_8cpp_1a1829928f14924b8a97ed00808758de08" compoundref="src_2_race_server_8cpp" startline="34" endline="51">sendHeartPack</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2da84374ff0e2fa135e38572085a7d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRN_RaceLinkUserSync</definition>
        <argsstring>(DWord dwPlayerID, DWord dwStateID, void *pkReceiver=NULL)</argsstring>
        <name>SendRN_RaceLinkUserSync</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwStateID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRNSend.inl" line="4" column="1"/>
        <referencedby refid="class_race_server_1af7633fe0658191bed28add297940f8eb" compoundref="src_2_race_server_8cpp" startline="1551" endline="1554">RaceLinkUserSync</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a45c90353d4656860e91362d9cf861ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRNData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRNData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRNSend.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRNSend.cpp" bodystart="7" bodyend="22"/>
        <references refid="_se_ptl___r_s___to___n_s_8h_1ac07b1b609b826343ec70022703aac593abef1c6a40621f49568fee922f4824515" compoundref="_se_ptl___r_s___to___n_s_8h" startline="9">CMD_RN_REGISTER</references>
        <references refid="struct_se_virt_conn_1a498d90b78881f21f62000e5848c654e2" compoundref="_se_virt_conn_mgr_8h" startline="49">SeVirtConn::eState</references>
        <references refid="struct_se_virt_conn_1a2ed0654cfe8f298d1dc8fbe76a310df0" compoundref="_se_virt_conn_mgr_8h" startline="47">SeVirtConn::kSock</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" compoundref="src_2_race_server_8h" startline="123">m_pkNSConn</references>
        <references refid="_se_virt_conn_mgr_8h_1ad6484f55baf154efe4f216e3d9c1f459a1e34c360626a791e16a13af7a6bd44fe" compoundref="_se_virt_conn_mgr_8h" startline="12">SVCS_REGISTERED</references>
        <references refid="struct_se_c_m_d_1a2efa122a60040d09cfca777f9155394c" compoundref="_se_ptl_define_8h" startline="97">SeCMD::wCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af1aaa9dca040f647d3690a6df76c833c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessNRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessNRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeNRProcess.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1c42ac7e0125281dc862361d60ba27b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessNR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessNR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeNRProcess.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeNRProcess.cpp" bodystart="7" bodyend="11"/>
        <references refid="struct_se_virt_conn_1a5d5f05afd1fb01e667d072755cba8b2f" compoundref="_se_virt_conn_mgr_8h" startline="52">SeVirtConn::dwLastRecvTime</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" compoundref="src_2_race_server_8h" startline="123">m_pkNSConn</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3e8c21430941f2620c53c25ac804245a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessNR_RegisterRet</definition>
        <argsstring>(SeNR_RegisterRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessNR_RegisterRet</name>
        <param>
          <type><ref refid="struct_se_n_r___register_ret" kindref="compound">SeNR_RegisterRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeNRProcess.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeNRProcess.cpp" bodystart="12" bodyend="26"/>
        <references refid="struct_se_n_r___register_ret_1a148e931a2cbfd1d6887eb3ca5108b856" compoundref="_se_ptl___n_s___to___r_s_8h" startline="34">SeNR_RegisterRet::dwAreaID</references>
        <references refid="struct_se_virt_conn_1accce5905eca3877d6286e3ad10d87b95" compoundref="_se_virt_conn_mgr_8h" startline="44">SeVirtConn::dwAreaID</references>
        <references refid="struct_se_n_r___register_ret_1a75f775da5656db3ca44389154141431c" compoundref="_se_ptl___n_s___to___r_s_8h" startline="33">SeNR_RegisterRet::eRegisterRet</references>
        <references refid="struct_se_virt_conn_1a498d90b78881f21f62000e5848c654e2" compoundref="_se_virt_conn_mgr_8h" startline="49">SeVirtConn::eState</references>
        <references refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" compoundref="src_2_race_server_8h" startline="123">m_pkNSConn</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="_se_server_define_8h_1a83f922065d39660cc6ff3ff3e193daa1a9066cbcd85981ad03cd92ba399a18338" compoundref="_se_server_define_8h" startline="108">SRR_SUCCESS</references>
        <references refid="_se_virt_conn_mgr_8h_1ad6484f55baf154efe4f216e3d9c1f459a9f83edd36767ac2c28d471a29f16d210" compoundref="_se_virt_conn_mgr_8h" startline="10">SVCS_CAN_CONNECT</references>
        <references refid="_se_virt_conn_mgr_8h_1ad6484f55baf154efe4f216e3d9c1f459a1e34c360626a791e16a13af7a6bd44fe" compoundref="_se_virt_conn_mgr_8h" startline="12">SVCS_REGISTERED</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a9338f35af549c8eef2669b09db745c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessNR_HeartPackageRet</definition>
        <argsstring>(SeNR_HeartPackageRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessNR_HeartPackageRet</name>
        <param>
          <type><ref refid="struct_se_n_r___heart_package_ret" kindref="compound">SeNR_HeartPackageRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeNRProcess.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeNRProcess.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af190cfcf2096389abb1e6fae140bf16b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRW_Register</definition>
        <argsstring>(DWord dwLoginMagic, DWord dwServerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRW_Register</name>
        <param>
          <type>DWord</type>
          <declname>dwLoginMagic</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWSend.inl" line="2" column="1"/>
        <referencedby refid="src_2_race_server_8cpp_1a03595bfee2a55045aa751deab1e562d0" compoundref="src_2_race_server_8cpp" startline="14" endline="32">sendRegPack</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7c91cdf3ae830881527d46b137a02682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRW_HeartPackage</definition>
        <argsstring>(void *pkReceiver=NULL)</argsstring>
        <name>SendRW_HeartPackage</name>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWSend.inl" line="3" column="1"/>
        <referencedby refid="src_2_race_server_8cpp_1a1829928f14924b8a97ed00808758de08" compoundref="src_2_race_server_8cpp" startline="34" endline="51">sendHeartPack</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6f197fd5a5d11ddb22deb4c8c8f21786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRWData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWSend.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRWSend.cpp" bodystart="7" bodyend="22"/>
        <references refid="_se_ptl___r_s___to___w_s_8h_1adc5edf745af6ca57312e98f93bc811f2a7414852884f485a4c41d99c6e0b38c02" compoundref="_se_ptl___r_s___to___w_s_8h" startline="9">CMD_RW_REGISTER</references>
        <references refid="struct_se_virt_conn_1a498d90b78881f21f62000e5848c654e2" compoundref="_se_virt_conn_mgr_8h" startline="49">SeVirtConn::eState</references>
        <references refid="struct_se_virt_conn_1a2ed0654cfe8f298d1dc8fbe76a310df0" compoundref="_se_virt_conn_mgr_8h" startline="47">SeVirtConn::kSock</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" compoundref="src_2_race_server_8h" startline="122">m_pkWSConn</references>
        <references refid="_se_virt_conn_mgr_8h_1ad6484f55baf154efe4f216e3d9c1f459a1e34c360626a791e16a13af7a6bd44fe" compoundref="_se_virt_conn_mgr_8h" startline="12">SVCS_REGISTERED</references>
        <references refid="struct_se_c_m_d_1a2efa122a60040d09cfca777f9155394c" compoundref="_se_ptl_define_8h" startline="97">SeCMD::wCmd</references>
        <referencedby refid="class_race_server_1a4b58bfa7d6edcbc15aecbf815f082a43" compoundref="src_2_se_r_b_l_send_8cpp" startline="7" endline="10">SendRBLData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad838f776e2962783429f71a20130cbd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessWRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessWRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWRProcess.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2f596ad8edeb2676a18fa9d820bc7dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessWR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessWR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWRProcess.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeWRProcess.cpp" bodystart="8" bodyend="12"/>
        <references refid="struct_se_virt_conn_1a5d5f05afd1fb01e667d072755cba8b2f" compoundref="_se_virt_conn_mgr_8h" startline="52">SeVirtConn::dwLastRecvTime</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" compoundref="src_2_race_server_8h" startline="122">m_pkWSConn</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6bb96643b45811c92173759fc5ed6a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessWR_RegisterRet</definition>
        <argsstring>(SeWR_RegisterRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessWR_RegisterRet</name>
        <param>
          <type><ref refid="struct_se_w_r___register_ret" kindref="compound">SeWR_RegisterRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWRProcess.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeWRProcess.cpp" bodystart="14" bodyend="28"/>
        <references refid="struct_se_w_r___register_ret_1a4505c15f8f5789a3f97c11657fdab8d4" compoundref="_se_ptl___w_s___to___r_s_8h" startline="34">SeWR_RegisterRet::dwAreaID</references>
        <references refid="struct_se_virt_conn_1accce5905eca3877d6286e3ad10d87b95" compoundref="_se_virt_conn_mgr_8h" startline="44">SeVirtConn::dwAreaID</references>
        <references refid="struct_se_w_r___register_ret_1ab9e38d0e4c41609b7bea728618a74c4f" compoundref="_se_ptl___w_s___to___r_s_8h" startline="33">SeWR_RegisterRet::eRegisterRet</references>
        <references refid="struct_se_virt_conn_1a498d90b78881f21f62000e5848c654e2" compoundref="_se_virt_conn_mgr_8h" startline="49">SeVirtConn::eState</references>
        <references refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" compoundref="src_2_race_server_8h" startline="122">m_pkWSConn</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="_se_server_define_8h_1a83f922065d39660cc6ff3ff3e193daa1a9066cbcd85981ad03cd92ba399a18338" compoundref="_se_server_define_8h" startline="108">SRR_SUCCESS</references>
        <references refid="_se_virt_conn_mgr_8h_1ad6484f55baf154efe4f216e3d9c1f459a9f83edd36767ac2c28d471a29f16d210" compoundref="_se_virt_conn_mgr_8h" startline="10">SVCS_CAN_CONNECT</references>
        <references refid="_se_virt_conn_mgr_8h_1ad6484f55baf154efe4f216e3d9c1f459a1e34c360626a791e16a13af7a6bd44fe" compoundref="_se_virt_conn_mgr_8h" startline="12">SVCS_REGISTERED</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5c2ba1dd8cad200d76079ab854202714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessWR_HeartPackageRet</definition>
        <argsstring>(SeWR_HeartPackageRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessWR_HeartPackageRet</name>
        <param>
          <type><ref refid="struct_se_w_r___heart_package_ret" kindref="compound">SeWR_HeartPackageRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWRProcess.inl" line="7" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeWRProcess.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a166c51a0d94ecdb181df9179417f19cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_UpdateScore</definition>
        <argsstring>(DWord dwPlayerID, const MatchType &amp;eMatchType, int score, bool win, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_UpdateScore</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a747637046be33d7273262104aad8069d" kindref="member">MatchType</ref> &amp;</type>
          <declname>eMatchType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>win</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="2" column="1"/>
        <referencedby refid="class_se_race_mgr_1aeb079abe070d16c29aefc0cc8df54ea7" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3588" endline="3699">SeRaceMgr::OnRaceEndGradeDetail</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4e9698d704067d48044dd23381b0ac4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_AwardItemNtf</definition>
        <argsstring>(DWord dwPlayerID, int iNum, const SeAwardItem *awards, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_AwardItemNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_award_item" kindref="compound">SeAwardItem</ref> *</type>
          <declname>awards</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="3" column="1"/>
        <referencedby refid="class_se_race_mgr_1aeda2db482c8e9adc4b51327909238205" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3381" endline="3399">SeRaceMgr::OnPlayerItemChange</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a32a154a06ab7443e518a87ae55191bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_AwardItemNtf</definition>
        <argsstring>(DWord dwPlayerID, int iNum, std::vector&lt; SeAwardItem &gt; &amp;awards, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_AwardItemNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_award_item" kindref="compound">SeAwardItem</ref> &gt; &amp;</type>
          <declname>awards</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a9f13723e990d723eb68be4271f1dd131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_DecRespawnItemNtf</definition>
        <argsstring>(DWord dwPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_DecRespawnItemNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="5" column="1"/>
        <referencedby refid="class_se_race_mgr_1ad3028eb038b4a1a365bbe15222b40c7f" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3701" endline="3717">SeRaceMgr::OnDecRespawnItem</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acdf817ed9d5ad15bb4fabf3e03fe6800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_SetEquipSetNtf</definition>
        <argsstring>(DWord dwPlayerID, Byte byIndex, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_SetEquipSetNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>Byte</type>
          <declname>byIndex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="6" column="1"/>
        <referencedby refid="class_race_server_1afacefe00ea688058623e130755f5922b" compoundref="src_2_se_c_r_process_8cpp" startline="545" endline="573">ProcessCR_SetEquipSetReq</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2af73fffd68913814b2e4a9a051dcaaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_SetRaceMapHeroNtf</definition>
        <argsstring>(DWord dwPlayerID, DWord dwMapID, DWord dwHeroID, DWord dwWinCounts, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_SetRaceMapHeroNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwWinCounts</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="7" column="1"/>
        <referencedby refid="class_se_race_mgr_1a17512d648face94dd24933efff4c94c2" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3719" endline="3826">SeRaceMgr::OnRaceEndArenaDetail</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3d67284e8562058c54cd0cc7504c5ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_SetAvatarNtf</definition>
        <argsstring>(DWord dwPlayerID, DWord dwHeroID, DWord dwItemID, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_SetAvatarNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwItemID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="8" column="1"/>
        <referencedby refid="class_race_server_1a5eb54db8dd16183d4e12fafd2925f815" compoundref="src_2_se_c_r_process_8cpp" startline="575" endline="609">ProcessCR_SetAvatarReq</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0a4431e66fa155e9a51c770f2b4fe0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_SelectHeroReq</definition>
        <argsstring>(DWord dwPlayerID, DWord dwHeroID, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_SelectHeroReq</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="9" column="1"/>
        <referencedby refid="class_race_server_1aea34d836902daf4b3cda8a714e3257d2" compoundref="src_2_se_c_r_process_8cpp" startline="344" endline="375">ProcessCR_SelHeroChoiceHero</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0c4099a22261da4713d38f23056fc6d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_UserRaceMapNtf</definition>
        <argsstring>(DWord dwPlayerID, const SeRaceEndArenaDetailInfo &amp;akRaceMaplInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_UserRaceMapNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_race_end_arena_detail_info" kindref="compound">SeRaceEndArenaDetailInfo</ref> &amp;</type>
          <declname>akRaceMaplInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="10" column="1"/>
        <referencedby refid="class_se_race_mgr_1a17512d648face94dd24933efff4c94c2" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3719" endline="3826">SeRaceMgr::OnRaceEndArenaDetail</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aeaf56c13251278f91eec8bebac1fd413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_RaceEndArenaBaseInfoSync</definition>
        <argsstring>(DWord dwPlayerID, const SeRaceEndArenaBaseInfo &amp;akRaceBaselInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_RaceEndArenaBaseInfoSync</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_race_end_arena_base_info" kindref="compound">SeRaceEndArenaBaseInfo</ref> &amp;</type>
          <declname>akRaceBaselInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="11" column="1"/>
        <referencedby refid="class_se_race_mgr_1a17512d648face94dd24933efff4c94c2" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3719" endline="3826">SeRaceMgr::OnRaceEndArenaDetail</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4b58bfa7d6edcbc15aecbf815f082a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBLData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRBLData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="14" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeRBLSend.cpp" bodystart="7" bodyend="10"/>
        <references refid="class_race_server_1a6f197fd5a5d11ddb22deb4c8c8f21786" compoundref="src_2_se_r_w_send_8cpp" startline="7" endline="22">SendRWData</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a45cac7826a45bb10e88cbcbc97e13000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessBLRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessBLRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeBLRProcess.inl" line="2" column="1"/>
        <referencedby refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" compoundref="src_2_race_server_8cpp" startline="318" endline="393">OnNetRecv</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4761d9e9b80802fec6b7bec5bfe26620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessBLR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessBLR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeBLRProcess.inl" line="5" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeBLRProcess.cpp" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a624351ac9226d75b6f48ac74db48640b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessBLR_SelectHeroAck</definition>
        <argsstring>(SeBLR_SelectHeroAck *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessBLR_SelectHeroAck</name>
        <param>
          <type><ref refid="struct_se_b_l_r___select_hero_ack" kindref="compound">SeBLR_SelectHeroAck</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeBLRProcess.inl" line="6" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/SeBLRProcess.cpp" bodystart="12" bodyend="43"/>
        <references refid="struct_se_sel_hero_info_1a03790e19ae70793eaa2813b5fc0994ef" compoundref="_se_ptl_comm_define_8h" startline="1118">SeSelHeroInfo::dwHeroTypeID</references>
        <references refid="struct_se_b_l_r___select_hero_ack_1a7ba5db770c42dca1807bc978321d66f3" compoundref="_se_ptl___b_l_s___to___r_s_8h" startline="33">SeBLR_SelectHeroAck::dwPlayerID</references>
        <references refid="struct_se_race_room_1ac9ea7d81816dc06c35f26f0ac2854673" compoundref="src_2_se_race_room_mgr_def_8h" startline="74">SeRaceRoom::eRoomState</references>
        <references refid="src_2_se_race_room_mgr_8cpp_1a1771b043167e48e5c34149379e0ded7c" compoundref="src_2_se_race_room_mgr_8cpp" startline="6">g_kRaceRoomMgr</references>
        <references refid="src_2_race_server_8cpp_1a11ebf86c50956d92a423e490dfbd05be" compoundref="src_2_race_server_8cpp" startline="9">g_kRaceServer</references>
        <references refid="class_se_match_player_1a35c079e955f2152045162612e7a19515" compoundref="src_2_se_match_player_8h" startline="27" endline="30">SeMatchPlayer::GetHSock</references>
        <references refid="class_se_race_room_mgr_1abd55695aff9eda38298a2255af31e9cf" compoundref="src_2_se_race_room_mgr_8cpp" startline="326" endline="334">SeRaceRoomMgr::GetPlayer</references>
        <references refid="class_se_match_player_1ac6d59323e65b0f5ca2c799248763a656" compoundref="src_2_se_match_player_8cpp" startline="77" endline="80">SeMatchPlayer::GetPlayerState</references>
        <references refid="class_se_race_room_mgr_1a806bdfea8ed0bd338b03c4ef82578cfd" compoundref="src_2_se_race_room_mgr_8cpp" startline="367" endline="376">SeRaceRoomMgr::GetRoom</references>
        <references refid="class_se_match_player_1a6e3f249f93ba1ec1cc71ba7f630fc2c1" compoundref="src_2_se_match_player_8h" startline="57" endline="60">SeMatchPlayer::GetRoomSessionID</references>
        <references refid="struct_se_b_l_r___select_hero_ack_1a000d78cd79d9d39c4fc87da4e245ac21" compoundref="_se_ptl___b_l_s___to___r_s_8h" startline="34">SeBLR_SelectHeroAck::hero</references>
        <references refid="struct_se_b_l_r___select_hero_ack_1afdd278e6fb4959c3d24d2de49973f644" compoundref="_se_ptl___b_l_s___to___r_s_8h" startline="32">SeBLR_SelectHeroAck::iResult</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="class_se_race_room_mgr_1ad636d2a05537aac6086c1834aa281269" compoundref="src_2_se_race_room_mgr_8cpp" startline="554" endline="574">SeRaceRoomMgr::OnPlayerChoiceHero</references>
        <references refid="class_se_match_player_1a1e5ec505440b05cb33a713e152c9d235" compoundref="src_2_se_match_player_8cpp" startline="280" endline="283">SeMatchPlayer::pushHero</references>
        <references refid="class_race_server_1ab594c9f07d76b41ae58c8ed820dd6e4a">SendRC_ShowNotice</references>
        <references refid="src_2_se_match_player_8h_1ab02f4b79cab8afcc82b75008742f21f0a7f3153bb5dbe0580e1c8efffdb086226" compoundref="src_2_se_match_player_8h" startline="11">SMPS_SELECT_HERO</references>
        <references refid="_se_ptl_comm_define_8h_1a9e8a0c48a4141863c0a26f1c12a43877a127b013aef4d2c66c0ad6a5eb2999275" compoundref="_se_ptl_comm_define_8h" startline="94">SNC_MATCH_SELHERO_FAIL</references>
        <references refid="src_2_se_race_room_mgr_def_8h_1a8c527d8512227a77571890dff531fefead19b036a5ff4dcce7c4989a48125befb" compoundref="src_2_se_race_room_mgr_def_8h" startline="10">SRRS_SELHERO</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5847643304f7413be6138cf975c3e7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnPlayerConnected</definition>
        <argsstring>(SeConnect *pkConnect, const char *pcIP, int iPort)</argsstring>
        <name>OnPlayerConnected</name>
        <param>
          <type><ref refid="struct_se_connect" kindref="compound">SeConnect</ref> *</type>
          <declname>pkConnect</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="61" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1253" bodyend="1277"/>
        <references refid="struct_se_connect_1ab3a1a0ba0b787a600e7b5f65f7a35e8b" compoundref="src_2_race_server_def_8h" startline="158">SeConnect::acEncryptKey</references>
        <references refid="struct_se_net_addr_1a23b51e87d8b7b2201a03833c9adde232" compoundref="_se_share_def_8h" startline="41">SeNetAddr::acIP</references>
        <references refid="struct_se_race_config_1aef1a9ed66ebb4da0be2c88c742bb4daa" compoundref="src_2_race_server_def_8h" startline="113">SeRaceConfig::dwGenRobotID</references>
        <references refid="struct_se_connect_1af90c5d0ae32665bd3b89980926896f0c" compoundref="_tcp_server_def_8h" startline="88">SeConnect::dwLastRecvTime</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_connect_1ae90bd507e6e1e36dc4ee9e4d5e849cd3" compoundref="_src_2_match_server_def_8h" startline="65">SeConnect::dwStateTime</references>
        <references refid="struct_se_connect_1a149d84058a462e8833764a6dd2aa2d04" compoundref="_src_2_match_server_def_8h" startline="64">SeConnect::eState</references>
        <references refid="_se_tool_8cpp_1a1cf7ec78fb6f69a807c3f15e0554909a" compoundref="_se_tool_8cpp" startline="633" endline="640">GenEncryptKey</references>
        <references refid="struct_se_net_addr_1a989fa5b025bc039122e8d2a29838fde9" compoundref="_se_share_def_8h" startline="42">SeNetAddr::iPort</references>
        <references refid="class_race_server_1a65a33b72bda3aa9083d8c91e6879501c" compoundref="src_2_se_race_svr_other_8cpp" startline="53" endline="56">IsTestRobotMode</references>
        <references refid="struct_se_connect_1a6be4df6ec540b10b76496b0d353df27c" compoundref="_src_2_match_server_def_8h" startline="63">SeConnect::kNetAddr</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="struct_se_u_d_p_sender_1a478dfaffb68b1a2c136020ac84d869ec" compoundref="src_2_race_server_def_8h" startline="191">SeUDPSender::kSock</references>
        <references refid="_se_define_8h_1adc43374bec4aa6c4c8af612a8592592d" compoundref="_se_define_8h" startline="35">LOGIC_VERSION</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="_src_2_match_server_def_8h_1a66f85fac7c2312bb587ad3f33324085eaa56d080abab641c052974b0a39f8bf32" compoundref="_src_2_match_server_def_8h" startline="48">SCS_UNKOWN</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_race_server_1a32736c15ec790dcfcd7abfd44a2a64b9">SendRC_EncryptKey</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa545aa5c585c544fb7b25a57dc400909b" compoundref="_se_ptl_comm_define_8h" startline="19">SSD_EN_KEY_LEN</references>
        <references refid="_se_tool_8cpp_1a4d30fbe56257fc998ebc1346e53be0d8" compoundref="_se_tool_8cpp" startline="50" endline="73">StrCpy</references>
        <referencedby refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" compoundref="src_2_race_server_8cpp" startline="284" endline="316">OnNetAccept</referencedby>
        <referencedby refid="class_race_server_1a915457d69cfd32d5db80be534beeeec2" compoundref="src_2_race_server_8cpp" startline="490" endline="515">OnNetUdpAccept</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5d709a99a45f4cabf057a7c49fa22e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnPlayerDisconnect</definition>
        <argsstring>(HSock rkSock)</argsstring>
        <name>OnPlayerDisconnect</name>
        <param>
          <type>HSock</type>
          <declname>rkSock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="62" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1279" bodyend="1287"/>
        <references refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" compoundref="src_2_race_server_8cpp" startline="1196" endline="1206">DisconnectPlayer</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <referencedby refid="class_se_race_room_mgr_1a337c88f7753fce325ed9daf56611302c" compoundref="src_2_se_race_room_mgr_8cpp" startline="404" endline="515">SeRaceRoomMgr::OnRaceLeave</referencedby>
        <referencedby refid="class_race_server_1aef64bcc5362e7c3595c5dd2706c58426" compoundref="src_2_se_race_svr_other_8cpp" startline="98" endline="134">OnSendPlayerRaceStream</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a1b9ac292859de54afcecec0f304cfc5e" compoundref="src_2_se_race_room_mgr_8cpp" startline="1238" endline="1272">SeRaceRoomMgr::RecycleRoomPlayer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af6b7d3e4ec57890e9d02aedcf6b135c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ClearAllPlayerConn</definition>
        <argsstring>()</argsstring>
        <name>ClearAllPlayerConn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="63" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1289" bodyend="1298"/>
        <references refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" compoundref="src_2_race_server_8cpp" startline="1196" endline="1206">DisconnectPlayer</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a168a19b0f8e671d9f95604a84728547a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_se_connect" kindref="compound">SeConnect</ref> *</type>
        <definition>SeConnect * RaceServer::GetConnectByID</definition>
        <argsstring>(DWord dwPlayerID)</argsstring>
        <name>GetConnectByID</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="65" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1345" bodyend="1356"/>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <referencedby refid="class_race_server_1a0327ec22cd90fde20725c9c6f1242551" compoundref="src_2_se_c_r_process_8cpp" startline="458" endline="485">ProcessCR_RaceRobotLogin</referencedby>
        <referencedby refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" compoundref="src_2_se_c_r_process_8cpp" startline="52" endline="211">ProcessCR_RaceValidate</referencedby>
        <referencedby refid="class_race_server_1a75c896e3c906802be4bbd2d615f782c8" compoundref="src_2_se_m_r_process_8cpp" startline="130" endline="141">ProcessMR_ValidFailRet</referencedby>
        <referencedby refid="class_race_server_1a2dc1053a39f7555cd389f5097a05fcc7" compoundref="src_2_se_m_r_process_8cpp" startline="119" endline="128">ProcessMR_ViewValidOKRet</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aae7e2004f6045cb4ad87e2809a853551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::GetServerRunState</definition>
        <argsstring>(int &amp;riSvrModeNum, int &amp;riNormalNum)</argsstring>
        <name>GetServerRunState</name>
        <param>
          <type>int &amp;</type>
          <declname>riSvrModeNum</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>riNormalNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="66" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1300" bodyend="1304"/>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="class_se_race_mgr_1ab309a28cfc7aa49882a7898ae80753f7" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="556" endline="564">SeRaceMgr::GetNormalRaceNum</references>
        <references refid="class_se_race_mgr_1acfe306f414adc6b6d558b28ded4e8221" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="546" endline="554">SeRaceMgr::GetSvrModeRaceNum</references>
        <referencedby refid="class_race_server_1a54cb7d1172fd8b14c335874dc954ebe6" compoundref="src_2_race_server_8cpp" startline="241" endline="256">ShowConsoleTitle</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a646c8d5e3d5695db7957b6e302c3c3e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetConnectNum</definition>
        <argsstring>()</argsstring>
        <name>GetConnectNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="67" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1306" bodyend="1309"/>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <referencedby refid="class_race_server_1a54cb7d1172fd8b14c335874dc954ebe6" compoundref="src_2_race_server_8cpp" startline="241" endline="256">ShowConsoleTitle</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a171d5bec27c5a1955ffd46351fe5ab0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::DelConnectByID</definition>
        <argsstring>(DWord dwPlayerID)</argsstring>
        <name>DelConnectByID</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="68" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1311" bodyend="1333"/>
        <references refid="struct_se_race_config_1aeb8a2be38bbebf6ac9dfb52b428f799f" compoundref="src_2_race_server_def_8h" startline="96">SeRaceConfig::bTcpClient</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" compoundref="src_2_race_server_8h" startline="119">m_kUdpMgr</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <referencedby refid="class_se_race_room_mgr_1af726c3559b536f0416cb60f2d47f9b7f" compoundref="src_2_se_race_room_mgr_8cpp" startline="240" endline="312">SeRaceRoomMgr::CreateRoom</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a39397dd580cff537f231ae1537cd2e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_se_connect" kindref="compound">SeConnect</ref> *</type>
        <definition>SeConnect * RaceServer::GetConnectBySock</definition>
        <argsstring>(const HSock &amp;rkSock)</argsstring>
        <name>GetConnectBySock</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="69" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1335" bodyend="1343"/>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <referencedby refid="class_race_server_1a287dc3e17be22595f717278e9deaa532" compoundref="src_2_se_race_svr_other_8cpp" startline="211" endline="273">StartRobotGame</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad98e4b64bed4e582131dd353ae56f74e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ReLoadServerAddr</definition>
        <argsstring>(const char *pcFile)</argsstring>
        <name>ReLoadServerAddr</name>
        <param>
          <type>const char *</type>
          <declname>pcFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="70" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1358" bodyend="1386"/>
        <references refid="class_se_config_1a0bd6ce789230fc24e8e09674c0265d5d" compoundref="_se_config_8cpp" startline="56" endline="95">SeConfig::GetNetAddr</references>
        <references refid="struct_se_net_addr_1a35c27f89f488d9bd23ee1c19f2ae7b8a" compoundref="_se_share_def_8h" startline="14" endline="21">SeNetAddr::IsEmpty</references>
        <references refid="struct_se_race_config_1a06732c2e787bea54b171459976f4844e" compoundref="src_2_race_server_def_8h" startline="95">SeRaceConfig::kMSServer</references>
        <references refid="struct_se_server_data_1a2777bbfd27a6afe42ebd71c5d14010a0" compoundref="_se_server_define_8h" startline="19">SeServerData::kSock</references>
        <references refid="class_se_config_1a077cfce8454c31d293c2d2341980ffca" compoundref="_se_config_8cpp" startline="10" endline="21">SeConfig::Load</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <referencedby refid="class_race_server_1aa09b74ef284ae258769b65ed2ecc07e3" compoundref="src_2_race_server_8cpp" startline="1440" endline="1454">UpdateRSConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::LoadConfig</definition>
        <argsstring>(const char *pcFile)</argsstring>
        <name>LoadConfig</name>
        <param>
          <type>const char *</type>
          <declname>pcFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="71" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="588" bodyend="614"/>
        <references refid="struct_se_race_config_1af292f08b5467a3cb087cdcb2c38fd94a" compoundref="src_2_race_server_def_8h" startline="110">SeRaceConfig::bCanLoad</references>
        <references refid="struct_se_race_config_1afceab097bea3603d3c2316b6b2052c7a" compoundref="src_2_race_server_def_8h" startline="108">SeRaceConfig::bOpen</references>
        <references refid="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" compoundref="src_2_race_server_8cpp" startline="621" endline="925">LoadRSTempConfig</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="_se_tool_8cpp_1a4697a1b0adee30e7c3810134c6cfe519" compoundref="_se_tool_8cpp" startline="76" endline="91">MemCpy</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_race_server_1af0b257e59ee7711f97d4f528c80911b6">SendRM_RefreshConfigInfo</references>
        <referencedby refid="class_race_server_1a66b1d68ffc570732242915bc09651c27" compoundref="src_2_race_server_8cpp" startline="74" endline="132">Initialize</referencedby>
        <referencedby refid="class_race_server_1afd28fa51db9bbe338d72e8998ecb9dd8" compoundref="src_2_race_server_8cpp" startline="616" endline="619">ReLoadConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1afd28fa51db9bbe338d72e8998ecb9dd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ReLoadConfig</definition>
        <argsstring>()</argsstring>
        <name>ReLoadConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="72" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="616" bodyend="619"/>
        <references refid="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" compoundref="src_2_race_server_8cpp" startline="588" endline="614">LoadConfig</references>
        <referencedby refid="class_race_server_1a83c381dd5580152733352009687c5b0a" compoundref="_race_server_2src_2_main_8cpp" startline="5" endline="50">ExecuteAction</referencedby>
        <referencedby refid="class_race_server_1aa09b74ef284ae258769b65ed2ecc07e3" compoundref="src_2_race_server_8cpp" startline="1440" endline="1454">UpdateRSConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::LoadRSTempConfig</definition>
        <argsstring>(const char *pcFile, SeRaceConfig &amp;rkRSConfig)</argsstring>
        <name>LoadRSTempConfig</name>
        <param>
          <type>const char *</type>
          <declname>pcFile</declname>
        </param>
        <param>
          <type><ref refid="struct_se_race_config" kindref="compound">SeRaceConfig</ref> &amp;</type>
          <declname>rkRSConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="73" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="621" bodyend="925"/>
        <references refid="struct_se_race_config_1a3dbef75c23722db906c823ac9f74b089" compoundref="src_2_race_server_def_8h" startline="102">SeRaceConfig::acDumpPath</references>
        <references refid="struct_se_race_config_1a2a46b2a1e0add63f77d52cc3748e2367" compoundref="src_2_race_server_def_8h" startline="103">SeRaceConfig::acGameLogFilePath</references>
        <references refid="struct_se_race_config_1a185b50d5737dfaf99b61660354d529d1" compoundref="src_2_race_server_def_8h" startline="122">SeRaceConfig::acRaceRecordSavePath</references>
        <references refid="struct_se_race_config_1abb2b3da61e6e91ed0fc57dd41899bc26" compoundref="src_2_race_server_def_8h" startline="125">SeRaceConfig::acRaceRecordURLBase</references>
        <references refid="struct_se_race_config_1aba4317010d85b55d0385350c355fa4aa" compoundref="src_2_race_server_def_8h" startline="109">SeRaceConfig::acRandSelHeroQuality</references>
        <references refid="struct_se_race_config_1ac773d83ceaf2916c189ae13b4b74f4f9" compoundref="src_2_race_server_def_8h" startline="123">SeRaceConfig::acRecordSaveBat</references>
        <references refid="struct_se_race_config_1af292f08b5467a3cb087cdcb2c38fd94a" compoundref="src_2_race_server_def_8h" startline="110">SeRaceConfig::bCanLoad</references>
        <references refid="struct_se_race_config_1afceab097bea3603d3c2316b6b2052c7a" compoundref="src_2_race_server_def_8h" startline="108">SeRaceConfig::bOpen</references>
        <references refid="struct_se_race_config_1a4bb1eb7b91ae54afec70f30f4052b9c9" compoundref="src_2_race_server_def_8h" startline="115">SeRaceConfig::bRCPacketToFile</references>
        <references refid="struct_se_race_config_1a50c71743e2f148dacf3ee4d8f70822aa" compoundref="src_2_race_server_def_8h" startline="98">SeRaceConfig::bRealTickTime</references>
        <references refid="struct_se_race_config_1aeb8a2be38bbebf6ac9dfb52b428f799f" compoundref="src_2_race_server_def_8h" startline="96">SeRaceConfig::bTcpClient</references>
        <references refid="struct_se_race_config_1a31a1df022a0a063fad90d6d11c9ef0f9" compoundref="src_2_race_server_def_8h" startline="112">SeRaceConfig::bTestRobotMode</references>
        <references refid="struct_se_race_config_1a72013a4bed35c7b1633c2039f1c75d26" compoundref="src_2_race_server_def_8h" startline="90">SeRaceConfig::dwAreaID</references>
        <references refid="struct_se_race_config_1a382a646846d8fb8918f0c8b7c1d1e474" compoundref="src_2_race_server_def_8h" startline="91">SeRaceConfig::dwServerID</references>
        <references refid="struct_se_race_config_1a9e802ee3c08a693e6053c58e4d4bc892" compoundref="src_2_race_server_def_8h" startline="99">SeRaceConfig::fWriteInterval</references>
        <references refid="class_se_config_1a0bd6ce789230fc24e8e09674c0265d5d" compoundref="_se_config_8cpp" startline="56" endline="95">SeConfig::GetNetAddr</references>
        <references refid="_se_tool_8cpp_1a03bcc77ad4ef4845b20fc5cf4db96834" compoundref="_se_tool_8cpp" startline="603" endline="610">GetStr2ID</references>
        <references refid="class_se_config_1a8839d0f5e6b831b66fd018826a304086" compoundref="_se_config_8cpp" startline="23" endline="42">SeConfig::GetValue</references>
        <references refid="struct_se_race_config_1aa32b4b12bf68b7d97aa2d50e3f456d18" compoundref="src_2_race_server_def_8h" startline="121">SeRaceConfig::iClientHeartBeatTime</references>
        <references refid="struct_se_race_config_1a025b914a4369ee7f4c8d61894a763b16" compoundref="src_2_race_server_def_8h" startline="104">SeRaceConfig::iDebugLevel</references>
        <references refid="struct_se_race_config_1a623a11ace476dbbe7222d20cece2bc98" compoundref="src_2_race_server_def_8h" startline="116">SeRaceConfig::iLogicDllRaceNum</references>
        <references refid="struct_se_race_config_1a72a9920c01aa5382236ff67e8c7d77af" compoundref="src_2_race_server_def_8h" startline="120">SeRaceConfig::iMaxReconTime</references>
        <references refid="struct_se_race_config_1aac8adf41431da03782d2931eb7a7eeb1" compoundref="src_2_race_server_def_8h" startline="107">SeRaceConfig::iRaceJustify</references>
        <references refid="struct_se_race_config_1a6a37ac7f61b6e52467a981d45bef9db8" compoundref="src_2_race_server_def_8h" startline="100">SeRaceConfig::iRacePacketMaxSize</references>
        <references refid="struct_se_race_config_1aa2e7f64455d69ce0024a2203cfa512a5" compoundref="src_2_race_server_def_8h" startline="105">SeRaceConfig::iRacePackTime</references>
        <references refid="struct_se_race_config_1a4aed8d243cf6d513b615f45aa6abd187" compoundref="src_2_race_server_def_8h" startline="97">SeRaceConfig::iRacePrintTime</references>
        <references refid="struct_se_race_config_1af1c1a0945379d0bfee22df3decd9899d" compoundref="src_2_race_server_def_8h" startline="106">SeRaceConfig::iServerModePackTime</references>
        <references refid="struct_se_race_config_1af83999c76e4ef34fce9bc273613aead9" compoundref="src_2_race_server_def_8h" startline="118">SeRaceConfig::iStatisticPacketSize</references>
        <references refid="struct_se_race_config_1a351ec660faea6cae5c3a7faa25e89a48" compoundref="src_2_race_server_def_8h" startline="119">SeRaceConfig::iStatisticPacketSizeTime</references>
        <references refid="struct_se_race_config_1a274869e2258be43118f1147a0812dfb6" compoundref="src_2_race_server_def_8h" startline="101">SeRaceConfig::iTestRaceNum</references>
        <references refid="struct_se_race_config_1a3c54b6d17703bcfd643736f3c4d6ea1a" compoundref="src_2_race_server_def_8h" startline="92">SeRaceConfig::kAddrToPlayer</references>
        <references refid="struct_se_race_config_1a80d8a2c6f28d8484261ae341b0d76de7" compoundref="src_2_race_server_def_8h" startline="93">SeRaceConfig::kAddrToPlayerUdp</references>
        <references refid="struct_se_race_config_1a6bb4eaef04af40f9455804034cf24b0a" compoundref="src_2_race_server_def_8h" startline="94">SeRaceConfig::kAddrToWCS</references>
        <references refid="struct_se_race_config_1a06732c2e787bea54b171459976f4844e" compoundref="src_2_race_server_def_8h" startline="95">SeRaceConfig::kMSServer</references>
        <references refid="class_se_config_1a077cfce8454c31d293c2d2341980ffca" compoundref="_se_config_8cpp" startline="10" endline="21">SeConfig::Load</references>
        <references refid="class_race_server_1a63863da92e46f041b8505cd3755ad32a" compoundref="src_2_race_server_8h" startline="137">m_iRaceServiceNum</references>
        <references refid="class_race_server_1a52e5e5c638506c53e51dcdad1636b7be" compoundref="src_2_race_server_8h" startline="142">m_iRobotRaceNum</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="_se_tool_8cpp_1a4d30fbe56257fc998ebc1346e53be0d8" compoundref="_se_tool_8cpp" startline="50" endline="73">StrCpy</references>
        <referencedby refid="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" compoundref="src_2_race_server_8cpp" startline="588" endline="614">LoadConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::IsMSReady</definition>
        <argsstring>(void)</argsstring>
        <name>IsMSReady</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="75" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1177" bodyend="1184"/>
        <references refid="struct_se_server_data_1a4d91e2d15b4bc404ebc4ec42254ac770" compoundref="_se_server_define_8h" startline="21">SeServerData::bRegistered</references>
        <references refid="struct_se_server_data_1a2777bbfd27a6afe42ebd71c5d14010a0" compoundref="_se_server_define_8h" startline="19">SeServerData::kSock</references>
        <references refid="class_race_server_1a3a3bff84b94f764521c4d23de3bbebc7" compoundref="src_2_race_server_8h" startline="112">m_bMSReady</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <referencedby refid="class_se_race_mgr_1aae206811ec7efcdd3fa28766d8d75327" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3259" endline="3300">SeRaceMgr::OnCheckGuanqiaEnd</referencedby>
        <referencedby refid="class_se_race_mgr_1a3c0ab40ff6182d79cf6c82b3929b283e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3198" endline="3257">SeRaceMgr::OnCheckRaceEnd</referencedby>
        <referencedby refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" compoundref="src_2_race_server_8cpp" startline="284" endline="316">OnNetAccept</referencedby>
        <referencedby refid="class_race_server_1a915457d69cfd32d5db80be534beeeec2" compoundref="src_2_race_server_8cpp" startline="490" endline="515">OnNetUdpAccept</referencedby>
        <referencedby refid="class_race_server_1ac3544c0db3d315a02e92be55310e23df" compoundref="src_2_se_r_m_send_8cpp" startline="7" endline="23">SendRMData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5232b4e0b931f53fa7fceca6f226b6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWord</type>
        <definition>DWord RaceServer::GetMSID</definition>
        <argsstring>()</argsstring>
        <name>GetMSID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="76" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1186" bodyend="1189"/>
        <references refid="struct_se_server_data_1a00d62b0291ec6d527625afc329f5f95b" compoundref="_se_server_define_8h" startline="23">SeServerData::dwID</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a788a00bd15f61a8dadb074c05658b108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_se_race_config" kindref="compound">SeRaceConfig</ref></type>
        <definition>SeRaceConfig RaceServer::GetRaceConfig</definition>
        <argsstring>()</argsstring>
        <name>GetRaceConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="77" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1191" bodyend="1194"/>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <referencedby refid="class_se_race_mgr_1ade41d5487b6d97fefb615d5eb4a5a1d8" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3323" endline="3345">SeRaceMgr::GetFreeThreadIndex</referencedby>
        <referencedby refid="class_se_race_mgr_1a2229d931a2e931e4a84c3dcf43c63be7" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3347" endline="3352">SeRaceMgr::GetFreeThreadIndexByNum</referencedby>
        <referencedby refid="class_race_service_1abfccad7fabdcc62ee709c93555eb3996" compoundref="src_2_race_service_8cpp" startline="23" endline="47">RaceService::Initialize</referencedby>
        <referencedby refid="class_se_race_mgr_1ad035a9b9b6bb4f73e3d343988eb6c9f5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2485" endline="2555">SeRaceMgr::OnPlayerRaceLeave</referencedby>
        <referencedby refid="class_se_thread_race_mgr_1ad7d4c6c947ddd55ac6bc40cd0b33676d" compoundref="src_2_se_thread_race_mgr_8cpp" startline="301" endline="369">SeThreadRaceMgr::PrintCmdData</referencedby>
        <referencedby refid="class_se_race_record_save_thread_1a56cdff87cc7b27fe325913d36f931e3f" compoundref="_race_server_2src_2race_record_save_thread_8cpp" startline="84" endline="135">SeRaceRecordSaveThread::saveRecord</referencedby>
        <referencedby refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" compoundref="src_2_performance_interval_file_dump_8cpp" startline="49" endline="115">CPerformanceIntervalFileDump::Tick</referencedby>
        <referencedby refid="class_se_race_mgr_1a54d76275402dab1b4b2815e52889e684" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="267" endline="367">SeRaceMgr::UpdateView</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a09463facb5a9bebcc97f7d4b2c0945d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::SaveRecord</definition>
        <argsstring>(SeRace *pRace)</argsstring>
        <name>SaveRecord</name>
        <param>
          <type><ref refid="struct_se_race" kindref="compound">SeRace</ref> *</type>
          <declname>pRace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="79" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="210" bodyend="216"/>
        <references refid="class_race_server_1a2080e7e14eec53f1995f75fed071e72f" compoundref="src_2_race_server_8h" startline="144">m_pkSaveRecordThread</references>
        <references refid="class_se_race_record_save_thread_1a15e230a438d9545018bdaea1a4b247e5" compoundref="_race_server_2src_2race_record_save_thread_8cpp" startline="19" endline="26">SeRaceRecordSaveThread::PushTask</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a63cbffba0462486cde6e03f6efeecf76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="_race_server_2src_2_se_race_mgr_def_8h_1aeed613093b51c809e7e1cf84a9a88cd1" kindref="member">TWCSViewArray</ref> &amp;</type>
        <definition>const TWCSViewArray&amp; RaceServer::GetWCSView</definition>
        <argsstring>() const </argsstring>
        <name>GetWCSView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="80" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="80" bodyend="80"/>
        <references refid="class_race_server_1aa7eff4248424ec791546a7d1d9209ea2" compoundref="src_2_race_server_8h" startline="145">m_vWCSView</references>
        <referencedby refid="class_se_race_mgr_1a54d76275402dab1b4b2815e52889e684" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="267" endline="367">SeRaceMgr::UpdateView</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad8a8ba8e58f5b47e50540ec529470fa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="src_2_race_server_def_8h_1ac0e2859a83c31a17e73dda4ee321dd5c" kindref="member">MapWCSConnect</ref> &amp;</type>
        <definition>MapWCSConnect&amp; RaceServer::GetWCSConnectMap</definition>
        <argsstring>()</argsstring>
        <name>GetWCSConnectMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="149" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="149" bodyend="152"/>
        <references refid="class_race_server_1a4f4c0a3aa486d64460330802db1e287e" compoundref="src_2_race_server_8h" startline="121">m_kWCSConnect</references>
        <referencedby refid="class_race_detail_mgr_1aab6bd3a6478bb4100526e441ce8699c8" compoundref="src_2_race_detail_mgr_8cpp" startline="204" endline="224">RaceDetailMgr::SyncRaceDetail</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2303f7152794a0be3a6c6639b7373dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RaceThreadInitialize</definition>
        <argsstring>()</argsstring>
        <name>RaceThreadInitialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="154" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1523" bodyend="1529"/>
        <references refid="class_se_race_record_save_thread_1a195f97d5828265248e79642ee080e7b9" compoundref="_race_server_2src_2race_record_save_thread_8cpp" startline="28" endline="36">SeRaceRecordSaveThread::Initialize</references>
        <references refid="class_race_server_1a2080e7e14eec53f1995f75fed071e72f" compoundref="src_2_race_server_8h" startline="144">m_pkSaveRecordThread</references>
        <referencedby refid="class_race_server_1a66b1d68ffc570732242915bc09651c27" compoundref="src_2_race_server_8cpp" startline="74" endline="132">Initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acfd8886b9d300d53a533746a67b750e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RaceThreadFinialize</definition>
        <argsstring>()</argsstring>
        <name>RaceThreadFinialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="155" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1531" bodyend="1539"/>
        <references refid="class_se_race_record_save_thread_1a5ed1b2df07fda6e520bb78ab5f598db6" compoundref="_race_server_2src_2race_record_save_thread_8cpp" startline="38" endline="52">SeRaceRecordSaveThread::Finialize</references>
        <references refid="class_race_server_1a2080e7e14eec53f1995f75fed071e72f" compoundref="src_2_race_server_8h" startline="144">m_pkSaveRecordThread</references>
        <references refid="class_se_race_record_save_thread_1a9d97a8490bfd14b5ecd36dcb6638b706" compoundref="_race_server_2src_2race_record_save_thread_8cpp" startline="138" endline="151">SeRaceRecordSaveThread::Update</references>
        <referencedby refid="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" compoundref="src_2_race_server_8cpp" startline="218" endline="239">Finialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae92da288f2c535c4c897c82381e205cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RaceThreadUpdate</definition>
        <argsstring>()</argsstring>
        <name>RaceThreadUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="156" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1541" bodyend="1549"/>
        <references refid="class_race_server_1a2080e7e14eec53f1995f75fed071e72f" compoundref="src_2_race_server_8h" startline="144">m_pkSaveRecordThread</references>
        <references refid="class_se_race_record_save_thread_1a9d97a8490bfd14b5ecd36dcb6638b706" compoundref="_race_server_2src_2race_record_save_thread_8cpp" startline="138" endline="151">SeRaceRecordSaveThread::Update</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af7633fe0658191bed28add297940f8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RaceLinkUserSync</definition>
        <argsstring>(DWord dwPlayerID, DWord dwStateID)</argsstring>
        <name>RaceLinkUserSync</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwStateID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="158" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1551" bodyend="1554"/>
        <references refid="class_race_server_1a2da84374ff0e2fa135e38572085a7d2a">SendRN_RaceLinkUserSync</references>
        <referencedby refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" compoundref="src_2_race_server_8cpp" startline="395" endline="463">OnNetDisconnect</referencedby>
        <referencedby refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" compoundref="src_2_se_c_r_process_8cpp" startline="52" endline="211">ProcessCR_RaceValidate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RaceServer::RaceServer</definition>
        <argsstring>(void)</argsstring>
        <name>RaceServer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae4fc1e3b7856572c43c1160c9a6f8a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RaceServer::~RaceServer</definition>
        <argsstring>(void)</argsstring>
        <name>~RaceServer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a66b1d68ffc570732242915bc09651c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool RaceServer::Initialize</definition>
        <argsstring>(void)</argsstring>
        <name>Initialize</name>
        <reimplements refid="class_se_base_server_1a6bb58d0849eb78ffd85d1fcad67d21b2">Initialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::Update</definition>
        <argsstring>(void)</argsstring>
        <name>Update</name>
        <reimplements refid="class_se_base_server_1a07a0cf8e7406a136e92dcf88875cfd77">Update</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::Finialize</definition>
        <argsstring>(void)</argsstring>
        <name>Finialize</name>
        <reimplements refid="class_se_base_server_1af5e58035250986682d2810757069233b">Finialize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a54cb7d1172fd8b14c335874dc954ebe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaceServer::ShowConsoleTitle</definition>
        <argsstring>(int iDTime)</argsstring>
        <name>ShowConsoleTitle</name>
        <reimplements refid="class_se_base_server_1aab49ca32b654abc948c4d2b163746591">ShowConsoleTitle</reimplements>
        <param>
          <type>int</type>
          <declname>iDTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a83c381dd5580152733352009687c5b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_se_server_main_def_8h_1a6856d2f3d34c3913f55b991c0d63e89d" kindref="member">SeServerActionResult</ref></type>
        <definition>SeServerActionResult RaceServer::ExecuteAction</definition>
        <argsstring>(SeServerActionIndex eActionIndex)</argsstring>
        <name>ExecuteAction</name>
        <reimplements refid="class_se_base_server_1ab4a7f5d600833220b84b2c1e143f0605">ExecuteAction</reimplements>
        <param>
          <type><ref refid="_se_server_main_def_8h_1abbd63e694a43e9bc292e0e0b55ae79bd" kindref="member">SeServerActionIndex</ref></type>
          <declname>eActionIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae7b1bbdc615c7b4ab523da39a6f9f98a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RaceServer::OnNetConnected</definition>
        <argsstring>(const HSock &amp;rkSock, const char *pcIP, int iPort)</argsstring>
        <name>OnNetConnected</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a362235fe90e17b235c13d365f901a680" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RaceServer::OnNetAccept</definition>
        <argsstring>(const HSock &amp;rkSock, int iListenPort, const char *pcIP, int iPort)</argsstring>
        <name>OnNetAccept</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iListenPort</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a28ca0596722e63537317d2a3fc7a49f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RaceServer::OnNetRecv</definition>
        <argsstring>(const HSock &amp;rkSock, void *pkData, int iSize)</argsstring>
        <name>OnNetRecv</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0113f1ad11d7c9522a643f2c880f088d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RaceServer::OnNetDisconnect</definition>
        <argsstring>(const HSock &amp;rkSock, TeDisconnectCode eCode, int iParam)</argsstring>
        <name>OnNetDisconnect</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <param>
          <type>TeDisconnectCode</type>
          <declname>eCode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a021e1ada4184d813cef27ae078cab511" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RaceServer::OnNetUdpAccept</definition>
        <argsstring>(int iID, int iListtenPort, const char *pcIP, int iPort)</argsstring>
        <name>OnNetUdpAccept</name>
        <param>
          <type>int</type>
          <declname>iID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iListtenPort</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8d8dedb81c2a26495631d945cc2ae8a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RaceServer::OnNetUdpRecv</definition>
        <argsstring>(int iID, void *pkData, int iSize)</argsstring>
        <name>OnNetUdpRecv</name>
        <param>
          <type>int</type>
          <declname>iID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a54afe3d1abd313e524f84254e27963c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RaceServer::OnNetUdpDisconnect</definition>
        <argsstring>(int iID)</argsstring>
        <name>OnNetUdpDisconnect</name>
        <param>
          <type>int</type>
          <declname>iID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a32736c15ec790dcfcd7abfd44a2a64b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_EncryptKey</definition>
        <argsstring>(const char *abyEncryptKey, DWord dwVersion, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_EncryptKey</name>
        <param>
          <type>const char *</type>
          <declname>abyEncryptKey</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwVersion</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a63dd563aff508c15caf878cfafd5069f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_HeartBeat</definition>
        <argsstring>(void *pkReceiver=NULL)</argsstring>
        <name>SendRC_HeartBeat</name>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="3" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad8d11728fba3a3077c8c62b21e55ea9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ValidateRet</definition>
        <argsstring>(bool bReturn, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ValidateRet</name>
        <param>
          <type>bool</type>
          <declname>bReturn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ab594c9f07d76b41ae58c8ed820dd6e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ShowNotice</definition>
        <argsstring>(SeNoticeCode eNoticeCode, DWord dwParam, int iSize, const char *acMessage, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ShowNotice</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a9e8a0c48a4141863c0a26f1c12a43877" kindref="member">SeNoticeCode</ref></type>
          <declname>eNoticeCode</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acMessage</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3729392cf9152652902bee9843011e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ShowNotice</definition>
        <argsstring>(SeNoticeCode eNoticeCode, DWord dwParam, int iSize, std::vector&lt; char &gt; &amp;acMessage, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ShowNotice</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a9e8a0c48a4141863c0a26f1c12a43877" kindref="member">SeNoticeCode</ref></type>
          <declname>eNoticeCode</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acMessage</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a355725b3308c189b219bd69741f413cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RoomPlayerBaseInfo</definition>
        <argsstring>(DWord dwMapID, SeRaceModel eRaceModel, int iNum, const SeMatchSelPlayerInfo *akPlayerInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RoomPlayerBaseInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1ae44613edbcae64afcfd2982887ad4245" kindref="member">SeRaceModel</ref></type>
          <declname>eRaceModel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_match_sel_player_info" kindref="compound">SeMatchSelPlayerInfo</ref> *</type>
          <declname>akPlayerInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acdb7aad182efb1062c4227a2aa1927f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RoomPlayerBaseInfo</definition>
        <argsstring>(DWord dwMapID, SeRaceModel eRaceModel, int iNum, std::vector&lt; SeMatchSelPlayerInfo &gt; &amp;akPlayerInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RoomPlayerBaseInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1ae44613edbcae64afcfd2982887ad4245" kindref="member">SeRaceModel</ref></type>
          <declname>eRaceModel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_match_sel_player_info" kindref="compound">SeMatchSelPlayerInfo</ref> &gt; &amp;</type>
          <declname>akPlayerInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a251a613438a14c869541c24f001d462c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RacePack</definition>
        <argsstring>(DWord dwPackIndex, int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RacePack</name>
        <param>
          <type>DWord</type>
          <declname>dwPackIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aaec6b68465c032fcd00cf579f0c95c43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RacePack</definition>
        <argsstring>(DWord dwPackIndex, int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RacePack</name>
        <param>
          <type>DWord</type>
          <declname>dwPackIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae04d43348017e6e0809c8cbcb123e87f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RaceStream</definition>
        <argsstring>(int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RaceStream</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af5eb22c37e787f629ad07224b82cca6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RaceStream</definition>
        <argsstring>(int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RaceStream</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a07c6c3625de04840147b859f62a6b7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RacePlayerLoadEnd</definition>
        <argsstring>(int iSeat, DWord dwRate, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RacePlayerLoadEnd</name>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwRate</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2585d732235061e2dbf7bd4d30111746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_BeginSelectHero</definition>
        <argsstring>(DWord dwCamp, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_BeginSelectHero</name>
        <param>
          <type>DWord</type>
          <declname>dwCamp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af11bc98330467a2375671c987cc7d631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHeroMessage</definition>
        <argsstring>(SeSelHeroMsgType eMessageType, DWord dwHeroID, bool bDreamHero, int iDecMoney, DWord dwOrgPlayerID, DWord dwDstPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHeroMessage</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a951c7caca34fe5f722878a9c7a32ee6d" kindref="member">SeSelHeroMsgType</ref></type>
          <declname>eMessageType</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bDreamHero</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDecMoney</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwOrgPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwDstPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aff0cfbedb88874c01364417020a0f9d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ReconResult</definition>
        <argsstring>(SeReconResultType eResult, int iData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ReconResult</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a8747e5c478664a893f6a4cfa5e9118e6" kindref="member">SeReconResultType</ref></type>
          <declname>eResult</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa23188daa6e22b83a71aadddf6e69507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ReconPack</definition>
        <argsstring>(int iOffset, int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ReconPack</name>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3b57f1f3c54ceaa2a0b263d15ce9affd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ReconPack</definition>
        <argsstring>(int iOffset, int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ReconPack</name>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a623d9772ba61e232a4b93342211d428a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewPack</definition>
        <argsstring>(int iOffset, int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewPack</name>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af04817ab3b4f7df9024dcdc2e0df3ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewPack</definition>
        <argsstring>(int iOffset, int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewPack</name>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aca4f9fbf8677ac12aa9736f066a520c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewResult</definition>
        <argsstring>(SeViewResultType eResult, int iData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewResult</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a026458e992a3e7549fb0eb75edfc92d1" kindref="member">SeViewResultType</ref></type>
          <declname>eResult</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acc24c7451d6583c58dcf743eb97224e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewPlayerInfo</definition>
        <argsstring>(int iNum, const SePlayerInfoSeat *akSeat, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewPlayerInfo</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_player_info_seat" kindref="compound">SePlayerInfoSeat</ref> *</type>
          <declname>akSeat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a422b40c6dcca911b21e6535b7e886fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_ViewPlayerInfo</definition>
        <argsstring>(int iNum, std::vector&lt; SePlayerInfoSeat &gt; &amp;akSeat, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_ViewPlayerInfo</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_player_info_seat" kindref="compound">SePlayerInfoSeat</ref> &gt; &amp;</type>
          <declname>akSeat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6eaf23bf78ca73a853ab8be15ac023b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_Talk</definition>
        <argsstring>(SeTalkType eType, DWord dwSrcID, int iSize, const char *acMsg, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_Talk</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1a1c935381ad9f824965c7b1b128e32466" kindref="member">SeTalkType</ref></type>
          <declname>eType</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwSrcID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acMsg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af338b8cccda7170236ba26692c81749f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelPetList</definition>
        <argsstring>(int iNum, const int *akPetID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelPetList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>akPetID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8dd22f391fafac6375251c721255e114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelPetList</definition>
        <argsstring>(int iNum, std::vector&lt; int &gt; &amp;akPetID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelPetList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>akPetID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a36bf21dcabbb812cc025810ca904b9f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHeroList</definition>
        <argsstring>(int iNum, const SeSelHeroInfo *akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHeroList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_sel_hero_info" kindref="compound">SeSelHeroInfo</ref> *</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1a65f7cdce369addbd0a4e9a755cc782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHeroList</definition>
        <argsstring>(int iNum, std::vector&lt; SeSelHeroInfo &gt; &amp;akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHeroList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_sel_hero_info" kindref="compound">SeSelHeroInfo</ref> &gt; &amp;</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a793ad5922a415b247ffcd8596859264d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHorseList</definition>
        <argsstring>(int iNum, const int *akHorseID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHorseList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>akHorseID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac4584f0203e97264c186e445f181a603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SelHorseList</definition>
        <argsstring>(int iNum, std::vector&lt; int &gt; &amp;akHorseID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SelHorseList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>akHorseID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a62b1078c2e0ce17af3ca58120209d824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_PingRet</definition>
        <argsstring>(DWord dwPackIndex, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_PingRet</name>
        <param>
          <type>DWord</type>
          <declname>dwPackIndex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2f5f1ed1e48ce157703f9a2bc41ac2b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_GetHeroInfoRet</definition>
        <argsstring>(int iSize, const char *acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_GetHeroInfoRet</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af9f364672ed6d21a1b87c4b007cbac43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_GetHeroInfoRet</definition>
        <argsstring>(int iSize, std::vector&lt; char &gt; &amp;acData, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_GetHeroInfoRet</name>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>acData</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa8387be820644e859ee9567cd243b543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RaceEndNotifyDown</definition>
        <argsstring>(const char *acURLBase, const char *acRaceID, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RaceEndNotifyDown</name>
        <param>
          <type>const char *</type>
          <declname>acURLBase</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acRaceID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aaa30262929dad0f59613813238630487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_RaceGoldExpPlus</definition>
        <argsstring>(int RaceGold, int RaceExp, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_RaceGoldExpPlus</name>
        <param>
          <type>int</type>
          <declname>RaceGold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>RaceExp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af09262c79ab448b1478854997ba76390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SetEquipSetAck</definition>
        <argsstring>(int iResult, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SetEquipSetAck</name>
        <param>
          <type>int</type>
          <declname>iResult</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1584f8fba3994c3547100c5af741eec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SetAvatarAck</definition>
        <argsstring>(int iResult, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SetAvatarAck</name>
        <param>
          <type>int</type>
          <declname>iResult</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a740261b42e94e049f935f9f218f471e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SeatScoreNtf</definition>
        <argsstring>(const SeSeatScore *scores, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SeatScoreNtf</name>
        <param>
          <type>const <ref refid="struct_se_seat_score" kindref="compound">SeSeatScore</ref> *</type>
          <declname>scores</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6631522a08041596317abe2910e8f2e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRC_SeatScoreNtf</definition>
        <argsstring>(std::vector&lt; SeSeatScore &gt; &amp;scores, void *pkReceiver=NULL)</argsstring>
        <name>SendRC_SeatScoreNtf</name>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_seat_score" kindref="compound">SeSeatScore</ref> &gt; &amp;</type>
          <declname>scores</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5d27bdd027268d10784e20f5a7507805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRCData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRCData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRCSend.inl" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acd84e7d35f146e25c1c902dcf118832b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessCRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessCRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a89919e980ba49b4d4fedfd9732938040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessCR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessCR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a89a32c300069bdd16c765f680752ab97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_HeartPackage</definition>
        <argsstring>(SeCR_HeartPackage *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_HeartPackage</name>
        <param>
          <type><ref refid="struct_se_c_r___heart_package" kindref="compound">SeCR_HeartPackage</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceValidate</definition>
        <argsstring>(SeCR_RaceValidate *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceValidate</name>
        <param>
          <type><ref refid="struct_se_c_r___race_validate" kindref="compound">SeCR_RaceValidate</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a31f56e2b018c43ae14c8bf73644b2520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceLoadEnd</definition>
        <argsstring>(SeCR_RaceLoadEnd *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceLoadEnd</name>
        <param>
          <type><ref refid="struct_se_c_r___race_load_end" kindref="compound">SeCR_RaceLoadEnd</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1caa9d28ffc0e53c0fd9b80308db965d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceCmd</definition>
        <argsstring>(SeCR_RaceCmd *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceCmd</name>
        <param>
          <type><ref refid="struct_se_c_r___race_cmd" kindref="compound">SeCR_RaceCmd</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1abfebb008f1c1458d88b318390ec11382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceLeave</definition>
        <argsstring>(SeCR_RaceLeave *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceLeave</name>
        <param>
          <type><ref refid="struct_se_c_r___race_leave" kindref="compound">SeCR_RaceLeave</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1adca9684a6852b7761749ae97cad2eab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceEndRace</definition>
        <argsstring>(SeCR_RaceEndRace *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceEndRace</name>
        <param>
          <type><ref refid="struct_se_c_r___race_end_race" kindref="compound">SeCR_RaceEndRace</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa1cad298a8d7773611808fd9cd6d66fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceEndGuanqia</definition>
        <argsstring>(SeCR_RaceEndGuanqia *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceEndGuanqia</name>
        <param>
          <type><ref refid="struct_se_c_r___race_end_guanqia" kindref="compound">SeCR_RaceEndGuanqia</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aea34d836902daf4b3cda8a714e3257d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SelHeroChoiceHero</definition>
        <argsstring>(SeCR_SelHeroChoiceHero *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SelHeroChoiceHero</name>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_choice_hero" kindref="compound">SeCR_SelHeroChoiceHero</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7633530b1b7fa0b761351376da10e885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SelHeroCancelHero</definition>
        <argsstring>(SeCR_SelHeroCancelHero *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SelHeroCancelHero</name>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_cancel_hero" kindref="compound">SeCR_SelHeroCancelHero</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4463c8682eb3a8ab7d7377daa315dc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SelHeroPrapared</definition>
        <argsstring>(SeCR_SelHeroPrapared *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SelHeroPrapared</name>
        <param>
          <type><ref refid="struct_se_c_r___sel_hero_prapared" kindref="compound">SeCR_SelHeroPrapared</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa1922fca73e33a548d0303d2e41f08f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceReportSyn</definition>
        <argsstring>(SeCR_RaceReportSyn *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceReportSyn</name>
        <param>
          <type><ref refid="struct_se_c_r___race_report_syn" kindref="compound">SeCR_RaceReportSyn</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8f6bb836b9c7ef2a69ec4bb0131be4e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_Talk</definition>
        <argsstring>(SeCR_Talk *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_Talk</name>
        <param>
          <type><ref refid="struct_se_c_r___talk" kindref="compound">SeCR_Talk</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0327ec22cd90fde20725c9c6f1242551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_RaceRobotLogin</definition>
        <argsstring>(SeCR_RaceRobotLogin *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_RaceRobotLogin</name>
        <param>
          <type><ref refid="struct_se_c_r___race_robot_login" kindref="compound">SeCR_RaceRobotLogin</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad4d3f26f7c58299a8bb30a7917e87f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_Ping</definition>
        <argsstring>(SeCR_Ping *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_Ping</name>
        <param>
          <type><ref refid="struct_se_c_r___ping" kindref="compound">SeCR_Ping</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0851d9bb71f9ae9f22030946ffc22f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_BuyRaceItem</definition>
        <argsstring>(SeCR_BuyRaceItem *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_BuyRaceItem</name>
        <param>
          <type><ref refid="struct_se_c_r___buy_race_item" kindref="compound">SeCR_BuyRaceItem</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a123a889949008fc47902325dc28cbcb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_GetHeroInfo</definition>
        <argsstring>(SeCR_GetHeroInfo *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_GetHeroInfo</name>
        <param>
          <type><ref refid="struct_se_c_r___get_hero_info" kindref="compound">SeCR_GetHeroInfo</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a043b70937574d7f5e24c1d8b7a82e95b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_ReplayReport</definition>
        <argsstring>(SeCR_ReplayReport *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_ReplayReport</name>
        <param>
          <type><ref refid="struct_se_c_r___replay_report" kindref="compound">SeCR_ReplayReport</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1afacefe00ea688058623e130755f5922b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SetEquipSetReq</definition>
        <argsstring>(SeCR_SetEquipSetReq *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SetEquipSetReq</name>
        <param>
          <type><ref refid="struct_se_c_r___set_equip_set_req" kindref="compound">SeCR_SetEquipSetReq</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5eb54db8dd16183d4e12fafd2925f815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessCR_SetAvatarReq</definition>
        <argsstring>(SeCR_SetAvatarReq *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessCR_SetAvatarReq</name>
        <param>
          <type><ref refid="struct_se_c_r___set_avatar_req" kindref="compound">SeCR_SetAvatarReq</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeCRProcess.inl" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac14c1d5d9ecd31308b15c01779e7114c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_Register</definition>
        <argsstring>(DWord dwServerID, DWord dwAreaID, const SeNetAddr &amp;kAddrToMatch, const SeNetAddr &amp;kAddrToMatchUdp, int iRegisterCount, bool bOpen, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_Register</name>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_net_addr" kindref="compound">SeNetAddr</ref> &amp;</type>
          <declname>kAddrToMatch</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_net_addr" kindref="compound">SeNetAddr</ref> &amp;</type>
          <declname>kAddrToMatchUdp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iRegisterCount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOpen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a968ec4bd6adc4afb3b03b3f702ed5c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_HeartPackage</definition>
        <argsstring>(DWord dwCurrRaceNum, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_HeartPackage</name>
        <param>
          <type>DWord</type>
          <declname>dwCurrRaceNum</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="3" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a02f69f7cdff4b7a63256d2f2f05da7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ValidatePlayerInfoRet</definition>
        <argsstring>(DWord dwSessionID, const SeMatchValidateResult &amp;eResult, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ValidatePlayerInfoRet</name>
        <param>
          <type>DWord</type>
          <declname>dwSessionID</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_define_8h_1a7744414426a2ffadcdaa72f8ceabe6f5" kindref="member">SeMatchValidateResult</ref> &amp;</type>
          <declname>eResult</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae4c02fce35d50665888d5e17958c83fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_CommRaceMsg</definition>
        <argsstring>(DWord dwMatchSession, const SeRaceSvrCommMsg &amp;eMsg, DWord dwParam, int iParam, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_CommRaceMsg</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_define_8h_1a6fcdce81cb421a7d62217407f549cb81" kindref="member">SeRaceSvrCommMsg</ref> &amp;</type>
          <declname>eMsg</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iParam</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aca0ab80078afb5ca2d69f809dacdbc97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceGetCardInfo</definition>
        <argsstring>(DWord dwSession, DWord dwPlayerID, DWord dwHeroTypeID, DWord dwMapTypeID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceGetCardInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroTypeID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapTypeID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a25c8b9d20d5ad61cf81b4b23e1ce9669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_UpdateMisc</definition>
        <argsstring>(DWord dwPlayerID, DWord dwSession, const SeMMMiscType &amp;eType, int iValue, DWord dwParam1, DWord dwParam2, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_UpdateMisc</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_define_8h_1a0439ce57b5c52e594faa12cea06edf1d" kindref="member">SeMMMiscType</ref> &amp;</type>
          <declname>eType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iValue</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam1</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a856181688047427169fc34e85888a7dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceEndReport</definition>
        <argsstring>(DWord dwMatchSession, DWord dwTime, DWord dwMapID, const SeMatchRaceType &amp;eMatchType, int iNum, const SeWSRaceSendInfo *akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceEndReport</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTime</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a841059e2ab065b3a431e8c93193ec60c" kindref="member">SeMatchRaceType</ref> &amp;</type>
          <declname>eMatchType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_w_s_race_send_info" kindref="compound">SeWSRaceSendInfo</ref> *</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3b8624cfa66faa2d7b742c23927bbb32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceEndReport</definition>
        <argsstring>(DWord dwMatchSession, DWord dwTime, DWord dwMapID, const SeMatchRaceType &amp;eMatchType, int iNum, std::vector&lt; SeWSRaceSendInfo &gt; &amp;akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceEndReport</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTime</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a841059e2ab065b3a431e8c93193ec60c" kindref="member">SeMatchRaceType</ref> &amp;</type>
          <declname>eMatchType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_w_s_race_send_info" kindref="compound">SeWSRaceSendInfo</ref> &gt; &amp;</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3779a8aa79363a8f52bf0fd9a670b4dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceEndGuanqia</definition>
        <argsstring>(DWord dwMatchSession, DWord dwTime, DWord dwMapID, int iNum, const SeWSGuanqiaSendInfo *akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceEndGuanqia</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTime</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_w_s_guanqia_send_info" kindref="compound">SeWSGuanqiaSendInfo</ref> *</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1afbd8e6c3537b3feb8a865ad4b6cf30c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceEndGuanqia</definition>
        <argsstring>(DWord dwMatchSession, DWord dwTime, DWord dwMapID, int iNum, std::vector&lt; SeWSGuanqiaSendInfo &gt; &amp;akInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceEndGuanqia</name>
        <param>
          <type>DWord</type>
          <declname>dwMatchSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwTime</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_w_s_guanqia_send_info" kindref="compound">SeWSGuanqiaSendInfo</ref> &gt; &amp;</type>
          <declname>akInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad551e4872f5a31815152d030bf0b7aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_MatchRoomLoadInfo</definition>
        <argsstring>(DWord dwSession, int iNum, const SeMatchRoomLoadInfo *akLoadInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_MatchRoomLoadInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_match_room_load_info" kindref="compound">SeMatchRoomLoadInfo</ref> *</type>
          <declname>akLoadInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a93ab495a2dd2adf310b5e62f0dfa1558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_MatchRoomLoadInfo</definition>
        <argsstring>(DWord dwSession, int iNum, std::vector&lt; SeMatchRoomLoadInfo &gt; &amp;akLoadInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_MatchRoomLoadInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_match_room_load_info" kindref="compound">SeMatchRoomLoadInfo</ref> &gt; &amp;</type>
          <declname>akLoadInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af0b257e59ee7711f97d4f528c80911b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RefreshConfigInfo</definition>
        <argsstring>(bool bOpen, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RefreshConfigInfo</name>
        <param>
          <type>bool</type>
          <declname>bOpen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac1812200ef246163a0d065f80f2e75fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReconQuerySuccess</definition>
        <argsstring>(DWord dwRoomID, DWord dwAreaID, DWord dwServerID, DWord dwPlayerID, int iSeat, int iOffset, DWord dwFrame, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReconQuerySuccess</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iOffset</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwFrame</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af806e16dec8877195afbdfa07a0553e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReconQueryFail</definition>
        <argsstring>(const SeReconQueryFailReason &amp;eReason, DWord dwAreaID, DWord dwServerID, DWord dwPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReconQueryFail</name>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a1db4f0d41049e036acff5dfb4a360e9c" kindref="member">SeReconQueryFailReason</ref> &amp;</type>
          <declname>eReason</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a034cc87f5200daf062a70c32e07e4abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ViewQuerySuccess</definition>
        <argsstring>(DWord dwSession, DWord dwAreaID, DWord dwServerID, DWord dwPlayerID, int iViewDelay, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ViewQuerySuccess</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iViewDelay</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a40641fa80b4617b9438efd6128070f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ViewQueryFail</definition>
        <argsstring>(const SeViewQueryFailReason &amp;eReason, DWord dwAreaID, DWord dwServerID, DWord dwPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ViewQueryFail</name>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a099f96303c4987784812a08a343a5878" kindref="member">SeViewQueryFailReason</ref> &amp;</type>
          <declname>eReason</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwAreaID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a822c5067cdf25dcb1f94fa5b47f456e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReconViewValid</definition>
        <argsstring>(DWord dwSession, DWord dwPlayerID, DWord dwKey, const SeRaceValidType &amp;eValidType, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReconViewValid</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwKey</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a77f91e01c5c1d6e63aeae4848cd17d45" kindref="member">SeRaceValidType</ref> &amp;</type>
          <declname>eValidType</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a76caa9d1c4894aae95495d0630a4ace5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReLoadRoomInfoList</definition>
        <argsstring>(int iNum, const SeReLoadRoomInfo *akRoomInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReLoadRoomInfoList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_re_load_room_info" kindref="compound">SeReLoadRoomInfo</ref> *</type>
          <declname>akRoomInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ade4cd702229ee51f69c6758988bbe96d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ReLoadRoomInfoList</definition>
        <argsstring>(int iNum, std::vector&lt; SeReLoadRoomInfo &gt; &amp;akRoomInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ReLoadRoomInfoList</name>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_re_load_room_info" kindref="compound">SeReLoadRoomInfo</ref> &gt; &amp;</type>
          <declname>akRoomInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2ec6c2db0f8c73b9ce9ff7985d4e32f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_MatchRaceLoad</definition>
        <argsstring>(DWord dwRoomSession, DWord dwMapID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_MatchRaceLoad</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aea2f7f66f5b8fb659a5c98e707047c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RaceBuy</definition>
        <argsstring>(DWord dwSession, DWord dwPlayerID, int iType, DWord dwParam1, DWord dwParam2, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RaceBuy</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iType</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam1</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwParam2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0f06eb120b9664d1bc4919682df62ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_AddIncompleteRace</definition>
        <argsstring>(DWord dwRoomSession, int iSeat, DWord dwPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_AddIncompleteRace</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomSession</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1b1a93f99924c649fa0cba53884be3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_RemoveIncompleteRace</definition>
        <argsstring>(DWord dwRoomSession, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_RemoveIncompleteRace</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomSession</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6fcd8a15bace1837ee890288e0bc7cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_UpdateIncompleteRace</definition>
        <argsstring>(DWord dwRoomSession, int iSeat, bool bSeat, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_UpdateIncompleteRace</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomSession</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSeat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a091a0aa06d42120d81b6bd0328dd357c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ResIncmpRaceSeatBaseInfo</definition>
        <argsstring>(DWord dwRoomID, int iNum, const SeSeatBaseInfo *oIncmpRaceBaseInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ResIncmpRaceSeatBaseInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_seat_base_info" kindref="compound">SeSeatBaseInfo</ref> *</type>
          <declname>oIncmpRaceBaseInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8dd27f666e7b92029d1dce3cde8c41fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRM_ResIncmpRaceSeatBaseInfo</definition>
        <argsstring>(DWord dwRoomID, int iNum, std::vector&lt; SeSeatBaseInfo &gt; &amp;oIncmpRaceBaseInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRM_ResIncmpRaceSeatBaseInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwRoomID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_seat_base_info" kindref="compound">SeSeatBaseInfo</ref> &gt; &amp;</type>
          <declname>oIncmpRaceBaseInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac3544c0db3d315a02e92be55310e23df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRMData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRMData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRMSend.inl" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a011cf29ff6d4b802529b7fd4ee96e648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessMRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessMRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a72f7359b8a6c43741fa85a96e796fef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessMR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessMR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ab40781b3f26bee9ecf2847769400b3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_RegisterRet</definition>
        <argsstring>(SeMR_RegisterRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_RegisterRet</name>
        <param>
          <type><ref refid="struct_se_m_r___register_ret" kindref="compound">SeMR_RegisterRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a84bf84fd9809f77ef3c287a6f93e2826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_HeartPackageRet</definition>
        <argsstring>(SeMR_HeartPackageRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_HeartPackageRet</name>
        <param>
          <type><ref refid="struct_se_m_r___heart_package_ret" kindref="compound">SeMR_HeartPackageRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a758f1e202feae4a51ec7bc594f00d3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ValidatePlayerInfo</definition>
        <argsstring>(SeMR_ValidatePlayerInfo *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ValidatePlayerInfo</name>
        <param>
          <type><ref refid="struct_se_m_r___validate_player_info" kindref="compound">SeMR_ValidatePlayerInfo</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a96ee4e062d0fb584e72fe9eade2fe409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_PlayerModifyInfo</definition>
        <argsstring>(SeMR_PlayerModifyInfo *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_PlayerModifyInfo</name>
        <param>
          <type><ref refid="struct_se_m_r___player_modify_info" kindref="compound">SeMR_PlayerModifyInfo</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a06dc9a6a093a86fdfa4f9506ffa07f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_UpdateMiscInfo</definition>
        <argsstring>(SeMR_UpdateMiscInfo *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_UpdateMiscInfo</name>
        <param>
          <type><ref refid="struct_se_m_r___update_misc_info" kindref="compound">SeMR_UpdateMiscInfo</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aea2d68398cba87995d032933b2fd00d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ReconQuery</definition>
        <argsstring>(SeMR_ReconQuery *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ReconQuery</name>
        <param>
          <type><ref refid="struct_se_m_r___recon_query" kindref="compound">SeMR_ReconQuery</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2a5c41dff4c427ed3563ac6b43aa1844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ViewQuery</definition>
        <argsstring>(SeMR_ViewQuery *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ViewQuery</name>
        <param>
          <type><ref refid="struct_se_m_r___view_query" kindref="compound">SeMR_ViewQuery</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2dc1053a39f7555cd389f5097a05fcc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ViewValidOKRet</definition>
        <argsstring>(SeMR_ViewValidOKRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ViewValidOKRet</name>
        <param>
          <type><ref refid="struct_se_m_r___view_valid_o_k_ret" kindref="compound">SeMR_ViewValidOKRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a75c896e3c906802be4bbd2d615f782c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ValidFailRet</definition>
        <argsstring>(SeMR_ValidFailRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ValidFailRet</name>
        <param>
          <type><ref refid="struct_se_m_r___valid_fail_ret" kindref="compound">SeMR_ValidFailRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a25bc7faf3af8acb8fcdccf1d5f1ba32d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_RaceBuyRet</definition>
        <argsstring>(SeMR_RaceBuyRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_RaceBuyRet</name>
        <param>
          <type><ref refid="struct_se_m_r___race_buy_ret" kindref="compound">SeMR_RaceBuyRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ab50ac3ba721a70fa1a59637e29ab08fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessMR_ReconPLayerName</definition>
        <argsstring>(SeMR_ReconPLayerName *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessMR_ReconPLayerName</name>
        <param>
          <type><ref refid="struct_se_m_r___recon_p_layer_name" kindref="compound">SeMR_ReconPLayerName</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeMRProcess.inl" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a842b002db5e307ef61acaf6b1045fb50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RegisterRet</definition>
        <argsstring>(const SeRegisterRet &amp;eRet, bool bRunning, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RegisterRet</name>
        <param>
          <type>const <ref refid="_se_server_define_8h_1a83f922065d39660cc6ff3ff3e193daa1" kindref="member">SeRegisterRet</ref> &amp;</type>
          <declname>eRet</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bRunning</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7b5e4389cd7ae38f82516ae1e5de6bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_HeartPackageRet</definition>
        <argsstring>(void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_HeartPackageRet</name>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="3" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5412567214116b44d3f187fb9d845fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceRecord</definition>
        <argsstring>(const Byte *rID, int iNum, const char *raceDat, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceRecord</name>
        <param>
          <type>const Byte *</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>raceDat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0f2f370627a3740a68e37b136794baa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceRecord</definition>
        <argsstring>(std::vector&lt; Byte &gt; &amp;rID, int iNum, std::vector&lt; char &gt; &amp;raceDat, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceRecord</name>
        <param>
          <type>std::vector&lt; Byte &gt; &amp;</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>raceDat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5e1590de4be31aba332d710d3e86d42f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceEnd</definition>
        <argsstring>(const Byte *rID, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceEnd</name>
        <param>
          <type>const Byte *</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6568577059a2739fa4f4665ef0be5710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceEnd</definition>
        <argsstring>(std::vector&lt; Byte &gt; &amp;rID, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceEnd</name>
        <param>
          <type>std::vector&lt; Byte &gt; &amp;</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a470b2de77c1bec3018e1ed90d64383a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceStart</definition>
        <argsstring>(const Byte *rID, int iNum, const SePlayerInfoSeat *racePlayerSeatInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceStart</name>
        <param>
          <type>const Byte *</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_player_info_seat" kindref="compound">SePlayerInfoSeat</ref> *</type>
          <declname>racePlayerSeatInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7f3faf14b04e82f1b7e65bfc8e8085fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceStart</definition>
        <argsstring>(std::vector&lt; Byte &gt; &amp;rID, int iNum, std::vector&lt; SePlayerInfoSeat &gt; &amp;racePlayerSeatInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceStart</name>
        <param>
          <type>std::vector&lt; Byte &gt; &amp;</type>
          <declname>rID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_player_info_seat" kindref="compound">SePlayerInfoSeat</ref> &gt; &amp;</type>
          <declname>racePlayerSeatInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af86699f8253a90b21ea5ca3fcc863a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceDetailInfoSync</definition>
        <argsstring>(int num, const SeRaceDetailInfo *akRaceDetailInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceDetailInfoSync</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_race_detail_info" kindref="compound">SeRaceDetailInfo</ref> *</type>
          <declname>akRaceDetailInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac7b610a2b4958c9ae43fba61194aece9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCS_RaceDetailInfoSync</definition>
        <argsstring>(int num, std::vector&lt; SeRaceDetailInfo &gt; &amp;akRaceDetailInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRWCS_RaceDetailInfoSync</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_race_detail_info" kindref="compound">SeRaceDetailInfo</ref> &gt; &amp;</type>
          <declname>akRaceDetailInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa9402144cbc9f4acd9bb537a96bc0ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWCSData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRWCSData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWCSSend.inl" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a06e59df570fa80d88ccba647d071346b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessWCSRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessWCSRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWCSRProcess.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0f7643a555f12c0dae3ad4b215100ed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessWCSR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessWCSR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWCSRProcess.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac9bcdeb502380af98bff7c7234e0aff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessWCSR_Register</definition>
        <argsstring>(SeWCSR_Register *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessWCSR_Register</name>
        <param>
          <type><ref refid="struct_se_w_c_s_r___register" kindref="compound">SeWCSR_Register</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWCSRProcess.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae007667edd47596a9b7c46fe15036fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessWCSR_HeartPackage</definition>
        <argsstring>(SeWCSR_HeartPackage *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessWCSR_HeartPackage</name>
        <param>
          <type><ref refid="struct_se_w_c_s_r___heart_package" kindref="compound">SeWCSR_HeartPackage</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWCSRProcess.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa311514fab61f8576dc494e4339b65ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_RaceInit</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, int iMapID, int iSeatInfo, VRacePlayer &amp;rkVRacePlayer)</argsstring>
        <name>PushRSC_RaceInit</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMapID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeatInfo</declname>
        </param>
        <param>
          <type><ref refid="_race_server_2src_2_se_race_mgr_def_8h_1a622e0f783c37ecbff30d07e18aa981ee" kindref="member">VRacePlayer</ref> &amp;</type>
          <declname>rkVRacePlayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServicePush.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8a5747b16a377f090cce5caf582fee8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_RaceStream</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, char *pcData, int iDataSize)</argsstring>
        <name>PushRSC_RaceStream</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDataSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServicePush.inl" line="3" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af4d35f6be720d325cb342a86eb95528e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_PlayerLeave</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, int iSeat)</argsstring>
        <name>PushRSC_PlayerLeave</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServicePush.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a49d352bbd64d7977710ee15bafe10d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_PlayerRelink</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, int iSeat, HSock &amp;rkSock)</argsstring>
        <name>PushRSC_PlayerRelink</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServicePush.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8150e6a22c41574411aa12f59298c3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_RaceOver</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID)</argsstring>
        <name>PushRSC_RaceOver</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServicePush.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8d774c423cdc2c2ad62bfdafacb82f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_RaceStart</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, VRacePlayer &amp;rkVRacePlayer)</argsstring>
        <name>PushRSC_RaceStart</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type><ref refid="_race_server_2src_2_se_race_mgr_def_8h_1a622e0f783c37ecbff30d07e18aa981ee" kindref="member">VRacePlayer</ref> &amp;</type>
          <declname>rkVRacePlayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServicePush.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8c8c5a379f9e7f8df13cd6f53c0332d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_GetHeroInfo</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, int iSeat)</argsstring>
        <name>PushRSC_GetHeroInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServicePush.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a39606329049eb1147391402989a76ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSC_SetRaceIncmpState</definition>
        <argsstring>(DWord dwRaceIndex, TeMD5 &amp;rkRaceID, bool bIncmp)</argsstring>
        <name>PushRSC_SetRaceIncmpState</name>
        <param>
          <type>DWord</type>
          <declname>dwRaceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkRaceID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bIncmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServicePush.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1eacc5497059e757745235d24ad2d74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRCR</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRCR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a402839c04bff1088bbf629dea278a744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceStream</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceStream</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3c978cbb7e12533817366183521cb165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceEnd</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceEnd</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2d1fa502eecb4466ecd56abd99bea627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceError</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceError</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1adf678207cf1dafe7d73f45b209563bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceInitFail</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceInitFail</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac95b66243cc90be4f6816eed00f54e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceOpr</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceOpr</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a05bf858e2c948c6658f32aacd8decec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_RaceSvrModelPack</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_RaceSvrModelPack</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ab3d920d30fb6d3c8e76148fc2b1bef0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_ThreadOverTime</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_ThreadOverTime</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2e75561c85233b6b797bc77cfb9227d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_GetAchievement</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_GetAchievement</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a03ea6ac8033cf82bf82703908fe4d077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_AchievementCounts</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_AchievementCounts</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a186ca2b41a006c050b4605d240ac7d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessRC_Command</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>ProcessRC_Command</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceServiceProcess.inl" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a9eb0e365d5a6450ae5894e53f91d4d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetDebugLevel</definition>
        <argsstring>(void)</argsstring>
        <name>GetDebugLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="3" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a08814d99b1b3da887b982485a54a2f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::SetDebugLevel</definition>
        <argsstring>(int iLevel)</argsstring>
        <name>SetDebugLevel</name>
        <param>
          <type>int</type>
          <declname>iLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8e0a4da2c1a515ac9eeb1634fccc2c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetRacePackTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetRacePackTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a93c91462e4dbd588ae54ae72a0d3adab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* RaceServer::GetGameLogFilePath</definition>
        <argsstring>()</argsstring>
        <name>GetGameLogFilePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7eaaaf0e1bb43533568788c11939627f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetRaceServiceNum</definition>
        <argsstring>(void)</argsstring>
        <name>GetRaceServiceNum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae7388ef7da3a30046cf017d40e355669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetRacePrintTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetRacePrintTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5a1835ed84eb2e50c4a9d1fa203ac928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetMaxPacketSize</definition>
        <argsstring>(void)</argsstring>
        <name>GetMaxPacketSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2fb70d03c78c196a8d0a59c7a3a93277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetServerModePackTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetServerModePackTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a326f1a2926dde54ccf7d43a8a3bfcbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetMaxReconTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetMaxReconTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a65a33b72bda3aa9083d8c91e6879501c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::IsTestRobotMode</definition>
        <argsstring>()</argsstring>
        <name>IsTestRobotMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a8132622c0568a827ae4c490478b52cff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetServerID</definition>
        <argsstring>(void)</argsstring>
        <name>GetServerID</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac742e033d875f5d171d463a8892a151c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetAreaID</definition>
        <argsstring>(void)</argsstring>
        <name>GetAreaID</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWord</type>
        <definition>DWord RaceServer::GetServerTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetServerTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ada98d505789737be58f73923400943b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::RandInt</definition>
        <argsstring>(void)</argsstring>
        <name>RandInt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1abba46baa0ac501923d0667fb3495c9c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnSendMatchRoomLoadInfo</definition>
        <argsstring>(DWord dwSession, VRacePlayer &amp;rkVRacePlayer)</argsstring>
        <name>OnSendMatchRoomLoadInfo</name>
        <param>
          <type>DWord</type>
          <declname>dwSession</declname>
        </param>
        <param>
          <type><ref refid="_race_server_2src_2_se_race_mgr_def_8h_1a622e0f783c37ecbff30d07e18aa981ee" kindref="member">VRacePlayer</ref> &amp;</type>
          <declname>rkVRacePlayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aef64bcc5362e7c3595c5dd2706c58426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnSendPlayerRaceStream</definition>
        <argsstring>(HSock &amp;rkPlayerSock, bool bMustSend, const char *pkData, int iDataSize)</argsstring>
        <name>OnSendPlayerRaceStream</name>
        <param>
          <type>HSock &amp;</type>
          <declname>rkPlayerSock</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bMustSend</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDataSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a9486f43f73deddb3a0ad359e729766b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::SendPlayer_ReconNoticePlayerJoin</definition>
        <argsstring>(HSock &amp;rkPlayerSock, int iSeat, int iSize, const char *sName)</argsstring>
        <name>SendPlayer_ReconNoticePlayerJoin</name>
        <param>
          <type>HSock &amp;</type>
          <declname>rkPlayerSock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSeat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5eecf4d2a6a3b6eb694aef835621f05e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::DelWaitRobot</definition>
        <argsstring>(DWord dwPlayerID)</argsstring>
        <name>DelWaitRobot</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3aef2a30ec9b8184aaeb6b3edb1237f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateWaitRobot</definition>
        <argsstring>()</argsstring>
        <name>UpdateWaitRobot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a287dc3e17be22595f717278e9deaa532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::StartRobotGame</definition>
        <argsstring>(const MapInfoTable *pkMapRes, VTestRobot &amp;rakRobot)</argsstring>
        <name>StartRobotGame</name>
        <param>
          <type>const <ref refid="struct_map_info_table" kindref="compound">MapInfoTable</ref> *</type>
          <declname>pkMapRes</declname>
        </param>
        <param>
          <type><ref refid="src_2_race_server_def_8h_1af9896ec82bfdccc9c30b142c8539f7bd" kindref="member">VTestRobot</ref> &amp;</type>
          <declname>rakRobot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRaceServiceMsg</definition>
        <argsstring>(DWord dwThreadIndex, void *pkData, int iSize)</argsstring>
        <name>PushRaceServiceMsg</name>
        <param>
          <type>DWord</type>
          <declname>dwThreadIndex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a51639bd7785f6dd43a8f31bc2256dc46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PushRSMsg</definition>
        <argsstring>(void *pkData, int iSize)</argsstring>
        <name>PushRSMsg</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/SeRaceSvrOther.inl" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6f7ca06ca648046238a73d4c1437846f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRN_Register</definition>
        <argsstring>(DWord dwLoginMagic, DWord dwServerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRN_Register</name>
        <param>
          <type>DWord</type>
          <declname>dwLoginMagic</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRNSend.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acc62a21adc0dfbf5a525fbf934c215a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRN_HeartPackage</definition>
        <argsstring>(void *pkReceiver=NULL)</argsstring>
        <name>SendRN_HeartPackage</name>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRNSend.inl" line="3" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2da84374ff0e2fa135e38572085a7d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRN_RaceLinkUserSync</definition>
        <argsstring>(DWord dwPlayerID, DWord dwStateID, void *pkReceiver=NULL)</argsstring>
        <name>SendRN_RaceLinkUserSync</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwStateID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRNSend.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a45c90353d4656860e91362d9cf861ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRNData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRNData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRNSend.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af1aaa9dca040f647d3690a6df76c833c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessNRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessNRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeNRProcess.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1c42ac7e0125281dc862361d60ba27b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessNR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessNR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeNRProcess.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3e8c21430941f2620c53c25ac804245a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessNR_RegisterRet</definition>
        <argsstring>(SeNR_RegisterRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessNR_RegisterRet</name>
        <param>
          <type><ref refid="struct_se_n_r___register_ret" kindref="compound">SeNR_RegisterRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeNRProcess.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a9338f35af549c8eef2669b09db745c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessNR_HeartPackageRet</definition>
        <argsstring>(SeNR_HeartPackageRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessNR_HeartPackageRet</name>
        <param>
          <type><ref refid="struct_se_n_r___heart_package_ret" kindref="compound">SeNR_HeartPackageRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeNRProcess.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af190cfcf2096389abb1e6fae140bf16b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRW_Register</definition>
        <argsstring>(DWord dwLoginMagic, DWord dwServerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRW_Register</name>
        <param>
          <type>DWord</type>
          <declname>dwLoginMagic</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwServerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWSend.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7c91cdf3ae830881527d46b137a02682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRW_HeartPackage</definition>
        <argsstring>(void *pkReceiver=NULL)</argsstring>
        <name>SendRW_HeartPackage</name>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWSend.inl" line="3" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6f197fd5a5d11ddb22deb4c8c8f21786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRWData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRWData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRWSend.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad838f776e2962783429f71a20130cbd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessWRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessWRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWRProcess.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2f596ad8edeb2676a18fa9d820bc7dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessWR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessWR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWRProcess.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6bb96643b45811c92173759fc5ed6a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessWR_RegisterRet</definition>
        <argsstring>(SeWR_RegisterRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessWR_RegisterRet</name>
        <param>
          <type><ref refid="struct_se_w_r___register_ret" kindref="compound">SeWR_RegisterRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWRProcess.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5c2ba1dd8cad200d76079ab854202714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessWR_HeartPackageRet</definition>
        <argsstring>(SeWR_HeartPackageRet *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessWR_HeartPackageRet</name>
        <param>
          <type><ref refid="struct_se_w_r___heart_package_ret" kindref="compound">SeWR_HeartPackageRet</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeWRProcess.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a166c51a0d94ecdb181df9179417f19cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_UpdateScore</definition>
        <argsstring>(DWord dwPlayerID, const MatchType &amp;eMatchType, int score, bool win, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_UpdateScore</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>const <ref refid="_se_ptl_comm_define_8h_1a747637046be33d7273262104aad8069d" kindref="member">MatchType</ref> &amp;</type>
          <declname>eMatchType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>win</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4e9698d704067d48044dd23381b0ac4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_AwardItemNtf</definition>
        <argsstring>(DWord dwPlayerID, int iNum, const SeAwardItem *awards, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_AwardItemNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_award_item" kindref="compound">SeAwardItem</ref> *</type>
          <declname>awards</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="3" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a32a154a06ab7443e518a87ae55191bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_AwardItemNtf</definition>
        <argsstring>(DWord dwPlayerID, int iNum, std::vector&lt; SeAwardItem &gt; &amp;awards, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_AwardItemNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNum</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_se_award_item" kindref="compound">SeAwardItem</ref> &gt; &amp;</type>
          <declname>awards</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="4" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a9f13723e990d723eb68be4271f1dd131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_DecRespawnItemNtf</definition>
        <argsstring>(DWord dwPlayerID, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_DecRespawnItemNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acdf817ed9d5ad15bb4fabf3e03fe6800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_SetEquipSetNtf</definition>
        <argsstring>(DWord dwPlayerID, Byte byIndex, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_SetEquipSetNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>Byte</type>
          <declname>byIndex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2af73fffd68913814b2e4a9a051dcaaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_SetRaceMapHeroNtf</definition>
        <argsstring>(DWord dwPlayerID, DWord dwMapID, DWord dwHeroID, DWord dwWinCounts, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_SetRaceMapHeroNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwMapID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwWinCounts</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3d67284e8562058c54cd0cc7504c5ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_SetAvatarNtf</definition>
        <argsstring>(DWord dwPlayerID, DWord dwHeroID, DWord dwItemID, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_SetAvatarNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwItemID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0a4431e66fa155e9a51c770f2b4fe0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_SelectHeroReq</definition>
        <argsstring>(DWord dwPlayerID, DWord dwHeroID, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_SelectHeroReq</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwHeroID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0c4099a22261da4713d38f23056fc6d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_UserRaceMapNtf</definition>
        <argsstring>(DWord dwPlayerID, const SeRaceEndArenaDetailInfo &amp;akRaceMaplInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_UserRaceMapNtf</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_race_end_arena_detail_info" kindref="compound">SeRaceEndArenaDetailInfo</ref> &amp;</type>
          <declname>akRaceMaplInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aeaf56c13251278f91eec8bebac1fd413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBL_RaceEndArenaBaseInfoSync</definition>
        <argsstring>(DWord dwPlayerID, const SeRaceEndArenaBaseInfo &amp;akRaceBaselInfo, void *pkReceiver=NULL)</argsstring>
        <name>SendRBL_RaceEndArenaBaseInfoSync</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_race_end_arena_base_info" kindref="compound">SeRaceEndArenaBaseInfo</ref> &amp;</type>
          <declname>akRaceBaselInfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4b58bfa7d6edcbc15aecbf815f082a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::SendRBLData</definition>
        <argsstring>(void *pkData, int iSize, void *pkReceiver)</argsstring>
        <name>SendRBLData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeRBLSend.inl" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a45cac7826a45bb10e88cbcbc97e13000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ProcessBLRData</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender=NULL)</argsstring>
        <name>ProcessBLRData</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeBLRProcess.inl" line="2" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4761d9e9b80802fec6b7bec5bfe26620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::PreProcessBLR</definition>
        <argsstring>(void *pkData, int iSize, void *pkSender)</argsstring>
        <name>PreProcessBLR</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeBLRProcess.inl" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a624351ac9226d75b6f48ac74db48640b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ProcessBLR_SelectHeroAck</definition>
        <argsstring>(SeBLR_SelectHeroAck *pkData, int iSize, void *pkSender)</argsstring>
        <name>ProcessBLR_SelectHeroAck</name>
        <param>
          <type><ref refid="struct_se_b_l_r___select_hero_ack" kindref="compound">SeBLR_SelectHeroAck</ref> *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/Server/SeBLRProcess.inl" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5847643304f7413be6138cf975c3e7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnPlayerConnected</definition>
        <argsstring>(SeConnect *pkConnect, const char *pcIP, int iPort)</argsstring>
        <name>OnPlayerConnected</name>
        <param>
          <type><ref refid="struct_se_connect" kindref="compound">SeConnect</ref> *</type>
          <declname>pkConnect</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5d709a99a45f4cabf057a7c49fa22e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnPlayerDisconnect</definition>
        <argsstring>(HSock rkSock)</argsstring>
        <name>OnPlayerDisconnect</name>
        <param>
          <type>HSock</type>
          <declname>rkSock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af6b7d3e4ec57890e9d02aedcf6b135c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ClearAllPlayerConn</definition>
        <argsstring>()</argsstring>
        <name>ClearAllPlayerConn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae1794593c97003f6fdee348a5155d25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_se_connect" kindref="compound">SeConnect</ref> *</type>
        <definition>SeConnect* RaceServer::GetConnectByID</definition>
        <argsstring>(DWord dwPlayerID)</argsstring>
        <name>GetConnectByID</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aae7e2004f6045cb4ad87e2809a853551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::GetServerRunState</definition>
        <argsstring>(int &amp;riSvrModeNum, int &amp;riNormalNum)</argsstring>
        <name>GetServerRunState</name>
        <param>
          <type>int &amp;</type>
          <declname>riSvrModeNum</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>riNormalNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a646c8d5e3d5695db7957b6e302c3c3e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RaceServer::GetConnectNum</definition>
        <argsstring>()</argsstring>
        <name>GetConnectNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a171d5bec27c5a1955ffd46351fe5ab0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::DelConnectByID</definition>
        <argsstring>(DWord dwPlayerID)</argsstring>
        <name>DelConnectByID</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1adb5e8383f3ef5c3c819259531fa85fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_se_connect" kindref="compound">SeConnect</ref> *</type>
        <definition>SeConnect* RaceServer::GetConnectBySock</definition>
        <argsstring>(const HSock &amp;rkSock)</argsstring>
        <name>GetConnectBySock</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad98e4b64bed4e582131dd353ae56f74e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::ReLoadServerAddr</definition>
        <argsstring>(const char *pcFile)</argsstring>
        <name>ReLoadServerAddr</name>
        <param>
          <type>const char *</type>
          <declname>pcFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::LoadConfig</definition>
        <argsstring>(const char *pcFile)</argsstring>
        <name>LoadConfig</name>
        <param>
          <type>const char *</type>
          <declname>pcFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1afd28fa51db9bbe338d72e8998ecb9dd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ReLoadConfig</definition>
        <argsstring>()</argsstring>
        <name>ReLoadConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::LoadRSTempConfig</definition>
        <argsstring>(const char *pcFile, SeRaceConfig &amp;rkRSConfig)</argsstring>
        <name>LoadRSTempConfig</name>
        <param>
          <type>const char *</type>
          <declname>pcFile</declname>
        </param>
        <param>
          <type><ref refid="struct_se_race_config" kindref="compound">SeRaceConfig</ref> &amp;</type>
          <declname>rkRSConfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::IsMSReady</definition>
        <argsstring>(void)</argsstring>
        <name>IsMSReady</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5232b4e0b931f53fa7fceca6f226b6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWord</type>
        <definition>DWord RaceServer::GetMSID</definition>
        <argsstring>()</argsstring>
        <name>GetMSID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a788a00bd15f61a8dadb074c05658b108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_se_race_config" kindref="compound">SeRaceConfig</ref></type>
        <definition>SeRaceConfig RaceServer::GetRaceConfig</definition>
        <argsstring>()</argsstring>
        <name>GetRaceConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a09463facb5a9bebcc97f7d4b2c0945d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::SaveRecord</definition>
        <argsstring>(SeRace *pRace)</argsstring>
        <name>SaveRecord</name>
        <param>
          <type><ref refid="struct_se_race" kindref="compound">SeRace</ref> *</type>
          <declname>pRace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a63cbffba0462486cde6e03f6efeecf76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="_race_server_2src_2_se_race_mgr_def_8h_1aeed613093b51c809e7e1cf84a9a88cd1" kindref="member">TWCSViewArray</ref> &amp;</type>
        <definition>const TWCSViewArray&amp; RaceServer::GetWCSView</definition>
        <argsstring>() const </argsstring>
        <name>GetWCSView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="80" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" bodystart="80" bodyend="80"/>
        <references refid="class_race_server_1aa7eff4248424ec791546a7d1d9209ea2" compoundref="src_2_race_server_8h" startline="145">m_vWCSView</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ad8a8ba8e58f5b47e50540ec529470fa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="src_2_race_server_def_8h_1ac0e2859a83c31a17e73dda4ee321dd5c" kindref="member">MapWCSConnect</ref> &amp;</type>
        <definition>MapWCSConnect&amp; RaceServer::GetWCSConnectMap</definition>
        <argsstring>()</argsstring>
        <name>GetWCSConnectMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="149" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" bodystart="149" bodyend="152"/>
        <references refid="class_race_server_1a4f4c0a3aa486d64460330802db1e287e" compoundref="src_2_race_server_8h" startline="121">m_kWCSConnect</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2303f7152794a0be3a6c6639b7373dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RaceThreadInitialize</definition>
        <argsstring>()</argsstring>
        <name>RaceThreadInitialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1acfd8886b9d300d53a533746a67b750e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RaceThreadFinialize</definition>
        <argsstring>()</argsstring>
        <name>RaceThreadFinialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ae92da288f2c535c4c897c82381e205cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RaceThreadUpdate</definition>
        <argsstring>()</argsstring>
        <name>RaceThreadUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1af7633fe0658191bed28add297940f8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RaceLinkUserSync</definition>
        <argsstring>(DWord dwPlayerID, DWord dwStateID)</argsstring>
        <name>RaceLinkUserSync</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwStateID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="158" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_race_server_1a6503e33ca41e829ab6338083b73f6af4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::InitializeNet</definition>
        <argsstring>(void)</argsstring>
        <name>InitializeNet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="83" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="927" bodyend="973"/>
        <references refid="struct_se_net_addr_1a23b51e87d8b7b2201a03833c9adde232" compoundref="_se_share_def_8h" startline="41">SeNetAddr::acIP</references>
        <references refid="struct_se_race_config_1aeb8a2be38bbebf6ac9dfb52b428f799f" compoundref="src_2_race_server_def_8h" startline="96">SeRaceConfig::bTcpClient</references>
        <references refid="_se_server_define_8h_1a69ab2b2845a7518bddd912889d3d4811" compoundref="_se_server_define_8h" startline="144">CLIENT_BUFFER_SIZE</references>
        <references refid="struct_se_net_addr_1a989fa5b025bc039122e8d2a29838fde9" compoundref="_se_share_def_8h" startline="42">SeNetAddr::iPort</references>
        <references refid="struct_se_race_config_1a3c54b6d17703bcfd643736f3c4d6ea1a" compoundref="src_2_race_server_def_8h" startline="92">SeRaceConfig::kAddrToPlayer</references>
        <references refid="struct_se_race_config_1a80d8a2c6f28d8484261ae341b0d76de7" compoundref="src_2_race_server_def_8h" startline="93">SeRaceConfig::kAddrToPlayerUdp</references>
        <references refid="struct_se_race_config_1a6bb4eaef04af40f9455804034cf24b0a" compoundref="src_2_race_server_def_8h" startline="94">SeRaceConfig::kAddrToWCS</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" compoundref="src_2_race_server_8h" startline="119">m_kUdpMgr</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="_se_server_define_8h_1a141dc49d73e6790790a053c29623f606" compoundref="_se_server_define_8h" startline="143">SERVER_BUFFER_SIZE</references>
        <referencedby refid="class_race_server_1a66b1d68ffc570732242915bc09651c27" compoundref="src_2_race_server_8cpp" startline="74" endline="132">Initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7e66b0db1cc4963931ab50079fae9d09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::InitializeNetEx</definition>
        <argsstring>(void)</argsstring>
        <name>InitializeNetEx</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="84" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="975" bodyend="1019"/>
        <references refid="class_se_virt_conn_mgr_1a42fa65f9815b4e6876a92d0648d7619c" compoundref="_se_virt_conn_mgr_8cpp" startline="60" endline="81">SeVirtConnMgr::AddServerConn</references>
        <references refid="_se_virt_conn_mgr_8cpp_1aa8e9d5beed961f4e26b9cadd49603980" compoundref="_se_virt_conn_mgr_8cpp" startline="7">g_kVirtConnMgr</references>
        <references refid="class_se_config_1a0bd6ce789230fc24e8e09674c0265d5d" compoundref="_se_config_8cpp" startline="56" endline="95">SeConfig::GetNetAddr</references>
        <references refid="class_se_virt_conn_mgr_1a6982c2146c5829aa21e4f2bd5487a3d4" compoundref="_se_virt_conn_mgr_8cpp" startline="23" endline="35">SeVirtConnMgr::Initialize</references>
        <references refid="class_se_config_1a077cfce8454c31d293c2d2341980ffca" compoundref="_se_config_8cpp" startline="10" endline="21">SeConfig::Load</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" compoundref="src_2_race_server_8h" startline="123">m_pkNSConn</references>
        <references refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" compoundref="src_2_race_server_8h" startline="122">m_pkWSConn</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="src_2_race_server_8cpp_1a1829928f14924b8a97ed00808758de08" compoundref="src_2_race_server_8cpp" startline="34" endline="51">sendHeartPack</references>
        <references refid="src_2_race_server_8cpp_1a03595bfee2a55045aa751deab1e562d0" compoundref="src_2_race_server_8cpp" startline="14" endline="32">sendRegPack</references>
        <references refid="_se_ptl_define_8h_1aefb47f3959b8be9e164448819e4bb7f9a8accedddcf1ed16f589b79e3f5d7e91b" compoundref="_se_ptl_define_8h" startline="29">SSI_NS</references>
        <references refid="_se_ptl_define_8h_1aefb47f3959b8be9e164448819e4bb7f9ac22c01ccbb196aab5a0eef785eb6ce26" compoundref="_se_ptl_define_8h" startline="15">SSI_WS</references>
        <referencedby refid="class_race_server_1a66b1d68ffc570732242915bc09651c27" compoundref="src_2_race_server_8cpp" startline="74" endline="132">Initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0c77af41b0b3b16bf8809597d30e123e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::InitializeRaceService</definition>
        <argsstring>(void)</argsstring>
        <name>InitializeRaceService</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="85" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1028" bodyend="1051"/>
        <references refid="class_race_service_1abfccad7fabdcc62ee709c93555eb3996" compoundref="src_2_race_service_8cpp" startline="23" endline="47">RaceService::Initialize</references>
        <references refid="class_se_thread_msg_mgr_1ae74c5d933cc0cac0732d472c6df97107" compoundref="_se_thread_msg_8cpp" startline="28" endline="34">SeThreadMsgMgr::Initialize</references>
        <references refid="class_race_server_1a63863da92e46f041b8505cd3755ad32a" compoundref="src_2_race_server_8h" startline="137">m_iRaceServiceNum</references>
        <references refid="class_race_server_1adb8735c836a598c39f601078fe100240" compoundref="src_2_race_server_8h" startline="140">m_kThreadMsgMgr</references>
        <references refid="class_race_server_1ad05c3786c53feb3ab6356db773445310" compoundref="src_2_race_server_8h" startline="138">m_pakRaceService</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <references refid="class_c_performance_timing_mgr_1a8cbe9a364798d5da07243a166cc0188f" compoundref="_performacen_timing_mgr_8cpp" startline="10" endline="13">CPerformanceTimingMgr::SetInstance</references>
        <references refid="class_race_service_1a8974cc80645f9d95bb2fa11ec82713ab" compoundref="src_2_race_service_8cpp" startline="135" endline="138">RaceService::SetPerformaceMgr</references>
        <references refid="class_race_service_1ac030266656fd64ac5a06249bf755cb67" compoundref="src_2_race_service_8cpp" startline="341" endline="345">RaceService::SetThreadIndex</references>
        <referencedby refid="class_race_server_1a66b1d68ffc570732242915bc09651c27" compoundref="src_2_race_server_8cpp" startline="74" endline="132">Initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1abaae55bfd825a7258fca8d05c1d666c7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ParseSetupVal</definition>
        <argsstring>(VIntVec &amp;rkVec, const char *pcValue, bool bNum=false)</argsstring>
        <name>ParseSetupVal</name>
        <param>
          <type><ref refid="_se_ptl_define_8h_1ac323b5320f189b4458ed94fff75e8c92" kindref="member">VIntVec</ref> &amp;</type>
          <declname>rkVec</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcValue</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bNum</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="86" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1053" bodyend="1092"/>
        <references refid="_se_tool_8cpp_1a03bcc77ad4ef4845b20fc5cf4db96834" compoundref="_se_tool_8cpp" startline="603" endline="610">GetStr2ID</references>
        <references refid="_se_tool_8cpp_1a4697a1b0adee30e7c3810134c6cfe519" compoundref="_se_tool_8cpp" startline="76" endline="91">MemCpy</references>
        <references refid="_se_tool_8cpp_1a4d30fbe56257fc998ebc1346e53be0d8" compoundref="_se_tool_8cpp" startline="50" endline="73">StrCpy</references>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateMSState</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateMSState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="88" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1094" bodyend="1113"/>
        <references refid="struct_se_server_data_1a4d91e2d15b4bc404ebc4ec42254ac770" compoundref="_se_server_define_8h" startline="21">SeServerData::bRegistered</references>
        <references refid="class_race_server_1ac6f65726c94e33f0b6f9bbfa57acde4d" compoundref="src_2_race_server_8cpp" startline="1136" endline="1150">ConnectToMS</references>
        <references refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</references>
        <references refid="struct_se_server_data_1a2777bbfd27a6afe42ebd71c5d14010a0" compoundref="_se_server_define_8h" startline="19">SeServerData::kSock</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" compoundref="src_2_race_server_8cpp" startline="1152" endline="1170">RegisterToMS</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a924fcf4c3c662c1dc028129aae9a5f45" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::CheckFreq</definition>
        <argsstring>(void)</argsstring>
        <name>CheckFreq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="89" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1115" bodyend="1134"/>
        <references refid="_src_2_town_server_def_8h_1ae57426ea3f2293244ab0967d37fd13bea92b656e4fe4d00ad16d692cd0c096851" compoundref="_src_2_town_server_def_8h" startline="33">CHECK_FREQ_TIME</references>
        <references refid="struct_se_connect_1a126e1a8628edb2c2cf4a26af590ec12d" compoundref="_tcp_server_def_8h" startline="85">SeConnect::dwPackCount</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1a157a410e9c3094696baa76bfcc6ecb41" compoundref="src_2_race_server_8h" startline="127">m_dwFreqTime</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="_se_file_log_8h_1a83f3fe470b91cb8eed8762cc8e5e26c3" compoundref="_se_file_log_8h" startline="83">SeLogInfo</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac6f65726c94e33f0b6f9bbfa57acde4d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ConnectToMS</definition>
        <argsstring>(void)</argsstring>
        <name>ConnectToMS</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="91" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1136" bodyend="1150"/>
        <references refid="struct_se_net_addr_1a23b51e87d8b7b2201a03833c9adde232" compoundref="_se_share_def_8h" startline="41">SeNetAddr::acIP</references>
        <references refid="struct_se_server_data_1a53fcdfea60106f5c7179d39b1e259a3e" compoundref="_se_server_define_8h" startline="20">SeServerData::bConnecting</references>
        <references refid="struct_se_net_addr_1a989fa5b025bc039122e8d2a29838fde9" compoundref="_se_share_def_8h" startline="42">SeNetAddr::iPort</references>
        <references refid="struct_se_race_config_1a06732c2e787bea54b171459976f4844e" compoundref="src_2_race_server_def_8h" startline="95">SeRaceConfig::kMSServer</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="_se_server_define_8h_1a141dc49d73e6790790a053c29623f606" compoundref="_se_server_define_8h" startline="143">SERVER_BUFFER_SIZE</references>
        <referencedby refid="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" compoundref="src_2_race_server_8cpp" startline="1094" endline="1113">UpdateMSState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RegisterToMS</definition>
        <argsstring>(void)</argsstring>
        <name>RegisterToMS</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="92" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1152" bodyend="1170"/>
        <references refid="struct_se_race_config_1afceab097bea3603d3c2316b6b2052c7a" compoundref="src_2_race_server_def_8h" startline="108">SeRaceConfig::bOpen</references>
        <references refid="struct_se_race_config_1a72013a4bed35c7b1633c2039f1c75d26" compoundref="src_2_race_server_def_8h" startline="90">SeRaceConfig::dwAreaID</references>
        <references refid="struct_se_server_data_1ad83763ea85ed3a8635ca4b9c5a393ba4" compoundref="_se_server_define_8h" startline="22">SeServerData::dwRegisterTime</references>
        <references refid="struct_se_race_config_1a382a646846d8fb8918f0c8b7c1d1e474" compoundref="src_2_race_server_def_8h" startline="91">SeRaceConfig::dwServerID</references>
        <references refid="struct_se_race_config_1a3c54b6d17703bcfd643736f3c4d6ea1a" compoundref="src_2_race_server_def_8h" startline="92">SeRaceConfig::kAddrToPlayer</references>
        <references refid="struct_se_race_config_1a80d8a2c6f28d8484261ae341b0d76de7" compoundref="src_2_race_server_def_8h" startline="93">SeRaceConfig::kAddrToPlayerUdp</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1af734c61940c3f436a681ab8726d54ce7" compoundref="src_2_race_server_8h" startline="115">m_iRegisterCount</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="_src_2_d_b_server_def_8h_1acf16ae2ebe7086e6034d6108efca89dbab2431ddb4b2eeafbda48633e06ecf653" compoundref="_src_2_d_b_server_def_8h" startline="16">RECONNECT_TIME</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="class_race_server_1ac14c1d5d9ecd31308b15c01779e7114c">SendRM_Register</references>
        <referencedby refid="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" compoundref="src_2_race_server_8cpp" startline="1094" endline="1113">UpdateMSState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac49797d4eba032d969df83d1c76ddbea" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::SetMSReady</definition>
        <argsstring>(bool bReady)</argsstring>
        <name>SetMSReady</name>
        <param>
          <type>bool</type>
          <declname>bReady</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="93" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1172" bodyend="1175"/>
        <references refid="class_race_server_1a3a3bff84b94f764521c4d23de3bbebc7" compoundref="src_2_race_server_8h" startline="112">m_bMSReady</references>
        <referencedby refid="class_race_server_1ab40781b3f26bee9ecf2847769400b3b6" compoundref="src_2_se_m_r_process_8cpp" startline="21" endline="54">ProcessMR_RegisterRet</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::DisconnectPlayer</definition>
        <argsstring>(SeConnect *pkConn)</argsstring>
        <name>DisconnectPlayer</name>
        <param>
          <type><ref refid="struct_se_connect" kindref="compound">SeConnect</ref> *</type>
          <declname>pkConn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="95" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1196" bodyend="1206"/>
        <references refid="struct_se_race_config_1aeb8a2be38bbebf6ac9dfb52b428f799f" compoundref="src_2_race_server_def_8h" startline="96">SeRaceConfig::bTcpClient</references>
        <references refid="struct_se_connect_1afaa6333d607da1a42b52df55799eab7b" compoundref="_src_2_match_server_def_8h" startline="61">SeConnect::kSock</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" compoundref="src_2_race_server_8h" startline="119">m_kUdpMgr</references>
        <referencedby refid="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" compoundref="src_2_race_server_8cpp" startline="1208" endline="1251">CheckConnect</referencedby>
        <referencedby refid="class_race_server_1af6b7d3e4ec57890e9d02aedcf6b135c0" compoundref="src_2_race_server_8cpp" startline="1289" endline="1298">ClearAllPlayerConn</referencedby>
        <referencedby refid="class_race_server_1a5d709a99a45f4cabf057a7c49fa22e0b" compoundref="src_2_race_server_8cpp" startline="1279" endline="1287">OnPlayerDisconnect</referencedby>
        <referencedby refid="class_race_server_1a75c896e3c906802be4bbd2d615f782c8" compoundref="src_2_se_m_r_process_8cpp" startline="130" endline="141">ProcessMR_ValidFailRet</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::CheckConnect</definition>
        <argsstring>()</argsstring>
        <name>CheckConnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="96" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1208" bodyend="1251"/>
        <references refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" compoundref="src_2_race_server_8cpp" startline="1196" endline="1206">DisconnectPlayer</references>
        <references refid="struct_se_connect_1af90c5d0ae32665bd3b89980926896f0c" compoundref="_tcp_server_def_8h" startline="88">SeConnect::dwLastRecvTime</references>
        <references refid="struct_se_connect_1a8e6c510c84b093a3c79adb548305ebff" compoundref="src_2_race_server_def_8h" startline="157">SeConnect::dwPlayerID</references>
        <references refid="struct_se_connect_1ae90bd507e6e1e36dc4ee9e4d5e849cd3" compoundref="_src_2_match_server_def_8h" startline="65">SeConnect::dwStateTime</references>
        <references refid="struct_se_connect_1a149d84058a462e8833764a6dd2aa2d04" compoundref="_src_2_match_server_def_8h" startline="64">SeConnect::eState</references>
        <references refid="_se_tool_8h_1ada81d4ae5d39c42af0a02b45f4a6f715" compoundref="_se_tool_8h" startline="66">GetID2Str</references>
        <references refid="class_race_server_1a8132622c0568a827ae4c490478b52cff" compoundref="src_2_se_race_svr_other_8cpp" startline="58" endline="61">GetServerID</references>
        <references refid="struct_se_race_config_1aa32b4b12bf68b7d97aa2d50e3f456d18" compoundref="src_2_race_server_def_8h" startline="121">SeRaceConfig::iClientHeartBeatTime</references>
        <references refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" compoundref="src_2_race_server_8h" startline="111">m_dwCurTime</references>
        <references refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" compoundref="src_2_race_server_8h" startline="126">m_kAllConnect</references>
        <references refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" compoundref="src_2_race_server_8h" startline="113">m_kConfig</references>
        <references refid="_src_2_match_server_def_8h_1a66f85fac7c2312bb587ad3f33324085eaa56d080abab641c052974b0a39f8bf32" compoundref="_src_2_match_server_def_8h" startline="48">SCS_UNKOWN</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1d04e77d743cd19eb6ac6b20f09bc855" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateRSMsg</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateRSMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="98" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1388" bodyend="1396"/>
        <references refid="struct_se_msg_data_1ab6577c6c65bcf31204ca984053313335" compoundref="_se_thread_msg_8h" startline="26">SeMsgData::abyData</references>
        <references refid="struct_se_msg_data_1aecd603d6ee9e3ec757d167f364508db0" compoundref="_se_thread_msg_8h" startline="25">SeMsgData::iSize</references>
        <references refid="class_race_server_1adb8735c836a598c39f601078fe100240" compoundref="src_2_race_server_8h" startline="140">m_kThreadMsgMgr</references>
        <references refid="class_se_thread_msg_mgr_1a143465b2c3e037cac44183f87355d23f" compoundref="_se_thread_msg_8cpp" startline="60" endline="82">SeThreadMsgMgr::PopMsg</references>
        <references refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" compoundref="src_2_se_race_service_process_8cpp" startline="4" endline="25">ProcessRCR</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2a40385bfddbe46765ad5f1bd1e0f870" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateHeartPackage</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateHeartPackage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="99" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1398" bodyend="1410"/>
        <references refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</references>
        <references refid="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" compoundref="src_2_race_server_8cpp" startline="1412" endline="1438">UpdateMSHeartPackage</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateMSHeartPackage</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateMSHeartPackage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="100" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1412" bodyend="1438"/>
        <references refid="struct_se_server_data_1a6c75241d7cd68409f25f383feb838ca3" compoundref="_se_server_define_8h" startline="24">SeServerData::dwHeartPackageTime</references>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="class_se_race_mgr_1acfe51d56f436aebe00a9d572f7c9a354" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="566" endline="569">SeRaceMgr::GetCurrentRaceNum</references>
        <references refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</references>
        <references refid="struct_se_server_data_1a2777bbfd27a6afe42ebd71c5d14010a0" compoundref="_se_server_define_8h" startline="19">SeServerData::kSock</references>
        <references refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" compoundref="src_2_race_server_8h" startline="120">m_kMSData</references>
        <references refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" compoundref="src_2_race_server_8h" startline="118">m_kNetMgr</references>
        <references refid="_se_file_log_8h_1a59fe2018c00666084724bec1365b41f5" compoundref="_se_file_log_8h" startline="85">SeLogError</references>
        <references refid="class_race_server_1a968ec4bd6adc4afb3b03b3f702ed5c7b">SendRM_HeartPackage</references>
        <referencedby refid="class_race_server_1a2a40385bfddbe46765ad5f1bd1e0f870" compoundref="src_2_race_server_8cpp" startline="1398" endline="1410">UpdateHeartPackage</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa09b74ef284ae258769b65ed2ecc07e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateRSConfig</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateRSConfig</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="101" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1440" bodyend="1454"/>
        <references refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</references>
        <references refid="class_race_server_1afd28fa51db9bbe338d72e8998ecb9dd8" compoundref="src_2_race_server_8cpp" startline="616" endline="619">ReLoadConfig</references>
        <references refid="class_race_server_1ad98e4b64bed4e582131dd353ae56f74e" compoundref="src_2_race_server_8cpp" startline="1358" endline="1386">ReLoadServerAddr</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3692dac1f1a18f397de386f4f7a98684" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateSaveThreadUpdateTime</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateSaveThreadUpdateTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="102" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1473" bodyend="1521"/>
        <references refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" compoundref="src_2_se_race_svr_other_8cpp" startline="68" endline="71">GetServerTime</references>
        <references refid="class_race_server_1a18f7983c50d14a59b70cca1f104ccebc" compoundref="src_2_race_server_8h" startline="134">m_akThreadTime</references>
        <references refid="_se_server_tool_8cpp_1ad2735ec90511f0d6ec1535cf448709b8" compoundref="_se_server_tool_8cpp" startline="31" endline="64">SPrintf</references>
        <references refid="src_2_race_server_def_8h_1a9eb95a62743fc812af93eb6ef816f82f" compoundref="src_2_race_server_def_8h" startline="32">Stat_TIME_THREAD_NUM</references>
        <referencedby refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" compoundref="src_2_race_server_8cpp" startline="134" endline="208">Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5d5e0df8480369231da14cca6e9e20d2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnWCSDisconnect</definition>
        <argsstring>(const HSock &amp;rkSock)</argsstring>
        <name>OnWCSDisconnect</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="103" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="465" bodyend="488"/>
        <references refid="_match_server_2_src_2_se_race_mgr_8cpp_1a1f83db99b647792f31ca33007bb173f3" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="5">g_kRaceMgr</references>
        <references refid="struct_se_w_c_s_view_1acc1e74a9cbc48abab8bbcf1338b2ef8a" compoundref="_race_server_2src_2_se_race_mgr_def_8h" startline="218">SeWCSView::kWCSSock</references>
        <references refid="class_race_server_1aa7eff4248424ec791546a7d1d9209ea2" compoundref="src_2_race_server_8h" startline="145">m_vWCSView</references>
        <references refid="class_se_race_mgr_1a6c1dae8c05712f4204cf9d6fd048ff91" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3374" endline="3379">SeRaceMgr::RemoveWCSView</references>
        <referencedby refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" compoundref="src_2_race_server_8cpp" startline="395" endline="463">OnNetDisconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6993deeef7a6287b2f968edda5bf0405" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::WriteToLogFile</definition>
        <argsstring>(const char *pcLogName, const char *pcInfo, int size)</argsstring>
        <name>WriteToLogFile</name>
        <param>
          <type>const char *</type>
          <declname>pcLogName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcInfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="105" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.cpp" bodystart="1456" bodyend="1471"/>
        <referencedby refid="class_race_server_1a5d27bdd027268d10784e20f5a7507805" compoundref="src_2_se_r_c_send_8cpp" startline="7" endline="58">SendRCData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6503e33ca41e829ab6338083b73f6af4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::InitializeNet</definition>
        <argsstring>(void)</argsstring>
        <name>InitializeNet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a7e66b0db1cc4963931ab50079fae9d09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::InitializeNetEx</definition>
        <argsstring>(void)</argsstring>
        <name>InitializeNetEx</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a0c77af41b0b3b16bf8809597d30e123e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RaceServer::InitializeRaceService</definition>
        <argsstring>(void)</argsstring>
        <name>InitializeRaceService</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1abaae55bfd825a7258fca8d05c1d666c7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ParseSetupVal</definition>
        <argsstring>(VIntVec &amp;rkVec, const char *pcValue, bool bNum=false)</argsstring>
        <name>ParseSetupVal</name>
        <param>
          <type><ref refid="_se_ptl_define_8h_1ac323b5320f189b4458ed94fff75e8c92" kindref="member">VIntVec</ref> &amp;</type>
          <declname>rkVec</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcValue</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bNum</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateMSState</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateMSState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a924fcf4c3c662c1dc028129aae9a5f45" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::CheckFreq</definition>
        <argsstring>(void)</argsstring>
        <name>CheckFreq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac6f65726c94e33f0b6f9bbfa57acde4d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::ConnectToMS</definition>
        <argsstring>(void)</argsstring>
        <name>ConnectToMS</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::RegisterToMS</definition>
        <argsstring>(void)</argsstring>
        <name>RegisterToMS</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1ac49797d4eba032d969df83d1c76ddbea" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::SetMSReady</definition>
        <argsstring>(bool bReady)</argsstring>
        <name>SetMSReady</name>
        <param>
          <type>bool</type>
          <declname>bReady</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::DisconnectPlayer</definition>
        <argsstring>(SeConnect *pkConn)</argsstring>
        <name>DisconnectPlayer</name>
        <param>
          <type><ref refid="struct_se_connect" kindref="compound">SeConnect</ref> *</type>
          <declname>pkConn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::CheckConnect</definition>
        <argsstring>()</argsstring>
        <name>CheckConnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a1d04e77d743cd19eb6ac6b20f09bc855" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateRSMsg</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateRSMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a2a40385bfddbe46765ad5f1bd1e0f870" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateHeartPackage</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateHeartPackage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateMSHeartPackage</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateMSHeartPackage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1aa09b74ef284ae258769b65ed2ecc07e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateRSConfig</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateRSConfig</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a3692dac1f1a18f397de386f4f7a98684" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::UpdateSaveThreadUpdateTime</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateSaveThreadUpdateTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a5d5e0df8480369231da14cca6e9e20d2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::OnWCSDisconnect</definition>
        <argsstring>(const HSock &amp;rkSock)</argsstring>
        <name>OnWCSDisconnect</name>
        <param>
          <type>const HSock &amp;</type>
          <declname>rkSock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_race_server_1a6993deeef7a6287b2f968edda5bf0405" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RaceServer::WriteToLogFile</definition>
        <argsstring>(const char *pcLogName, const char *pcInfo, int size)</argsstring>
        <name>WriteToLogFile</name>
        <param>
          <type>const char *</type>
          <declname>pcLogName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcInfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/RaceServer.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2370">
        <label>RaceServer</label>
        <link refid="class_race_server"/>
        <childnode refid="2371" relation="public-inheritance">
        </childnode>
        <childnode refid="2372" relation="public-inheritance">
        </childnode>
        <childnode refid="2371" relation="public-inheritance">
        </childnode>
        <childnode refid="2372" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2372">
        <label>SeBaseServer</label>
        <link refid="class_se_base_server"/>
      </node>
      <node id="2371">
        <label>TeNetCall</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2418">
        <label>SeRandNum</label>
        <link refid="class_se_rand_num"/>
        <childnode refid="2392" relation="usage">
          <edgelabel>m_kFileName</edgelabel>
        </childnode>
        <childnode refid="2419" relation="usage">
          <edgelabel>m_kRandInfo</edgelabel>
        </childnode>
      </node>
      <node id="2407">
        <label>SeThreadMsgMgr</label>
        <link refid="class_se_thread_msg_mgr"/>
        <childnode refid="2408" relation="usage">
          <edgelabel>m_kTemMsgData</edgelabel>
        </childnode>
      </node>
      <node id="2413">
        <label>K</label>
      </node>
      <node id="2414">
        <label>T</label>
      </node>
      <node id="2384">
        <label>SeRaceRecord</label>
        <link refid="class_se_race_record"/>
        <childnode refid="2385" relation="usage">
          <edgelabel>m_kReplayInfo</edgelabel>
        </childnode>
        <childnode refid="2386" relation="usage">
          <edgelabel>m_vecRecordLabel</edgelabel>
        </childnode>
        <childnode refid="2388" relation="usage">
          <edgelabel>m_akPackInfo</edgelabel>
        </childnode>
        <childnode refid="2389" relation="usage">
          <edgelabel>m_kTmpRacePack</edgelabel>
        </childnode>
        <childnode refid="2390" relation="usage">
          <edgelabel>m_vecRecordReport</edgelabel>
        </childnode>
        <childnode refid="2394" relation="usage">
          <edgelabel>m_aiReconDataOffPos</edgelabel>
        </childnode>
        <childnode refid="2395" relation="usage">
          <edgelabel>m_ClientWatchLogFile</edgelabel>
        </childnode>
        <childnode refid="2400" relation="usage">
          <edgelabel>m_kPlayerInfo</edgelabel>
        </childnode>
        <childnode refid="2402" relation="usage">
          <edgelabel>m_kTmpRaceHead</edgelabel>
        </childnode>
      </node>
      <node id="2417">
        <label>SeWatchServerConnect</label>
        <link refid="struct_se_watch_server_connect"/>
        <childnode refid="2378" relation="usage">
          <edgelabel>kNetAddr</edgelabel>
        </childnode>
      </node>
      <node id="2390">
        <label>std::vector&lt; RecordReport &gt;</label>
        <childnode refid="2391" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2434">
        <label>std::vector&lt; SeWCSView &gt;</label>
        <childnode refid="2435" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2431">
        <label>SeLogicRaceData</label>
        <link refid="class_se_logic_race_data"/>
      </node>
      <node id="2386">
        <label>std::vector&lt; RecordLabel &gt;</label>
        <childnode refid="2387" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2373">
        <label>RaceServer</label>
        <link refid="class_race_server"/>
        <childnode refid="2374" relation="public-inheritance">
        </childnode>
        <childnode refid="2375" relation="public-inheritance">
        </childnode>
        <childnode refid="2374" relation="public-inheritance">
        </childnode>
        <childnode refid="2375" relation="public-inheritance">
        </childnode>
        <childnode refid="2376" relation="usage">
          <edgelabel>m_kAllConnect</edgelabel>
        </childnode>
        <childnode refid="2380" relation="usage">
          <edgelabel>m_pkSaveRecordThread</edgelabel>
        </childnode>
        <childnode refid="2407" relation="usage">
          <edgelabel>m_kThreadMsgMgr</edgelabel>
        </childnode>
        <childnode refid="2409" relation="usage">
          <edgelabel>m_akThreadTime</edgelabel>
        </childnode>
        <childnode refid="2410" relation="usage">
          <edgelabel>m_pkNSConn</edgelabel>
          <edgelabel>m_pkWSConn</edgelabel>
        </childnode>
        <childnode refid="2411" relation="usage">
          <edgelabel>m_kWaitRobot</edgelabel>
        </childnode>
        <childnode refid="2415" relation="usage">
          <edgelabel>m_kConfig</edgelabel>
        </childnode>
        <childnode refid="2416" relation="usage">
          <edgelabel>m_kWCSConnect</edgelabel>
        </childnode>
        <childnode refid="2418" relation="usage">
          <edgelabel>m_kRandNum</edgelabel>
        </childnode>
        <childnode refid="2420" relation="usage">
          <edgelabel>m_pakRaceService</edgelabel>
        </childnode>
        <childnode refid="2433" relation="usage">
          <edgelabel>m_kMSData</edgelabel>
        </childnode>
        <childnode refid="2434" relation="usage">
          <edgelabel>m_vWCSView</edgelabel>
        </childnode>
      </node>
      <node id="2428">
        <label>SeSvrRacePlayer</label>
        <link refid="struct_se_svr_race_player"/>
      </node>
      <node id="2423">
        <label>std::map&lt; TeMD5, SeSvrRace &gt;</label>
        <childnode refid="2424" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="2404" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="2430">
        <label>std::map&lt; int, SeLogicRaceData * &gt;</label>
        <childnode refid="2431" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2396">
        <label>std::basic_ofstream&lt; char &gt;</label>
        <childnode refid="2397" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2382">
        <label>std::queue&lt; class SeRace * &gt;</label>
        <childnode refid="2383" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2427">
        <label>std::vector&lt; SeSvrRacePlayer &gt;</label>
        <childnode refid="2428" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2412">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="2413" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="2414" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2391">
        <label>RecordReport</label>
        <link refid="struct_record_report"/>
        <childnode refid="2392" relation="usage">
          <edgelabel>strMsg</edgelabel>
        </childnode>
      </node>
      <node id="2420">
        <label>RaceService</label>
        <link refid="class_race_service"/>
        <childnode refid="2421" relation="public-inheritance">
        </childnode>
        <childnode refid="2381" relation="public-inheritance">
        </childnode>
        <childnode refid="2421" relation="public-inheritance">
        </childnode>
        <childnode refid="2381" relation="public-inheritance">
        </childnode>
        <childnode refid="2422" relation="usage">
          <edgelabel>m_kRaceMgr</edgelabel>
        </childnode>
        <childnode refid="2407" relation="usage">
          <edgelabel>m_kThreadMsgMgr</edgelabel>
        </childnode>
        <childnode refid="2432" relation="usage">
          <edgelabel>m_pPerforceMgr</edgelabel>
        </childnode>
      </node>
      <node id="2425">
        <label>std::map&lt; DWord, StatisticSendCommandPacket &gt;</label>
        <childnode refid="2426" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2411">
        <label>std::map&lt; DWord, MID2TestRobot &gt;</label>
        <childnode refid="2412" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2400">
        <label>std::vector&lt; SePlayerInfoSeat &gt;</label>
        <childnode refid="2401" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2401">
        <label>SePlayerInfoSeat</label>
        <link refid="struct_se_player_info_seat"/>
      </node>
      <node id="2395">
        <label>std::ofstream</label>
        <childnode refid="2396" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2377">
        <label>SeConnect</label>
        <link refid="struct_se_connect"/>
        <childnode refid="2378" relation="usage">
          <edgelabel>kNetAddr</edgelabel>
        </childnode>
        <childnode refid="2379" relation="usage">
          <edgelabel>kTownSign</edgelabel>
        </childnode>
      </node>
      <node id="2375">
        <label>SeBaseServer</label>
        <link refid="class_se_base_server"/>
      </node>
      <node id="2378">
        <label>SeNetAddr</label>
        <link refid="struct_se_net_addr"/>
      </node>
      <node id="2389">
        <label>SeRacePack</label>
        <link refid="struct_se_race_pack"/>
      </node>
      <node id="2426">
        <label>StatisticSendCommandPacket</label>
        <link refid="struct_statistic_send_command_packet"/>
      </node>
      <node id="2393">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="2405">
        <label>std::unordered_map&lt; DWord, SeViewPlayer &gt;</label>
        <childnode refid="2406" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2385">
        <label>SeReplayInfo</label>
        <link refid="struct_se_replay_info"/>
      </node>
      <node id="2419">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="2392" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2404">
        <label>TeMD5</label>
        <link refid="struct_te_m_d5"/>
      </node>
      <node id="2409">
        <label>std::queue&lt; int &gt;</label>
      </node>
      <node id="2424">
        <label>SeSvrRace</label>
        <link refid="struct_se_svr_race"/>
        <childnode refid="2425" relation="usage">
          <edgelabel>kSendCmdDataSize</edgelabel>
        </childnode>
        <childnode refid="2427" relation="usage">
          <edgelabel>kRacePlayer</edgelabel>
        </childnode>
        <childnode refid="2429" relation="usage">
          <edgelabel>kRaceDataMgr</edgelabel>
        </childnode>
      </node>
      <node id="2387">
        <label>RecordLabel</label>
        <link refid="struct_record_label"/>
      </node>
      <node id="2388">
        <label>SePackInfo</label>
        <link refid="struct_se_pack_info"/>
      </node>
      <node id="2410">
        <label>SeVirtConn</label>
        <link refid="struct_se_virt_conn"/>
        <childnode refid="2378" relation="usage">
          <edgelabel>kNetAddr</edgelabel>
        </childnode>
      </node>
      <node id="2376">
        <label>std::map&lt; HSock, SeConnect * &gt;</label>
        <childnode refid="2377" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2397">
        <label>std::basic_ostream&lt; Char &gt;</label>
        <childnode refid="2398" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2398">
        <label>std::basic_ios&lt; Char &gt;</label>
        <childnode refid="2399" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2381">
        <label>Thread</label>
      </node>
      <node id="2432">
        <label>CPerformanceTimingMgr</label>
        <link refid="class_c_performance_timing_mgr"/>
        <childnode refid="2432" relation="usage">
          <edgelabel>m_pMgr</edgelabel>
        </childnode>
      </node>
      <node id="2379">
        <label>HTownSign</label>
        <link refid="struct_h_town_sign"/>
      </node>
      <node id="2399">
        <label>std::ios_base</label>
      </node>
      <node id="2403">
        <label>SeRaceCmd</label>
        <link refid="struct_se_race_cmd"/>
      </node>
      <node id="2435">
        <label>SeWCSView</label>
        <link refid="struct_se_w_c_s_view"/>
      </node>
      <node id="2429">
        <label>SeRaceDataMgr</label>
        <link refid="class_se_race_data_mgr"/>
        <childnode refid="2430" relation="usage">
          <edgelabel>m_kMapRaceData</edgelabel>
        </childnode>
      </node>
      <node id="2402">
        <label>SeRaceFrame</label>
        <link refid="struct_se_race_frame"/>
        <childnode refid="2403" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2422">
        <label>SeThreadRaceMgr</label>
        <link refid="class_se_thread_race_mgr"/>
        <childnode refid="2423" relation="usage">
          <edgelabel>m_kMapRace</edgelabel>
        </childnode>
      </node>
      <node id="2383">
        <label>WatchServer::SeRace</label>
        <link refid="struct_watch_server_1_1_se_race"/>
        <childnode refid="2384" relation="usage">
          <edgelabel>kRecord</edgelabel>
          <edgelabel>kSvrModeRecord</edgelabel>
        </childnode>
        <childnode refid="2404" relation="usage">
          <edgelabel>kRaceID</edgelabel>
        </childnode>
        <childnode refid="2405" relation="usage">
          <edgelabel>mViewPlayer</edgelabel>
        </childnode>
      </node>
      <node id="2415">
        <label>SeRaceConfig</label>
        <link refid="struct_se_race_config"/>
        <childnode refid="2378" relation="usage">
          <edgelabel>kAddrToWCS</edgelabel>
          <edgelabel>kAddrToPlayer</edgelabel>
          <edgelabel>kAddrToPlayerUdp</edgelabel>
          <edgelabel>kMSServer</edgelabel>
        </childnode>
      </node>
      <node id="2421">
        <label>BeRaceLogicCall</label>
      </node>
      <node id="2433">
        <label>SeServerData</label>
        <link refid="struct_se_server_data"/>
      </node>
      <node id="2408">
        <label>SeMsgData</label>
        <link refid="struct_se_msg_data"/>
      </node>
      <node id="2406">
        <label>WatchServer::SeViewPlayer</label>
        <link refid="struct_watch_server_1_1_se_view_player"/>
      </node>
      <node id="2380">
        <label>SeRaceRecordSaveThread</label>
        <link refid="class_se_race_record_save_thread"/>
        <childnode refid="2381" relation="public-inheritance">
        </childnode>
        <childnode refid="2381" relation="public-inheritance">
        </childnode>
        <childnode refid="2373" relation="usage">
          <edgelabel>m_pkOwner</edgelabel>
        </childnode>
        <childnode refid="2382" relation="usage">
          <edgelabel>m_qFinishQueue</edgelabel>
          <edgelabel>m_qSaveQueue</edgelabel>
        </childnode>
      </node>
      <node id="2394">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="2374">
        <label>TeNetCall</label>
      </node>
      <node id="2416">
        <label>std::map&lt; HSock, SeWatchServerConnect * &gt;</label>
        <childnode refid="2417" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2392">
        <label>std::string</label>
        <childnode refid="2393" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" line="23" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/RaceServer.h" bodystart="22" bodyend="159"/>
    <listofallmembers>
      <member refid="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>CheckConnect</name></member>
      <member refid="class_race_server_1aa63dc13cfbe7f953d757120092724fcf" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>CheckConnect</name></member>
      <member refid="class_race_server_1a924fcf4c3c662c1dc028129aae9a5f45" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>CheckFreq</name></member>
      <member refid="class_race_server_1a924fcf4c3c662c1dc028129aae9a5f45" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>CheckFreq</name></member>
      <member refid="class_race_server_1af6b7d3e4ec57890e9d02aedcf6b135c0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ClearAllPlayerConn</name></member>
      <member refid="class_race_server_1af6b7d3e4ec57890e9d02aedcf6b135c0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ClearAllPlayerConn</name></member>
      <member refid="class_race_server_1ac6f65726c94e33f0b6f9bbfa57acde4d" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>ConnectToMS</name></member>
      <member refid="class_race_server_1ac6f65726c94e33f0b6f9bbfa57acde4d" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>ConnectToMS</name></member>
      <member refid="class_race_server_1a171d5bec27c5a1955ffd46351fe5ab0b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>DelConnectByID</name></member>
      <member refid="class_race_server_1a171d5bec27c5a1955ffd46351fe5ab0b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>DelConnectByID</name></member>
      <member refid="class_race_server_1a5eecf4d2a6a3b6eb694aef835621f05e" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>DelWaitRobot</name></member>
      <member refid="class_race_server_1a5eecf4d2a6a3b6eb694aef835621f05e" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>DelWaitRobot</name></member>
      <member refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>DisconnectPlayer</name></member>
      <member refid="class_race_server_1a3dc88867d2a03d18b529b4d1c0f4f2b7" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>DisconnectPlayer</name></member>
      <member refid="class_race_server_1a83c381dd5580152733352009687c5b0a" prot="public" virt="virtual"><scope>RaceServer</scope><name>ExecuteAction</name></member>
      <member refid="class_race_server_1a83c381dd5580152733352009687c5b0a" prot="public" virt="virtual"><scope>RaceServer</scope><name>ExecuteAction</name></member>
      <member refid="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" prot="public" virt="virtual"><scope>RaceServer</scope><name>Finialize</name></member>
      <member refid="class_race_server_1a88f39ef19bb603dd3439fdd9e4916611" prot="public" virt="virtual"><scope>RaceServer</scope><name>Finialize</name></member>
      <member refid="class_race_server_1ac742e033d875f5d171d463a8892a151c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetAreaID</name></member>
      <member refid="class_race_server_1ac742e033d875f5d171d463a8892a151c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetAreaID</name></member>
      <member refid="class_race_server_1a168a19b0f8e671d9f95604a84728547a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetConnectByID</name></member>
      <member refid="class_race_server_1ae1794593c97003f6fdee348a5155d25d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetConnectByID</name></member>
      <member refid="class_race_server_1a39397dd580cff537f231ae1537cd2e33" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetConnectBySock</name></member>
      <member refid="class_race_server_1adb5e8383f3ef5c3c819259531fa85fe4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetConnectBySock</name></member>
      <member refid="class_race_server_1a646c8d5e3d5695db7957b6e302c3c3e7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetConnectNum</name></member>
      <member refid="class_race_server_1a646c8d5e3d5695db7957b6e302c3c3e7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetConnectNum</name></member>
      <member refid="class_race_server_1a9eb0e365d5a6450ae5894e53f91d4d9f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetDebugLevel</name></member>
      <member refid="class_race_server_1a9eb0e365d5a6450ae5894e53f91d4d9f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetDebugLevel</name></member>
      <member refid="class_race_server_1aa26ceba287df3840748965362ddfc03c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetGameLogFilePath</name></member>
      <member refid="class_race_server_1a93c91462e4dbd588ae54ae72a0d3adab" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetGameLogFilePath</name></member>
      <member refid="class_race_server_1a5a1835ed84eb2e50c4a9d1fa203ac928" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetMaxPacketSize</name></member>
      <member refid="class_race_server_1a5a1835ed84eb2e50c4a9d1fa203ac928" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetMaxPacketSize</name></member>
      <member refid="class_race_server_1a326f1a2926dde54ccf7d43a8a3bfcbed" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetMaxReconTime</name></member>
      <member refid="class_race_server_1a326f1a2926dde54ccf7d43a8a3bfcbed" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetMaxReconTime</name></member>
      <member refid="class_race_server_1a5232b4e0b931f53fa7fceca6f226b6ee" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetMSID</name></member>
      <member refid="class_race_server_1a5232b4e0b931f53fa7fceca6f226b6ee" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetMSID</name></member>
      <member refid="class_race_server_1a788a00bd15f61a8dadb074c05658b108" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetRaceConfig</name></member>
      <member refid="class_race_server_1a788a00bd15f61a8dadb074c05658b108" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetRaceConfig</name></member>
      <member refid="class_race_server_1a8e0a4da2c1a515ac9eeb1634fccc2c06" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetRacePackTime</name></member>
      <member refid="class_race_server_1a8e0a4da2c1a515ac9eeb1634fccc2c06" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetRacePackTime</name></member>
      <member refid="class_race_server_1ae7388ef7da3a30046cf017d40e355669" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetRacePrintTime</name></member>
      <member refid="class_race_server_1ae7388ef7da3a30046cf017d40e355669" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetRacePrintTime</name></member>
      <member refid="class_race_server_1a7eaaaf0e1bb43533568788c11939627f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetRaceServiceNum</name></member>
      <member refid="class_race_server_1a7eaaaf0e1bb43533568788c11939627f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetRaceServiceNum</name></member>
      <member refid="class_race_server_1a8132622c0568a827ae4c490478b52cff" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetServerID</name></member>
      <member refid="class_race_server_1a8132622c0568a827ae4c490478b52cff" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetServerID</name></member>
      <member refid="class_race_server_1a2fb70d03c78c196a8d0a59c7a3a93277" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetServerModePackTime</name></member>
      <member refid="class_race_server_1a2fb70d03c78c196a8d0a59c7a3a93277" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetServerModePackTime</name></member>
      <member refid="class_race_server_1aae7e2004f6045cb4ad87e2809a853551" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetServerRunState</name></member>
      <member refid="class_race_server_1aae7e2004f6045cb4ad87e2809a853551" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetServerRunState</name></member>
      <member refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetServerTime</name></member>
      <member refid="class_race_server_1ad90122186fb9ec6a3e8946fe66dd227c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetServerTime</name></member>
      <member refid="class_race_server_1ad8a8ba8e58f5b47e50540ec529470fa2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetWCSConnectMap</name></member>
      <member refid="class_race_server_1ad8a8ba8e58f5b47e50540ec529470fa2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetWCSConnectMap</name></member>
      <member refid="class_race_server_1a63cbffba0462486cde6e03f6efeecf76" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetWCSView</name></member>
      <member refid="class_race_server_1a63cbffba0462486cde6e03f6efeecf76" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>GetWCSView</name></member>
      <member refid="class_race_server_1a66b1d68ffc570732242915bc09651c27" prot="public" virt="virtual"><scope>RaceServer</scope><name>Initialize</name></member>
      <member refid="class_race_server_1a66b1d68ffc570732242915bc09651c27" prot="public" virt="virtual"><scope>RaceServer</scope><name>Initialize</name></member>
      <member refid="class_race_server_1a6503e33ca41e829ab6338083b73f6af4" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>InitializeNet</name></member>
      <member refid="class_race_server_1a6503e33ca41e829ab6338083b73f6af4" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>InitializeNet</name></member>
      <member refid="class_race_server_1a7e66b0db1cc4963931ab50079fae9d09" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>InitializeNetEx</name></member>
      <member refid="class_race_server_1a7e66b0db1cc4963931ab50079fae9d09" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>InitializeNetEx</name></member>
      <member refid="class_race_server_1a0c77af41b0b3b16bf8809597d30e123e" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>InitializeRaceService</name></member>
      <member refid="class_race_server_1a0c77af41b0b3b16bf8809597d30e123e" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>InitializeRaceService</name></member>
      <member refid="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>IsMSReady</name></member>
      <member refid="class_race_server_1af9823d6e00fa4ac6edb84407c1f1812d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>IsMSReady</name></member>
      <member refid="class_race_server_1a65a33b72bda3aa9083d8c91e6879501c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>IsTestRobotMode</name></member>
      <member refid="class_race_server_1a65a33b72bda3aa9083d8c91e6879501c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>IsTestRobotMode</name></member>
      <member refid="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>LoadConfig</name></member>
      <member refid="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>LoadConfig</name></member>
      <member refid="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>LoadRSTempConfig</name></member>
      <member refid="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>LoadRSTempConfig</name></member>
      <member refid="class_race_server_1a349aa3fdb8f1f7fa099a2e3c2be9c63f" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_acPraseBuf</name></member>
      <member refid="class_race_server_1a18f81a0417307628e9183e05b5e79112" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_acSend</name></member>
      <member refid="class_race_server_1a18f7983c50d14a59b70cca1f104ccebc" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_akThreadTime</name></member>
      <member refid="class_race_server_1a3a3bff84b94f764521c4d23de3bbebc7" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_bMSReady</name></member>
      <member refid="class_race_server_1a663294f208e707ec7424bf2cb8aa7c2f" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_dwCurTime</name></member>
      <member refid="class_race_server_1a157a410e9c3094696baa76bfcc6ecb41" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_dwFreqTime</name></member>
      <member refid="class_race_server_1a8888a83de6cd0573002e1b346b1889ee" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_dwTickCount</name></member>
      <member refid="class_race_server_1a63863da92e46f041b8505cd3755ad32a" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_iRaceServiceNum</name></member>
      <member refid="class_race_server_1af734c61940c3f436a681ab8726d54ce7" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_iRegisterCount</name></member>
      <member refid="class_race_server_1a52e5e5c638506c53e51dcdad1636b7be" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_iRobotRaceNum</name></member>
      <member refid="class_race_server_1a040a147adb097cc9e71923519017ef4b" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kAllConnect</name></member>
      <member refid="class_race_server_1a9856df8da92a68f3b76cdcc99477ebff" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kConfig</name></member>
      <member refid="class_race_server_1acb2e5f04d146a35cad9f9d8d058393d1" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kMSData</name></member>
      <member refid="class_race_server_1ab8536e831e55349ae151f0d07d2466fd" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kNetMgr</name></member>
      <member refid="class_race_server_1a2153b24b298ed79b71ebf9f45d832540" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kRandNum</name></member>
      <member refid="class_race_server_1adb8735c836a598c39f601078fe100240" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kThreadMsgMgr</name></member>
      <member refid="class_race_server_1a22d66e8d3bc8623b853bf9e6cc58058b" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kUdpMgr</name></member>
      <member refid="class_race_server_1adeb19bd97b6c95a9601128046d4597ae" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kWaitRobot</name></member>
      <member refid="class_race_server_1a4f4c0a3aa486d64460330802db1e287e" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_kWCSConnect</name></member>
      <member refid="class_race_server_1ad05c3786c53feb3ab6356db773445310" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_pakRaceService</name></member>
      <member refid="class_race_server_1a2b315093a42944ffd320f0d03cde512d" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_pkNSConn</name></member>
      <member refid="class_race_server_1a2080e7e14eec53f1995f75fed071e72f" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_pkSaveRecordThread</name></member>
      <member refid="class_race_server_1ab2116b7bb9262afe46aa62f342a600b0" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_pkWSConn</name></member>
      <member refid="class_race_server_1aa7eff4248424ec791546a7d1d9209ea2" prot="private" virt="non-virtual"><scope>RaceServer</scope><name>m_vWCSView</name></member>
      <member refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetAccept</name></member>
      <member refid="class_race_server_1a362235fe90e17b235c13d365f901a680" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetAccept</name></member>
      <member refid="class_race_server_1a1cfd0d7b06dc6972eddd99e414101ac8" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetConnected</name></member>
      <member refid="class_race_server_1ae7b1bbdc615c7b4ab523da39a6f9f98a" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetConnected</name></member>
      <member refid="class_race_server_1ae340f2c6d93ebee26b390132906d961d" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetDisconnect</name></member>
      <member refid="class_race_server_1a0113f1ad11d7c9522a643f2c880f088d" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetDisconnect</name></member>
      <member refid="class_race_server_1a55117a86da427b396cd756bbe483fd52" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetRecv</name></member>
      <member refid="class_race_server_1a28ca0596722e63537317d2a3fc7a49f9" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetRecv</name></member>
      <member refid="class_race_server_1a915457d69cfd32d5db80be534beeeec2" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetUdpAccept</name></member>
      <member refid="class_race_server_1a021e1ada4184d813cef27ae078cab511" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetUdpAccept</name></member>
      <member refid="class_race_server_1af108d3fdc437f3f84b1fbb5f39b059b5" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetUdpDisconnect</name></member>
      <member refid="class_race_server_1a54afe3d1abd313e524f84254e27963c6" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetUdpDisconnect</name></member>
      <member refid="class_race_server_1a72aff476ef33f2168f6f60651a59cb0e" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetUdpRecv</name></member>
      <member refid="class_race_server_1a8d8dedb81c2a26495631d945cc2ae8a6" prot="public" virt="virtual"><scope>RaceServer</scope><name>OnNetUdpRecv</name></member>
      <member refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>OnPlayerConnected</name></member>
      <member refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>OnPlayerConnected</name></member>
      <member refid="class_race_server_1a5d709a99a45f4cabf057a7c49fa22e0b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>OnPlayerDisconnect</name></member>
      <member refid="class_race_server_1a5d709a99a45f4cabf057a7c49fa22e0b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>OnPlayerDisconnect</name></member>
      <member refid="class_race_server_1abba46baa0ac501923d0667fb3495c9c8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>OnSendMatchRoomLoadInfo</name></member>
      <member refid="class_race_server_1abba46baa0ac501923d0667fb3495c9c8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>OnSendMatchRoomLoadInfo</name></member>
      <member refid="class_race_server_1aef64bcc5362e7c3595c5dd2706c58426" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>OnSendPlayerRaceStream</name></member>
      <member refid="class_race_server_1aef64bcc5362e7c3595c5dd2706c58426" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>OnSendPlayerRaceStream</name></member>
      <member refid="class_race_server_1a5d5e0df8480369231da14cca6e9e20d2" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>OnWCSDisconnect</name></member>
      <member refid="class_race_server_1a5d5e0df8480369231da14cca6e9e20d2" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>OnWCSDisconnect</name></member>
      <member refid="class_race_server_1abaae55bfd825a7258fca8d05c1d666c7" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>ParseSetupVal</name></member>
      <member refid="class_race_server_1abaae55bfd825a7258fca8d05c1d666c7" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>ParseSetupVal</name></member>
      <member refid="class_race_server_1a4761d9e9b80802fec6b7bec5bfe26620" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessBLR</name></member>
      <member refid="class_race_server_1a4761d9e9b80802fec6b7bec5bfe26620" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessBLR</name></member>
      <member refid="class_race_server_1a89919e980ba49b4d4fedfd9732938040" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessCR</name></member>
      <member refid="class_race_server_1a89919e980ba49b4d4fedfd9732938040" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessCR</name></member>
      <member refid="class_race_server_1a72f7359b8a6c43741fa85a96e796fef8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessMR</name></member>
      <member refid="class_race_server_1a72f7359b8a6c43741fa85a96e796fef8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessMR</name></member>
      <member refid="class_race_server_1a1c42ac7e0125281dc862361d60ba27b4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessNR</name></member>
      <member refid="class_race_server_1a1c42ac7e0125281dc862361d60ba27b4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessNR</name></member>
      <member refid="class_race_server_1a0f7643a555f12c0dae3ad4b215100ed8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessWCSR</name></member>
      <member refid="class_race_server_1a0f7643a555f12c0dae3ad4b215100ed8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessWCSR</name></member>
      <member refid="class_race_server_1a2f596ad8edeb2676a18fa9d820bc7dd5" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessWR</name></member>
      <member refid="class_race_server_1a2f596ad8edeb2676a18fa9d820bc7dd5" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PreProcessWR</name></member>
      <member refid="class_race_server_1a624351ac9226d75b6f48ac74db48640b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessBLR_SelectHeroAck</name></member>
      <member refid="class_race_server_1a624351ac9226d75b6f48ac74db48640b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessBLR_SelectHeroAck</name></member>
      <member refid="class_race_server_1a45cac7826a45bb10e88cbcbc97e13000" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessBLRData</name></member>
      <member refid="class_race_server_1a45cac7826a45bb10e88cbcbc97e13000" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessBLRData</name></member>
      <member refid="class_race_server_1a0851d9bb71f9ae9f22030946ffc22f98" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_BuyRaceItem</name></member>
      <member refid="class_race_server_1a0851d9bb71f9ae9f22030946ffc22f98" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_BuyRaceItem</name></member>
      <member refid="class_race_server_1a123a889949008fc47902325dc28cbcb4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_GetHeroInfo</name></member>
      <member refid="class_race_server_1a123a889949008fc47902325dc28cbcb4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_GetHeroInfo</name></member>
      <member refid="class_race_server_1a89a32c300069bdd16c765f680752ab97" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_HeartPackage</name></member>
      <member refid="class_race_server_1a89a32c300069bdd16c765f680752ab97" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_HeartPackage</name></member>
      <member refid="class_race_server_1ad4d3f26f7c58299a8bb30a7917e87f07" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_Ping</name></member>
      <member refid="class_race_server_1ad4d3f26f7c58299a8bb30a7917e87f07" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_Ping</name></member>
      <member refid="class_race_server_1a1caa9d28ffc0e53c0fd9b80308db965d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceCmd</name></member>
      <member refid="class_race_server_1a1caa9d28ffc0e53c0fd9b80308db965d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceCmd</name></member>
      <member refid="class_race_server_1aa1cad298a8d7773611808fd9cd6d66fa" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceEndGuanqia</name></member>
      <member refid="class_race_server_1aa1cad298a8d7773611808fd9cd6d66fa" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceEndGuanqia</name></member>
      <member refid="class_race_server_1adca9684a6852b7761749ae97cad2eab9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceEndRace</name></member>
      <member refid="class_race_server_1adca9684a6852b7761749ae97cad2eab9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceEndRace</name></member>
      <member refid="class_race_server_1abfebb008f1c1458d88b318390ec11382" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceLeave</name></member>
      <member refid="class_race_server_1abfebb008f1c1458d88b318390ec11382" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceLeave</name></member>
      <member refid="class_race_server_1a31f56e2b018c43ae14c8bf73644b2520" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceLoadEnd</name></member>
      <member refid="class_race_server_1a31f56e2b018c43ae14c8bf73644b2520" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceLoadEnd</name></member>
      <member refid="class_race_server_1aa1922fca73e33a548d0303d2e41f08f6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceReportSyn</name></member>
      <member refid="class_race_server_1aa1922fca73e33a548d0303d2e41f08f6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceReportSyn</name></member>
      <member refid="class_race_server_1a0327ec22cd90fde20725c9c6f1242551" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceRobotLogin</name></member>
      <member refid="class_race_server_1a0327ec22cd90fde20725c9c6f1242551" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceRobotLogin</name></member>
      <member refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceValidate</name></member>
      <member refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_RaceValidate</name></member>
      <member refid="class_race_server_1a043b70937574d7f5e24c1d8b7a82e95b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_ReplayReport</name></member>
      <member refid="class_race_server_1a043b70937574d7f5e24c1d8b7a82e95b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_ReplayReport</name></member>
      <member refid="class_race_server_1a7633530b1b7fa0b761351376da10e885" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SelHeroCancelHero</name></member>
      <member refid="class_race_server_1a7633530b1b7fa0b761351376da10e885" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SelHeroCancelHero</name></member>
      <member refid="class_race_server_1aea34d836902daf4b3cda8a714e3257d2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SelHeroChoiceHero</name></member>
      <member refid="class_race_server_1aea34d836902daf4b3cda8a714e3257d2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SelHeroChoiceHero</name></member>
      <member refid="class_race_server_1a4463c8682eb3a8ab7d7377daa315dc29" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SelHeroPrapared</name></member>
      <member refid="class_race_server_1a4463c8682eb3a8ab7d7377daa315dc29" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SelHeroPrapared</name></member>
      <member refid="class_race_server_1a5eb54db8dd16183d4e12fafd2925f815" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SetAvatarReq</name></member>
      <member refid="class_race_server_1a5eb54db8dd16183d4e12fafd2925f815" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SetAvatarReq</name></member>
      <member refid="class_race_server_1afacefe00ea688058623e130755f5922b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SetEquipSetReq</name></member>
      <member refid="class_race_server_1afacefe00ea688058623e130755f5922b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_SetEquipSetReq</name></member>
      <member refid="class_race_server_1a8f6bb836b9c7ef2a69ec4bb0131be4e5" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_Talk</name></member>
      <member refid="class_race_server_1a8f6bb836b9c7ef2a69ec4bb0131be4e5" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCR_Talk</name></member>
      <member refid="class_race_server_1acd84e7d35f146e25c1c902dcf118832b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCRData</name></member>
      <member refid="class_race_server_1acd84e7d35f146e25c1c902dcf118832b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessCRData</name></member>
      <member refid="class_race_server_1a84bf84fd9809f77ef3c287a6f93e2826" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_HeartPackageRet</name></member>
      <member refid="class_race_server_1a84bf84fd9809f77ef3c287a6f93e2826" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_HeartPackageRet</name></member>
      <member refid="class_race_server_1a96ee4e062d0fb584e72fe9eade2fe409" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_PlayerModifyInfo</name></member>
      <member refid="class_race_server_1a96ee4e062d0fb584e72fe9eade2fe409" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_PlayerModifyInfo</name></member>
      <member refid="class_race_server_1a25bc7faf3af8acb8fcdccf1d5f1ba32d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_RaceBuyRet</name></member>
      <member refid="class_race_server_1a25bc7faf3af8acb8fcdccf1d5f1ba32d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_RaceBuyRet</name></member>
      <member refid="class_race_server_1ab50ac3ba721a70fa1a59637e29ab08fd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ReconPLayerName</name></member>
      <member refid="class_race_server_1ab50ac3ba721a70fa1a59637e29ab08fd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ReconPLayerName</name></member>
      <member refid="class_race_server_1aea2d68398cba87995d032933b2fd00d1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ReconQuery</name></member>
      <member refid="class_race_server_1aea2d68398cba87995d032933b2fd00d1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ReconQuery</name></member>
      <member refid="class_race_server_1ab40781b3f26bee9ecf2847769400b3b6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_RegisterRet</name></member>
      <member refid="class_race_server_1ab40781b3f26bee9ecf2847769400b3b6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_RegisterRet</name></member>
      <member refid="class_race_server_1a06dc9a6a093a86fdfa4f9506ffa07f3b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_UpdateMiscInfo</name></member>
      <member refid="class_race_server_1a06dc9a6a093a86fdfa4f9506ffa07f3b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_UpdateMiscInfo</name></member>
      <member refid="class_race_server_1a758f1e202feae4a51ec7bc594f00d3b6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ValidatePlayerInfo</name></member>
      <member refid="class_race_server_1a758f1e202feae4a51ec7bc594f00d3b6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ValidatePlayerInfo</name></member>
      <member refid="class_race_server_1a75c896e3c906802be4bbd2d615f782c8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ValidFailRet</name></member>
      <member refid="class_race_server_1a75c896e3c906802be4bbd2d615f782c8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ValidFailRet</name></member>
      <member refid="class_race_server_1a2a5c41dff4c427ed3563ac6b43aa1844" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ViewQuery</name></member>
      <member refid="class_race_server_1a2a5c41dff4c427ed3563ac6b43aa1844" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ViewQuery</name></member>
      <member refid="class_race_server_1a2dc1053a39f7555cd389f5097a05fcc7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ViewValidOKRet</name></member>
      <member refid="class_race_server_1a2dc1053a39f7555cd389f5097a05fcc7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMR_ViewValidOKRet</name></member>
      <member refid="class_race_server_1a011cf29ff6d4b802529b7fd4ee96e648" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMRData</name></member>
      <member refid="class_race_server_1a011cf29ff6d4b802529b7fd4ee96e648" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessMRData</name></member>
      <member refid="class_race_server_1a9338f35af549c8eef2669b09db745c5a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessNR_HeartPackageRet</name></member>
      <member refid="class_race_server_1a9338f35af549c8eef2669b09db745c5a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessNR_HeartPackageRet</name></member>
      <member refid="class_race_server_1a3e8c21430941f2620c53c25ac804245a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessNR_RegisterRet</name></member>
      <member refid="class_race_server_1a3e8c21430941f2620c53c25ac804245a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessNR_RegisterRet</name></member>
      <member refid="class_race_server_1af1aaa9dca040f647d3690a6df76c833c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessNRData</name></member>
      <member refid="class_race_server_1af1aaa9dca040f647d3690a6df76c833c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessNRData</name></member>
      <member refid="class_race_server_1a03ea6ac8033cf82bf82703908fe4d077" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_AchievementCounts</name></member>
      <member refid="class_race_server_1a03ea6ac8033cf82bf82703908fe4d077" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_AchievementCounts</name></member>
      <member refid="class_race_server_1a186ca2b41a006c050b4605d240ac7d63" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_Command</name></member>
      <member refid="class_race_server_1a186ca2b41a006c050b4605d240ac7d63" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_Command</name></member>
      <member refid="class_race_server_1a2e75561c85233b6b797bc77cfb9227d9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_GetAchievement</name></member>
      <member refid="class_race_server_1a2e75561c85233b6b797bc77cfb9227d9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_GetAchievement</name></member>
      <member refid="class_race_server_1a3c978cbb7e12533817366183521cb165" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceEnd</name></member>
      <member refid="class_race_server_1a3c978cbb7e12533817366183521cb165" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceEnd</name></member>
      <member refid="class_race_server_1a2d1fa502eecb4466ecd56abd99bea627" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceError</name></member>
      <member refid="class_race_server_1a2d1fa502eecb4466ecd56abd99bea627" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceError</name></member>
      <member refid="class_race_server_1adf678207cf1dafe7d73f45b209563bec" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceInitFail</name></member>
      <member refid="class_race_server_1adf678207cf1dafe7d73f45b209563bec" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceInitFail</name></member>
      <member refid="class_race_server_1ac95b66243cc90be4f6816eed00f54e97" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceOpr</name></member>
      <member refid="class_race_server_1ac95b66243cc90be4f6816eed00f54e97" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceOpr</name></member>
      <member refid="class_race_server_1a402839c04bff1088bbf629dea278a744" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceStream</name></member>
      <member refid="class_race_server_1a402839c04bff1088bbf629dea278a744" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceStream</name></member>
      <member refid="class_race_server_1a05bf858e2c948c6658f32aacd8decec4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceSvrModelPack</name></member>
      <member refid="class_race_server_1a05bf858e2c948c6658f32aacd8decec4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_RaceSvrModelPack</name></member>
      <member refid="class_race_server_1ab3d920d30fb6d3c8e76148fc2b1bef0a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_ThreadOverTime</name></member>
      <member refid="class_race_server_1ab3d920d30fb6d3c8e76148fc2b1bef0a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRC_ThreadOverTime</name></member>
      <member refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRCR</name></member>
      <member refid="class_race_server_1a1eacc5497059e757745235d24ad2d74a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessRCR</name></member>
      <member refid="class_race_server_1ae007667edd47596a9b7c46fe15036fbc" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWCSR_HeartPackage</name></member>
      <member refid="class_race_server_1ae007667edd47596a9b7c46fe15036fbc" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWCSR_HeartPackage</name></member>
      <member refid="class_race_server_1ac9bcdeb502380af98bff7c7234e0aff6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWCSR_Register</name></member>
      <member refid="class_race_server_1ac9bcdeb502380af98bff7c7234e0aff6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWCSR_Register</name></member>
      <member refid="class_race_server_1a06e59df570fa80d88ccba647d071346b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWCSRData</name></member>
      <member refid="class_race_server_1a06e59df570fa80d88ccba647d071346b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWCSRData</name></member>
      <member refid="class_race_server_1a5c2ba1dd8cad200d76079ab854202714" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWR_HeartPackageRet</name></member>
      <member refid="class_race_server_1a5c2ba1dd8cad200d76079ab854202714" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWR_HeartPackageRet</name></member>
      <member refid="class_race_server_1a6bb96643b45811c92173759fc5ed6a6a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWR_RegisterRet</name></member>
      <member refid="class_race_server_1a6bb96643b45811c92173759fc5ed6a6a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWR_RegisterRet</name></member>
      <member refid="class_race_server_1ad838f776e2962783429f71a20130cbd1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWRData</name></member>
      <member refid="class_race_server_1ad838f776e2962783429f71a20130cbd1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ProcessWRData</name></member>
      <member refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRaceServiceMsg</name></member>
      <member refid="class_race_server_1ae91d04a5ecfd06ba89942fa6db449910" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRaceServiceMsg</name></member>
      <member refid="class_race_server_1a8c8c5a379f9e7f8df13cd6f53c0332d1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_GetHeroInfo</name></member>
      <member refid="class_race_server_1a8c8c5a379f9e7f8df13cd6f53c0332d1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_GetHeroInfo</name></member>
      <member refid="class_race_server_1af4d35f6be720d325cb342a86eb95528e" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_PlayerLeave</name></member>
      <member refid="class_race_server_1af4d35f6be720d325cb342a86eb95528e" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_PlayerLeave</name></member>
      <member refid="class_race_server_1a49d352bbd64d7977710ee15bafe10d1c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_PlayerRelink</name></member>
      <member refid="class_race_server_1a49d352bbd64d7977710ee15bafe10d1c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_PlayerRelink</name></member>
      <member refid="class_race_server_1aa311514fab61f8576dc494e4339b65ce" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_RaceInit</name></member>
      <member refid="class_race_server_1aa311514fab61f8576dc494e4339b65ce" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_RaceInit</name></member>
      <member refid="class_race_server_1a8150e6a22c41574411aa12f59298c3f7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_RaceOver</name></member>
      <member refid="class_race_server_1a8150e6a22c41574411aa12f59298c3f7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_RaceOver</name></member>
      <member refid="class_race_server_1a8d774c423cdc2c2ad62bfdafacb82f46" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_RaceStart</name></member>
      <member refid="class_race_server_1a8d774c423cdc2c2ad62bfdafacb82f46" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_RaceStart</name></member>
      <member refid="class_race_server_1a8a5747b16a377f090cce5caf582fee8c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_RaceStream</name></member>
      <member refid="class_race_server_1a8a5747b16a377f090cce5caf582fee8c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_RaceStream</name></member>
      <member refid="class_race_server_1a39606329049eb1147391402989a76ee7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_SetRaceIncmpState</name></member>
      <member refid="class_race_server_1a39606329049eb1147391402989a76ee7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSC_SetRaceIncmpState</name></member>
      <member refid="class_race_server_1a51639bd7785f6dd43a8f31bc2256dc46" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSMsg</name></member>
      <member refid="class_race_server_1a51639bd7785f6dd43a8f31bc2256dc46" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>PushRSMsg</name></member>
      <member refid="class_race_server_1af7633fe0658191bed28add297940f8eb" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceLinkUserSync</name></member>
      <member refid="class_race_server_1af7633fe0658191bed28add297940f8eb" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceLinkUserSync</name></member>
      <member refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceServer</name></member>
      <member refid="class_race_server_1a5e89721751c2e1928e0d1096b8476f1b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceServer</name></member>
      <member refid="class_race_server_1acfd8886b9d300d53a533746a67b750e8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceThreadFinialize</name></member>
      <member refid="class_race_server_1acfd8886b9d300d53a533746a67b750e8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceThreadFinialize</name></member>
      <member refid="class_race_server_1a2303f7152794a0be3a6c6639b7373dba" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceThreadInitialize</name></member>
      <member refid="class_race_server_1a2303f7152794a0be3a6c6639b7373dba" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceThreadInitialize</name></member>
      <member refid="class_race_server_1ae92da288f2c535c4c897c82381e205cd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceThreadUpdate</name></member>
      <member refid="class_race_server_1ae92da288f2c535c4c897c82381e205cd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RaceThreadUpdate</name></member>
      <member refid="class_race_server_1ada98d505789737be58f73923400943b3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RandInt</name></member>
      <member refid="class_race_server_1ada98d505789737be58f73923400943b3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>RandInt</name></member>
      <member refid="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>RegisterToMS</name></member>
      <member refid="class_race_server_1aba60f648bd0f65d48c9426a8642823cc" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>RegisterToMS</name></member>
      <member refid="class_race_server_1afd28fa51db9bbe338d72e8998ecb9dd8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ReLoadConfig</name></member>
      <member refid="class_race_server_1afd28fa51db9bbe338d72e8998ecb9dd8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ReLoadConfig</name></member>
      <member refid="class_race_server_1ad98e4b64bed4e582131dd353ae56f74e" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ReLoadServerAddr</name></member>
      <member refid="class_race_server_1ad98e4b64bed4e582131dd353ae56f74e" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>ReLoadServerAddr</name></member>
      <member refid="class_race_server_1a09463facb5a9bebcc97f7d4b2c0945d2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SaveRecord</name></member>
      <member refid="class_race_server_1a09463facb5a9bebcc97f7d4b2c0945d2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SaveRecord</name></member>
      <member refid="class_se_base_server_1a88b0de020f966c810134d45a9d8ca074" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SeBaseServer</name></member>
      <member refid="class_race_server_1a9486f43f73deddb3a0ad359e729766b5" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendPlayer_ReconNoticePlayerJoin</name></member>
      <member refid="class_race_server_1a9486f43f73deddb3a0ad359e729766b5" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendPlayer_ReconNoticePlayerJoin</name></member>
      <member refid="class_race_server_1a4e9698d704067d48044dd23381b0ac4c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_AwardItemNtf</name></member>
      <member refid="class_race_server_1a32a154a06ab7443e518a87ae55191bd3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_AwardItemNtf</name></member>
      <member refid="class_race_server_1a4e9698d704067d48044dd23381b0ac4c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_AwardItemNtf</name></member>
      <member refid="class_race_server_1a32a154a06ab7443e518a87ae55191bd3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_AwardItemNtf</name></member>
      <member refid="class_race_server_1a9f13723e990d723eb68be4271f1dd131" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_DecRespawnItemNtf</name></member>
      <member refid="class_race_server_1a9f13723e990d723eb68be4271f1dd131" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_DecRespawnItemNtf</name></member>
      <member refid="class_race_server_1aeaf56c13251278f91eec8bebac1fd413" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_RaceEndArenaBaseInfoSync</name></member>
      <member refid="class_race_server_1aeaf56c13251278f91eec8bebac1fd413" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_RaceEndArenaBaseInfoSync</name></member>
      <member refid="class_race_server_1a0a4431e66fa155e9a51c770f2b4fe0ce" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_SelectHeroReq</name></member>
      <member refid="class_race_server_1a0a4431e66fa155e9a51c770f2b4fe0ce" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_SelectHeroReq</name></member>
      <member refid="class_race_server_1a3d67284e8562058c54cd0cc7504c5ea3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_SetAvatarNtf</name></member>
      <member refid="class_race_server_1a3d67284e8562058c54cd0cc7504c5ea3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_SetAvatarNtf</name></member>
      <member refid="class_race_server_1acdf817ed9d5ad15bb4fabf3e03fe6800" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_SetEquipSetNtf</name></member>
      <member refid="class_race_server_1acdf817ed9d5ad15bb4fabf3e03fe6800" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_SetEquipSetNtf</name></member>
      <member refid="class_race_server_1a2af73fffd68913814b2e4a9a051dcaaa" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_SetRaceMapHeroNtf</name></member>
      <member refid="class_race_server_1a2af73fffd68913814b2e4a9a051dcaaa" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_SetRaceMapHeroNtf</name></member>
      <member refid="class_race_server_1a166c51a0d94ecdb181df9179417f19cd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_UpdateScore</name></member>
      <member refid="class_race_server_1a166c51a0d94ecdb181df9179417f19cd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_UpdateScore</name></member>
      <member refid="class_race_server_1a0c4099a22261da4713d38f23056fc6d9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_UserRaceMapNtf</name></member>
      <member refid="class_race_server_1a0c4099a22261da4713d38f23056fc6d9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBL_UserRaceMapNtf</name></member>
      <member refid="class_race_server_1a4b58bfa7d6edcbc15aecbf815f082a43" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBLData</name></member>
      <member refid="class_race_server_1a4b58bfa7d6edcbc15aecbf815f082a43" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRBLData</name></member>
      <member refid="class_race_server_1a2585d732235061e2dbf7bd4d30111746" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_BeginSelectHero</name></member>
      <member refid="class_race_server_1a2585d732235061e2dbf7bd4d30111746" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_BeginSelectHero</name></member>
      <member refid="class_race_server_1a32736c15ec790dcfcd7abfd44a2a64b9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_EncryptKey</name></member>
      <member refid="class_race_server_1a32736c15ec790dcfcd7abfd44a2a64b9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_EncryptKey</name></member>
      <member refid="class_race_server_1a2f5f1ed1e48ce157703f9a2bc41ac2b9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_GetHeroInfoRet</name></member>
      <member refid="class_race_server_1af9f364672ed6d21a1b87c4b007cbac43" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_GetHeroInfoRet</name></member>
      <member refid="class_race_server_1a2f5f1ed1e48ce157703f9a2bc41ac2b9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_GetHeroInfoRet</name></member>
      <member refid="class_race_server_1af9f364672ed6d21a1b87c4b007cbac43" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_GetHeroInfoRet</name></member>
      <member refid="class_race_server_1a63dd563aff508c15caf878cfafd5069f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_HeartBeat</name></member>
      <member refid="class_race_server_1a63dd563aff508c15caf878cfafd5069f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_HeartBeat</name></member>
      <member refid="class_race_server_1a62b1078c2e0ce17af3ca58120209d824" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_PingRet</name></member>
      <member refid="class_race_server_1a62b1078c2e0ce17af3ca58120209d824" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_PingRet</name></member>
      <member refid="class_race_server_1aa8387be820644e859ee9567cd243b543" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RaceEndNotifyDown</name></member>
      <member refid="class_race_server_1aa8387be820644e859ee9567cd243b543" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RaceEndNotifyDown</name></member>
      <member refid="class_race_server_1aaa30262929dad0f59613813238630487" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RaceGoldExpPlus</name></member>
      <member refid="class_race_server_1aaa30262929dad0f59613813238630487" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RaceGoldExpPlus</name></member>
      <member refid="class_race_server_1a251a613438a14c869541c24f001d462c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RacePack</name></member>
      <member refid="class_race_server_1aaec6b68465c032fcd00cf579f0c95c43" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RacePack</name></member>
      <member refid="class_race_server_1a251a613438a14c869541c24f001d462c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RacePack</name></member>
      <member refid="class_race_server_1aaec6b68465c032fcd00cf579f0c95c43" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RacePack</name></member>
      <member refid="class_race_server_1a07c6c3625de04840147b859f62a6b7e2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RacePlayerLoadEnd</name></member>
      <member refid="class_race_server_1a07c6c3625de04840147b859f62a6b7e2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RacePlayerLoadEnd</name></member>
      <member refid="class_race_server_1ae04d43348017e6e0809c8cbcb123e87f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RaceStream</name></member>
      <member refid="class_race_server_1af5eb22c37e787f629ad07224b82cca6d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RaceStream</name></member>
      <member refid="class_race_server_1ae04d43348017e6e0809c8cbcb123e87f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RaceStream</name></member>
      <member refid="class_race_server_1af5eb22c37e787f629ad07224b82cca6d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RaceStream</name></member>
      <member refid="class_race_server_1aa23188daa6e22b83a71aadddf6e69507" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ReconPack</name></member>
      <member refid="class_race_server_1a3b57f1f3c54ceaa2a0b263d15ce9affd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ReconPack</name></member>
      <member refid="class_race_server_1aa23188daa6e22b83a71aadddf6e69507" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ReconPack</name></member>
      <member refid="class_race_server_1a3b57f1f3c54ceaa2a0b263d15ce9affd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ReconPack</name></member>
      <member refid="class_race_server_1aff0cfbedb88874c01364417020a0f9d7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ReconResult</name></member>
      <member refid="class_race_server_1aff0cfbedb88874c01364417020a0f9d7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ReconResult</name></member>
      <member refid="class_race_server_1a355725b3308c189b219bd69741f413cc" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RoomPlayerBaseInfo</name></member>
      <member refid="class_race_server_1acdb7aad182efb1062c4227a2aa1927f1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RoomPlayerBaseInfo</name></member>
      <member refid="class_race_server_1a355725b3308c189b219bd69741f413cc" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RoomPlayerBaseInfo</name></member>
      <member refid="class_race_server_1acdb7aad182efb1062c4227a2aa1927f1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_RoomPlayerBaseInfo</name></member>
      <member refid="class_race_server_1a740261b42e94e049f935f9f218f471e7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SeatScoreNtf</name></member>
      <member refid="class_race_server_1a6631522a08041596317abe2910e8f2e8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SeatScoreNtf</name></member>
      <member refid="class_race_server_1a740261b42e94e049f935f9f218f471e7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SeatScoreNtf</name></member>
      <member refid="class_race_server_1a6631522a08041596317abe2910e8f2e8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SeatScoreNtf</name></member>
      <member refid="class_race_server_1a36bf21dcabbb812cc025810ca904b9f9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHeroList</name></member>
      <member refid="class_race_server_1a1a65f7cdce369addbd0a4e9a755cc782" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHeroList</name></member>
      <member refid="class_race_server_1a36bf21dcabbb812cc025810ca904b9f9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHeroList</name></member>
      <member refid="class_race_server_1a1a65f7cdce369addbd0a4e9a755cc782" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHeroList</name></member>
      <member refid="class_race_server_1af11bc98330467a2375671c987cc7d631" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHeroMessage</name></member>
      <member refid="class_race_server_1af11bc98330467a2375671c987cc7d631" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHeroMessage</name></member>
      <member refid="class_race_server_1a793ad5922a415b247ffcd8596859264d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHorseList</name></member>
      <member refid="class_race_server_1ac4584f0203e97264c186e445f181a603" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHorseList</name></member>
      <member refid="class_race_server_1a793ad5922a415b247ffcd8596859264d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHorseList</name></member>
      <member refid="class_race_server_1ac4584f0203e97264c186e445f181a603" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelHorseList</name></member>
      <member refid="class_race_server_1af338b8cccda7170236ba26692c81749f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelPetList</name></member>
      <member refid="class_race_server_1a8dd22f391fafac6375251c721255e114" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelPetList</name></member>
      <member refid="class_race_server_1af338b8cccda7170236ba26692c81749f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelPetList</name></member>
      <member refid="class_race_server_1a8dd22f391fafac6375251c721255e114" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SelPetList</name></member>
      <member refid="class_race_server_1a1584f8fba3994c3547100c5af741eec0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SetAvatarAck</name></member>
      <member refid="class_race_server_1a1584f8fba3994c3547100c5af741eec0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SetAvatarAck</name></member>
      <member refid="class_race_server_1af09262c79ab448b1478854997ba76390" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SetEquipSetAck</name></member>
      <member refid="class_race_server_1af09262c79ab448b1478854997ba76390" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_SetEquipSetAck</name></member>
      <member refid="class_race_server_1ab594c9f07d76b41ae58c8ed820dd6e4a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ShowNotice</name></member>
      <member refid="class_race_server_1a3729392cf9152652902bee9843011e89" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ShowNotice</name></member>
      <member refid="class_race_server_1ab594c9f07d76b41ae58c8ed820dd6e4a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ShowNotice</name></member>
      <member refid="class_race_server_1a3729392cf9152652902bee9843011e89" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ShowNotice</name></member>
      <member refid="class_race_server_1a6eaf23bf78ca73a853ab8be15ac023b6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_Talk</name></member>
      <member refid="class_race_server_1a6eaf23bf78ca73a853ab8be15ac023b6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_Talk</name></member>
      <member refid="class_race_server_1ad8d11728fba3a3077c8c62b21e55ea9c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ValidateRet</name></member>
      <member refid="class_race_server_1ad8d11728fba3a3077c8c62b21e55ea9c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ValidateRet</name></member>
      <member refid="class_race_server_1a623d9772ba61e232a4b93342211d428a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewPack</name></member>
      <member refid="class_race_server_1af04817ab3b4f7df9024dcdc2e0df3ea8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewPack</name></member>
      <member refid="class_race_server_1a623d9772ba61e232a4b93342211d428a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewPack</name></member>
      <member refid="class_race_server_1af04817ab3b4f7df9024dcdc2e0df3ea8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewPack</name></member>
      <member refid="class_race_server_1acc24c7451d6583c58dcf743eb97224e6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewPlayerInfo</name></member>
      <member refid="class_race_server_1a422b40c6dcca911b21e6535b7e886fe9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewPlayerInfo</name></member>
      <member refid="class_race_server_1acc24c7451d6583c58dcf743eb97224e6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewPlayerInfo</name></member>
      <member refid="class_race_server_1a422b40c6dcca911b21e6535b7e886fe9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewPlayerInfo</name></member>
      <member refid="class_race_server_1aca4f9fbf8677ac12aa9736f066a520c1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewResult</name></member>
      <member refid="class_race_server_1aca4f9fbf8677ac12aa9736f066a520c1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRC_ViewResult</name></member>
      <member refid="class_race_server_1a5d27bdd027268d10784e20f5a7507805" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRCData</name></member>
      <member refid="class_race_server_1a5d27bdd027268d10784e20f5a7507805" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRCData</name></member>
      <member refid="class_race_server_1a0f06eb120b9664d1bc4919682df62ce0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_AddIncompleteRace</name></member>
      <member refid="class_race_server_1a0f06eb120b9664d1bc4919682df62ce0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_AddIncompleteRace</name></member>
      <member refid="class_race_server_1ae4c02fce35d50665888d5e17958c83fb" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_CommRaceMsg</name></member>
      <member refid="class_race_server_1ae4c02fce35d50665888d5e17958c83fb" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_CommRaceMsg</name></member>
      <member refid="class_race_server_1a968ec4bd6adc4afb3b03b3f702ed5c7b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_HeartPackage</name></member>
      <member refid="class_race_server_1a968ec4bd6adc4afb3b03b3f702ed5c7b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_HeartPackage</name></member>
      <member refid="class_race_server_1a2ec6c2db0f8c73b9ce9ff7985d4e32f7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_MatchRaceLoad</name></member>
      <member refid="class_race_server_1a2ec6c2db0f8c73b9ce9ff7985d4e32f7" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_MatchRaceLoad</name></member>
      <member refid="class_race_server_1ad551e4872f5a31815152d030bf0b7aa2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_MatchRoomLoadInfo</name></member>
      <member refid="class_race_server_1a93ab495a2dd2adf310b5e62f0dfa1558" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_MatchRoomLoadInfo</name></member>
      <member refid="class_race_server_1ad551e4872f5a31815152d030bf0b7aa2" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_MatchRoomLoadInfo</name></member>
      <member refid="class_race_server_1a93ab495a2dd2adf310b5e62f0dfa1558" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_MatchRoomLoadInfo</name></member>
      <member refid="class_race_server_1aea2f7f66f5b8fb659a5c98e707047c49" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceBuy</name></member>
      <member refid="class_race_server_1aea2f7f66f5b8fb659a5c98e707047c49" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceBuy</name></member>
      <member refid="class_race_server_1a3779a8aa79363a8f52bf0fd9a670b4dd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceEndGuanqia</name></member>
      <member refid="class_race_server_1afbd8e6c3537b3feb8a865ad4b6cf30c3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceEndGuanqia</name></member>
      <member refid="class_race_server_1a3779a8aa79363a8f52bf0fd9a670b4dd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceEndGuanqia</name></member>
      <member refid="class_race_server_1afbd8e6c3537b3feb8a865ad4b6cf30c3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceEndGuanqia</name></member>
      <member refid="class_race_server_1a856181688047427169fc34e85888a7dd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceEndReport</name></member>
      <member refid="class_race_server_1a3b8624cfa66faa2d7b742c23927bbb32" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceEndReport</name></member>
      <member refid="class_race_server_1a856181688047427169fc34e85888a7dd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceEndReport</name></member>
      <member refid="class_race_server_1a3b8624cfa66faa2d7b742c23927bbb32" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceEndReport</name></member>
      <member refid="class_race_server_1aca0ab80078afb5ca2d69f809dacdbc97" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceGetCardInfo</name></member>
      <member refid="class_race_server_1aca0ab80078afb5ca2d69f809dacdbc97" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RaceGetCardInfo</name></member>
      <member refid="class_race_server_1af806e16dec8877195afbdfa07a0553e8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReconQueryFail</name></member>
      <member refid="class_race_server_1af806e16dec8877195afbdfa07a0553e8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReconQueryFail</name></member>
      <member refid="class_race_server_1ac1812200ef246163a0d065f80f2e75fe" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReconQuerySuccess</name></member>
      <member refid="class_race_server_1ac1812200ef246163a0d065f80f2e75fe" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReconQuerySuccess</name></member>
      <member refid="class_race_server_1a822c5067cdf25dcb1f94fa5b47f456e3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReconViewValid</name></member>
      <member refid="class_race_server_1a822c5067cdf25dcb1f94fa5b47f456e3" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReconViewValid</name></member>
      <member refid="class_race_server_1af0b257e59ee7711f97d4f528c80911b6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RefreshConfigInfo</name></member>
      <member refid="class_race_server_1af0b257e59ee7711f97d4f528c80911b6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RefreshConfigInfo</name></member>
      <member refid="class_race_server_1ac14c1d5d9ecd31308b15c01779e7114c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_Register</name></member>
      <member refid="class_race_server_1ac14c1d5d9ecd31308b15c01779e7114c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_Register</name></member>
      <member refid="class_race_server_1a76caa9d1c4894aae95495d0630a4ace5" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReLoadRoomInfoList</name></member>
      <member refid="class_race_server_1ade4cd702229ee51f69c6758988bbe96d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReLoadRoomInfoList</name></member>
      <member refid="class_race_server_1a76caa9d1c4894aae95495d0630a4ace5" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReLoadRoomInfoList</name></member>
      <member refid="class_race_server_1ade4cd702229ee51f69c6758988bbe96d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ReLoadRoomInfoList</name></member>
      <member refid="class_race_server_1a1b1a93f99924c649fa0cba53884be3d9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RemoveIncompleteRace</name></member>
      <member refid="class_race_server_1a1b1a93f99924c649fa0cba53884be3d9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_RemoveIncompleteRace</name></member>
      <member refid="class_race_server_1a091a0aa06d42120d81b6bd0328dd357c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ResIncmpRaceSeatBaseInfo</name></member>
      <member refid="class_race_server_1a8dd27f666e7b92029d1dce3cde8c41fd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ResIncmpRaceSeatBaseInfo</name></member>
      <member refid="class_race_server_1a091a0aa06d42120d81b6bd0328dd357c" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ResIncmpRaceSeatBaseInfo</name></member>
      <member refid="class_race_server_1a8dd27f666e7b92029d1dce3cde8c41fd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ResIncmpRaceSeatBaseInfo</name></member>
      <member refid="class_race_server_1a6fcd8a15bace1837ee890288e0bc7cd4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_UpdateIncompleteRace</name></member>
      <member refid="class_race_server_1a6fcd8a15bace1837ee890288e0bc7cd4" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_UpdateIncompleteRace</name></member>
      <member refid="class_race_server_1a25c8b9d20d5ad61cf81b4b23e1ce9669" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_UpdateMisc</name></member>
      <member refid="class_race_server_1a25c8b9d20d5ad61cf81b4b23e1ce9669" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_UpdateMisc</name></member>
      <member refid="class_race_server_1a02f69f7cdff4b7a63256d2f2f05da7ea" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ValidatePlayerInfoRet</name></member>
      <member refid="class_race_server_1a02f69f7cdff4b7a63256d2f2f05da7ea" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ValidatePlayerInfoRet</name></member>
      <member refid="class_race_server_1a40641fa80b4617b9438efd6128070f76" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ViewQueryFail</name></member>
      <member refid="class_race_server_1a40641fa80b4617b9438efd6128070f76" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ViewQueryFail</name></member>
      <member refid="class_race_server_1a034cc87f5200daf062a70c32e07e4abc" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ViewQuerySuccess</name></member>
      <member refid="class_race_server_1a034cc87f5200daf062a70c32e07e4abc" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRM_ViewQuerySuccess</name></member>
      <member refid="class_race_server_1ac3544c0db3d315a02e92be55310e23df" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRMData</name></member>
      <member refid="class_race_server_1ac3544c0db3d315a02e92be55310e23df" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRMData</name></member>
      <member refid="class_race_server_1acc62a21adc0dfbf5a525fbf934c215a1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRN_HeartPackage</name></member>
      <member refid="class_race_server_1acc62a21adc0dfbf5a525fbf934c215a1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRN_HeartPackage</name></member>
      <member refid="class_race_server_1a2da84374ff0e2fa135e38572085a7d2a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRN_RaceLinkUserSync</name></member>
      <member refid="class_race_server_1a2da84374ff0e2fa135e38572085a7d2a" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRN_RaceLinkUserSync</name></member>
      <member refid="class_race_server_1a6f7ca06ca648046238a73d4c1437846f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRN_Register</name></member>
      <member refid="class_race_server_1a6f7ca06ca648046238a73d4c1437846f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRN_Register</name></member>
      <member refid="class_race_server_1a45c90353d4656860e91362d9cf861ed6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRNData</name></member>
      <member refid="class_race_server_1a45c90353d4656860e91362d9cf861ed6" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRNData</name></member>
      <member refid="class_race_server_1a7c91cdf3ae830881527d46b137a02682" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRW_HeartPackage</name></member>
      <member refid="class_race_server_1a7c91cdf3ae830881527d46b137a02682" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRW_HeartPackage</name></member>
      <member refid="class_race_server_1af190cfcf2096389abb1e6fae140bf16b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRW_Register</name></member>
      <member refid="class_race_server_1af190cfcf2096389abb1e6fae140bf16b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRW_Register</name></member>
      <member refid="class_race_server_1a7b5e4389cd7ae38f82516ae1e5de6bfd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_HeartPackageRet</name></member>
      <member refid="class_race_server_1a7b5e4389cd7ae38f82516ae1e5de6bfd" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_HeartPackageRet</name></member>
      <member refid="class_race_server_1af86699f8253a90b21ea5ca3fcc863a9b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceDetailInfoSync</name></member>
      <member refid="class_race_server_1ac7b610a2b4958c9ae43fba61194aece9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceDetailInfoSync</name></member>
      <member refid="class_race_server_1af86699f8253a90b21ea5ca3fcc863a9b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceDetailInfoSync</name></member>
      <member refid="class_race_server_1ac7b610a2b4958c9ae43fba61194aece9" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceDetailInfoSync</name></member>
      <member refid="class_race_server_1a5e1590de4be31aba332d710d3e86d42f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceEnd</name></member>
      <member refid="class_race_server_1a6568577059a2739fa4f4665ef0be5710" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceEnd</name></member>
      <member refid="class_race_server_1a5e1590de4be31aba332d710d3e86d42f" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceEnd</name></member>
      <member refid="class_race_server_1a6568577059a2739fa4f4665ef0be5710" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceEnd</name></member>
      <member refid="class_race_server_1a5412567214116b44d3f187fb9d845fb0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceRecord</name></member>
      <member refid="class_race_server_1a0f2f370627a3740a68e37b136794baa1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceRecord</name></member>
      <member refid="class_race_server_1a5412567214116b44d3f187fb9d845fb0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceRecord</name></member>
      <member refid="class_race_server_1a0f2f370627a3740a68e37b136794baa1" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceRecord</name></member>
      <member refid="class_race_server_1a470b2de77c1bec3018e1ed90d64383a0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceStart</name></member>
      <member refid="class_race_server_1a7f3faf14b04e82f1b7e65bfc8e8085fb" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceStart</name></member>
      <member refid="class_race_server_1a470b2de77c1bec3018e1ed90d64383a0" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceStart</name></member>
      <member refid="class_race_server_1a7f3faf14b04e82f1b7e65bfc8e8085fb" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RaceStart</name></member>
      <member refid="class_race_server_1a842b002db5e307ef61acaf6b1045fb50" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RegisterRet</name></member>
      <member refid="class_race_server_1a842b002db5e307ef61acaf6b1045fb50" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCS_RegisterRet</name></member>
      <member refid="class_race_server_1aa9402144cbc9f4acd9bb537a96bc0ce8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCSData</name></member>
      <member refid="class_race_server_1aa9402144cbc9f4acd9bb537a96bc0ce8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWCSData</name></member>
      <member refid="class_race_server_1a6f197fd5a5d11ddb22deb4c8c8f21786" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWData</name></member>
      <member refid="class_race_server_1a6f197fd5a5d11ddb22deb4c8c8f21786" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SendRWData</name></member>
      <member refid="class_race_server_1a08814d99b1b3da887b982485a54a2f3d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SetDebugLevel</name></member>
      <member refid="class_race_server_1a08814d99b1b3da887b982485a54a2f3d" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>SetDebugLevel</name></member>
      <member refid="class_race_server_1ac49797d4eba032d969df83d1c76ddbea" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>SetMSReady</name></member>
      <member refid="class_race_server_1ac49797d4eba032d969df83d1c76ddbea" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>SetMSReady</name></member>
      <member refid="class_race_server_1a54cb7d1172fd8b14c335874dc954ebe6" prot="public" virt="virtual"><scope>RaceServer</scope><name>ShowConsoleTitle</name></member>
      <member refid="class_race_server_1a54cb7d1172fd8b14c335874dc954ebe6" prot="public" virt="virtual"><scope>RaceServer</scope><name>ShowConsoleTitle</name></member>
      <member refid="class_race_server_1a287dc3e17be22595f717278e9deaa532" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>StartRobotGame</name></member>
      <member refid="class_race_server_1a287dc3e17be22595f717278e9deaa532" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>StartRobotGame</name></member>
      <member refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" prot="public" virt="virtual"><scope>RaceServer</scope><name>Update</name></member>
      <member refid="class_race_server_1a648783dd4f150a1505c06ffd0c5a9d2a" prot="public" virt="virtual"><scope>RaceServer</scope><name>Update</name></member>
      <member refid="class_race_server_1a2a40385bfddbe46765ad5f1bd1e0f870" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateHeartPackage</name></member>
      <member refid="class_race_server_1a2a40385bfddbe46765ad5f1bd1e0f870" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateHeartPackage</name></member>
      <member refid="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateMSHeartPackage</name></member>
      <member refid="class_race_server_1a4ae8cfdfae7b883bc072d80472473846" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateMSHeartPackage</name></member>
      <member refid="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateMSState</name></member>
      <member refid="class_race_server_1a2e7ad3d074e03d243daf6fd55b3c4b44" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateMSState</name></member>
      <member refid="class_race_server_1aa09b74ef284ae258769b65ed2ecc07e3" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateRSConfig</name></member>
      <member refid="class_race_server_1aa09b74ef284ae258769b65ed2ecc07e3" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateRSConfig</name></member>
      <member refid="class_race_server_1a1d04e77d743cd19eb6ac6b20f09bc855" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateRSMsg</name></member>
      <member refid="class_race_server_1a1d04e77d743cd19eb6ac6b20f09bc855" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateRSMsg</name></member>
      <member refid="class_race_server_1a3692dac1f1a18f397de386f4f7a98684" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateSaveThreadUpdateTime</name></member>
      <member refid="class_race_server_1a3692dac1f1a18f397de386f4f7a98684" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>UpdateSaveThreadUpdateTime</name></member>
      <member refid="class_race_server_1a3aef2a30ec9b8184aaeb6b3edb1237f8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>UpdateWaitRobot</name></member>
      <member refid="class_race_server_1a3aef2a30ec9b8184aaeb6b3edb1237f8" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>UpdateWaitRobot</name></member>
      <member refid="class_race_server_1a6993deeef7a6287b2f968edda5bf0405" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>WriteToLogFile</name></member>
      <member refid="class_race_server_1a6993deeef7a6287b2f968edda5bf0405" prot="protected" virt="non-virtual"><scope>RaceServer</scope><name>WriteToLogFile</name></member>
      <member refid="class_race_server_1ae4fc1e3b7856572c43c1160c9a6f8a3b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>~RaceServer</name></member>
      <member refid="class_race_server_1ae4fc1e3b7856572c43c1160c9a6f8a3b" prot="public" virt="non-virtual"><scope>RaceServer</scope><name>~RaceServer</name></member>
      <member refid="class_se_base_server_1a6db805870a32d2966e41923b2815a8db" prot="public" virt="virtual"><scope>RaceServer</scope><name>~SeBaseServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
