<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_performance_timing_1_1_c_interval_scope" kind="class" prot="public">
    <compoundname>PerformanceTiming::CIntervalScope</compoundname>
    <includes refid="src_2_performance_timing_8h" local="no">PerformanceTiming.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_performance_timing_1_1_c_interval_scope_1acdc118d66d6646c77bb87b1ab069d2c8" prot="private" static="no" mutable="no">
        <type><ref refid="class_performance_timing_1_1_c_interval" kindref="compound">CInterval</ref> *</type>
        <definition>CInterval * CIntervalScope::m_pInterval</definition>
        <argsstring></argsstring>
        <name>m_pInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>the interval object we are using </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="788" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="788" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_interval_scope_1a99b0778a7cf62313b7bc35b2bc84a91b" compoundref="src_2_performance_timing_8h" startline="778" endline="782">CIntervalScope</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_scope_1ae21de130cf46b767bd8dd22e843818ab" compoundref="src_2_performance_timing_8h" startline="783" endline="786">~CIntervalScope</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_scope_1a99b0778a7cf62313b7bc35b2bc84a91b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::CIntervalScope::CIntervalScope</definition>
        <argsstring>(CInterval *pInterval)</argsstring>
        <name>CIntervalScope</name>
        <param>
          <type><ref refid="class_performance_timing_1_1_c_interval" kindref="compound">CInterval</ref> *</type>
          <declname>pInterval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="778" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="778" bodyend="782"/>
        <references refid="class_performance_timing_1_1_c_interval_scope_1acdc118d66d6646c77bb87b1ab069d2c8" compoundref="src_2_performance_timing_8h" startline="788">m_pInterval</references>
        <references refid="class_performance_timing_1_1_c_interval_1ac7dffd5c24210fa8b55f2fe59eb9b5e3" compoundref="src_2_performance_timing_8cpp" startline="797" endline="818">PerformanceTiming::CInterval::Start</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_scope_1ae21de130cf46b767bd8dd22e843818ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::CIntervalScope::~CIntervalScope</definition>
        <argsstring>()</argsstring>
        <name>~CIntervalScope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="783" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="783" bodyend="786"/>
        <references refid="class_performance_timing_1_1_c_interval_1a05192a46041bdca7c17ff4d95d239025" compoundref="src_2_performance_timing_8cpp" startline="824" endline="844">PerformanceTiming::CInterval::End</references>
        <references refid="class_performance_timing_1_1_c_interval_scope_1acdc118d66d6646c77bb87b1ab069d2c8" compoundref="src_2_performance_timing_8h" startline="788">m_pInterval</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_scope_1a99b0778a7cf62313b7bc35b2bc84a91b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::CIntervalScope::CIntervalScope</definition>
        <argsstring>(CInterval *pInterval)</argsstring>
        <name>CIntervalScope</name>
        <param>
          <type><ref refid="class_performance_timing_1_1_c_interval" kindref="compound">CInterval</ref> *</type>
          <declname>pInterval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="778" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="778" bodyend="782"/>
        <references refid="class_performance_timing_1_1_c_interval_scope_1acdc118d66d6646c77bb87b1ab069d2c8" compoundref="src_2_performance_timing_8h" startline="788">m_pInterval</references>
        <references refid="class_performance_timing_1_1_c_interval_1ac7dffd5c24210fa8b55f2fe59eb9b5e3" compoundref="src_2_performance_timing_8cpp" startline="797" endline="818">PerformanceTiming::CInterval::Start</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_interval_scope_1ae21de130cf46b767bd8dd22e843818ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::CIntervalScope::~CIntervalScope</definition>
        <argsstring>()</argsstring>
        <name>~CIntervalScope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="783" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="783" bodyend="786"/>
        <references refid="class_performance_timing_1_1_c_interval_1a05192a46041bdca7c17ff4d95d239025" compoundref="src_2_performance_timing_8cpp" startline="824" endline="844">PerformanceTiming::CInterval::End</references>
        <references refid="class_performance_timing_1_1_c_interval_scope_1acdc118d66d6646c77bb87b1ab069d2c8" compoundref="src_2_performance_timing_8h" startline="788">m_pInterval</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interval Object - defines an interval for as long as the object is in scope </para>    </detaileddescription>
    <collaborationgraph>
      <node id="906">
        <label>PerformanceTiming::CInterval</label>
        <link refid="class_performance_timing_1_1_c_interval"/>
        <childnode refid="907" relation="public-inheritance">
        </childnode>
        <childnode refid="910" relation="public-inheritance">
        </childnode>
        <childnode refid="907" relation="public-inheritance">
        </childnode>
        <childnode refid="910" relation="public-inheritance">
        </childnode>
        <childnode refid="911" relation="usage">
          <edgelabel>m_vChildren</edgelabel>
        </childnode>
      </node>
      <node id="911">
        <label>std::vector&lt; CInterval * &gt;</label>
        <childnode refid="906" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="909">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="907">
        <label>PerformanceTiming::CPerformanceStat</label>
        <link refid="class_performance_timing_1_1_c_performance_stat"/>
        <childnode refid="908" relation="usage">
          <edgelabel>m_sFolderName</edgelabel>
          <edgelabel>m_sName</edgelabel>
        </childnode>
      </node>
      <node id="905">
        <label>PerformanceTiming::CIntervalScope</label>
        <link refid="class_performance_timing_1_1_c_interval_scope"/>
        <childnode refid="906" relation="usage">
          <edgelabel>m_pInterval</edgelabel>
        </childnode>
      </node>
      <node id="910">
        <label>IInterval</label>
        <link refid="class_i_interval"/>
      </node>
      <node id="908">
        <label>std::string</label>
        <childnode refid="909" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="776" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="775" bodyend="789"/>
    <listofallmembers>
      <member refid="class_performance_timing_1_1_c_interval_scope_1a99b0778a7cf62313b7bc35b2bc84a91b" prot="public" virt="non-virtual"><scope>PerformanceTiming::CIntervalScope</scope><name>CIntervalScope</name></member>
      <member refid="class_performance_timing_1_1_c_interval_scope_1a99b0778a7cf62313b7bc35b2bc84a91b" prot="public" virt="non-virtual"><scope>PerformanceTiming::CIntervalScope</scope><name>CIntervalScope</name></member>
      <member refid="class_performance_timing_1_1_c_interval_scope_1acdc118d66d6646c77bb87b1ab069d2c8" prot="private" virt="non-virtual"><scope>PerformanceTiming::CIntervalScope</scope><name>m_pInterval</name></member>
      <member refid="class_performance_timing_1_1_c_interval_scope_1ae21de130cf46b767bd8dd22e843818ab" prot="public" virt="non-virtual"><scope>PerformanceTiming::CIntervalScope</scope><name>~CIntervalScope</name></member>
      <member refid="class_performance_timing_1_1_c_interval_scope_1ae21de130cf46b767bd8dd22e843818ab" prot="public" virt="non-virtual"><scope>PerformanceTiming::CIntervalScope</scope><name>~CIntervalScope</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
