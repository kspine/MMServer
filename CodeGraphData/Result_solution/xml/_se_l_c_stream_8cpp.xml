<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_se_l_c_stream_8cpp" kind="file">
    <compoundname>SeLCStream.cpp</compoundname>
    <includes refid="_se_net_stream_8h" local="yes">SeNetStream.h</includes>
    <includes refid="_se_l_c_stream_8h" local="yes">SeLCStream.h</includes>
    <incdepgraph>
      <node id="112966">
        <label>SeCommStream.h</label>
        <link refid="_se_comm_stream_8h"/>
        <childnode refid="112956" relation="include">
        </childnode>
        <childnode refid="112962" relation="include">
        </childnode>
      </node>
      <node id="112946">
        <label>list</label>
      </node>
      <node id="112940">
        <label>locale</label>
      </node>
      <node id="112950">
        <label>queue</label>
      </node>
      <node id="112944">
        <label>limits</label>
      </node>
      <node id="112962">
        <label>SePtlCommDefine.h</label>
        <link refid="_se_ptl_comm_define_8h"/>
      </node>
      <node id="112963">
        <label>SeMemPool.h</label>
        <link refid="_se_mem_pool_8h"/>
        <childnode refid="112925" relation="include">
        </childnode>
        <childnode refid="112964" relation="include">
        </childnode>
        <childnode refid="112932" relation="include">
        </childnode>
      </node>
      <node id="112927">
        <label>windows.h</label>
      </node>
      <node id="112932">
        <label>assert.h</label>
      </node>
      <node id="112955">
        <label>SeLCStream.h</label>
        <link refid="_se_l_c_stream_8h"/>
        <childnode refid="112956" relation="include">
        </childnode>
        <childnode refid="112965" relation="include">
        </childnode>
        <childnode refid="112966" relation="include">
        </childnode>
      </node>
      <node id="112930">
        <label>stdlib.h</label>
      </node>
      <node id="112964">
        <label>EsLock.h</label>
      </node>
      <node id="112934">
        <label>cmath</label>
      </node>
      <node id="112943">
        <label>string</label>
      </node>
      <node id="112947">
        <label>map</label>
      </node>
      <node id="112929">
        <label>conio.h</label>
      </node>
      <node id="112961">
        <label>SePtlRandomNumDef.h</label>
        <link refid="_se_ptl_random_num_def_8h"/>
      </node>
      <node id="112923">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp</label>
        <link refid="SeLCStream.cpp"/>
        <childnode refid="112924" relation="include">
        </childnode>
        <childnode refid="112955" relation="include">
        </childnode>
      </node>
      <node id="112928">
        <label>direct.h</label>
      </node>
      <node id="112924">
        <label>SeNetStream.h</label>
        <link refid="_se_net_stream_8h"/>
        <childnode refid="112925" relation="include">
        </childnode>
        <childnode refid="112953" relation="include">
        </childnode>
        <childnode refid="112954" relation="include">
        </childnode>
      </node>
      <node id="112941">
        <label>fstream</label>
      </node>
      <node id="112957">
        <label>SeTool.h</label>
        <link refid="_se_tool_8h"/>
        <childnode refid="112925" relation="include">
        </childnode>
        <childnode refid="112953" relation="include">
        </childnode>
        <childnode refid="112958" relation="include">
        </childnode>
        <childnode refid="112959" relation="include">
        </childnode>
        <childnode refid="112938" relation="include">
        </childnode>
        <childnode refid="112960" relation="include">
        </childnode>
      </node>
      <node id="112926">
        <label>winsock2.h</label>
      </node>
      <node id="112959">
        <label>TeMisc.h</label>
        <link refid="_te_misc_8h"/>
        <childnode refid="112937" relation="include">
        </childnode>
      </node>
      <node id="112937">
        <label>string.h</label>
      </node>
      <node id="112935">
        <label>ctime</label>
      </node>
      <node id="112945">
        <label>vector</label>
      </node>
      <node id="112951">
        <label>new</label>
      </node>
      <node id="112956">
        <label>SePtlDefine.h</label>
        <link refid="_se_ptl_define_8h"/>
        <childnode refid="112925" relation="include">
        </childnode>
        <childnode refid="112953" relation="include">
        </childnode>
        <childnode refid="112957" relation="include">
        </childnode>
        <childnode refid="112961" relation="include">
        </childnode>
        <childnode refid="112962" relation="include">
        </childnode>
        <childnode refid="112963" relation="include">
        </childnode>
      </node>
      <node id="112953">
        <label>SeShareDef.h</label>
        <link refid="_se_share_def_8h"/>
        <childnode refid="112925" relation="include">
        </childnode>
      </node>
      <node id="112942">
        <label>sstream</label>
      </node>
      <node id="112960">
        <label>EsString.h</label>
      </node>
      <node id="112925">
        <label>SeInclude.h</label>
        <link refid="_se_include_8h"/>
        <childnode refid="112926" relation="include">
        </childnode>
        <childnode refid="112927" relation="include">
        </childnode>
        <childnode refid="112928" relation="include">
        </childnode>
        <childnode refid="112929" relation="include">
        </childnode>
        <childnode refid="112930" relation="include">
        </childnode>
        <childnode refid="112931" relation="include">
        </childnode>
        <childnode refid="112932" relation="include">
        </childnode>
        <childnode refid="112933" relation="include">
        </childnode>
        <childnode refid="112934" relation="include">
        </childnode>
        <childnode refid="112935" relation="include">
        </childnode>
        <childnode refid="112936" relation="include">
        </childnode>
        <childnode refid="112937" relation="include">
        </childnode>
        <childnode refid="112938" relation="include">
        </childnode>
        <childnode refid="112939" relation="include">
        </childnode>
        <childnode refid="112940" relation="include">
        </childnode>
        <childnode refid="112941" relation="include">
        </childnode>
        <childnode refid="112942" relation="include">
        </childnode>
        <childnode refid="112943" relation="include">
        </childnode>
        <childnode refid="112944" relation="include">
        </childnode>
        <childnode refid="112945" relation="include">
        </childnode>
        <childnode refid="112946" relation="include">
        </childnode>
        <childnode refid="112947" relation="include">
        </childnode>
        <childnode refid="112948" relation="include">
        </childnode>
        <childnode refid="112949" relation="include">
        </childnode>
        <childnode refid="112950" relation="include">
        </childnode>
        <childnode refid="112951" relation="include">
        </childnode>
        <childnode refid="112952" relation="include">
        </childnode>
      </node>
      <node id="112931">
        <label>math.h</label>
      </node>
      <node id="112938">
        <label>EsType.h</label>
      </node>
      <node id="112933">
        <label>cctype</label>
      </node>
      <node id="112958">
        <label>SeToolTemplate.inl</label>
        <link refid="_se_tool_template_8inl"/>
      </node>
      <node id="112948">
        <label>unordered_map</label>
      </node>
      <node id="112952">
        <label>SeDefine.h</label>
        <link refid="_se_define_8h"/>
      </node>
      <node id="112954">
        <label>type_traits</label>
      </node>
      <node id="112949">
        <label>set</label>
      </node>
      <node id="112939">
        <label>algorithm</label>
      </node>
      <node id="112936">
        <label>stdio.h</label>
      </node>
      <node id="112965">
        <label>SePtl_LS_To_CL.h</label>
        <link refid="_se_ptl___l_s___to___c_l_8h"/>
        <childnode refid="112956" relation="include">
        </childnode>
        <childnode refid="112962" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a136e6656d4f5951a03b5e3084f400784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_EncryptKey</definition>
        <argsstring>(const SeLC_EncryptKey &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_EncryptKey</name>
        <param>
          <type>const <ref refid="struct_se_l_c___encrypt_key" kindref="compound">SeLC_EncryptKey</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="4" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="4" bodyend="7"/>
        <references refid="struct_se_l_c___encrypt_key_1a186d7cb7bbe096935aa32e62a8c74296" compoundref="_se_ptl___l_s___to___c_l_8h" startline="39">SeLC_EncryptKey::abyEncryptKey</references>
        <references refid="_se_l_c_stream_8cpp_1a136e6656d4f5951a03b5e3084f400784" compoundref="_se_l_c_stream_8cpp" startline="4" endline="7">EncodeSeLC_EncryptKey</references>
        <referencedby refid="_se_l_c_stream_8h_1a136e6656d4f5951a03b5e3084f400784" compoundref="_se_l_c_stream_8cpp" startline="4" endline="7">EncodeSeLC_EncryptKey</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a68937065db9cdb481fc991a7c40e37c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_EncryptKey</definition>
        <argsstring>(const char *abyEncryptKey, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_EncryptKey</name>
        <param>
          <type>const char *</type>
          <declname>abyEncryptKey</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="9" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="9" bodyend="18"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" compoundref="_se_net_stream_8cpp" startline="231" endline="249">SeNetStream::WriteString</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a3165434acce3a4c1f2faa29bbed62b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeLC_EncryptKey</definition>
        <argsstring>(const char *pkData, int iLen, SeLC_EncryptKey &amp;kStruct)</argsstring>
        <name>DecodeSeLC_EncryptKey</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_l_c___encrypt_key" kindref="compound">SeLC_EncryptKey</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="20" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="20" bodyend="29"/>
        <references refid="struct_se_l_c___encrypt_key_1a186d7cb7bbe096935aa32e62a8c74296" compoundref="_se_ptl___l_s___to___c_l_8h" startline="39">SeLC_EncryptKey::abyEncryptKey</references>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" compoundref="_se_net_stream_8cpp" startline="123" endline="132">SeNetStream::ReadString</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a4532439e500e617ec51043aba5d7fc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_PlayerLoginRet</definition>
        <argsstring>(const SeLC_PlayerLoginRet &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_PlayerLoginRet</name>
        <param>
          <type>const <ref refid="struct_se_l_c___player_login_ret" kindref="compound">SeLC_PlayerLoginRet</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="31" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="31" bodyend="34"/>
        <references refid="struct_se_l_c___player_login_ret_1ae980500a98cf7f9620e7c3d0fa916b5a" compoundref="_se_ptl___l_s___to___c_l_8h" startline="52">SeLC_PlayerLoginRet::dwPlayerID</references>
        <references refid="struct_se_l_c___player_login_ret_1a7c98ebe36a73524c2011ff25820786e3" compoundref="_se_ptl___l_s___to___c_l_8h" startline="54">SeLC_PlayerLoginRet::dwSessionID</references>
        <references refid="_se_l_c_stream_8cpp_1a4532439e500e617ec51043aba5d7fc34" compoundref="_se_l_c_stream_8cpp" startline="31" endline="34">EncodeSeLC_PlayerLoginRet</references>
        <references refid="struct_se_l_c___player_login_ret_1ac1c8db8fc2e20b3820cec5f1922fbbc6" compoundref="_se_ptl___l_s___to___c_l_8h" startline="53">SeLC_PlayerLoginRet::eReason</references>
        <references refid="struct_se_l_c___player_login_ret_1a129db91902f0a908396c96335b8f8ae5" compoundref="_se_ptl___l_s___to___c_l_8h" startline="55">SeLC_PlayerLoginRet::strNickName</references>
        <referencedby refid="_se_l_c_stream_8h_1a4532439e500e617ec51043aba5d7fc34" compoundref="_se_l_c_stream_8cpp" startline="31" endline="34">EncodeSeLC_PlayerLoginRet</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a3390da7745b2fc14361c609539dda2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_PlayerLoginRet</definition>
        <argsstring>(DWord dwPlayerID, SeLoginReason eReason, DWord dwSessionID, const char *strNickName, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_PlayerLoginRet</name>
        <param>
          <type>DWord</type>
          <declname>dwPlayerID</declname>
        </param>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1afcf506db0541bc2b07b7c9aa18f131f2" kindref="member">SeLoginReason</ref></type>
          <declname>eReason</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>dwSessionID</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>strNickName</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="36" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="36" bodyend="57"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
        <references refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" compoundref="_se_net_stream_8cpp" startline="231" endline="249">SeNetStream::WriteString</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1af3b0cdc8fa6e07eb4c4653d1b41944fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeLC_PlayerLoginRet</definition>
        <argsstring>(const char *pkData, int iLen, SeLC_PlayerLoginRet &amp;kStruct)</argsstring>
        <name>DecodeSeLC_PlayerLoginRet</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_l_c___player_login_ret" kindref="compound">SeLC_PlayerLoginRet</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="59" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="59" bodyend="80"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_l_c___player_login_ret_1ae980500a98cf7f9620e7c3d0fa916b5a" compoundref="_se_ptl___l_s___to___c_l_8h" startline="52">SeLC_PlayerLoginRet::dwPlayerID</references>
        <references refid="struct_se_l_c___player_login_ret_1a7c98ebe36a73524c2011ff25820786e3" compoundref="_se_ptl___l_s___to___c_l_8h" startline="54">SeLC_PlayerLoginRet::dwSessionID</references>
        <references refid="struct_se_l_c___player_login_ret_1ac1c8db8fc2e20b3820cec5f1922fbbc6" compoundref="_se_ptl___l_s___to___c_l_8h" startline="53">SeLC_PlayerLoginRet::eReason</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
        <references refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" compoundref="_se_net_stream_8cpp" startline="123" endline="132">SeNetStream::ReadString</references>
        <references refid="struct_se_l_c___player_login_ret_1a129db91902f0a908396c96335b8f8ae5" compoundref="_se_ptl___l_s___to___c_l_8h" startline="55">SeLC_PlayerLoginRet::strNickName</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a5c0f9ea9c96d4cc834f5b3ee7960a01a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_GateList</definition>
        <argsstring>(const SeLC_GateList &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_GateList</name>
        <param>
          <type>const <ref refid="struct_se_l_c___gate_list" kindref="compound">SeLC_GateList</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="82" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="82" bodyend="85"/>
        <references refid="struct_se_l_c___gate_list_1a5069174456e30b5a96c5022aed9b16c0" compoundref="_se_ptl___l_s___to___c_l_8h" startline="65">SeLC_GateList::acIP</references>
        <references refid="_se_l_c_stream_8cpp_1a5c0f9ea9c96d4cc834f5b3ee7960a01a" compoundref="_se_l_c_stream_8cpp" startline="82" endline="85">EncodeSeLC_GateList</references>
        <references refid="struct_se_l_c___gate_list_1abff7d6b0bdf24edaae6433fe1c18650d" compoundref="_se_ptl___l_s___to___c_l_8h" startline="66">SeLC_GateList::iPort</references>
        <referencedby refid="_se_l_c_stream_8h_1a5c0f9ea9c96d4cc834f5b3ee7960a01a" compoundref="_se_l_c_stream_8cpp" startline="82" endline="85">EncodeSeLC_GateList</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a71409a035a67208dae9345a10f0295f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_GateList</definition>
        <argsstring>(const char *acIP, int iPort, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_GateList</name>
        <param>
          <type>const char *</type>
          <declname>acIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPort</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="87" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="87" bodyend="100"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
        <references refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" compoundref="_se_net_stream_8cpp" startline="231" endline="249">SeNetStream::WriteString</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a6d246fa7cca55a21d140b9cd317f730d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeLC_GateList</definition>
        <argsstring>(const char *pkData, int iLen, SeLC_GateList &amp;kStruct)</argsstring>
        <name>DecodeSeLC_GateList</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_l_c___gate_list" kindref="compound">SeLC_GateList</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="102" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="102" bodyend="115"/>
        <references refid="struct_se_l_c___gate_list_1a5069174456e30b5a96c5022aed9b16c0" compoundref="_se_ptl___l_s___to___c_l_8h" startline="65">SeLC_GateList::acIP</references>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_l_c___gate_list_1abff7d6b0bdf24edaae6433fe1c18650d" compoundref="_se_ptl___l_s___to___c_l_8h" startline="66">SeLC_GateList::iPort</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
        <references refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" compoundref="_se_net_stream_8cpp" startline="123" endline="132">SeNetStream::ReadString</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1ab0e0a9ed4a5af4392618dec618a850df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_ClientVersion</definition>
        <argsstring>(const SeLC_ClientVersion &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_ClientVersion</name>
        <param>
          <type>const <ref refid="struct_se_l_c___client_version" kindref="compound">SeLC_ClientVersion</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="117" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="117" bodyend="120"/>
        <references refid="_se_l_c_stream_8cpp_1ab0e0a9ed4a5af4392618dec618a850df" compoundref="_se_l_c_stream_8cpp" startline="117" endline="120">EncodeSeLC_ClientVersion</references>
        <references refid="struct_se_l_c___client_version_1a09c6d6c851b61a407fb1a1eef6b9092d" compoundref="_se_ptl___l_s___to___c_l_8h" startline="77">SeLC_ClientVersion::main</references>
        <references refid="struct_se_l_c___client_version_1ad10f721788deb9252dde60cd0797dfce" compoundref="_se_ptl___l_s___to___c_l_8h" startline="78">SeLC_ClientVersion::sub</references>
        <references refid="struct_se_l_c___client_version_1aea68ca496fb5f4e51f26b9b4dd5a5b04" compoundref="_se_ptl___l_s___to___c_l_8h" startline="79">SeLC_ClientVersion::ver</references>
        <referencedby refid="_se_l_c_stream_8h_1ab0e0a9ed4a5af4392618dec618a850df" compoundref="_se_l_c_stream_8cpp" startline="117" endline="120">EncodeSeLC_ClientVersion</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1afefa85ffde4542a58fcc78215ffa0938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_ClientVersion</definition>
        <argsstring>(DWord main, DWord sub, const char *ver, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_ClientVersion</name>
        <param>
          <type>DWord</type>
          <declname>main</declname>
        </param>
        <param>
          <type>DWord</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ver</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="122" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="122" bodyend="139"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
        <references refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" compoundref="_se_net_stream_8cpp" startline="231" endline="249">SeNetStream::WriteString</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a30f631662ab840673449ac62adedc2e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeLC_ClientVersion</definition>
        <argsstring>(const char *pkData, int iLen, SeLC_ClientVersion &amp;kStruct)</argsstring>
        <name>DecodeSeLC_ClientVersion</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_l_c___client_version" kindref="compound">SeLC_ClientVersion</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="141" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="141" bodyend="158"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="struct_se_l_c___client_version_1a09c6d6c851b61a407fb1a1eef6b9092d" compoundref="_se_ptl___l_s___to___c_l_8h" startline="77">SeLC_ClientVersion::main</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
        <references refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" compoundref="_se_net_stream_8cpp" startline="123" endline="132">SeNetStream::ReadString</references>
        <references refid="struct_se_l_c___client_version_1ad10f721788deb9252dde60cd0797dfce" compoundref="_se_ptl___l_s___to___c_l_8h" startline="78">SeLC_ClientVersion::sub</references>
        <references refid="struct_se_l_c___client_version_1aea68ca496fb5f4e51f26b9b4dd5a5b04" compoundref="_se_ptl___l_s___to___c_l_8h" startline="79">SeLC_ClientVersion::ver</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1ae56582e136bba885f6bbd1b1847aba7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_SteamCheckReturn</definition>
        <argsstring>(const SeLC_SteamCheckReturn &amp;kData, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_SteamCheckReturn</name>
        <param>
          <type>const <ref refid="struct_se_l_c___steam_check_return" kindref="compound">SeLC_SteamCheckReturn</ref> &amp;</type>
          <declname>kData</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="160" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="160" bodyend="163"/>
        <references refid="_se_l_c_stream_8cpp_1ae56582e136bba885f6bbd1b1847aba7f" compoundref="_se_l_c_stream_8cpp" startline="160" endline="163">EncodeSeLC_SteamCheckReturn</references>
        <references refid="struct_se_l_c___steam_check_return_1a0fc105f93e2f304bb780fc0d5b68c604" compoundref="_se_ptl___l_s___to___c_l_8h" startline="88">SeLC_SteamCheckReturn::eResult</references>
        <referencedby refid="_se_l_c_stream_8h_1ae56582e136bba885f6bbd1b1847aba7f" compoundref="_se_l_c_stream_8cpp" startline="160" endline="163">EncodeSeLC_SteamCheckReturn</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a1e579659e63ad65a776dab9b5f826b86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeSeLC_SteamCheckReturn</definition>
        <argsstring>(SteamCheckResult eResult, char *pcBuf, int iMaxLen)</argsstring>
        <name>EncodeSeLC_SteamCheckReturn</name>
        <param>
          <type><ref refid="_se_ptl_comm_define_8h_1abd46503a1782f1b20b91d05a18c8a42d" kindref="member">SteamCheckResult</ref></type>
          <declname>eResult</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMaxLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="165" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="165" bodyend="174"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" compoundref="_se_net_stream_8cpp" startline="179" endline="194">SeNetStream::Write</references>
      </memberdef>
      <memberdef kind="function" id="_se_l_c_stream_8cpp_1a2b86fc8f78f3ee09f923fbf86cad693a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DecodeSeLC_SteamCheckReturn</definition>
        <argsstring>(const char *pkData, int iLen, SeLC_SteamCheckReturn &amp;kStruct)</argsstring>
        <name>DecodeSeLC_SteamCheckReturn</name>
        <param>
          <type>const char *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLen</declname>
        </param>
        <param>
          <type><ref refid="struct_se_l_c___steam_check_return" kindref="compound">SeLC_SteamCheckReturn</ref> &amp;</type>
          <declname>kStruct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" line="176" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp" bodystart="176" bodyend="185"/>
        <references refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" compoundref="_se_net_stream_8cpp" startline="16" endline="22">SeNetStream::Attach</references>
        <references refid="struct_se_l_c___steam_check_return_1a0fc105f93e2f304bb780fc0d5b68c604" compoundref="_se_ptl___l_s___to___c_l_8h" startline="88">SeLC_SteamCheckReturn::eResult</references>
        <references refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" compoundref="_se_net_stream_8cpp" startline="39" endline="42">SeNetStream::GetCurPos</references>
        <references refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" compoundref="_se_net_stream_8cpp" startline="57" endline="72">SeNetStream::Read</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_net_stream_8h" kindref="compound">SeNetStream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_l_c_stream_8h" kindref="compound">SeLCStream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="_se_l_c_stream_8h_1a136e6656d4f5951a03b5e3084f400784" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a136e6656d4f5951a03b5e3084f400784" kindref="member">EncodeSeLC_EncryptKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_l_c___encrypt_key" kindref="compound">SeLC_EncryptKey</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a136e6656d4f5951a03b5e3084f400784" kindref="member">EncodeSeLC_EncryptKey</ref>(kData.<ref refid="struct_se_l_c___encrypt_key_1a186d7cb7bbe096935aa32e62a8c74296" kindref="member">abyEncryptKey</ref>,<sp/>pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="_se_l_c_stream_8h_1a68937065db9cdb481fc991a7c40e37c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a136e6656d4f5951a03b5e3084f400784" kindref="member">EncodeSeLC_EncryptKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>abyEncryptKey,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" kindref="member">WriteString</ref>(abyEncryptKey))</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="_se_l_c_stream_8h_1a3165434acce3a4c1f2faa29bbed62b4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a3165434acce3a4c1f2faa29bbed62b4f" kindref="member">DecodeSeLC_EncryptKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_l_c___encrypt_key" kindref="compound">SeLC_EncryptKey</ref>&amp;<sp/>kStruct)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pkData,<sp/>iLen);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" kindref="member">ReadString</ref>(kStruct.<ref refid="struct_se_l_c___encrypt_key_1a186d7cb7bbe096935aa32e62a8c74296" kindref="member">abyEncryptKey</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kStruct.<ref refid="struct_se_l_c___encrypt_key_1a186d7cb7bbe096935aa32e62a8c74296" kindref="member">abyEncryptKey</ref>)))</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_se_l_c_stream_8h_1a4532439e500e617ec51043aba5d7fc34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a4532439e500e617ec51043aba5d7fc34" kindref="member">EncodeSeLC_PlayerLoginRet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_l_c___player_login_ret" kindref="compound">SeLC_PlayerLoginRet</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a4532439e500e617ec51043aba5d7fc34" kindref="member">EncodeSeLC_PlayerLoginRet</ref>(kData.<ref refid="struct_se_l_c___player_login_ret_1ae980500a98cf7f9620e7c3d0fa916b5a" kindref="member">dwPlayerID</ref>,<sp/>kData.<ref refid="struct_se_l_c___player_login_ret_1ac1c8db8fc2e20b3820cec5f1922fbbc6" kindref="member">eReason</ref>,<sp/>kData.<ref refid="struct_se_l_c___player_login_ret_1a7c98ebe36a73524c2011ff25820786e3" kindref="member">dwSessionID</ref>,<sp/>kData.<ref refid="struct_se_l_c___player_login_ret_1a129db91902f0a908396c96335b8f8ae5" kindref="member">strNickName</ref>,<sp/>pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_se_l_c_stream_8h_1a3390da7745b2fc14361c609539dda2ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a4532439e500e617ec51043aba5d7fc34" kindref="member">EncodeSeLC_PlayerLoginRet</ref>(DWord<sp/>dwPlayerID,<sp/><ref refid="_se_ptl_comm_define_8h_1afcf506db0541bc2b07b7c9aa18f131f2" kindref="member">SeLoginReason</ref><sp/>eReason,<sp/>DWord<sp/>dwSessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strNickName,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" kindref="member">Write</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;dwPlayerID,<sp/>4))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" kindref="member">Write</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;eReason,<sp/>4))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" kindref="member">Write</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;dwSessionID,<sp/>4))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" kindref="member">WriteString</ref>(strNickName))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="_se_l_c_stream_8h_1af3b0cdc8fa6e07eb4c4653d1b41944fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1af3b0cdc8fa6e07eb4c4653d1b41944fd" kindref="member">DecodeSeLC_PlayerLoginRet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_l_c___player_login_ret" kindref="compound">SeLC_PlayerLoginRet</ref>&amp;<sp/>kStruct)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pkData,<sp/>iLen);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" kindref="member">Read</ref>(&amp;kStruct.<ref refid="struct_se_l_c___player_login_ret_1ae980500a98cf7f9620e7c3d0fa916b5a" kindref="member">dwPlayerID</ref>,<sp/>4))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" kindref="member">Read</ref>(&amp;kStruct.<ref refid="struct_se_l_c___player_login_ret_1ac1c8db8fc2e20b3820cec5f1922fbbc6" kindref="member">eReason</ref>,<sp/>4))</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" kindref="member">Read</ref>(&amp;kStruct.<ref refid="struct_se_l_c___player_login_ret_1a7c98ebe36a73524c2011ff25820786e3" kindref="member">dwSessionID</ref>,<sp/>4))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" kindref="member">ReadString</ref>(kStruct.<ref refid="struct_se_l_c___player_login_ret_1a129db91902f0a908396c96335b8f8ae5" kindref="member">strNickName</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kStruct.<ref refid="struct_se_l_c___player_login_ret_1a129db91902f0a908396c96335b8f8ae5" kindref="member">strNickName</ref>)))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="_se_l_c_stream_8h_1a5c0f9ea9c96d4cc834f5b3ee7960a01a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a5c0f9ea9c96d4cc834f5b3ee7960a01a" kindref="member">EncodeSeLC_GateList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_l_c___gate_list" kindref="compound">SeLC_GateList</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a5c0f9ea9c96d4cc834f5b3ee7960a01a" kindref="member">EncodeSeLC_GateList</ref>(kData.<ref refid="struct_se_l_c___gate_list_1a5069174456e30b5a96c5022aed9b16c0" kindref="member">acIP</ref>,<sp/>kData.<ref refid="struct_se_l_c___gate_list_1abff7d6b0bdf24edaae6433fe1c18650d" kindref="member">iPort</ref>,<sp/>pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="_se_l_c_stream_8h_1a71409a035a67208dae9345a10f0295f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a5c0f9ea9c96d4cc834f5b3ee7960a01a" kindref="member">EncodeSeLC_GateList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acIP,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iPort,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" kindref="member">WriteString</ref>(acIP))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" kindref="member">Write</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;iPort,<sp/>4))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="_se_l_c_stream_8h_1a6d246fa7cca55a21d140b9cd317f730d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a6d246fa7cca55a21d140b9cd317f730d" kindref="member">DecodeSeLC_GateList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_l_c___gate_list" kindref="compound">SeLC_GateList</ref>&amp;<sp/>kStruct)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pkData,<sp/>iLen);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" kindref="member">ReadString</ref>(kStruct.<ref refid="struct_se_l_c___gate_list_1a5069174456e30b5a96c5022aed9b16c0" kindref="member">acIP</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kStruct.<ref refid="struct_se_l_c___gate_list_1a5069174456e30b5a96c5022aed9b16c0" kindref="member">acIP</ref>)))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" kindref="member">Read</ref>(&amp;kStruct.<ref refid="struct_se_l_c___gate_list_1abff7d6b0bdf24edaae6433fe1c18650d" kindref="member">iPort</ref>,<sp/>4))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="_se_l_c_stream_8h_1ab0e0a9ed4a5af4392618dec618a850df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1ab0e0a9ed4a5af4392618dec618a850df" kindref="member">EncodeSeLC_ClientVersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_l_c___client_version" kindref="compound">SeLC_ClientVersion</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1ab0e0a9ed4a5af4392618dec618a850df" kindref="member">EncodeSeLC_ClientVersion</ref>(kData.<ref refid="struct_se_l_c___client_version_1a09c6d6c851b61a407fb1a1eef6b9092d" kindref="member">main</ref>,<sp/>kData.<ref refid="struct_se_l_c___client_version_1ad10f721788deb9252dde60cd0797dfce" kindref="member">sub</ref>,<sp/>kData.<ref refid="struct_se_l_c___client_version_1aea68ca496fb5f4e51f26b9b4dd5a5b04" kindref="member">ver</ref>,<sp/>pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="_se_l_c_stream_8h_1afefa85ffde4542a58fcc78215ffa0938" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1ab0e0a9ed4a5af4392618dec618a850df" kindref="member">EncodeSeLC_ClientVersion</ref>(DWord<sp/>main,<sp/>DWord<sp/>sub,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ver,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" kindref="member">Write</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;main,<sp/>4))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" kindref="member">Write</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;sub,<sp/>4))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a87ce1df8077e95babef7598faeb6873e" kindref="member">WriteString</ref>(ver))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="_se_l_c_stream_8h_1a30f631662ab840673449ac62adedc2e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a30f631662ab840673449ac62adedc2e8" kindref="member">DecodeSeLC_ClientVersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_l_c___client_version" kindref="compound">SeLC_ClientVersion</ref>&amp;<sp/>kStruct)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pkData,<sp/>iLen);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" kindref="member">Read</ref>(&amp;kStruct.<ref refid="struct_se_l_c___client_version_1a09c6d6c851b61a407fb1a1eef6b9092d" kindref="member">main</ref>,<sp/>4))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" kindref="member">Read</ref>(&amp;kStruct.<ref refid="struct_se_l_c___client_version_1ad10f721788deb9252dde60cd0797dfce" kindref="member">sub</ref>,<sp/>4))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1ae8fec32328a451aa27cc24d4e87261f5" kindref="member">ReadString</ref>(kStruct.<ref refid="struct_se_l_c___client_version_1aea68ca496fb5f4e51f26b9b4dd5a5b04" kindref="member">ver</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kStruct.<ref refid="struct_se_l_c___client_version_1aea68ca496fb5f4e51f26b9b4dd5a5b04" kindref="member">ver</ref>)))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="_se_l_c_stream_8h_1ae56582e136bba885f6bbd1b1847aba7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1ae56582e136bba885f6bbd1b1847aba7f" kindref="member">EncodeSeLC_SteamCheckReturn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_l_c___steam_check_return" kindref="compound">SeLC_SteamCheckReturn</ref>&amp;<sp/>kData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1ae56582e136bba885f6bbd1b1847aba7f" kindref="member">EncodeSeLC_SteamCheckReturn</ref>(kData.<ref refid="struct_se_l_c___steam_check_return_1a0fc105f93e2f304bb780fc0d5b68c604" kindref="member">eResult</ref>,<sp/>pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="_se_l_c_stream_8h_1a1e579659e63ad65a776dab9b5f826b86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1ae56582e136bba885f6bbd1b1847aba7f" kindref="member">EncodeSeLC_SteamCheckReturn</ref>(<ref refid="_se_ptl_comm_define_8h_1abd46503a1782f1b20b91d05a18c8a42d" kindref="member">SteamCheckResult</ref><sp/>eResult,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMaxLen)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pcBuf,<sp/>iMaxLen);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a9ac47a188385318347c2244727fac783" kindref="member">Write</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;eResult,<sp/>4))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="_se_l_c_stream_8h_1a2b86fc8f78f3ee09f923fbf86cad693a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_l_c_stream_8cpp_1a2b86fc8f78f3ee09f923fbf86cad693a" kindref="member">DecodeSeLC_SteamCheckReturn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen,<sp/><ref refid="struct_se_l_c___steam_check_return" kindref="compound">SeLC_SteamCheckReturn</ref>&amp;<sp/>kStruct)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_net_stream" kindref="compound">SeNetStream</ref><sp/>kNetStream;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>kNetStream.<ref refid="class_se_net_stream_1a14ad92259b55c943bbce4dd112ad6a59" kindref="member">Attach</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pkData,<sp/>iLen);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kNetStream.<ref refid="class_se_net_stream_1a97715b12a0a8e13796b9456822a1d32a" kindref="member">Read</ref>(&amp;kStruct.<ref refid="struct_se_l_c___steam_check_return_1a0fc105f93e2f304bb780fc0d5b68c604" kindref="member">eResult</ref>,<sp/>4))</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kNetStream.<ref refid="class_se_net_stream_1af0d056a8d47fe3cc8145b8d95b6665f8" kindref="member">GetCurPos</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/Protocol/SeLCStream.cpp"/>
  </compounddef>
</doxygen>
