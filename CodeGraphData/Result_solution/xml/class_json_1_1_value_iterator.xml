<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_json_1_1_value_iterator" kind="class" prot="public">
    <compoundname>Json::ValueIterator</compoundname>
    <basecompoundref refid="class_json_1_1_value_iterator_base" prot="public" virt="non-virtual">Json::ValueIteratorBase</basecompoundref>
    <includes refid="value_8h" local="no">value.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1a2c5ba7be611f05546530c8a88b2d2e37" prot="public" static="no">
        <type><ref refid="class_json_1_1_value" kindref="compound">Value</ref></type>
        <definition>typedef Value Json::ValueIterator::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="790" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="790" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1a308b8932ffc83eaa9d12dadd5c11a7dd" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int Json::ValueIterator::size_t</definition>
        <argsstring></argsstring>
        <name>size_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="791" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1a2be1a9aa60bbfc8812e9dd1a7f1a8786" prot="public" static="no">
        <type>int</type>
        <definition>typedef int Json::ValueIterator::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="792" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1ae87929b4567aa00372cf602c43b57160" prot="public" static="no">
        <type><ref refid="class_json_1_1_value" kindref="compound">Value</ref> &amp;</type>
        <definition>typedef Value&amp; Json::ValueIterator::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="793" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1acec45feb1ef1f3bf81240157d06d5432" prot="public" static="no">
        <type><ref refid="class_json_1_1_value" kindref="compound">Value</ref> *</type>
        <definition>typedef Value* Json::ValueIterator::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="794" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1a23357670fdad61792670d86f62db7e16" prot="public" static="no">
        <type><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref></type>
        <definition>typedef ValueIterator Json::ValueIterator::SelfType</definition>
        <argsstring></argsstring>
        <name>SelfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="795" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="795" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_json_1_1_value_iterator_1aeceedf6e1a7d48a588516ce2b1983d6f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="787" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="787" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a09425cf4dc12244072a942f290a5c0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::ValueIterator::ValueIterator</definition>
        <argsstring>()</argsstring>
        <name>ValueIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="797" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1aa85aa208670891670392259efa0143bb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::ValueIterator::ValueIterator</definition>
        <argsstring>(const ValueConstIterator &amp;other)</argsstring>
        <name>ValueIterator</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="798" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="154" bodyend="157"/>
        <references refid="namespace_json_1a97f039a107b3f6cf1c3edee50e978f76" compoundref="json__value_8cpp" startline="170" endline="173">Json::throwRuntimeError</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a7d5e58a9a4a553968acdf3064b39d21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::ValueIterator::ValueIterator</definition>
        <argsstring>(const ValueIterator &amp;other)</argsstring>
        <name>ValueIterator</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="799" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="159" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a8e23312b1db874f7e403fd7e76611bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
        <definition>ValueIterator &amp; Json::ValueIterator::operator=</definition>
        <argsstring>(const SelfType &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="806" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="162" bodyend="165"/>
        <references refid="class_json_1_1_value_iterator_base_1a496e6aba44808433ec5858c178be5719" compoundref="json__valueiterator_8inl" startline="73" endline="76">Json::ValueIteratorBase::copy</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1abcf4ddd994a010742cd4a436d65acd08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref></type>
        <definition>SelfType Json::ValueIterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="808" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="808" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a06d6a29d96caf6af324a53973159e12b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref></type>
        <definition>SelfType Json::ValueIterator::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="814" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="814" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a811302a868518a0995a9def955df5720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
        <definition>SelfType&amp; Json::ValueIterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="820" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="820" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a92146c46f8249e2b2d12869e70cd4cee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref> &amp;</type>
        <definition>SelfType&amp; Json::ValueIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="825" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="825" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1aaa5be3457eedf0526a03b8a3b4c7c0a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_1ae87929b4567aa00372cf602c43b57160" kindref="member">reference</ref></type>
        <definition>reference Json::ValueIterator::operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="830" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="830" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1ad9882e4ce815cef6a504afa113544bfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_1acec45feb1ef1f3bf81240157d06d5432" kindref="member">pointer</ref></type>
        <definition>pointer Json::ValueIterator::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="832" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="832" bodyend="832"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_json_1_1_value_iterator_1afb06ea21add440c78c27dc49570460a5" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::ValueIterator::ValueIterator</definition>
        <argsstring>(const Value::ObjectValues::iterator &amp;current)</argsstring>
        <name>ValueIterator</name>
        <param>
          <type>const Value::ObjectValues::iterator &amp;</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="804" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_valueiterator.inl" bodystart="151" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator for object and array value. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9481">
        <label>Json::ValueIterator</label>
        <link refid="class_json_1_1_value_iterator"/>
        <childnode refid="9482" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9482">
        <label>Json::ValueIteratorBase</label>
        <link refid="class_json_1_1_value_iterator_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9483">
        <label>Json::ValueIterator</label>
        <link refid="class_json_1_1_value_iterator"/>
        <childnode refid="9484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9485">
        <label>std::map&lt; K, T &gt;::iterator</label>
      </node>
      <node id="9484">
        <label>Json::ValueIteratorBase</label>
        <link refid="class_json_1_1_value_iterator_base"/>
        <childnode refid="9485" relation="usage">
          <edgelabel>current_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="786" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="786" bodyend="833"/>
    <listofallmembers>
      <member refid="class_json_1_1_value_iterator_base_1ad6c553b249e89e3dc9933e100ccbe064" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>computeDistance</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a496e6aba44808433ec5858c178be5719" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>copy</name></member>
      <member refid="class_json_1_1_value_iterator_base_1affc8cf5ff54a9f432cc693362c153fa6" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>decrement</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a40a20c65abc423a26e3aae68d9a0525c" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>deref</name></member>
      <member refid="class_json_1_1_value_iterator_1a2be1a9aa60bbfc8812e9dd1a7f1a8786" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>difference_type</name></member>
      <member refid="class_json_1_1_value_iterator_base_1afe58f9534e1fd2033419fd9fe244551e" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>increment</name></member>
      <member refid="class_json_1_1_value_iterator_base_1aa90591f5f7f8d2f06cc4605816b53738" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>index</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a21820d6ee564e541bd118b21e4741962" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>isEqual</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a02fd11a4fbdc0007da1e8bcf5e6b83c3" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>iterator_category</name></member>
      <member refid="class_json_1_1_value_iterator_base_1aa2ff5e79fc96acd4c3cd288e92614fc7" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>key</name></member>
      <member refid="class_json_1_1_value_iterator_base_1ac3aa3870761342e47c6486d81f643c6c" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>memberName</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a543d4e73e3d2d121bc287b24231386c3" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>memberName</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a46a67081a5ef8d83f25ec15035403ce0" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>name</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a18c2dd42e0bb989ace141bfe9de52792" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator!=</name></member>
      <member refid="class_json_1_1_value_iterator_1aaa5be3457eedf0526a03b8a3b4c7c0a0" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator*</name></member>
      <member refid="class_json_1_1_value_iterator_1abcf4ddd994a010742cd4a436d65acd08" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator++</name></member>
      <member refid="class_json_1_1_value_iterator_1a92146c46f8249e2b2d12869e70cd4cee" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator++</name></member>
      <member refid="class_json_1_1_value_iterator_base_1ab786787fcad68ca5e8745aaf520fa17f" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator-</name></member>
      <member refid="class_json_1_1_value_iterator_1a06d6a29d96caf6af324a53973159e12b" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator--</name></member>
      <member refid="class_json_1_1_value_iterator_1a811302a868518a0995a9def955df5720" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator--</name></member>
      <member refid="class_json_1_1_value_iterator_1ad9882e4ce815cef6a504afa113544bfb" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator-&gt;</name></member>
      <member refid="class_json_1_1_value_iterator_1a8e23312b1db874f7e403fd7e76611bdc" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator=</name></member>
      <member refid="class_json_1_1_value_iterator_base_1afc656672ac28502f640ade32c38c1b56" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator==</name></member>
      <member refid="class_json_1_1_value_iterator_1acec45feb1ef1f3bf81240157d06d5432" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>pointer</name></member>
      <member refid="class_json_1_1_value_iterator_1ae87929b4567aa00372cf602c43b57160" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>reference</name></member>
      <member refid="class_json_1_1_value_iterator_1a23357670fdad61792670d86f62db7e16" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>SelfType</name></member>
      <member refid="class_json_1_1_value_iterator_1a308b8932ffc83eaa9d12dadd5c11a7dd" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>size_t</name></member>
      <member refid="class_json_1_1_value_iterator_1aeceedf6e1a7d48a588516ce2b1983d6f" prot="private" virt="non-virtual"><scope>Json::ValueIterator</scope><name>Value</name></member>
      <member refid="class_json_1_1_value_iterator_1a2c5ba7be611f05546530c8a88b2d2e37" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>value_type</name></member>
      <member refid="class_json_1_1_value_iterator_1a09425cf4dc12244072a942f290a5c0ec" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="class_json_1_1_value_iterator_1aa85aa208670891670392259efa0143bb" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="class_json_1_1_value_iterator_1a7d5e58a9a4a553968acdf3064b39d21c" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="class_json_1_1_value_iterator_1afb06ea21add440c78c27dc49570460a5" prot="private" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="class_json_1_1_value_iterator_base_1af45b028d9ff9cbd2554a87878b42dd75" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIteratorBase</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a640e990e5f03a96fd650122a2906f59d" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIteratorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
