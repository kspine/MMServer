<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="value_8h" kind="file">
    <compoundname>value.h</compoundname>
    <includes refid="forwards_8h" local="yes">forwards.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">exception</includes>
    <includes local="no">map</includes>
    <includedby refid="json_8h" local="yes">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/json.h</includedby>
    <includedby refid="reader_8h" local="yes">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/reader.h</includedby>
    <includedby refid="writer_8h" local="yes">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/writer.h</includedby>
    <includedby refid="json__reader_8cpp" local="no">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_reader.cpp</includedby>
    <includedby refid="json__value_8cpp" local="no">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp</includedby>
    <incdepgraph>
      <node id="126">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="127">
        <label>string</label>
      </node>
      <node id="130">
        <label>map</label>
      </node>
      <node id="129">
        <label>exception</label>
      </node>
      <node id="124">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h</label>
        <link refid="value.h"/>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>forwards.h</label>
        <link refid="forwards_8h"/>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="134">
        <label>WorldServer/src/ItemMgr.cpp</label>
        <link refid="src_2_item_mgr_8cpp"/>
      </node>
      <node id="133">
        <label>WorldServer/Src/ItemMgr.cpp</label>
        <link refid="_src_2_item_mgr_8cpp"/>
      </node>
      <node id="137">
        <label>HttpServer/src/Main.cpp</label>
        <link refid="_http_server_2src_2_main_8cpp"/>
      </node>
      <node id="139">
        <label>HttpServer/src/SeHWSend.cpp</label>
        <link refid="_se_h_w_send_8cpp"/>
      </node>
      <node id="141">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>HttpServer/src/SeHttpRespProcess.cpp</label>
        <link refid="_se_http_resp_process_8cpp"/>
      </node>
      <node id="132">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/json.h</label>
        <link refid="json_8h"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>HttpServer/src/SeWHProcess.cpp</label>
        <link refid="_se_w_h_process_8cpp"/>
      </node>
      <node id="143">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h</label>
        <link refid="value.h"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>HttpServer/src/HttpServer.cpp</label>
        <link refid="_http_server_8cpp"/>
      </node>
      <node id="145">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_writer.cpp</label>
        <link refid="json__writer_8cpp"/>
      </node>
      <node id="142">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_reader.cpp</label>
        <link refid="json__reader_8cpp"/>
      </node>
      <node id="135">
        <label>HttpServer/src/HttpServer.h</label>
        <link refid="_http_server_8h"/>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp</label>
        <link refid="json__value_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_json_1_1_exception" prot="public">Json::Exception</innerclass>
    <innerclass refid="class_json_1_1_runtime_error" prot="public">Json::RuntimeError</innerclass>
    <innerclass refid="class_json_1_1_logic_error" prot="public">Json::LogicError</innerclass>
    <innerclass refid="class_json_1_1_static_string" prot="public">Json::StaticString</innerclass>
    <innerclass refid="class_json_1_1_value" prot="public">Json::Value</innerclass>
    <innerclass refid="class_json_1_1_value_1_1_c_z_string" prot="private">Json::Value::CZString</innerclass>
    <innerclass refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage" prot="private">Json::Value::CZString::StringStorage</innerclass>
    <innerclass refid="struct_json_1_1_value_1_1_comment_info" prot="private">Json::Value::CommentInfo</innerclass>
    <innerclass refid="union_json_1_1_value_1_1_value_holder" prot="private">Json::Value::ValueHolder</innerclass>
    <innerclass refid="class_json_1_1_path_argument" prot="public">Json::PathArgument</innerclass>
    <innerclass refid="class_json_1_1_path" prot="public">Json::Path</innerclass>
    <innerclass refid="class_json_1_1_value_iterator_base" prot="public">Json::ValueIteratorBase</innerclass>
    <innerclass refid="class_json_1_1_value_const_iterator" prot="public">Json::ValueConstIterator</innerclass>
    <innerclass refid="class_json_1_1_value_iterator" prot="public">Json::ValueIterator</innerclass>
    <innernamespace refid="namespace_json">Json</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2007-2010<sp/>Baptiste<sp/>Lepilleur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>MIT<sp/>license,<sp/>or<sp/>public<sp/>domain<sp/>if<sp/>desired<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recognized<sp/>in<sp/>your<sp/>jurisdiction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>LICENSE<sp/>for<sp/>detail<sp/>or<sp/>copy<sp/>at<sp/>http://jsoncpp.sourceforge.net/LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CPPTL_JSON_H_INCLUDED</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CPPTL_JSON_H_INCLUDED</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="forwards_8h" kindref="compound">forwards.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_USE_CPPTL_SMALLMAP</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;cpptl/smallmap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;cpptl/forwards.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Disable<sp/>warning<sp/>C4251:<sp/>&lt;data<sp/>member&gt;:<sp/>&lt;type&gt;<sp/>needs<sp/>to<sp/>have<sp/>dll-interface<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>used<sp/>by...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSONCPP_DISABLE_DLL_INTERFACE_WARNING)</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(push)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>4251)</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSONCPP_DISABLE_DLL_INTERFACE_WARNING)</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="34"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Json<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_json_1_1_exception" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_exception" kindref="compound">Exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_exception" kindref="compound">Exception</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>~<ref refid="class_json_1_1_exception" kindref="compound">Exception</ref>()<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>what()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="class_json_1_1_exception_1a26b7dfcd51256ad4da2742bbd0e14a24" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_json_1_1_exception_1a26b7dfcd51256ad4da2742bbd0e14a24" kindref="member">msg_</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_json_1_1_runtime_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_runtime_error" kindref="compound">RuntimeError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_exception" kindref="compound">Exception</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_runtime_error" kindref="compound">RuntimeError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_json_1_1_logic_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_logic_error" kindref="compound">LogicError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_exception" kindref="compound">Exception</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_logic_error" kindref="compound">LogicError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a97f039a107b3f6cf1c3edee50e978f76" kindref="member">throwRuntimeError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="74"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a27613326e9e36bbfe04a905ac90caa91" kindref="member">throwLogicError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>{</highlight></codeline>
<codeline lineno="79" refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="80" refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>{</highlight></codeline>
<codeline lineno="90" refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>,<sp/></highlight></codeline>
<codeline lineno="92" refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>,<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351abcbd3eb00417335e094e4a03379659b5" kindref="member">numberOfCommentPlacement</ref></highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ifdef<sp/>JSON_USE_CPPTL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>typedef<sp/>CppTL::AnyEnumerator&lt;const<sp/>char<sp/>*&gt;<sp/>EnumMemberNames;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>typedef<sp/>CppTL::AnyEnumerator&lt;const<sp/>Value<sp/>&amp;&gt;<sp/>EnumValues;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_json_1_1_static_string" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_static_string" kindref="compound">StaticString</ref><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118" refid="class_json_1_1_static_string_1afb6baf1ec078ce76f0b0f9b39d19437f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_static_string_1afb6baf1ec078ce76f0b0f9b39d19437f" kindref="member">StaticString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>czstring)<sp/>:<sp/>c_str_(czstring)<sp/>{}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_json_1_1_static_string_1ac2b334d46bbea4c0227e508fc66433e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_str_;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_json_1_1_static_string_1ab86fc6a3183adf12fdba4b370acf1754" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_json_1_1_static_string_1ab86fc6a3183adf12fdba4b370acf1754" kindref="member">c_str</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_str_;<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125" refid="class_json_1_1_static_string_1a9f0d9e8caee8f8db14e2c8c24760dffd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_json_1_1_static_string_1a9f0d9e8caee8f8db14e2c8c24760dffd" kindref="member">c_str_</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_json_1_1_value" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/>{</highlight></codeline>
<codeline lineno="163" refid="class_json_1_1_value_1ad016df56489e5d360735457afba2f649" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_json_1_1_value_iterator_base" kindref="compound">ValueIteratorBase</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165" refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Members</ref>;</highlight></codeline>
<codeline lineno="166" refid="class_json_1_1_value_1a341cdf2e01f8b3c5b7317aa2f0768c53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref><sp/><ref refid="class_json_1_1_value_1a341cdf2e01f8b3c5b7317aa2f0768c53" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="167" refid="class_json_1_1_value_1af92282ca92b58b320debd486afb7696a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref><sp/><ref refid="class_json_1_1_value_1af92282ca92b58b320debd486afb7696a" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="168" refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">Json::UInt</ref><sp/><ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref>;</highlight></codeline>
<codeline lineno="169" refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" kindref="member">Json::Int</ref><sp/><ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="171" refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">Json::UInt64</ref><sp/><ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref>;</highlight></codeline>
<codeline lineno="172" refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Json::Int64</ref><sp/><ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="174" refid="class_json_1_1_value_1a1cbb82642ed05109b9833e49f042ece7" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">Json::LargestInt</ref><sp/><ref refid="class_json_1_1_value_1a1cbb82642ed05109b9833e49f042ece7" kindref="member">LargestInt</ref>;</highlight></codeline>
<codeline lineno="175" refid="class_json_1_1_value_1a6682a3684d635e03fc06ba229fa24eec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">Json::LargestUInt</ref><sp/><ref refid="class_json_1_1_value_1a6682a3684d635e03fc06ba229fa24eec" kindref="member">LargestUInt</ref>;</highlight></codeline>
<codeline lineno="176" refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a8048e741f2177c3b5d9ede4a5b8c53c2" kindref="member">Json::ArrayIndex</ref><sp/><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_json_1_1_value_1a6d6e9ea6807e46d5b7ded66d3032f607" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a6d6e9ea6807e46d5b7ded66d3032f607" kindref="member">null</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a1cbb82642ed05109b9833e49f042ece7" kindref="member">LargestInt</ref><sp/>minLargestInt;</highlight></codeline>
<codeline lineno="183" refid="class_json_1_1_value_1a8b4977696f13296fa8755c7953fafb2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a1cbb82642ed05109b9833e49f042ece7" kindref="member">LargestInt</ref><sp/><ref refid="class_json_1_1_value_1a8b4977696f13296fa8755c7953fafb2f" kindref="member">maxLargestInt</ref>;</highlight></codeline>
<codeline lineno="185" refid="class_json_1_1_value_1a8ddb32d9d55fa5323ae5135639dc2e31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a6682a3684d635e03fc06ba229fa24eec" kindref="member">LargestUInt</ref><sp/><ref refid="class_json_1_1_value_1a8ddb32d9d55fa5323ae5135639dc2e31" kindref="member">maxLargestUInt</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_json_1_1_value_1a7df8a39e2502b8c92a6a41e3d752d2c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref><sp/><ref refid="class_json_1_1_value_1a7df8a39e2502b8c92a6a41e3d752d2c8" kindref="member">minInt</ref>;</highlight></codeline>
<codeline lineno="190" refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref><sp/><ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">maxInt</ref>;</highlight></codeline>
<codeline lineno="192" refid="class_json_1_1_value_1ac79e63ee68d3aa914bfd6988be669b87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref><sp/><ref refid="class_json_1_1_value_1ac79e63ee68d3aa914bfd6988be669b87" kindref="member">maxUInt</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref><sp/>minInt64;</highlight></codeline>
<codeline lineno="198" refid="class_json_1_1_value_1a4492634870b8c5709ce967b384ac6006" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref><sp/><ref refid="class_json_1_1_value_1a4492634870b8c5709ce967b384ac6006" kindref="member">maxInt64</ref>;</highlight></codeline>
<codeline lineno="200" refid="class_json_1_1_value_1ae1eb89c305c39516696ff305cffa01da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref><sp/><ref refid="class_json_1_1_value_1ae1eb89c305c39516696ff305cffa01da" kindref="member">maxUInt64</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSONCPP_DOC_EXCLUDE_IMPLEMENTATION</highlight></codeline>
<codeline lineno="205" refid="class_json_1_1_value_1_1_c_z_string" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207" refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6d" kindref="member">DuplicationPolicy</ref><sp/>{</highlight></codeline>
<codeline lineno="208" refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6da08d540450fa6c4af57eaacf063eedd20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>noDuplication<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="209" refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6dabb2134294dd8fc37dd82d18bb794fe20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6dabb2134294dd8fc37dd82d18bb794fe20" kindref="member">duplicate</ref>,</highlight></codeline>
<codeline lineno="210" refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6da5c18c35205a3be63ad14ce659e70fe7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>duplicateOnCopy</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length,<sp/>DuplicationPolicy<sp/>allocate);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>other);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>JSON_HAS_RVALUE_REFERENCES</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>&amp;<sp/>operator=(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>other);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1a28e13086a32670328b9f4fac22f09ccb" kindref="member">operator&lt;</ref>(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ab43569e63f57a29dbc7deebfee90f98e" kindref="member">operator==</ref>(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>c_str()<sp/>const;<sp/>///&lt;<sp/>\deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>data()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isStaticString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage" kindref="compound">StringStorage</ref><sp/>{</highlight></codeline>
<codeline lineno="232" refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a7f68c8d6197c5692a525854b5f29f87b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>policy_:<sp/>2;</highlight></codeline>
<codeline lineno="233" refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a165d865c44e6471d34668eeb4f15b140" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length_:<sp/>30;<sp/></highlight><highlight class="comment">//<sp/>1GB<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="class_json_1_1_value_1_1_c_z_string_1a5b4d28349294034d7f779c3c95d0306c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a5b4d28349294034d7f779c3c95d0306c" kindref="member">cstr_</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>actually,<sp/>a<sp/>prefixed<sp/>string,<sp/>unless<sp/>policy<sp/>is<sp/>noDup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238" refid="class_json_1_1_value_1_1_c_z_string_1aecf29982235c9c165a0971023ebbb270" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1aecf29982235c9c165a0971023ebbb270" kindref="member">index_</ref>;</highlight></codeline>
<codeline lineno="239" refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage" kindref="compound">StringStorage</ref><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_USE_CPPTL_SMALLMAP</highlight></codeline>
<codeline lineno="245" refid="class_json_1_1_value_1a08b6c80c3af7071d908dabf044de5388" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;CZString,<sp/>Value&gt;<sp/><ref refid="class_json_1_1_value_1a08b6c80c3af7071d908dabf044de5388" kindref="member">ObjectValues</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CppTL::SmallMap&lt;CZString,<sp/>Value&gt;<sp/><ref refid="class_json_1_1_value_1a08b6c80c3af7071d908dabf044de5388" kindref="member">ObjectValues</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ifndef<sp/>JSON_USE_CPPTL_SMALLMAP</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ifndef<sp/>JSONCPP_DOC_EXCLUDE_IMPLEMENTATION</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>type<sp/>=<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(<ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref><sp/>value);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(<ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref><sp/>value);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(<ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref><sp/>value);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(<ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref><sp/>value);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value);<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end);<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_static_string" kindref="compound">StaticString</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>value);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>JSON_HAS_RVALUE_REFERENCES</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>~<ref refid="class_json_1_1_value" kindref="compound">Value</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator=(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/>other);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swapPayload(<ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1a28e13086a32670328b9f4fac22f09ccb" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ab7fa4756616605a2697128067b80ffa5" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ad5a4ecbced1596c900ac7d7a51660357" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1a1390d728e894f489d3f02cedbaf53e35" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ab43569e63f57a29dbc7deebfee90f98e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ad56c73c4b133b623f29fdf9e5240296d" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>asCString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>std::string<sp/>asString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getString(</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">**<sp/>begin,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">**<sp/>end)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>CppTL::ConstString<sp/>asConstString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref><sp/>asInt()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref><sp/>asUInt()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref><sp/>asInt64()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref><sp/>asUInt64()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a1cbb82642ed05109b9833e49f042ece7" kindref="member">LargestInt</ref><sp/>asLargestInt()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a6682a3684d635e03fc06ba229fa24eec" kindref="member">LargestUInt</ref><sp/>asLargestUInt()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>asFloat()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>asDouble()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>asBool()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNull()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBool()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInt()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInt64()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isUInt()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isUInt64()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isIntegral()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isDouble()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNumeric()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isArray()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isObject()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isConvertibleTo(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>size);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValidIndex(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_static_string" kindref="compound">StaticString</ref>&amp;<sp/>key);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>key);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>find(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>begin,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>end)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>demand(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>begin,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>end);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/>removeMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/>removeMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>removed);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeMember(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>removed);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>removed);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeIndex(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>i,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>removed);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="523"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Members</ref><sp/>getMemberNames()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//#<sp/>ifdef<sp/>JSON_USE_CPPTL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>EnumMemberNames<sp/>enumMemberNames()<sp/>const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>EnumValues<sp/>enumValues()<sp/>const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><ref refid="config_8h_1a6933a4321aa03c8a29016669073f1af6" kindref="member">JSONCPP_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>setComment(std::string<sp/>const&amp;)<sp/>instead.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>void<sp/>setComment(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>comment,<sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setComment(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>comment,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setComment(const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>comment,<sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasComment(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement)<sp/>const;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>getComment(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement)<sp/>const;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>toStyledString()<sp/>const;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">const_iterator</ref><sp/>begin()<sp/>const;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">const_iterator</ref><sp/>end()<sp/>const;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">iterator</ref><sp/>begin();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">iterator</ref><sp/>end();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessors<sp/>for<sp/>the<sp/>[start,<sp/>limit)<sp/>range<sp/>of<sp/>bytes<sp/>within<sp/>the<sp/>JSON<sp/>text<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>this<sp/>value<sp/>was<sp/>parsed,<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOffsetStart(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOffsetLimit(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>limit);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>getOffsetStart()<sp/>const;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>getOffsetLimit()<sp/>const;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initBasic(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allocated<sp/>=<sp/>false);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>resolveReference(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>resolveReference(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="struct_json_1_1_value_1_1_comment_info" refkind="compound"><highlight class="normal"><sp/><sp/>struct<sp/><ref refid="struct_json_1_1_value_1_1_comment_info" kindref="compound">CommentInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>CommentInfo();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>~CommentInfo();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setComment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="struct_json_1_1_value_1_1_comment_info_1a020f19c7098bab8ec8fec14cd1a5afb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_json_1_1_value_1_1_comment_info_1a020f19c7098bab8ec8fec14cd1a5afb9" kindref="member">comment_</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>struct<sp/>MemberNamesTransform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>typedef<sp/>const<sp/>char<sp/>*result_type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>char<sp/>*operator()(<sp/>const<sp/>CZString<sp/>&amp;name<sp/>)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>name.c_str();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="union_json_1_1_value_1_1_value_holder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_json_1_1_value_1_1_value_holder" kindref="compound">ValueHolder</ref><sp/>{</highlight></codeline>
<codeline lineno="587" refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a1cbb82642ed05109b9833e49f042ece7" kindref="member">LargestInt</ref><sp/><ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>;</highlight></codeline>
<codeline lineno="588" refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a6682a3684d635e03fc06ba229fa24eec" kindref="member">LargestUInt</ref><sp/><ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>;</highlight></codeline>
<codeline lineno="589" refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>;</highlight></codeline>
<codeline lineno="590" refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref>;</highlight></codeline>
<codeline lineno="591" refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>ptr<sp/>to<sp/>unsigned,<sp/>followed<sp/>by<sp/>str,<sp/>unless<sp/>!allocated_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a08b6c80c3af7071d908dabf044de5388" kindref="member">ObjectValues</ref>*<sp/><ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}<sp/>value_;</highlight></codeline>
<codeline lineno="594" refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>type_<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="595" refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allocated_<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Notes:<sp/>if<sp/>declared<sp/>as<sp/>bool,<sp/>bitfield<sp/>is<sp/>useless.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>allocated_,<sp/>string_<sp/>must<sp/>be<sp/>null-terminated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_value_1_1_comment_info" kindref="compound">CommentInfo</ref>*<sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[start,<sp/>limit)<sp/>byte<sp/>offsets<sp/>in<sp/>the<sp/>source<sp/>JSON<sp/>text<sp/>from<sp/>which<sp/>this<sp/>Value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>was<sp/>extracted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref>;</highlight></codeline>
<codeline lineno="602" refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">};</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="class_json_1_1_path_argument" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="610" refid="class_json_1_1_path_argument_1a4877239a6b7f09fbf5a61ca68a49d74c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_json_1_1_path" kindref="compound">Path</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>(<ref refid="namespace_json_1a8048e741f2177c3b5d9ede4a5b8c53c2" kindref="member">ArrayIndex</ref><sp/>index);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="618" refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9" kindref="member">Kind</ref><sp/>{</highlight></codeline>
<codeline lineno="619" refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9afa8c7a261ccb8ae5171d2372321c2698" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>kindNone<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="620" refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" kindref="member">kindIndex</ref>,</highlight></codeline>
<codeline lineno="621" refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>kindKey</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="623" refid="class_json_1_1_path_argument_1a5d901b404323b61f066fb1adb3babfe1" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_json_1_1_path_argument_1a5d901b404323b61f066fb1adb3babfe1" kindref="member">key_</ref>;</highlight></codeline>
<codeline lineno="624" refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a8048e741f2177c3b5d9ede4a5b8c53c2" kindref="member">ArrayIndex</ref><sp/><ref refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" kindref="member">index_</ref>;</highlight></codeline>
<codeline lineno="625" refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9" kindref="member">Kind</ref><sp/><ref refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" kindref="member">kind_</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">};</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="class_json_1_1_path" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_path" kindref="compound">Path</ref><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path" kindref="compound">Path</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a1<sp/>=<sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>(),</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a2<sp/>=<sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>(),</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a3<sp/>=<sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>(),</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a4<sp/>=<sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>(),</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a5<sp/>=<sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>());</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>resolve(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/>resolve(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>make(<ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="655" refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>PathArgument*&gt;<sp/><ref refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" kindref="member">InArgs</ref>;</highlight></codeline>
<codeline lineno="656" refid="class_json_1_1_path_1a27d96232d034d7a78286468676f9cb3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;PathArgument&gt;<sp/><ref refid="class_json_1_1_path_1a27d96232d034d7a78286468676f9cb3e" kindref="member">Args</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" kindref="member">InArgs</ref>&amp;<sp/>in);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addPathInArg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" kindref="member">InArgs</ref>&amp;<sp/>in,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InArgs::const_iterator&amp;<sp/>itInArg,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9" kindref="member">PathArgument::Kind</ref><sp/>kind);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invalidPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path_1a27d96232d034d7a78286468676f9cb3e" kindref="member">Args</ref><sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal">};</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="class_json_1_1_value_iterator_base" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">ValueIteratorBase</ref><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="673" refid="class_json_1_1_value_iterator_base_1a02fd11a4fbdc0007da1e8bcf5e6b83c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::bidirectional_iterator_tag<sp/><ref refid="class_json_1_1_value_iterator_base_1a02fd11a4fbdc0007da1e8bcf5e6b83c3" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="674" refid="class_json_1_1_value_iterator_base_1a9d3a3c7ce5cdefe23cb486239cf07bb5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base_1a9d3a3c7ce5cdefe23cb486239cf07bb5" kindref="member">size_t</ref>;</highlight></codeline>
<codeline lineno="675" refid="class_json_1_1_value_iterator_base_1a4e44bf8cbd17ec8d6e2c185904a15ebd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base_1a4e44bf8cbd17ec8d6e2c185904a15ebd" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="676" refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">ValueIteratorBase</ref><sp/><ref refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee" kindref="member">SelfType</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="class_json_1_1_value_iterator_base_1afc656672ac28502f640ade32c38c1b56" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base_1afc656672ac28502f640ade32c38c1b56" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isEqual(other);<sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680" refid="class_json_1_1_value_iterator_base_1a18c2dd42e0bb989ace141bfe9de52792" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base_1a18c2dd42e0bb989ace141bfe9de52792" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!isEqual(other);<sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="class_json_1_1_value_iterator_base_1ab786787fcad68ca5e8745aaf520fa17f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator_base_1a4e44bf8cbd17ec8d6e2c185904a15ebd" kindref="member">difference_type</ref><sp/><ref refid="class_json_1_1_value_iterator_base_1ab786787fcad68ca5e8745aaf520fa17f" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other.<ref refid="class_json_1_1_value_iterator_base_1ad6c553b249e89e3dc9933e100ccbe064" kindref="member">computeDistance</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/>key()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref><sp/>index()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>std::string<sp/>name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="config_8h_1a6933a4321aa03c8a29016669073f1af6" kindref="member">JSONCPP_DEPRECATED</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>`key<sp/>=<sp/>name();`<sp/>instead.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>char<sp/>const*<sp/>memberName()<sp/>const;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>const*<sp/>memberName(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>const**<sp/>end)<sp/>const;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal">protected:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>deref()<sp/>const;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>difference_type<sp/>computeDistance(const<sp/>SelfType&amp;<sp/>other)<sp/>const;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEqual(const<sp/>SelfType&amp;<sp/>other)<sp/>const;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copy(const<sp/>SelfType&amp;<sp/>other);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="722" refid="class_json_1_1_value_iterator_base_1ab3138ce8af8301cca3b041ea55cb922a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>::ObjectValues::iterator<sp/>current_;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicates<sp/>that<sp/>iterator<sp/>is<sp/>for<sp/>a<sp/>null<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="class_json_1_1_value_iterator_base_1a3e08b114a1aed9bde518c527f94a8c59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNull_;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal">public:</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>some<sp/>reason,<sp/>BORLAND<sp/>needs<sp/>these<sp/>at<sp/>the<sp/>end,<sp/>rather</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>earlier.<sp/>No<sp/>idea<sp/>why.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">ValueIteratorBase</ref>();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>explicit<sp/>ValueIteratorBase(const<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>::ObjectValues::iterator&amp;<sp/>current);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">};</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="class_json_1_1_value_const_iterator" refkind="compound"><highlight class="normal">class<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref><sp/>:<sp/>public<sp/>ValueIteratorBase<sp/>{</highlight></codeline>
<codeline lineno="737" refid="class_json_1_1_value_const_iterator_1aeceedf6e1a7d48a588516ce2b1983d6f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="740" refid="class_json_1_1_value_const_iterator_1aa5f1707dcef4bfe73e23ddc14dbe760d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_const_iterator_1aa5f1707dcef4bfe73e23ddc14dbe760d" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//typedef<sp/>unsigned<sp/>int<sp/>size_t;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//typedef<sp/>int<sp/>difference_type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="class_json_1_1_value_const_iterator_1aa9b05c6a37cd352ea1ee6e13b816f709" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_const_iterator_1aa9b05c6a37cd352ea1ee6e13b816f709" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="744" refid="class_json_1_1_value_const_iterator_1a400136bd8bc09e9fddec0785fa2cff14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/><ref refid="class_json_1_1_value_const_iterator_1a400136bd8bc09e9fddec0785fa2cff14" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="745" refid="class_json_1_1_value_const_iterator_1a0c2e33e7eb5a80dd8709fb28ece83933" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref><sp/><ref refid="class_json_1_1_value_const_iterator_1a0c2e33e7eb5a80dd8709fb28ece83933" kindref="member">SelfType</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref>();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref>(<ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>other);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value::ObjectValues::iterator&amp;<sp/>current);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>SelfType&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueIteratorBase&amp;<sp/>other);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="class_json_1_1_value_const_iterator_1ab3f0c2edbfc8f7d60645f3d597d05e28" refkind="member"><highlight class="normal"><sp/><sp/>SelfType<sp/><ref refid="class_json_1_1_value_const_iterator_1ab3f0c2edbfc8f7d60645f3d597d05e28" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>SelfType<sp/>temp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>++*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763" refid="class_json_1_1_value_const_iterator_1a94935961e9331c6f7b907b05ec8df75e" refkind="member"><highlight class="normal"><sp/><sp/>SelfType<sp/><ref refid="class_json_1_1_value_const_iterator_1a94935961e9331c6f7b907b05ec8df75e" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>SelfType<sp/>temp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>--*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="class_json_1_1_value_const_iterator_1a31415e44e44e56fb2bfda7e8bb784646" refkind="member"><highlight class="normal"><sp/><sp/>SelfType&amp;<sp/><ref refid="class_json_1_1_value_const_iterator_1a31415e44e44e56fb2bfda7e8bb784646" kindref="member">operator--</ref>()<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>decrement();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="class_json_1_1_value_const_iterator_1a2cfe2f7a94a688186efdafb1b181c319" refkind="member"><highlight class="normal"><sp/><sp/>SelfType&amp;<sp/><ref refid="class_json_1_1_value_const_iterator_1a2cfe2f7a94a688186efdafb1b181c319" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>increment();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="class_json_1_1_value_const_iterator_1aeb44153d71c61ac9397a84d5ecc244c5" refkind="member"><highlight class="normal"><sp/><sp/>reference<sp/><ref refid="class_json_1_1_value_const_iterator_1aeb44153d71c61ac9397a84d5ecc244c5" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deref();<sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="class_json_1_1_value_const_iterator_1ac493d31c8eede8af10b71415fe8e624b" refkind="member"><highlight class="normal"><sp/><sp/>pointer<sp/><ref refid="class_json_1_1_value_const_iterator_1ac493d31c8eede8af10b71415fe8e624b" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;deref();<sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal">};</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="class_json_1_1_value_iterator" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">ValueIteratorBase</ref><sp/>{</highlight></codeline>
<codeline lineno="787" refid="class_json_1_1_value_iterator_1aeceedf6e1a7d48a588516ce2b1983d6f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="790" refid="class_json_1_1_value_iterator_1a2c5ba7be611f05546530c8a88b2d2e37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_iterator_1a2c5ba7be611f05546530c8a88b2d2e37" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="791" refid="class_json_1_1_value_iterator_1a308b8932ffc83eaa9d12dadd5c11a7dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_1a308b8932ffc83eaa9d12dadd5c11a7dd" kindref="member">size_t</ref>;</highlight></codeline>
<codeline lineno="792" refid="class_json_1_1_value_iterator_1a2be1a9aa60bbfc8812e9dd1a7f1a8786" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_1a2be1a9aa60bbfc8812e9dd1a7f1a8786" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="793" refid="class_json_1_1_value_iterator_1ae87929b4567aa00372cf602c43b57160" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_iterator_1ae87929b4567aa00372cf602c43b57160" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="794" refid="class_json_1_1_value_iterator_1acec45feb1ef1f3bf81240157d06d5432" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/><ref refid="class_json_1_1_value_iterator_1acec45feb1ef1f3bf81240157d06d5432" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="795" refid="class_json_1_1_value_iterator_1a23357670fdad61792670d86f62db7e16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref><sp/><ref refid="class_json_1_1_value_iterator_1a23357670fdad61792670d86f62db7e16" kindref="member">SelfType</ref>;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref>();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value::ObjectValues::iterator&amp;<sp/>current);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808" refid="class_json_1_1_value_iterator_1abcf4ddd994a010742cd4a436d65acd08" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref><sp/><ref refid="class_json_1_1_value_iterator_1abcf4ddd994a010742cd4a436d65acd08" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref><sp/>temp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>++*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="class_json_1_1_value_iterator_1a06d6a29d96caf6af324a53973159e12b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref><sp/><ref refid="class_json_1_1_value_iterator_1a06d6a29d96caf6af324a53973159e12b" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref><sp/>temp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>--*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820" refid="class_json_1_1_value_iterator_1a811302a868518a0995a9def955df5720" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref>&amp;<sp/><ref refid="class_json_1_1_value_iterator_1a811302a868518a0995a9def955df5720" kindref="member">operator--</ref>()<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>decrement();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="class_json_1_1_value_iterator_1a92146c46f8249e2b2d12869e70cd4cee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref>&amp;<sp/><ref refid="class_json_1_1_value_iterator_1a92146c46f8249e2b2d12869e70cd4cee" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>increment();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="class_json_1_1_value_iterator_1aaa5be3457eedf0526a03b8a3b4c7c0a0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">reference</ref><sp/><ref refid="class_json_1_1_value_iterator_1aaa5be3457eedf0526a03b8a3b4c7c0a0" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deref();<sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832" refid="class_json_1_1_value_iterator_1ad9882e4ce815cef6a504afa113544bfb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">pointer</ref><sp/><ref refid="class_json_1_1_value_iterator_1ad9882e4ce815cef6a504afa113544bfb" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;deref();<sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal">};</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Json</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref>&amp;<sp/>a,<sp/><ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref>&amp;<sp/>b)<sp/>{<sp/>a.<ref refid="class_json_1_1_value_1aab841120d78e296e1bc06a373345e822" kindref="member">swap</ref>(b);<sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSONCPP_DISABLE_DLL_INTERFACE_WARNING)</highlight></codeline>
<codeline lineno="846"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(pop)</highlight></codeline>
<codeline lineno="847"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSONCPP_DISABLE_DLL_INTERFACE_WARNING)</highlight></codeline>
<codeline lineno="848"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CPPTL_JSON_H_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h"/>
  </compounddef>
</doxygen>
