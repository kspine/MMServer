<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="writer_8h" kind="file">
    <compoundname>writer.h</compoundname>
    <includes refid="value_8h" local="yes">value.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">ostream</includes>
    <includedby refid="json_8h" local="yes">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/json.h</includedby>
    <includedby refid="json__value_8cpp" local="no">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp</includedby>
    <includedby refid="json__writer_8cpp" local="no">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_writer.cpp</includedby>
    <incdepgraph>
      <node id="151">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="152">
        <label>string</label>
      </node>
      <node id="155">
        <label>map</label>
      </node>
      <node id="154">
        <label>exception</label>
      </node>
      <node id="156">
        <label>ostream</label>
      </node>
      <node id="148">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/writer.h</label>
        <link refid="writer.h"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>value.h</label>
        <link refid="value_8h"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>forwards.h</label>
        <link refid="forwards_8h"/>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="160">
        <label>WorldServer/src/ItemMgr.cpp</label>
        <link refid="src_2_item_mgr_8cpp"/>
      </node>
      <node id="159">
        <label>WorldServer/Src/ItemMgr.cpp</label>
        <link refid="_src_2_item_mgr_8cpp"/>
      </node>
      <node id="163">
        <label>HttpServer/src/Main.cpp</label>
        <link refid="_http_server_2src_2_main_8cpp"/>
      </node>
      <node id="165">
        <label>HttpServer/src/SeHWSend.cpp</label>
        <link refid="_se_h_w_send_8cpp"/>
      </node>
      <node id="164">
        <label>HttpServer/src/SeHttpRespProcess.cpp</label>
        <link refid="_se_http_resp_process_8cpp"/>
      </node>
      <node id="158">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/json.h</label>
        <link refid="json_8h"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>HttpServer/src/SeWHProcess.cpp</label>
        <link refid="_se_w_h_process_8cpp"/>
      </node>
      <node id="157">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/writer.h</label>
        <link refid="writer.h"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>HttpServer/src/HttpServer.cpp</label>
        <link refid="_http_server_8cpp"/>
      </node>
      <node id="168">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_writer.cpp</label>
        <link refid="json__writer_8cpp"/>
      </node>
      <node id="161">
        <label>HttpServer/src/HttpServer.h</label>
        <link refid="_http_server_8h"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp</label>
        <link refid="json__value_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_json_1_1_stream_writer" prot="public">Json::StreamWriter</innerclass>
    <innerclass refid="class_json_1_1_stream_writer_1_1_factory" prot="public">Json::StreamWriter::Factory</innerclass>
    <innerclass refid="class_json_1_1_stream_writer_builder" prot="public">Json::StreamWriterBuilder</innerclass>
    <innerclass refid="class_json_1_1_writer" prot="public">Json::Writer</innerclass>
    <innerclass refid="class_json_1_1_fast_writer" prot="public">Json::FastWriter</innerclass>
    <innerclass refid="class_json_1_1_styled_writer" prot="public">Json::StyledWriter</innerclass>
    <innerclass refid="class_json_1_1_styled_stream_writer" prot="public">Json::StyledStreamWriter</innerclass>
    <innernamespace refid="namespace_json">Json</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2007-2010<sp/>Baptiste<sp/>Lepilleur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>MIT<sp/>license,<sp/>or<sp/>public<sp/>domain<sp/>if<sp/>desired<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recognized<sp/>in<sp/>your<sp/>jurisdiction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>LICENSE<sp/>for<sp/>detail<sp/>or<sp/>copy<sp/>at<sp/>http://jsoncpp.sourceforge.net/LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_WRITER_H_INCLUDED</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_WRITER_H_INCLUDED</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="value_8h" kindref="compound">value.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Disable<sp/>warning<sp/>C4251:<sp/>&lt;data<sp/>member&gt;:<sp/>&lt;type&gt;<sp/>needs<sp/>to<sp/>have<sp/>dll-interface<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>used<sp/>by...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSONCPP_DISABLE_DLL_INTERFACE_WARNING)</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(push)</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>4251)</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSONCPP_DISABLE_DLL_INTERFACE_WARNING)</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Json<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Value;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_json_1_1_stream_writer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_stream_writer" kindref="compound">StreamWriter</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" refkind="member"><highlight class="normal"><sp/><sp/>std::ostream*<sp/><ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>owned;<sp/>will<sp/>not<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_stream_writer" kindref="compound">StreamWriter</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_json_1_1_stream_writer" kindref="compound">StreamWriter</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root,<sp/>std::ostream*<sp/>sout)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_json_1_1_stream_writer_1_1_factory" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_stream_writer_1_1_factory" kindref="compound">Factory</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_json_1_1_stream_writer_1_1_factory" kindref="compound">Factory</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_stream_writer" kindref="compound">StreamWriter</ref>*<sp/>newStreamWriter()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>Factory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>StreamWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">std::string<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="namespace_json_1afd767fe4c7e962d0ff3d1a6d1622619f" kindref="member">writeString</ref>(<ref refid="class_json_1_1_stream_writer_1_1_factory" kindref="compound">StreamWriter::Factory</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>factory,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_json_1_1_stream_writer_builder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_stream_writer_builder" kindref="compound">StreamWriterBuilder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_stream_writer_1_1_factory" kindref="compound">StreamWriter::Factory</ref><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>We<sp/>use<sp/>a<sp/>Json::Value<sp/>so<sp/>that<sp/>we<sp/>can<sp/>add<sp/>data-members<sp/>to<sp/>this<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>a<sp/>major<sp/>version<sp/>bump.</highlight></codeline>
<codeline lineno="112" refid="class_json_1_1_stream_writer_builder_1a79bdf2e639a52f4e758c0b95bd1d3423" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref><sp/><ref refid="class_json_1_1_stream_writer_builder_1a79bdf2e639a52f4e758c0b95bd1d3423" kindref="member">settings_</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_stream_writer_builder" kindref="compound">StreamWriterBuilder</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>~<ref refid="class_json_1_1_stream_writer_builder" kindref="compound">StreamWriterBuilder</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_stream_writer" kindref="compound">StreamWriter</ref>*<sp/>newStreamWriter()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validate(<ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref>*<sp/>invalid)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator[](std::string<sp/>key);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDefaults(<ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref>*<sp/>settings);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_json_1_1_writer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_writer" kindref="compound">Writer</ref><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_json_1_1_writer" kindref="compound">Writer</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_json_1_1_fast_writer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_fast_writer" kindref="compound">FastWriter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_writer" kindref="compound">Writer</ref><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_fast_writer" kindref="compound">FastWriter</ref>();</highlight></codeline>
<codeline lineno="161" refid="class_json_1_1_fast_writer_1adff26c4ab4c9dd7edf2ef7099f835ff3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_fast_writer_1adff26c4ab4c9dd7edf2ef7099f835ff3" kindref="member">~FastWriter</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enableYAMLCompatibility();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dropNullPlaceholders();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>omitEndingLineFeed();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>overridden<sp/>from<sp/>Writer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>std::string<sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref>;</highlight></codeline>
<codeline lineno="181" refid="class_json_1_1_fast_writer_1a4c4c1911179bf472d24492915b0e489a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_fast_writer_1a4c4c1911179bf472d24492915b0e489a" kindref="member">yamlCompatiblityEnabled_</ref>;</highlight></codeline>
<codeline lineno="182" refid="class_json_1_1_fast_writer_1a97e9d4ff84b59a48756dcc27a71b5904" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_fast_writer_1a97e9d4ff84b59a48756dcc27a71b5904" kindref="member">dropNullPlaceholders_</ref>;</highlight></codeline>
<codeline lineno="183" refid="class_json_1_1_fast_writer_1abd6e13851db6dcf59d84af68d48d50ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_fast_writer_1abd6e13851db6dcf59d84af68d48d50ac" kindref="member">omitEndingLineFeed_</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_json_1_1_styled_writer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_styled_writer" kindref="compound">StyledWriter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_writer" kindref="compound">Writer</ref><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer" kindref="compound">StyledWriter</ref>();</highlight></codeline>
<codeline lineno="213" refid="class_json_1_1_styled_writer_1a8b9e87010044fb58c7b3029d7bd64b70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a8b9e87010044fb58c7b3029d7bd64b70" kindref="member">~StyledWriter</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>overridden<sp/>from<sp/>Writer</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>std::string<sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeArrayValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMultineArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pushValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeIndent();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeWithIndent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>indent();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unindent();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeCommentBeforeValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeCommentAfterValueOnSameLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasCommentForValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_json_1a2e6b8616041876128cbef54b8c75da62" kindref="member">normalizeEOL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="class_json_1_1_styled_writer_1a0b102abcd4b7e11eb22df63921e097df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_json_1_1_styled_writer_1a0b102abcd4b7e11eb22df63921e097df" kindref="member">ChildValues</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a0b102abcd4b7e11eb22df63921e097df" kindref="member">ChildValues</ref><sp/><ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>;</highlight></codeline>
<codeline lineno="239" refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref>;</highlight></codeline>
<codeline lineno="240" refid="class_json_1_1_styled_writer_1a98a33f1d4c853a4dbf87ca17499c5830" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_json_1_1_styled_writer_1a98a33f1d4c853a4dbf87ca17499c5830" kindref="member">indentString_</ref>;</highlight></codeline>
<codeline lineno="241" refid="class_json_1_1_styled_writer_1a9c8fc62cb4f3b4a6dbed470fea2aa567" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1a9c8fc62cb4f3b4a6dbed470fea2aa567" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="242" refid="class_json_1_1_styled_writer_1ae911f06042935286c24a9fb23dba78bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1ae911f06042935286c24a9fb23dba78bd" kindref="member">indentSize_</ref>;</highlight></codeline>
<codeline lineno="243" refid="class_json_1_1_styled_writer_1acaabfa48b50a8bb7fa9ce98e2ae971d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1acaabfa48b50a8bb7fa9ce98e2ae971d9" kindref="member">addChildValues_</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_json_1_1_styled_stream_writer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="class_json_1_1_styled_stream_writer" kindref="compound">StyledStreamWriter</ref><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer" kindref="compound">StyledStreamWriter</ref>(std::string<sp/>indentation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275" refid="class_json_1_1_styled_stream_writer_1a17444a59f617970279714e97b0ddfa46" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a17444a59f617970279714e97b0ddfa46" kindref="member">~StyledStreamWriter</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeArrayValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMultineArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pushValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeIndent();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeWithIndent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>indent();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unindent();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeCommentBeforeValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeCommentAfterValueOnSameLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasCommentForValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_json_1a2e6b8616041876128cbef54b8c75da62" kindref="member">normalizeEOL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>text);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="class_json_1_1_styled_stream_writer_1ad0e42dda934aaee87fa9434c30186a9b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_json_1_1_styled_stream_writer_1ad0e42dda934aaee87fa9434c30186a9b" kindref="member">ChildValues</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ad0e42dda934aaee87fa9434c30186a9b" kindref="member">ChildValues</ref><sp/><ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>;</highlight></codeline>
<codeline lineno="303" refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" refkind="member"><highlight class="normal"><sp/><sp/>std::ostream*<sp/><ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref>;</highlight></codeline>
<codeline lineno="304" refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" kindref="member">indentString_</ref>;</highlight></codeline>
<codeline lineno="305" refid="class_json_1_1_styled_stream_writer_1a67fdaa6758885f082b6a7ede52b0ab91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a67fdaa6758885f082b6a7ede52b0ab91" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="306" refid="class_json_1_1_styled_stream_writer_1a58dc0eaf85c58b83d19d6bba8eead27d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_json_1_1_styled_stream_writer_1a58dc0eaf85c58b83d19d6bba8eead27d" kindref="member">indentation_</ref>;</highlight></codeline>
<codeline lineno="307" refid="class_json_1_1_styled_stream_writer_1a4e4bb7fc223b2652b72b523b1ce414fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addChildValues_<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="308" refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>indented_<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"></highlight><highlight class="normal">std::string<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" kindref="member">Int</ref><sp/>value);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">std::string<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref><sp/>value);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"></highlight><highlight class="normal">std::string<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref><sp/>value);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">std::string<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref><sp/>value);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">std::string<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">std::string<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">std::string<sp/><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/><ref refid="namespace_json_1aa0c8235a4a5c6599da5d3332743db8ac" kindref="member">valueToQuotedString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" kindref="member">JSON_API</ref><sp/>std::ostream&amp;<sp/><ref refid="namespace_json_1a87bc83d7e90fc666d28aa16727deda2f" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Json</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSONCPP_DISABLE_DLL_INTERFACE_WARNING)</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(pop)</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSONCPP_DISABLE_DLL_INTERFACE_WARNING)</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>JSON_WRITER_H_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/writer.h"/>
  </compounddef>
</doxygen>
