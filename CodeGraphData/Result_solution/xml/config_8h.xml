<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="config_8h" kind="file">
    <compoundname>config.h</compoundname>
    <includedby refid="autolink_8h" local="yes">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/autolink.h</includedby>
    <includedby refid="forwards_8h" local="yes">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/forwards.h</includedby>
    <includedby refid="assertions_8h" local="yes">F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/assertions.h</includedby>
    <invincdepgraph>
      <node id="24">
        <label>WorldServer/src/ItemMgr.cpp</label>
        <link refid="src_2_item_mgr_8cpp"/>
      </node>
      <node id="21">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/autolink.h</label>
        <link refid="autolink_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>WorldServer/Src/ItemMgr.cpp</label>
        <link refid="_src_2_item_mgr_8cpp"/>
      </node>
      <node id="20">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h</label>
        <link refid="config.h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>HttpServer/src/Main.cpp</label>
        <link refid="_http_server_2src_2_main_8cpp"/>
      </node>
      <node id="29">
        <label>HttpServer/src/SeHWSend.cpp</label>
        <link refid="_se_h_w_send_8cpp"/>
      </node>
      <node id="33">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>HttpServer/src/SeHttpRespProcess.cpp</label>
        <link refid="_se_http_resp_process_8cpp"/>
      </node>
      <node id="22">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/json.h</label>
        <link refid="json_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>HttpServer/src/SeWHProcess.cpp</label>
        <link refid="_se_w_h_process_8cpp"/>
      </node>
      <node id="35">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h</label>
        <link refid="value_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/forwards.h</label>
        <link refid="forwards_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>HttpServer/src/HttpServer.cpp</label>
        <link refid="_http_server_8cpp"/>
      </node>
      <node id="37">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_writer.cpp</label>
        <link refid="json__writer_8cpp"/>
      </node>
      <node id="34">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_reader.cpp</label>
        <link refid="json__reader_8cpp"/>
      </node>
      <node id="25">
        <label>HttpServer/src/HttpServer.h</label>
        <link refid="_http_server_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/assertions.h</label>
        <link refid="assertions_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp</label>
        <link refid="json__value_8cpp"/>
      </node>
      <node id="38">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h</label>
        <link refid="features_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_json">Json</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="config_8h_1a51968e67b1462ac893f87a0fc8b791cd" prot="public" static="no">
        <name>JSON_USE_EXCEPTION</name>
        <initializer>1</initializer>
        <briefdescription>
<para>If defined, indicates that json library is embedded in CppTL library. </para>        </briefdescription>
        <detaileddescription>
<para>If defined, indicates that json may leverage CppTL library If defined, indicates that cpptl vector based map should be used instead of std::map as Value container. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" line="22" column="9" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" prot="public" static="no">
        <name>JSON_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If defined, indicates that the source file is amalgated to prevent private header inclusion. Remarks: it is automatically defined in the generated amalgated header. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" line="51" column="9" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8h_1a978860f0e3983ca76a4e5af28d9bccd4" prot="public" static="no">
        <name>JSON_HAS_RVALUE_REFERENCES</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" line="100" column="9" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8h_1a6933a4321aa03c8a29016669073f1af6" prot="public" static="no">
        <name>JSONCPP_DEPRECATED</name>
        <param><defname>message</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" line="113" column="9" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8h_1a210f7d060accd6a881cd070dc7a333a4" prot="public" static="no">
        <name>JSON_HAS_INT64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" line="134" column="9" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2007-2010<sp/>Baptiste<sp/>Lepilleur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>MIT<sp/>license,<sp/>or<sp/>public<sp/>domain<sp/>if<sp/>desired<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recognized<sp/>in<sp/>your<sp/>jurisdiction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>LICENSE<sp/>for<sp/>detail<sp/>or<sp/>copy<sp/>at<sp/>http://jsoncpp.sourceforge.net/LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_CONFIG_H_INCLUDED</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_CONFIG_H_INCLUDED</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">//#<sp/>define<sp/>JSON_IN_CPPTL<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">//#<sp/><sp/>define<sp/>JSON_USE_CPPTL<sp/>1</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight><highlight class="comment">//#<sp/><sp/>define<sp/>JSON_USE_CPPTL_SMALLMAP<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>non-zero,<sp/>the<sp/>library<sp/>uses<sp/>exceptions<sp/>to<sp/>report<sp/>bad<sp/>input<sp/>instead<sp/>of<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assertion<sp/>macros.<sp/>The<sp/>default<sp/>is<sp/>to<sp/>use<sp/>exceptions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_USE_EXCEPTION</highlight></codeline>
<codeline lineno="22" refid="config_8h_1a51968e67b1462ac893f87a0fc8b791cd" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_USE_EXCEPTION<sp/>1</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>#define<sp/>JSON_IS_AMALGAMATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_IN_CPPTL</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;cpptl/config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_USE_CPPTL<sp/>1</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_IN_CPPTL</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_API<sp/>CPPTL_API</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(JSON_DLL_BUILD)</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_API<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSONCPP_DISABLE_DLL_INTERFACE_WARNING</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(JSON_DLL)</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_API<sp/>__declspec(dllimport)</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSONCPP_DISABLE_DLL_INTERFACE_WARNING</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ifdef<sp/>JSON_IN_CPPTL</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_API)</highlight></codeline>
<codeline lineno="51" refid="config_8h_1a1d61ffde86ce1a18fd83194ff0d9a206" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_API</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>JSON_NO_INT64<sp/>is<sp/>defined,<sp/>then<sp/>Json<sp/>only<sp/>support<sp/>C++<sp/>&quot;int&quot;<sp/>type<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Storages,<sp/>and<sp/>64<sp/>bits<sp/>integer<sp/>support<sp/>is<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>JSON_NO_INT64<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>//<sp/>MSVC</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>_MSC_VER<sp/>&lt;=<sp/>1200<sp/>//<sp/>MSVC<sp/>6</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Visual<sp/>Studio<sp/>6<sp/>only<sp/>support<sp/>conversion<sp/>from<sp/>__int64<sp/>to<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(no<sp/>conversion<sp/>from<sp/>unsigned<sp/>__int64).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>JSON_USE_INT64_DOUBLE_CONVERSION<sp/>1</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>warning<sp/>4786<sp/>for<sp/>VS6<sp/>caused<sp/>by<sp/>STL<sp/>(identifier<sp/>was<sp/>truncated<sp/>to<sp/>&apos;255&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>characters<sp/>in<sp/>the<sp/>debug<sp/>information)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>projects<sp/>I&apos;ve<sp/>ever<sp/>seen<sp/>with<sp/>VS6<sp/>were<sp/>using<sp/>this<sp/>globally<sp/>(not<sp/>bothering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>pragma<sp/>push/pop).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>pragma<sp/>warning(disable<sp/>:<sp/>4786)</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif<sp/>//<sp/>MSVC<sp/>6</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>_MSC_VER<sp/>&gt;=<sp/>1500<sp/>//<sp/>MSVC<sp/>2008</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>JSONCPP_DEPRECATED(message)<sp/>__declspec(deprecated(message))</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_HAS_RVALUE_REFERENCES</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1600<sp/>//<sp/>MSVC<sp/>&gt;=<sp/>2010</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_HAS_RVALUE_REFERENCES<sp/>1</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MSVC<sp/>&gt;=<sp/>2010</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>__has_feature(cxx_rvalue_references)</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_HAS_RVALUE_REFERENCES<sp/>1</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>has_feature</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__GNUC__<sp/>//<sp/>not<sp/>clang<sp/>(gcc<sp/>comes<sp/>later<sp/>since<sp/>clang<sp/>emulates<sp/>gcc)</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(__GXX_EXPERIMENTAL_CXX0X__)<sp/>||<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L)</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_HAS_RVALUE_REFERENCES<sp/>1</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GXX_EXPERIMENTAL</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__clang__<sp/>||<sp/>__GNUC__</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>defined<sp/>JSON_HAS_RVALUE_REFERENCES</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JSON_HAS_RVALUE_REFERENCES</highlight></codeline>
<codeline lineno="100" refid="config_8h_1a978860f0e3983ca76a4e5af28d9bccd4" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSON_HAS_RVALUE_REFERENCES<sp/>0</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__GNUC__<sp/>//<sp/>not<sp/>clang<sp/>(gcc<sp/>comes<sp/>later<sp/>since<sp/>clang<sp/>emulates<sp/>gcc)</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>(__GNUC__<sp/>&gt;<sp/>4<sp/>||<sp/>(__GNUC__<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>5))</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>JSONCPP_DEPRECATED(message)<sp/><sp/>__attribute__<sp/>((deprecated(message)))</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>elif<sp/>(__GNUC__<sp/>&gt;<sp/>3<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>1))</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>JSONCPP_DEPRECATED(message)<sp/><sp/>__attribute__((__deprecated__))</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif<sp/><sp/>//<sp/>GNUC<sp/>version</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__clang__<sp/>||<sp/>__GNUC__</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSONCPP_DEPRECATED)</highlight></codeline>
<codeline lineno="113" refid="config_8h_1a6933a4321aa03c8a29016669073f1af6" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>JSONCPP_DEPRECATED(message)</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSONCPP_DEPRECATED)</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="namespace_json" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Json<sp/>{</highlight></codeline>
<codeline lineno="117" refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" kindref="member">Int</ref>;</highlight></codeline>
<codeline lineno="118" refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_NO_INT64)</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>JSON_HAS_INT64</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>if<sp/>defined(JSON_NO_INT64)</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>For<sp/>Microsoft<sp/>Visual<sp/>use<sp/>specific<sp/>types<sp/>as<sp/>long<sp/>long<sp/>is<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>//<sp/>Microsoft<sp/>Visual<sp/>Studio</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__int64<sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int64<sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>if<sp/>defined(_MSC_VER)<sp/>//<sp/>Other<sp/>platforms,<sp/>use<sp/>long<sp/>long</highlight></codeline>
<codeline lineno="129" refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref>;</highlight></codeline>
<codeline lineno="130" refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="132" refid="namespace_json_1a218d880af853ce786cd985e82571d297" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref><sp/><ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref>;</highlight></codeline>
<codeline lineno="133" refid="namespace_json_1ae202ecad69725e23443f465e257456d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/><ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>;</highlight></codeline>
<codeline lineno="134" refid="config_8h_1a210f7d060accd6a881cd070dc7a333a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JSON_HAS_INT64</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSON_NO_INT64)</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>Json</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>JSON_CONFIG_H_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/config.h"/>
  </compounddef>
</doxygen>
