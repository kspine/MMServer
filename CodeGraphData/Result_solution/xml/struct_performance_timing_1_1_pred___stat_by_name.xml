<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="struct_performance_timing_1_1_pred___stat_by_name" kind="struct" prot="public">
    <compoundname>PerformanceTiming::Pred_StatByName</compoundname>
    <includes refid="src_2_performance_timing_8h" local="no">PerformanceTiming.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_performance_timing_1_1_pred___stat_by_name_1abfe845e8d29e851c4e79a68bbfe1a48c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PerformanceTiming::Pred_StatByName::operator()</definition>
        <argsstring>(const CPerformanceStat *pLHS, const CPerformanceStat *pRHS) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="class_performance_timing_1_1_c_performance_stat" kindref="compound">CPerformanceStat</ref> *</type>
          <declname>pLHS</declname>
        </param>
        <param>
          <type>const <ref refid="class_performance_timing_1_1_c_performance_stat" kindref="compound">CPerformanceStat</ref> *</type>
          <declname>pRHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="793" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="793" bodyend="796"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a52826ace51151b5511dc91d2bff39a4a" compoundref="src_2_performance_timing_8cpp" startline="754" endline="757">PerformanceTiming::CPerformanceStat::Name</references>
      </memberdef>
      <memberdef kind="function" id="struct_performance_timing_1_1_pred___stat_by_name_1abfe845e8d29e851c4e79a68bbfe1a48c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PerformanceTiming::Pred_StatByName::operator()</definition>
        <argsstring>(const CPerformanceStat *pLHS, const CPerformanceStat *pRHS) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="class_performance_timing_1_1_c_performance_stat" kindref="compound">CPerformanceStat</ref> *</type>
          <declname>pLHS</declname>
        </param>
        <param>
          <type>const <ref refid="class_performance_timing_1_1_c_performance_stat" kindref="compound">CPerformanceStat</ref> *</type>
          <declname>pRHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="793" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="793" bodyend="796"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>&lt; - stl predicate </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="792" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="791" bodyend="797"/>
    <listofallmembers>
      <member refid="struct_performance_timing_1_1_pred___stat_by_name_1abfe845e8d29e851c4e79a68bbfe1a48c" prot="public" virt="non-virtual"><scope>PerformanceTiming::Pred_StatByName</scope><name>operator()</name></member>
      <member refid="struct_performance_timing_1_1_pred___stat_by_name_1abfe845e8d29e851c4e79a68bbfe1a48c" prot="public" virt="non-virtual"><scope>PerformanceTiming::Pred_StatByName</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
