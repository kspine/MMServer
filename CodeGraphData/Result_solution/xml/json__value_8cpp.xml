<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="json__value_8cpp" kind="file">
    <compoundname>json_value.cpp</compoundname>
    <includes refid="assertions_8h" local="no">json/assertions.h</includes>
    <includes refid="value_8h" local="no">json/value.h</includes>
    <includes refid="writer_8h" local="no">json/writer.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">utility</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">algorithm</includes>
    <includes refid="json__valueiterator_8inl" local="yes">json_valueiterator.inl</includes>
    <incdepgraph>
      <node id="207">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="205">
        <label>stdlib.h</label>
      </node>
      <node id="219">
        <label>cassert</label>
      </node>
      <node id="210">
        <label>string</label>
      </node>
      <node id="213">
        <label>map</label>
      </node>
      <node id="212">
        <label>exception</label>
      </node>
      <node id="215">
        <label>ostream</label>
      </node>
      <node id="222">
        <label>json_valueiterator.inl</label>
        <link refid="json__valueiterator_8inl"/>
      </node>
      <node id="214">
        <label>json/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>json/value.h</label>
        <link refid="value_8h"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>forwards.h</label>
        <link refid="forwards_8h"/>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>vector</label>
      </node>
      <node id="217">
        <label>utility</label>
      </node>
      <node id="206">
        <label>sstream</label>
      </node>
      <node id="216">
        <label>math.h</label>
      </node>
      <node id="220">
        <label>cstddef</label>
      </node>
      <node id="204">
        <label>json/assertions.h</label>
        <link refid="assertions_8h"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp</label>
        <link refid="json_value.cpp"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>algorithm</label>
      </node>
      <node id="218">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_json">Json</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" prot="public" static="no">
        <name>JSON_ASSERT_UNREACHABLE</name>
        <initializer>assert(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" line="22" column="9" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="22" bodyend="-1"/>
        <referencedby refid="class_json_1_1_value_1a7ec153803631a27abf58cba2bb1af70c" compoundref="json__value_8cpp" startline="817" endline="848">Json::Value::isConvertibleTo</referencedby>
        <referencedby refid="class_json_1_1_value_1af0ad8aa027575c3277296458f3fb7b0a" compoundref="json__value_8cpp" startline="497" endline="541">Json::Value::operator&lt;</referencedby>
        <referencedby refid="class_json_1_1_value_1a14363dda23a6ae2def9afd1590ae85d3" compoundref="json__value_8cpp" startline="549" endline="591">Json::Value::operator==</referencedby>
        <referencedby refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" compoundref="json__value_8cpp" startline="851" endline="872">Json::Value::size</referencedby>
        <referencedby refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" compoundref="json__value_8cpp" startline="303" endline="328">Json::Value::Value</referencedby>
        <referencedby refid="class_json_1_1_value_1a287dea48da3912d02756735bf677b27b" compoundref="json__value_8cpp" startline="441" endline="463">Json::Value::~Value</referencedby>
      </memberdef>
      <memberdef kind="define" id="json__value_8cpp_1a08a0024ebd1cc16ccc4a208e1e817f6e" prot="public" static="no">
        <name>ALIGNAS</name>
        <param><defname>byte_alignment</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" line="32" column="10" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2011<sp/>Baptiste<sp/>Lepilleur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>MIT<sp/>license,<sp/>or<sp/>public<sp/>domain<sp/>if<sp/>desired<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recognized<sp/>in<sp/>your<sp/>jurisdiction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>LICENSE<sp/>for<sp/>detail<sp/>or<sp/>copy<sp/>at<sp/>http://jsoncpp.sourceforge.net/LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assertions_8h" kindref="compound">json/assertions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="value_8h" kindref="compound">json/value.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="writer_8h" kindref="compound">json/writer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;cpptl/conststring.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>min()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JSON_ASSERT_UNREACHABLE<sp/>assert(false)</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Json<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>walkaround<sp/>to<sp/>avoid<sp/>the<sp/>static<sp/>initialization<sp/>of<sp/>Value::null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kNull<sp/>must<sp/>be<sp/>word-aligned<sp/>to<sp/>avoid<sp/>crashing<sp/>on<sp/>ARM.<sp/><sp/>We<sp/>use<sp/>an<sp/>alignment<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>8<sp/>(instead<sp/>of<sp/>4)<sp/>as<sp/>a<sp/>bit<sp/>of<sp/>future-proofing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__ARMEL__)</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ALIGNAS(byte_alignment)<sp/>__attribute__((aligned(byte_alignment)))</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="32" refid="json__value_8cpp_1a08a0024ebd1cc16ccc4a208e1e817f6e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ALIGNAS(byte_alignment)</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ad0638ab262fec34f995ca3d8a22c9cc4" kindref="member">ALIGNAS</ref>(8)<sp/>kNull[sizeof(Value)]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="35" refid="namespace_json_1ab30055b4bbd82aecaca57ccecd63bbe6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/><ref refid="namespace_json_1ab30055b4bbd82aecaca57ccecd63bbe6" kindref="member">kNullRef</ref><sp/>=<sp/>kNull[0];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a6d6e9ea6807e46d5b7ded66d3032f607" kindref="member">Value::null</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_json_1ab30055b4bbd82aecaca57ccecd63bbe6" kindref="member">kNullRef</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">Value::nullRef</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" kindref="member">Int</ref><sp/><ref refid="class_json_1_1_value_1a7df8a39e2502b8c92a6a41e3d752d2c8" kindref="member">Value::minInt</ref><sp/>=<sp/><ref refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" kindref="member">Int</ref>(~(<ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref>(-1)<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" kindref="member">Int</ref><sp/><ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">Value::maxInt</ref><sp/>=<sp/><ref refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" kindref="member">Int</ref>(<ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref>(-1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref><sp/><ref refid="class_json_1_1_value_1ac79e63ee68d3aa914bfd6988be669b87" kindref="member">Value::maxUInt</ref><sp/>=<sp/><ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref>(-1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref><sp/><ref refid="class_json_1_1_value_1a815ef899bc312c93bc426511acfe31a7" kindref="member">Value::minInt64</ref><sp/>=<sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref>(~(<ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>(-1)<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref><sp/><ref refid="class_json_1_1_value_1a4492634870b8c5709ce967b384ac6006" kindref="member">Value::maxInt64</ref><sp/>=<sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref>(<ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>(-1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/><ref refid="class_json_1_1_value_1ae1eb89c305c39516696ff305cffa01da" kindref="member">Value::maxUInt64</ref><sp/>=<sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>(-1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>constant<sp/>is<sp/>hard-coded<sp/>because<sp/>some<sp/>compiler<sp/>have<sp/>trouble</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converting<sp/>Value::maxUInt64<sp/>to<sp/>a<sp/>double<sp/>correctly<sp/>(AIX/xlC).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assumes<sp/>that<sp/>UInt64<sp/>is<sp/>a<sp/>64<sp/>bits<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespace_json_1aecc0306aa526f25c5156f842182fb7fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1aecc0306aa526f25c5156f842182fb7fb" kindref="member">maxUInt64AsDouble</ref><sp/>=<sp/>18446744073709551615.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref><sp/><ref refid="class_json_1_1_value_1af91df130daa50dd43d2cd89e6ee67706" kindref="member">Value::minLargestInt</ref><sp/>=<sp/><ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref>(~(<ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>(-1)<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref><sp/><ref refid="class_json_1_1_value_1a8b4977696f13296fa8755c7953fafb2f" kindref="member">Value::maxLargestInt</ref><sp/>=<sp/><ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref>(<ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>(-1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref><sp/><ref refid="class_json_1_1_value_1a8ddb32d9d55fa5323ae5135639dc2e31" kindref="member">Value::maxLargestUInt</ref><sp/>=<sp/><ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>(-1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="57" refid="namespace_json_1aff0180507262a244de61b961178d7443" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1aff0180507262a244de61b961178d7443" kindref="member">InRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/>T<sp/>min,<sp/>U<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d<sp/>&gt;=<sp/>min<sp/>&amp;&amp;<sp/>d<sp/>&lt;=<sp/>max;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/>//<sp/>if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integerToDouble(<ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">Json::UInt64</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref>(value<sp/>/<sp/>2))<sp/>*<sp/>2.0<sp/>+<sp/><ref refid="namespace_json_1ab7b47d2905da3b4ae60e4e800ec9ae5f" kindref="member">Int64</ref>(value<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integerToDouble(T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1aff0180507262a244de61b961178d7443" kindref="member">InRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/>T<sp/>min,<sp/>U<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d<sp/>&gt;=<sp/>integerToDouble(min)<sp/>&amp;&amp;<sp/>d<sp/>&lt;=<sp/>integerToDouble(max);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="82" refid="namespace_json_1a678ac3a60cd70ec0fb4c9abfd40eb0c4" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespace_json_1a678ac3a60cd70ec0fb4c9abfd40eb0c4" kindref="member">duplicateStringValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>an<sp/>integer<sp/>overflow<sp/>in<sp/>the<sp/>call<sp/>to<sp/>malloc<sp/>below<sp/>by<sp/>limiting<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>a<sp/>sane<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">Value::maxInt</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/>Value::maxInt<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newString<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(malloc(length<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newString<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a97f039a107b3f6cf1c3edee50e978f76" kindref="member">throwRuntimeError</ref>(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::duplicateStringValue():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>string<sp/>value<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>memcpy(newString,<sp/>value,<sp/>length);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>newString[length]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newString;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Record<sp/>the<sp/>length<sp/>as<sp/>a<sp/>prefix.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="namespace_json_1a9795a09a0141d1f12d307c4386aeaee6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespace_json_1a9795a09a0141d1f12d307c4386aeaee6" kindref="member">duplicateAndPrefixStringValue</ref>(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>an<sp/>integer<sp/>overflow<sp/>in<sp/>the<sp/>call<sp/>to<sp/>malloc<sp/>below<sp/>by<sp/>limiting<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>a<sp/>sane<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(length<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">Value::maxInt</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>-<sp/>1U,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::duplicateAndPrefixStringValue():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;length<sp/>too<sp/>big<sp/>for<sp/>prefixing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>actualLength<sp/>=<sp/>length<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unsigned))<sp/>+<sp/>1U;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newString<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(malloc(actualLength));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newString<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a97f039a107b3f6cf1c3edee50e978f76" kindref="member">throwRuntimeError</ref>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::duplicateAndPrefixStringValue():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>string<sp/>value<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(newString)<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>memcpy(newString<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">),<sp/>value,<sp/>length);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>newString[actualLength<sp/>-<sp/>1U]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>buffer<sp/>over-run<sp/>accidents<sp/>by<sp/>users<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newString;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123" refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPrefixed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>prefixed,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">*<sp/>length,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">**<sp/>value)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isPrefixed)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>*length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(strlen(prefixed));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>prefixed;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>*length<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prefixed);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>prefixed<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unsigned);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137" refid="namespace_json_1acf8dd162c01e37846e129556c50e4037" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1acf8dd162c01e37846e129556c50e4037" kindref="member">releaseStringValue</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value)<sp/>{<sp/>free(value);<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Json</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ValueInternals...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__valueiterator_8inl" kindref="compound">json_valueiterator.inl</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Json<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_json_1_1_exception_1a4dd1b9f007bed842e3ef9883d965fe22" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_exception_1a4dd1b9f007bed842e3ef9883d965fe22" kindref="member">Exception::Exception</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>:<sp/>msg_(msg)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="158" refid="class_json_1_1_exception_1aaf69650e18361cad0dea4c3e66ab123c" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_exception_1aaf69650e18361cad0dea4c3e66ab123c" kindref="member">Exception::~Exception</ref>()<sp/>throw()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="160" refid="class_json_1_1_exception_1add02e7f2ad4623cb44659ee079859197" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="class_json_1_1_exception_1add02e7f2ad4623cb44659ee079859197" kindref="member">Exception::what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_exception_1a26b7dfcd51256ad4da2742bbd0e14a24" kindref="member">msg_</ref>.c_str();</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164" refid="class_json_1_1_runtime_error_1ae4f102d5c1efb773887efc8c7911e6f8" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_runtime_error_1ae4f102d5c1efb773887efc8c7911e6f8" kindref="member">RuntimeError::RuntimeError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="class_json_1_1_exception" kindref="compound">Exception</ref>(msg)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="167" refid="class_json_1_1_logic_error_1ae8a834c790017a55df74c70b91f23329" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_logic_error_1ae8a834c790017a55df74c70b91f23329" kindref="member">LogicError::LogicError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="class_json_1_1_exception" kindref="compound">Exception</ref>(msg)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="170" refid="namespace_json_1a97f039a107b3f6cf1c3edee50e978f76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a97f039a107b3f6cf1c3edee50e978f76" kindref="member">throwRuntimeError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_runtime_error" kindref="compound">RuntimeError</ref>(msg);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174" refid="namespace_json_1a27613326e9e36bbfe04a905ac90caa91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a27613326e9e36bbfe04a905ac90caa91" kindref="member">throwLogicError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_logic_error" kindref="compound">LogicError</ref>(msg);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>Value::CommentInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="struct_json_1_1_value_1_1_comment_info_1ab23b0c125695d284bded2fb106a49043" refkind="member"><highlight class="normal"><ref refid="struct_json_1_1_value_1_1_comment_info_1ab23b0c125695d284bded2fb106a49043" kindref="member">Value::CommentInfo::CommentInfo</ref>()<sp/>:<sp/>comment_(0)<sp/>{}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="struct_json_1_1_value_1_1_comment_info_1ab4d0877190bdbf484e4e2a3bade42ac8" refkind="member"><highlight class="normal"><ref refid="struct_json_1_1_value_1_1_comment_info_1ab4d0877190bdbf484e4e2a3bade42ac8" kindref="member">Value::CommentInfo::~CommentInfo</ref>()<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comment_)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1acf8dd162c01e37846e129556c50e4037" kindref="member">releaseStringValue</ref>(comment_);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="struct_json_1_1_value_1_1_comment_info_1a4d01c2cd8c07995969c5d636dfd4fa8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_value_1_1_comment_info_1a4d01c2cd8c07995969c5d636dfd4fa8c" kindref="member">Value::CommentInfo::setComment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comment_)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1acf8dd162c01e37846e129556c50e4037" kindref="member">releaseStringValue</ref>(comment_);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>comment_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1a188941dcc789ccb6539c3d6f41405582" kindref="member">JSON_ASSERT</ref>(text<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>text[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>||<sp/>text[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::setComment():<sp/>Comments<sp/>must<sp/>start<sp/>with<sp/>/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>seems<sp/>that<sp/>/**/<sp/>style<sp/>comments<sp/>are<sp/>acceptable<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>comment_<sp/>=<sp/><ref refid="namespace_json_1a678ac3a60cd70ec0fb4c9abfd40eb0c4" kindref="member">duplicateStringValue</ref>(text,<sp/>len);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>Value::CZString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Notes:<sp/>policy_<sp/>indicates<sp/>if<sp/>the<sp/>string<sp/>was<sp/>allocated<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>string<sp/>is<sp/>stored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_json_1_1_value_1_1_c_z_string_1a4b8aa6eaabdec78cffec96e088da996f" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string_1a4b8aa6eaabdec78cffec96e088da996f" kindref="member">Value::CZString::CZString</ref>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>aindex)<sp/>:<sp/>cstr_(0),<sp/>index_(aindex)<sp/>{}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_json_1_1_value_1_1_c_z_string_1a86a86eaf0cf26d4c861d0daa359d608a" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string_1a4b8aa6eaabdec78cffec96e088da996f" kindref="member">Value::CZString::CZString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ulength,<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6d" kindref="member">DuplicationPolicy</ref><sp/>allocate)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>cstr_(str)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>!=<sp/>duplicate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a7f68c8d6197c5692a525854b5f29f87b" kindref="member">policy_</ref><sp/>=<sp/>allocate<sp/>&amp;<sp/>0x3;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a165d865c44e6471d34668eeb4f15b140" kindref="member">length_</ref><sp/>=<sp/>ulength<sp/>&amp;<sp/>0x3FFFFFFF;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_json_1_1_value_1_1_c_z_string_1a9685070d440335b55ef5c85747d25157" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string_1a4b8aa6eaabdec78cffec96e088da996f" kindref="member">Value::CZString::CZString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>cstr_(other.storage_.policy_<sp/>!=<sp/>noDuplication<sp/>&amp;&amp;<sp/>other.cstr_<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="namespace_json_1a678ac3a60cd70ec0fb4c9abfd40eb0c4" kindref="member">duplicateStringValue</ref>(other.cstr_,<sp/>other.storage_.length_)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>other.cstr_)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a7f68c8d6197c5692a525854b5f29f87b" kindref="member">policy_</ref><sp/>=<sp/>(other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a5b4d28349294034d7f779c3c95d0306c" kindref="member">cstr_</ref></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6d" kindref="member">DuplicationPolicy</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a7f68c8d6197c5692a525854b5f29f87b" kindref="member">policy_</ref>)<sp/>==<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6da08d540450fa6c4af57eaacf063eedd20" kindref="member">noDuplication</ref></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6da08d540450fa6c4af57eaacf063eedd20" kindref="member">noDuplication</ref><sp/>:<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6dabb2134294dd8fc37dd82d18bb794fe20" kindref="member">duplicate</ref>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6d" kindref="member">DuplicationPolicy</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a7f68c8d6197c5692a525854b5f29f87b" kindref="member">policy_</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a165d865c44e6471d34668eeb4f15b140" kindref="member">length_</ref><sp/>=<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a165d865c44e6471d34668eeb4f15b140" kindref="member">length_</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>JSON_HAS_RVALUE_REFERENCES</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string_1a4b8aa6eaabdec78cffec96e088da996f" kindref="member">Value::CZString::CZString</ref>(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>&amp;&amp;<sp/>other)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>:<sp/>cstr_(other.cstr_),<sp/>index_(other.index_)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>other.cstr_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_json_1_1_value_1_1_c_z_string_1add6989dc7073646b95e5ebacb3f07d51" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string_1add6989dc7073646b95e5ebacb3f07d51" kindref="member">Value::CZString::~CZString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cstr_<sp/>&amp;&amp;<sp/>storage_.policy_<sp/>==<sp/>duplicate)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1acf8dd162c01e37846e129556c50e4037" kindref="member">releaseStringValue</ref>(const_cast&lt;char*&gt;(cstr_));</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_json_1_1_value_1_1_c_z_string_1ad59f3542d2eea749a6a63409d1a02207" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1ad59f3542d2eea749a6a63409d1a02207" kindref="member">Value::CZString::swap</ref>(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>std::swap(cstr_,<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a5b4d28349294034d7f779c3c95d0306c" kindref="member">cstr_</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>std::swap(index_,<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1aecf29982235c9c165a0971023ebbb270" kindref="member">index_</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_json_1_1_value_1_1_c_z_string_1a6513ff431b0593d5744868dfee739f7b" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">Value::CZString</ref>&amp;<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a6513ff431b0593d5744868dfee739f7b" kindref="member">Value::CZString::operator=</ref>(<ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aab841120d78e296e1bc06a373345e822" kindref="member">swap</ref>(other);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_json_1_1_value_1_1_c_z_string_1a5e88edf9f7443c77d6b70e409a0b5983" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a5e88edf9f7443c77d6b70e409a0b5983" kindref="member">Value::CZString::operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cstr_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index_<sp/>&lt;<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1aecf29982235c9c165a0971023ebbb270" kindref="member">index_</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>strcmp(cstr_,<sp/>other.cstr_)<sp/>&lt;<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>both<sp/>are<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>this_len<sp/>=<sp/>this-&gt;storage_.length_;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>other_len<sp/>=<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a165d865c44e6471d34668eeb4f15b140" kindref="member">length_</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>min_len<sp/>=<sp/>std::min(this_len,<sp/>other_len);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>memcmp(this-&gt;cstr_,<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a5b4d28349294034d7f779c3c95d0306c" kindref="member">cstr_</ref>,<sp/>min_len);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this_len<sp/>&lt;<sp/>other_len);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_json_1_1_value_1_1_c_z_string_1af7a3b51ccf1bb205210c6b9a570093bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1af7a3b51ccf1bb205210c6b9a570093bc" kindref="member">Value::CZString::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cstr_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index_<sp/>==<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1aecf29982235c9c165a0971023ebbb270" kindref="member">index_</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>strcmp(cstr_,<sp/>other.cstr_)<sp/>==<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>both<sp/>are<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>this_len<sp/>=<sp/>this-&gt;storage_.length_;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>other_len<sp/>=<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a17c92f0f089a4314e3b1d5695dc1a851" kindref="member">storage_</ref>.<ref refid="struct_json_1_1_value_1_1_c_z_string_1_1_string_storage_1a165d865c44e6471d34668eeb4f15b140" kindref="member">length_</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_len<sp/>!=<sp/>other_len)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>memcmp(this-&gt;cstr_,<sp/>other.<ref refid="class_json_1_1_value_1_1_c_z_string_1a5b4d28349294034d7f779c3c95d0306c" kindref="member">cstr_</ref>,<sp/>this_len);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comp<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="class_json_1_1_value_1_1_c_z_string_1a4e9f305dbc4a4700abd955fde673a01c" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a4e9f305dbc4a4700abd955fde673a01c" kindref="member">Value::CZString::index</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index_;<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//const<sp/>char*<sp/>Value::CZString::c_str()<sp/>const<sp/>{<sp/>return<sp/>cstr_;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_json_1_1_value_1_1_c_z_string_1a02482793b88b1062c4a0dd0a53f3d2a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a02482793b88b1062c4a0dd0a53f3d2a7" kindref="member">Value::CZString::data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cstr_;<sp/>}</highlight></codeline>
<codeline lineno="288" refid="class_json_1_1_value_1_1_c_z_string_1a4e697840c41fb56756be7a75efa114cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a4e697840c41fb56756be7a75efa114cb" kindref="member">Value::CZString::length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_.length_;<sp/>}</highlight></codeline>
<codeline lineno="289" refid="class_json_1_1_value_1_1_c_z_string_1af3cc02b77c2cd79d4646fcea3575c1fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1af3cc02b77c2cd79d4646fcea3575c1fd" kindref="member">Value::CZString::isStaticString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_.policy_<sp/>==<sp/>noDuplication;<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>Value::Value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>vtype)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(vtype);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(vtype)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a08b6c80c3af7071d908dabf044de5388" kindref="member">ObjectValues</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" kindref="member">JSON_ASSERT_UNREACHABLE</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="class_json_1_1_value_1a4744ae571fcf34f4b16a2257b3b3b585" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(<ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_json_1_1_value_1ae67a857b01286e3499a87e95be848d20" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(<ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="340" refid="class_json_1_1_value_1ab1cdc3d9a4d4cc03fa01439d43ceb1b5" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(<ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344" refid="class_json_1_1_value_1a8adda58d5ae17bf7ca6a53bab4a7b69c" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(<ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="class_json_1_1_value_1a32228cc84d83200cca8441451997996c" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="class_json_1_1_value_1ad87b849356816aca75995dd07302e49d" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>=<sp/><ref refid="namespace_json_1a9795a09a0141d1f12d307c4386aeaee6" kindref="member">duplicateAndPrefixStringValue</ref>(value,<sp/>static_cast&lt;unsigned&gt;(strlen(value)));</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="class_json_1_1_value_1a39fa09d1902efbd4350e1236db920571" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>beginValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>endValue)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>=</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a9795a09a0141d1f12d307c4386aeaee6" kindref="member">duplicateAndPrefixStringValue</ref>(beginValue,<sp/>static_cast&lt;unsigned&gt;(endValue<sp/>-<sp/>beginValue));</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="class_json_1_1_value_1aa4501dd4edf3ce3d5145fc656f088b21" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>=</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a9795a09a0141d1f12d307c4386aeaee6" kindref="member">duplicateAndPrefixStringValue</ref>(value.data(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.length()));</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="class_json_1_1_value_1a081830e95f88a37054da7e46c65b0766" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_static_string" kindref="compound">StaticString</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="class_json_1_1_static_string_1ab86fc6a3183adf12fdba4b370acf1754" kindref="member">c_str</ref>());</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>=<sp/><ref refid="namespace_json_1a9795a09a0141d1f12d307c4386aeaee6" kindref="member">duplicateAndPrefixStringValue</ref>(value,<sp/>static_cast&lt;unsigned&gt;(value.length()));</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="class_json_1_1_value_1a350a31ea4a30d384994b0bc010b17495" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="class_json_1_1_value_1a436dfd3670f95fd665f680eba5cebcf0" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>other)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>(other.<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>),<sp/><ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>(false)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>(0),<sp/><ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref>(other.<ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref>),<sp/><ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref>(other.<ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref><sp/>=<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>&amp;&amp;<sp/>other.<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>str;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(other.<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;len,<sp/>&amp;str);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>=<sp/><ref refid="namespace_json_1a9795a09a0141d1f12d307c4386aeaee6" kindref="member">duplicateAndPrefixStringValue</ref>(str,<sp/>len);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>=<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a08b6c80c3af7071d908dabf044de5388" kindref="member">ObjectValues</ref>(*other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" kindref="member">JSON_ASSERT_UNREACHABLE</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_value_1_1_comment_info" kindref="compound">CommentInfo</ref>[<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351abcbd3eb00417335e094e4a03379659b5" kindref="member">numberOfCommentPlacement</ref>];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comment<sp/>=<sp/>0;<sp/>comment<sp/>&lt;<sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351abcbd3eb00417335e094e4a03379659b5" kindref="member">numberOfCommentPlacement</ref>;<sp/>++comment)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_value_1_1_comment_info" kindref="compound">CommentInfo</ref>&amp;<sp/>otherComment<sp/>=<sp/>other.<ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>[comment];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherComment.<ref refid="struct_json_1_1_value_1_1_comment_info_1a020f19c7098bab8ec8fec14cd1a5afb9" kindref="member">comment_</ref>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>[comment].<ref refid="struct_json_1_1_value_1_1_comment_info_1a4d01c2cd8c07995969c5d636dfd4fa8c" kindref="member">setComment</ref>(</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherComment.<ref refid="struct_json_1_1_value_1_1_comment_info_1a020f19c7098bab8ec8fec14cd1a5afb9" kindref="member">comment_</ref>,<sp/>strlen(otherComment.<ref refid="struct_json_1_1_value_1_1_comment_info_1a020f19c7098bab8ec8fec14cd1a5afb9" kindref="member">comment_</ref>));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>JSON_HAS_RVALUE_REFERENCES</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Move<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value::Value</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aab841120d78e296e1bc06a373345e822" kindref="member">swap</ref>(other);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="class_json_1_1_value_1a287dea48da3912d02756735bf677b27b" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1a287dea48da3912d02756735bf677b27b" kindref="member">Value::~Value</ref>()<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_json_1acf8dd162c01e37846e129556c50e4037" kindref="member">releaseStringValue</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" kindref="member">JSON_ASSERT_UNREACHABLE</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_json_1_1_value_1a795acb28772da4c5d85ae8f4af36c69f" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a795acb28772da4c5d85ae8f4af36c69f" kindref="member">Value::operator=</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aab841120d78e296e1bc06a373345e822" kindref="member">swap</ref>(other);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="class_json_1_1_value_1a5263476047f20e2fc6de470e4de34fe5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a5263476047f20e2fc6de470e4de34fe5" kindref="member">Value::swapPayload</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>temp<sp/>=<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>=<sp/>other.<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>other.<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>std::swap(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>,<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp2<sp/>=<sp/><ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref><sp/>=<sp/>other.<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>other.<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref><sp/>=<sp/>temp2<sp/>&amp;<sp/>0x1;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="class_json_1_1_value_1aab841120d78e296e1bc06a373345e822" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aab841120d78e296e1bc06a373345e822" kindref="member">Value::swap</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a5263476047f20e2fc6de470e4de34fe5" kindref="member">swapPayload</ref>(other);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>std::swap(<ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>,<sp/>other.<ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>std::swap(<ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref>,<sp/>other.<ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>std::swap(<ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref>,<sp/>other.<ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="class_json_1_1_value_1a695ef31fad36b4712918b3ff80158479" refkind="member"><highlight class="normal"><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/><ref refid="class_json_1_1_value_1a695ef31fad36b4712918b3ff80158479" kindref="member">Value::type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="class_json_1_1_value_1a899214ed2253d3f4f061b922b0e622b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a899214ed2253d3f4f061b922b0e622b5" kindref="member">Value::compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;<sp/>other)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;<sp/>other)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="class_json_1_1_value_1af0ad8aa027575c3277296458f3fb7b0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1af0ad8aa027575c3277296458f3fb7b0a" kindref="member">Value::operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeDelta<sp/>=<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>-<sp/>other.<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeDelta)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>typeDelta<sp/>&lt;<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>&lt;<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref><sp/>&lt;<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&lt;<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>&lt;<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>==<sp/>0)<sp/>||<sp/>(other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>this_len;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>other_len;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>this_str;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>other_str;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(this-&gt;<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/>this-&gt;<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,<sp/>&amp;this_len,<sp/>&amp;this_str);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(other.<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,<sp/>&amp;other_len,<sp/>&amp;other_str);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>min_len<sp/>=<sp/>std::min(this_len,<sp/>other_len);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>memcmp(this_str,<sp/>other_str,<sp/>min_len);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this_len<sp/>&lt;<sp/>other_len);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>int(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;size()<sp/>-<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;size());</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>)<sp/>&lt;<sp/>(*other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" kindref="member">JSON_ASSERT_UNREACHABLE</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>unreachable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="class_json_1_1_value_1afb99dd3628fe44244b32007f9b4f369a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1afb99dd3628fe44244b32007f9b4f369a" kindref="member">Value::operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(other<sp/>&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="class_json_1_1_value_1acc13fc47d55abd6e2327b090b83d2911" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1acc13fc47d55abd6e2327b090b83d2911" kindref="member">Value::operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_json_1_1_value_1a3124a26067bdfde9571bc89527fc6931" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a3124a26067bdfde9571bc89527fc6931" kindref="member">Value::operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other<sp/>&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="class_json_1_1_value_1a14363dda23a6ae2def9afd1590ae85d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a14363dda23a6ae2def9afd1590ae85d3" kindref="member">Value::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>type_<sp/>!=<sp/>other.type_<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GCC<sp/>2.95.3<sp/>says:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attempt<sp/>to<sp/>take<sp/>address<sp/>of<sp/>bit-field<sp/>structure<sp/>member<sp/>`Json::Value::type_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Beats<sp/>me,<sp/>but<sp/>a<sp/>temp<sp/>solves<sp/>the<sp/>problem.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>other.<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>!=<sp/>temp)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>==<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref><sp/>==<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>==<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>==<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>==<sp/>0)<sp/>||<sp/>(other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>==<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>this_len;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>other_len;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>this_str;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>other_str;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(this-&gt;<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/>this-&gt;<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,<sp/>&amp;this_len,<sp/>&amp;this_str);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(other.<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,<sp/>&amp;other_len,<sp/>&amp;other_str);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_len<sp/>!=<sp/>other_len)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>memcmp(this_str,<sp/>other_str,<sp/>this_len);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comp<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;size()<sp/>==<sp/>other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>)<sp/>==<sp/>(*other.<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" kindref="member">JSON_ASSERT_UNREACHABLE</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>unreachable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="class_json_1_1_value_1ad0f12d2a4ab74bbef08a05504b2cb81d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ad0f12d2a4ab74bbef08a05504b2cb81d" kindref="member">Value::operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="class_json_1_1_value_1a5b7da48b163bcec63b1424f1608b7da6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_json_1_1_value_1a5b7da48b163bcec63b1424f1608b7da6" kindref="member">Value::asCString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::asCString():<sp/>requires<sp/>stringValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>this_len;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>this_str;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(this-&gt;<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/>this-&gt;<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,<sp/>&amp;this_len,<sp/>&amp;this_str);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this_str;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="class_json_1_1_value_1a1e0263113ae247a632afac43ebc4149f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a1e0263113ae247a632afac43ebc4149f" kindref="member">Value::getString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">**<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">**<sp/>cend)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>!=<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(this-&gt;<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/>this-&gt;<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,<sp/>&amp;length,<sp/>str);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>*cend<sp/>=<sp/>*str<sp/>+<sp/>length;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="class_json_1_1_value_1a03ee3d5df576640c93ba683f140828bd" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_json_1_1_value_1a03ee3d5df576640c93ba683f140828bd" kindref="member">Value::asString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>this_len;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>this_str;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(this-&gt;<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/>this-&gt;<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,<sp/>&amp;this_len,<sp/>&amp;this_str);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(this_str,<sp/>this_len);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1a67007439f94bc6afc465923f56147ba1" kindref="member">JSON_FAIL_MESSAGE</ref>(</highlight><highlight class="stringliteral">&quot;Type<sp/>is<sp/>not<sp/>convertible<sp/>to<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="640"><highlight class="preprocessor"></highlight><highlight class="normal">CppTL::ConstString<sp/>Value::asConstString()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>str;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1aad8b4982c1acd164f541fba396ac9fb1" kindref="member">decodePrefixedString</ref>(<ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref>,<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a70ac2b153bc405527baa3850d2ddc3cb" kindref="member">string_</ref>,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;len,<sp/>&amp;str);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CppTL::ConstString(str,<sp/>len);</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="648"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="class_json_1_1_value_1ac786e35b860b1d700cb3d3e56dd6a235" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Value::Int</ref><sp/><ref refid="class_json_1_1_value_1ac786e35b860b1d700cb3d3e56dd6a235" kindref="member">Value::asInt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1ab0df4746d6787d2ce1db1a156c118f14" kindref="member">isInt</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;LargestInt<sp/>out<sp/>of<sp/>Int<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1ab0df4746d6787d2ce1db1a156c118f14" kindref="member">isInt</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;LargestUInt<sp/>out<sp/>of<sp/>Int<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="namespace_json_1aff0180507262a244de61b961178d7443" kindref="member">InRange</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>,<sp/><ref refid="class_json_1_1_value_1a7df8a39e2502b8c92a6a41e3d752d2c8" kindref="member">minInt</ref>,<sp/><ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">maxInt</ref>),</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;double<sp/>out<sp/>of<sp/>Int<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abdf7a7ff73eb130ffcab28504ffdb405" kindref="member">Int</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1a67007439f94bc6afc465923f56147ba1" kindref="member">JSON_FAIL_MESSAGE</ref>(</highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>not<sp/>convertible<sp/>to<sp/>Int.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="class_json_1_1_value_1a2019d1bd296b89356c1b0da5970c918c" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">Value::UInt</ref><sp/><ref refid="class_json_1_1_value_1a2019d1bd296b89356c1b0da5970c918c" kindref="member">Value::asUInt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1ae814ca1796fe2d43ac09898b70213989" kindref="member">isUInt</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;LargestInt<sp/>out<sp/>of<sp/>UInt<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1ae814ca1796fe2d43ac09898b70213989" kindref="member">isUInt</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;LargestUInt<sp/>out<sp/>of<sp/>UInt<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="namespace_json_1aff0180507262a244de61b961178d7443" kindref="member">InRange</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>,<sp/>0,<sp/><ref refid="class_json_1_1_value_1ac79e63ee68d3aa914bfd6988be669b87" kindref="member">maxUInt</ref>),</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;double<sp/>out<sp/>of<sp/>UInt<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1a67007439f94bc6afc465923f56147ba1" kindref="member">JSON_FAIL_MESSAGE</ref>(</highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>not<sp/>convertible<sp/>to<sp/>UInt.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="694"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="class_json_1_1_value_1a7f739b55aef060f4ab6360bfe1912b77" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Value::Int64</ref><sp/><ref refid="class_json_1_1_value_1a7f739b55aef060f4ab6360bfe1912b77" kindref="member">Value::asInt64</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1aba89690e5fd72d0f7121a30013470423" kindref="member">isInt64</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;LargestUInt<sp/>out<sp/>of<sp/>Int64<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="namespace_json_1aff0180507262a244de61b961178d7443" kindref="member">InRange</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>,<sp/><ref refid="class_json_1_1_value_1a815ef899bc312c93bc426511acfe31a7" kindref="member">minInt64</ref>,<sp/><ref refid="class_json_1_1_value_1a4492634870b8c5709ce967b384ac6006" kindref="member">maxInt64</ref>),</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;double<sp/>out<sp/>of<sp/>Int64<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a1b86af9f85f0f1baa972c3319fa22695" kindref="member">Int64</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1a67007439f94bc6afc465923f56147ba1" kindref="member">JSON_FAIL_MESSAGE</ref>(</highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>not<sp/>convertible<sp/>to<sp/>Int64.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="class_json_1_1_value_1a65acdab039f60ff0da15e622f2e17739" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">Value::UInt64</ref><sp/><ref refid="class_json_1_1_value_1a65acdab039f60ff0da15e622f2e17739" kindref="member">Value::asUInt64</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1aa35efece2a6cba4d988d7d5b54db2fb8" kindref="member">isUInt64</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;LargestInt<sp/>out<sp/>of<sp/>UInt64<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="namespace_json_1aff0180507262a244de61b961178d7443" kindref="member">InRange</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>,<sp/>0,<sp/><ref refid="class_json_1_1_value_1ae1eb89c305c39516696ff305cffa01da" kindref="member">maxUInt64</ref>),</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;double<sp/>out<sp/>of<sp/>UInt64<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1a67007439f94bc6afc465923f56147ba1" kindref="member">JSON_FAIL_MESSAGE</ref>(</highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>not<sp/>convertible<sp/>to<sp/>UInt64.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="737"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="class_json_1_1_value_1a3786bb100c5cf9a98eb6d13784968956" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1a1cbb82642ed05109b9833e49f042ece7" kindref="member">LargestInt</ref><sp/><ref refid="class_json_1_1_value_1a3786bb100c5cf9a98eb6d13784968956" kindref="member">Value::asLargestInt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_NO_INT64)</highlight></codeline>
<codeline lineno="740"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ac786e35b860b1d700cb3d3e56dd6a235" kindref="member">asInt</ref>();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="742"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a7f739b55aef060f4ab6360bfe1912b77" kindref="member">asInt64</ref>();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="744"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="class_json_1_1_value_1a692b88345a745b2f89ca5d94b52e94d4" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1a6682a3684d635e03fc06ba229fa24eec" kindref="member">LargestUInt</ref><sp/><ref refid="class_json_1_1_value_1a692b88345a745b2f89ca5d94b52e94d4" kindref="member">Value::asLargestUInt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_NO_INT64)</highlight></codeline>
<codeline lineno="748"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a2019d1bd296b89356c1b0da5970c918c" kindref="member">asUInt</ref>();</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="750"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a65acdab039f60ff0da15e622f2e17739" kindref="member">asUInt64</ref>();</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="752"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="class_json_1_1_value_1a33434ed1c0217a34d04c95fa5342fd37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a33434ed1c0217a34d04c95fa5342fd37" kindref="member">Value::asDouble</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="760"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/>//<sp/>if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="762"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>integerToDouble(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="764"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1a67007439f94bc6afc465923f56147ba1" kindref="member">JSON_FAIL_MESSAGE</ref>(</highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>not<sp/>convertible<sp/>to<sp/>double.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="class_json_1_1_value_1ac2128d7080499daf8c5b1c71da243f63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ac2128d7080499daf8c5b1c71da243f63" kindref="member">Value::asFloat</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="782"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/>//<sp/>if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>integerToDouble(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSON_USE_INT64_DOUBLE_CONVERSION)</highlight></codeline>
<codeline lineno="786"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>?<sp/>1.0f<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1a67007439f94bc6afc465923f56147ba1" kindref="member">JSON_FAIL_MESSAGE</ref>(</highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>not<sp/>convertible<sp/>to<sp/>float.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="class_json_1_1_value_1a7402c797285c020566c3db5f8ae4e940" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a7402c797285c020566c3db5f8ae4e940" kindref="member">Value::asBool</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref>;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref><sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>kind<sp/>of<sp/>strange.<sp/>Not<sp/>recommended.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>!=<sp/>0.0)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1a67007439f94bc6afc465923f56147ba1" kindref="member">JSON_FAIL_MESSAGE</ref>(</highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>not<sp/>convertible<sp/>to<sp/>bool.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="class_json_1_1_value_1a7ec153803631a27abf58cba2bb1af70c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a7ec153803631a27abf58cba2bb1af70c" kindref="member">Value::isConvertibleTo</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(other)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1a8ce848900e2e8fa23a41fcc2c1409fab" kindref="member">isNumeric</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1a33434ed1c0217a34d04c95fa5342fd37" kindref="member">asDouble</ref>()<sp/>==<sp/>0.0)<sp/>||</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref><sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a92edab1861dadbfefd8be5fd4285eefe" kindref="member">bool_</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref><sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1a03ee3d5df576640c93ba683f140828bd" kindref="member">asString</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref><sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;size()<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref><sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;size()<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ab0df4746d6787d2ce1db1a156c118f14" kindref="member">isInt</ref>()<sp/>||</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref><sp/>&amp;&amp;<sp/><ref refid="namespace_json_1aff0180507262a244de61b961178d7443" kindref="member">InRange</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>,<sp/><ref refid="class_json_1_1_value_1a7df8a39e2502b8c92a6a41e3d752d2c8" kindref="member">minInt</ref>,<sp/><ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">maxInt</ref>))<sp/>||</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ae814ca1796fe2d43ac09898b70213989" kindref="member">isUInt</ref>()<sp/>||</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref><sp/>&amp;&amp;<sp/><ref refid="namespace_json_1aff0180507262a244de61b961178d7443" kindref="member">InRange</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>,<sp/>0,<sp/><ref refid="class_json_1_1_value_1ac79e63ee68d3aa914bfd6988be669b87" kindref="member">maxUInt</ref>))<sp/>||</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a8ce848900e2e8fa23a41fcc2c1409fab" kindref="member">isNumeric</ref>()<sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a8ce848900e2e8fa23a41fcc2c1409fab" kindref="member">isNumeric</ref>()<sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a8ce848900e2e8fa23a41fcc2c1409fab" kindref="member">isNumeric</ref>()<sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref><sp/>||</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><ref refid="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" kindref="member">JSON_ASSERT_UNREACHABLE</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/><ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">Value::size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>array<sp/>is<sp/>highest<sp/>index<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ObjectValues::const_iterator<sp/>itLast<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end();</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--itLast;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*itLast).first.index()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;size());</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><ref refid="json__value_8cpp_1aa5e619e3e9388f6376a344dd8462c9cc" kindref="member">JSON_ASSERT_UNREACHABLE</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>unreachable;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874" refid="class_json_1_1_value_1a99c42d3ff8495dad1e91b43e66553c36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a99c42d3ff8495dad1e91b43e66553c36" kindref="member">Value::empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aeb9ad8b1bb91bdd72203dc884b3f4362" kindref="member">isNull</ref>()<sp/>||<sp/><ref refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" kindref="member">isArray</ref>()<sp/>||<sp/><ref refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" kindref="member">isObject</ref>())</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>()<sp/>==<sp/>0u;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="class_json_1_1_value_1a021ab0d15a807fbe051446c9c545ab61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a021ab0d15a807fbe051446c9c545ab61" kindref="member">Value::operator!</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aeb9ad8b1bb91bdd72203dc884b3f4362" kindref="member">isNull</ref>();<sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="class_json_1_1_value_1a501a4d67e6c875255c2ecc03ccd2019b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a501a4d67e6c875255c2ecc03ccd2019b" kindref="member">Value::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref><sp/>||</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::clear():<sp/>requires<sp/>complex<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="class_json_1_1_value_1aa284353271ada427dbfa04a42f2be407" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aa284353271ada427dbfa04a42f2be407" kindref="member">Value::resize</ref>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>newSize)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::resize():<sp/>requires<sp/>arrayValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>oldSize<sp/>=<sp/><ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a501a4d67e6c875255c2ecc03ccd2019b" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSize<sp/>&gt;<sp/>oldSize)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this)[newSize<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index<sp/>=<sp/>newSize;<sp/>index<sp/>&lt;<sp/>oldSize;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;erase(index);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>()<sp/>==<sp/>newSize);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917" refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::operator[](ArrayIndex):<sp/>requires<sp/>arrayValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>key(index);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>ObjectValues::iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;lower_bound(key);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end()<sp/>&amp;&amp;<sp/>(*it).first<sp/>==<sp/>key)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>ObjectValues::value_type<sp/>defaultValue(key,<sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;insert(it,<sp/>defaultValue);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933" refid="class_json_1_1_value_1ac9182982c361e0ab621134d406e5f250" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>&gt;=<sp/>0,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::operator[](int<sp/>index):<sp/>index<sp/>cannot<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref>(index)];</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940" refid="class_json_1_1_value_1af151919e8947c430e34bed2b0b128601" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::operator[](ArrayIndex)const:<sp/>requires<sp/>arrayValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>key(index);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>ObjectValues::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;find(key);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end())</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="class_json_1_1_value_1af9e02b38f4e63e491c300c20b275bdd7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>&gt;=<sp/>0,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::operator[](int<sp/>index)<sp/>const:<sp/>index<sp/>cannot<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref>(index)];</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a32b86b71564157f40f880f5736be822a" kindref="member">Value::initBasic</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref><sp/>vtype,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allocated)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>=<sp/>vtype;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1ae0126c80dc4907aad94088553fc7632b" kindref="member">allocated_</ref><sp/>=<sp/>allocated;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Access<sp/>an<sp/>object<sp/>value<sp/>by<sp/>name,<sp/>create<sp/>a<sp/>null<sp/>member<sp/>if<sp/>it<sp/>does<sp/>not<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@pre<sp/>Type<sp/>of<sp/>&apos;*this&apos;<sp/>is<sp/>object<sp/>or<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>key<sp/>is<sp/>null-terminated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971" refid="class_json_1_1_value_1a9ff9cdae2c8f4155bab603d750b0b3f1" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a9ff9cdae2c8f4155bab603d750b0b3f1" kindref="member">Value::resolveReference</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::resolveReference():<sp/>requires<sp/>objectValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>actualKey(</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key,<sp/>static_cast&lt;unsigned&gt;(strlen(key)),<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6da08d540450fa6c4af57eaacf063eedd20" kindref="member">CZString::noDuplication</ref>);<sp/></highlight><highlight class="comment">//<sp/>NOTE!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>ObjectValues::iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;lower_bound(actualKey);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end()<sp/>&amp;&amp;<sp/>(*it).first<sp/>==<sp/>actualKey)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>ObjectValues::value_type<sp/>defaultValue(actualKey,<sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;insert(it,<sp/>defaultValue);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value<sp/>=<sp/>(*it).second;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>key<sp/>is<sp/>not<sp/>null-terminated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="class_json_1_1_value_1a5f6b3aaf4f2e952a33dd823db008c333" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a9ff9cdae2c8f4155bab603d750b0b3f1" kindref="member">Value::resolveReference</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>cend)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::resolveReference(key,<sp/>end):<sp/>requires<sp/>objectValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value</ref>(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>actualKey(</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key,<sp/>static_cast&lt;unsigned&gt;(cend-key),<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6da5c18c35205a3be63ad14ce659e70fe7d" kindref="member">CZString::duplicateOnCopy</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>ObjectValues::iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;lower_bound(actualKey);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end()<sp/>&amp;&amp;<sp/>(*it).first<sp/>==<sp/>actualKey)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>ObjectValues::value_type<sp/>defaultValue(actualKey,<sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;insert(it,<sp/>defaultValue);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value<sp/>=<sp/>(*it).second;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009" refid="class_json_1_1_value_1a28282c9b76fa031eba7a1843c47c16fe" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_1a28282c9b76fa031eba7a1843c47c16fe" kindref="member">Value::get</ref>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>value<sp/>=<sp/>&amp;((*this)[index]);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>==<sp/>&amp;<ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref><sp/>?<sp/>defaultValue<sp/>:<sp/>*value;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014" refid="class_json_1_1_value_1aaa82ebb4b730ea1567d310874f47d147" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aaa82ebb4b730ea1567d310874f47d147" kindref="member">Value::isValidIndex</ref>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/><ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016" refid="class_json_1_1_value_1a184bf49ec5da7ec31af089cf6f458f99" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="class_json_1_1_value_1a184bf49ec5da7ec31af089cf6f458f99" kindref="member">Value::find</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>cend)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1017"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::find(key,<sp/>end,<sp/>found):<sp/>requires<sp/>objectValue<sp/>or<sp/>nullValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>actualKey(key,<sp/>static_cast&lt;unsigned&gt;(cend-key),<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6da08d540450fa6c4af57eaacf063eedd20" kindref="member">CZString::noDuplication</ref>);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>ObjectValues::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;find(actualKey);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1027" refid="class_json_1_1_value_1ae5f73ffc7a039bca81b7ca771bc5db55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1028"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>found<sp/>=<sp/><ref refid="class_json_1_1_value_1a184bf49ec5da7ec31af089cf6f458f99" kindref="member">find</ref>(key,<sp/>key<sp/>+<sp/>strlen(key));</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*found;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1033" refid="class_json_1_1_value_1a26dc88ac5be67772374898655744fdc4" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1034"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>found<sp/>=<sp/><ref refid="class_json_1_1_value_1a184bf49ec5da7ec31af089cf6f458f99" kindref="member">find</ref>(key.data(),<sp/>key.data()<sp/>+<sp/>key.length());</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*found;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040" refid="class_json_1_1_value_1acb912f4ec40a25ea6eb387730885f3d9" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a9ff9cdae2c8f4155bab603d750b0b3f1" kindref="member">resolveReference</ref>(key,<sp/>key<sp/>+<sp/>strlen(key));</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="class_json_1_1_value_1ae511c7d46bf457412fb55c9471af9f50" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a9ff9cdae2c8f4155bab603d750b0b3f1" kindref="member">resolveReference</ref>(key.data(),<sp/>key.data()<sp/>+<sp/>key.length());</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048" refid="class_json_1_1_value_1ac3763d7d315ca65dc188e273722f7955" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_static_string" kindref="compound">StaticString</ref>&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a9ff9cdae2c8f4155bab603d750b0b3f1" kindref="member">resolveReference</ref>(key.<ref refid="class_json_1_1_static_string_1ab86fc6a3183adf12fdba4b370acf1754" kindref="member">c_str</ref>());</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="1053"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a9ff9cdae2c8f4155bab603d750b0b3f1" kindref="member">resolveReference</ref>(key.c_str(),<sp/>key.end_c_str());</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">Value<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="class_json_1_1_value_1a7d99f5dba388cdaa152ce6ef933d64ef" kindref="member">Value::operator[]</ref>(CppTL::ConstString<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1057"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1ada6ba1369448fb0240bccc36efaa46f7" kindref="member">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>found<sp/>=<sp/><ref refid="class_json_1_1_value_1a184bf49ec5da7ec31af089cf6f458f99" kindref="member">find</ref>(key.c_str(),<sp/>key.end_c_str());</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*found;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1063"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="class_json_1_1_value_1a7e49ac977e4bcf59745a09d426669f75" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_value_1a7e49ac977e4bcf59745a09d426669f75" kindref="member">Value::append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>()]<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066" refid="class_json_1_1_value_1abcb2289c005bc0befdedaa94f662f63f" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_1a28282c9b76fa031eba7a1843c47c16fe" kindref="member">Value::get</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>cend,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>defaultValue)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1067"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>found<sp/>=<sp/><ref refid="class_json_1_1_value_1a184bf49ec5da7ec31af089cf6f458f99" kindref="member">find</ref>(key,<sp/>cend);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!found<sp/>?<sp/>defaultValue<sp/>:<sp/>*found;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071" refid="class_json_1_1_value_1ab76b3323cde14c7db20676d07b260ce7" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_1a28282c9b76fa031eba7a1843c47c16fe" kindref="member">Value::get</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>key,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>defaultValue)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1072"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(key,<sp/>key<sp/>+<sp/>strlen(key),<sp/>defaultValue);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075" refid="class_json_1_1_value_1a54a34264356e01ee9c21a75ccfc809e9" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_1a28282c9b76fa031eba7a1843c47c16fe" kindref="member">Value::get</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>defaultValue)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1076"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(key.data(),<sp/>key.data()<sp/>+<sp/>key.length(),<sp/>defaultValue);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081" refid="class_json_1_1_value_1a49c91af727d6b4eb0af02a81bb2def87" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">Value::removeMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cend,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>removed)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>!=<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>actualKey(key,<sp/>static_cast&lt;unsigned&gt;(cend-key),<sp/><ref refid="class_json_1_1_value_1_1_c_z_string_1a2805c46fb4a72bbaed55de6d75941b6da08d540450fa6c4af57eaacf063eedd20" kindref="member">CZString::noDuplication</ref>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>ObjectValues::iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;find(actualKey);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end())</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>*removed<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1094" refid="class_json_1_1_value_1a708e599489adf30d65bf85a8ee16e6fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">Value::removeMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>removed)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">removeMember</ref>(key,<sp/>key<sp/>+<sp/>strlen(key),<sp/>removed);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098" refid="class_json_1_1_value_1a3749dae413a73eac05b7f8dc6deeb6a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">Value::removeMember</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>removed)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">removeMember</ref>(key.data(),<sp/>key.data()<sp/>+<sp/>key.length(),<sp/>removed);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1102" refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">Value::removeMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>,</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::removeMember():<sp/>requires<sp/>objectValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">nullRef</ref>;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/>removed;<sp/><sp/></highlight><highlight class="comment">//<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">removeMember</ref>(key,<sp/>key<sp/>+<sp/>strlen(key),<sp/>&amp;removed);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>removed;<sp/></highlight><highlight class="comment">//<sp/>still<sp/>null<sp/>if<sp/>removeMember()<sp/>did<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1113" refid="class_json_1_1_value_1ae1f95f7ca3906e6bcc2a7be93210ecba" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">Value::removeMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aa52f7873b95d29627d6e83ba96f69aaa" kindref="member">removeMember</ref>(key.c_str());</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118" refid="class_json_1_1_value_1ae9e67e08a85a2f3be3396ec0f4c47f65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ae9e67e08a85a2f3be3396ec0f4c47f65" kindref="member">Value::removeIndex</ref>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>index,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>removed)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>!=<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>key(index);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>ObjectValues::iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;find(key);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>*removed<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>oldSize<sp/>=<sp/><ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>left<sp/>all<sp/>items<sp/>left,<sp/>into<sp/>the<sp/>place<sp/>of<sp/>the<sp/>&quot;removed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1a184a91566cccca7b819240f0d5561c7d" kindref="member">ArrayIndex</ref><sp/>i<sp/>=<sp/>index;<sp/>i<sp/>&lt;<sp/>(oldSize<sp/>-<sp/>1);<sp/>++i){</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>keey(i);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>)[keey]<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>the<sp/>last<sp/>one<sp/>(&quot;leftover&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1_1_c_z_string" kindref="compound">CZString</ref><sp/>keyLast(oldSize<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>ObjectValues::iterator<sp/>itLast<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;find(keyLast);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;erase(itLast);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="1142"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_value_1a28282c9b76fa031eba7a1843c47c16fe" kindref="member">Value::get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>key,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(key.c_str(),<sp/>key.end_c_str(),<sp/>defaultValue);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1147"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148" refid="class_json_1_1_value_1a077604b87a79d75543a1b5438eb9d8ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a196defba501d70ea2b6793afb04108e3" kindref="member">Value::isMember</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>cend)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1149"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/><ref refid="class_json_1_1_value_1a184bf49ec5da7ec31af089cf6f458f99" kindref="member">find</ref>(key,<sp/>cend);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL<sp/>!=<sp/>value;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153" refid="class_json_1_1_value_1a196defba501d70ea2b6793afb04108e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a196defba501d70ea2b6793afb04108e3" kindref="member">Value::isMember</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1154"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a196defba501d70ea2b6793afb04108e3" kindref="member">isMember</ref>(key,<sp/>key<sp/>+<sp/>strlen(key));</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157" refid="class_json_1_1_value_1af728b5738aaa133f3aad2e39dc4f415e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a196defba501d70ea2b6793afb04108e3" kindref="member">Value::isMember</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1158"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a196defba501d70ea2b6793afb04108e3" kindref="member">isMember</ref>(key.data(),<sp/>key.data()<sp/>+<sp/>key.length());</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>JSON_USE_CPPTL</highlight></codeline>
<codeline lineno="1163"><highlight class="preprocessor"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a196defba501d70ea2b6793afb04108e3" kindref="member">Value::isMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppTL::ConstString&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a196defba501d70ea2b6793afb04108e3" kindref="member">isMember</ref>(key.c_str(),<sp/>key.end_c_str());</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1167"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168" refid="class_json_1_1_value_1a30fa08af88f2d0a038b22ba9f4e88b2a" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Value::Members</ref><sp/><ref refid="class_json_1_1_value_1a30fa08af88f2d0a038b22ba9f4e88b2a" kindref="member">Value::getMemberNames</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><ref refid="assertions_8h_1ad7facdeeca0f495765e3b204c265eadb" kindref="member">JSON_ASSERT_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>Json::Value::getMemberNames(),<sp/>value<sp/>must<sp/>be<sp/>objectValue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Value::Members</ref>();</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Members</ref><sp/>members;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>members.reserve(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;size());</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>ObjectValues::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>ObjectValues::const_iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>it<sp/>!=<sp/>itEnd;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>members.push_back(std::string((*it).first.data(),</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it).first.length()));</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>members;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ifdef<sp/>JSON_USE_CPPTL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EnumMemberNames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Value::enumMemberNames()<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(<sp/>type_<sp/>==<sp/>objectValue<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>CppTL::Enum::any(<sp/><sp/>CppTL::Enum::transform(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CppTL::Enum::keys(<sp/>*(value_.map_),<sp/>CppTL::Type&lt;const<sp/>CZString<sp/>&amp;&gt;()<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemberNamesTransform()<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>EnumMemberNames();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EnumValues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Value::enumValues()<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(<sp/>type_<sp/>==<sp/>objectValue<sp/><sp/>||<sp/><sp/>type_<sp/>==<sp/>arrayValue<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>CppTL::Enum::anyValues(<sp/>*(value_.map_),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CppTL::Type&lt;const<sp/>Value<sp/>&amp;&gt;()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>EnumValues();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210" refid="namespace_json_1a1a04cc9d31e64b5912dade003c9b99b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a1a04cc9d31e64b5912dade003c9b99b5" kindref="member">IsIntegral</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integral_part;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>modf(d,<sp/>&amp;integral_part)<sp/>==<sp/>0.0;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215" refid="class_json_1_1_value_1aeb9ad8b1bb91bdd72203dc884b3f4362" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aeb9ad8b1bb91bdd72203dc884b3f4362" kindref="member">Value::isNull</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217" refid="class_json_1_1_value_1a3c3716cc7a0216cb1b654bb8f61c8d13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a3c3716cc7a0216cb1b654bb8f61c8d13" kindref="member">Value::isBool</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219" refid="class_json_1_1_value_1ab0df4746d6787d2ce1db1a156c118f14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ab0df4746d6787d2ce1db1a156c118f14" kindref="member">Value::isInt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>&gt;=<sp/><ref refid="class_json_1_1_value_1a7df8a39e2502b8c92a6a41e3d752d2c8" kindref="member">minInt</ref><sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>&lt;=<sp/><ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">maxInt</ref>;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref><sp/>&lt;=<sp/><ref refid="class_json_1_1_value_1a0933d59b45793ae4aade1757c322a98d" kindref="member">UInt</ref>(<ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">maxInt</ref>);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&gt;=<sp/><ref refid="class_json_1_1_value_1a7df8a39e2502b8c92a6a41e3d752d2c8" kindref="member">minInt</ref><sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&lt;=<sp/><ref refid="class_json_1_1_value_1a978c799a8af3114ef7dab6fd0a310a1b" kindref="member">maxInt</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a1a04cc9d31e64b5912dade003c9b99b5" kindref="member">IsIntegral</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234" refid="class_json_1_1_value_1ae814ca1796fe2d43ac09898b70213989" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ae814ca1796fe2d43ac09898b70213989" kindref="member">Value::isUInt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1a6682a3684d635e03fc06ba229fa24eec" kindref="member">LargestUInt</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref>)<sp/>&lt;=<sp/><ref refid="class_json_1_1_value_1a6682a3684d635e03fc06ba229fa24eec" kindref="member">LargestUInt</ref>(<ref refid="class_json_1_1_value_1ac79e63ee68d3aa914bfd6988be669b87" kindref="member">maxUInt</ref>);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref><sp/>&lt;=<sp/><ref refid="class_json_1_1_value_1ac79e63ee68d3aa914bfd6988be669b87" kindref="member">maxUInt</ref>;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&lt;=<sp/><ref refid="class_json_1_1_value_1ac79e63ee68d3aa914bfd6988be669b87" kindref="member">maxUInt</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a1a04cc9d31e64b5912dade003c9b99b5" kindref="member">IsIntegral</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249" refid="class_json_1_1_value_1aba89690e5fd72d0f7121a30013470423" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aba89690e5fd72d0f7121a30013470423" kindref="member">Value::isInt64</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="1251"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1aab65665dc15a24a29a8e93cdeeaa7e50" kindref="member">uint_</ref><sp/>&lt;=<sp/><ref refid="class_json_1_1_value_1a8b62564be8c087c6d18de180ff4e13e3" kindref="member">UInt64</ref>(<ref refid="class_json_1_1_value_1a4492634870b8c5709ce967b384ac6006" kindref="member">maxInt64</ref>);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>maxInt64<sp/>(=<sp/>2^63<sp/>-<sp/>1)<sp/>is<sp/>not<sp/>exactly<sp/>representable<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double,<sp/>so<sp/>double(maxInt64)<sp/>will<sp/>be<sp/>rounded<sp/>up<sp/>to<sp/>2^63.<sp/>Therefore<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>require<sp/>the<sp/>value<sp/>to<sp/>be<sp/>strictly<sp/>less<sp/>than<sp/>the<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&gt;=<sp/>double(<ref refid="class_json_1_1_value_1a815ef899bc312c93bc426511acfe31a7" kindref="member">minInt64</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&lt;<sp/>double(<ref refid="class_json_1_1_value_1a4492634870b8c5709ce967b384ac6006" kindref="member">maxInt64</ref>)<sp/>&amp;&amp;<sp/><ref refid="namespace_json_1a1a04cc9d31e64b5912dade003c9b99b5" kindref="member">IsIntegral</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>JSON_HAS_INT64</highlight></codeline>
<codeline lineno="1266"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269" refid="class_json_1_1_value_1aa35efece2a6cba4d988d7d5b54db2fb8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aa35efece2a6cba4d988d7d5b54db2fb8" kindref="member">Value::isUInt64</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="1271"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1adbfb384301298844ed955ba5cf6015a0" kindref="member">int_</ref><sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>maxUInt64<sp/>(=<sp/>2^64<sp/>-<sp/>1)<sp/>is<sp/>not<sp/>exactly<sp/>representable<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double,<sp/>so<sp/>double(maxUInt64)<sp/>will<sp/>be<sp/>rounded<sp/>up<sp/>to<sp/>2^64.<sp/>Therefore<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>require<sp/>the<sp/>value<sp/>to<sp/>be<sp/>strictly<sp/>less<sp/>than<sp/>the<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref><sp/>&lt;<sp/><ref refid="namespace_json_1aecc0306aa526f25c5156f842182fb7fb" kindref="member">maxUInt64AsDouble</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a1a04cc9d31e64b5912dade003c9b99b5" kindref="member">IsIntegral</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1af0c5ca724e5fe3a15db773d750e2351e" kindref="member">real_</ref>);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>JSON_HAS_INT64</highlight></codeline>
<codeline lineno="1286"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289" refid="class_json_1_1_value_1aec4f74ef7b776b1d9c8a10fc3bb4add5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aec4f74ef7b776b1d9c8a10fc3bb4add5" kindref="member">Value::isIntegral</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="1291"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aba89690e5fd72d0f7121a30013470423" kindref="member">isInt64</ref>()<sp/>||<sp/><ref refid="class_json_1_1_value_1aa35efece2a6cba4d988d7d5b54db2fb8" kindref="member">isUInt64</ref>();</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1293"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ab0df4746d6787d2ce1db1a156c118f14" kindref="member">isInt</ref>()<sp/>||<sp/><ref refid="class_json_1_1_value_1ae814ca1796fe2d43ac09898b70213989" kindref="member">isUInt</ref>();</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1295"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297" refid="class_json_1_1_value_1a0ea567fa51fc808851698bef59b43626" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a0ea567fa51fc808851698bef59b43626" kindref="member">Value::isDouble</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref><sp/>||<sp/><ref refid="class_json_1_1_value_1aec4f74ef7b776b1d9c8a10fc3bb4add5" kindref="member">isIntegral</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299" refid="class_json_1_1_value_1a8ce848900e2e8fa23a41fcc2c1409fab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a8ce848900e2e8fa23a41fcc2c1409fab" kindref="member">Value::isNumeric</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1aec4f74ef7b776b1d9c8a10fc3bb4add5" kindref="member">isIntegral</ref>()<sp/>||<sp/><ref refid="class_json_1_1_value_1a0ea567fa51fc808851698bef59b43626" kindref="member">isDouble</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301" refid="class_json_1_1_value_1a06c01d7c1e8151a5844b595ab00f46c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a06c01d7c1e8151a5844b595ab00f46c7" kindref="member">Value::isString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303" refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" kindref="member">Value::isArray</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305" refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" kindref="member">Value::isObject</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref><sp/>==<sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307" refid="class_json_1_1_value_1a2900152a2887b410a9ddabe278b9d492" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a29f3a30f7e5d3af6f38d57999bf5b480" kindref="member">Value::setComment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>comment,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_value_1_1_comment_info" kindref="compound">CommentInfo</ref>[<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351abcbd3eb00417335e094e4a03379659b5" kindref="member">numberOfCommentPlacement</ref>];</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(comment[len-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>discard<sp/>trailing<sp/>newline,<sp/>to<sp/>aid<sp/>indentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>[placement].<ref refid="struct_json_1_1_value_1_1_comment_info_1a4d01c2cd8c07995969c5d636dfd4fa8c" kindref="member">setComment</ref>(comment,<sp/>len);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317" refid="class_json_1_1_value_1a29f3a30f7e5d3af6f38d57999bf5b480" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a29f3a30f7e5d3af6f38d57999bf5b480" kindref="member">Value::setComment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>comment,<sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement)<sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a29f3a30f7e5d3af6f38d57999bf5b480" kindref="member">setComment</ref>(comment,<sp/>strlen(comment),<sp/>placement);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321" refid="class_json_1_1_value_1a6d68a2e7d4e1e317cd9e812e12181689" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a29f3a30f7e5d3af6f38d57999bf5b480" kindref="member">Value::setComment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>comment,<sp/><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1a29f3a30f7e5d3af6f38d57999bf5b480" kindref="member">setComment</ref>(comment.c_str(),<sp/>comment.length(),<sp/>placement);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325" refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">Value::hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>[placement].<ref refid="struct_json_1_1_value_1_1_comment_info_1a020f19c7098bab8ec8fec14cd1a5afb9" kindref="member">comment_</ref><sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329" refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">Value::getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref><sp/>placement)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(placement))</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a2016564cabc7a29208e97bd0b782a4e4" kindref="member">comments_</ref>[placement].<ref refid="struct_json_1_1_value_1_1_comment_info_1a020f19c7098bab8ec8fec14cd1a5afb9" kindref="member">comment_</ref>;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335" refid="class_json_1_1_value_1a6d741407c3d784360c200f181b0d6d64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a6d741407c3d784360c200f181b0d6d64" kindref="member">Value::setOffsetStart</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start)<sp/>{<sp/><ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref><sp/>=<sp/>start;<sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337" refid="class_json_1_1_value_1ac6d858b5fd4d5fe6ca84f697def8c5ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1ac6d858b5fd4d5fe6ca84f697def8c5ea" kindref="member">Value::setOffsetLimit</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>limit)<sp/>{<sp/><ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref><sp/>=<sp/>limit;<sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339" refid="class_json_1_1_value_1a10142eda11ae0b1caecbcc9f436854d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a10142eda11ae0b1caecbcc9f436854d1" kindref="member">Value::getOffsetStart</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a810637b8c52661a3dbf4bfde5130d6d1" kindref="member">start_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341" refid="class_json_1_1_value_1acd7114469bc39368e9d93c29b54d8c8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1acd7114469bc39368e9d93c29b54d8c8f" kindref="member">Value::getOffsetLimit</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1acbec44708b0d4dbec2db6d8428955dbb" kindref="member">limit_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343" refid="class_json_1_1_value_1a05357cf78959b790337fae4e5580ee4f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_json_1_1_value_1a05357cf78959b790337fae4e5580ee4f" kindref="member">Value::toStyledString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer" kindref="compound">StyledWriter</ref><sp/>writer;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer.<ref refid="class_json_1_1_styled_writer_1abd42ae0b8a788a46969fc51a28a496f5" kindref="member">write</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348" refid="class_json_1_1_value_1ac12df0d6980600c5bac908ed0f64856e" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_const_iterator" kindref="compound">Value::const_iterator</ref><sp/><ref refid="class_json_1_1_value_1ac12df0d6980600c5bac908ed0f64856e" kindref="member">Value::begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1af92282ca92b58b320debd486afb7696a" kindref="member">const_iterator</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;begin());</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1af92282ca92b58b320debd486afb7696a" kindref="member">const_iterator</ref>();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361" refid="class_json_1_1_value_1a596da1926b2f2a4056bff2edb713eb0b" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_const_iterator" kindref="compound">Value::const_iterator</ref><sp/><ref refid="class_json_1_1_value_1a596da1926b2f2a4056bff2edb713eb0b" kindref="member">Value::end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1af92282ca92b58b320debd486afb7696a" kindref="member">const_iterator</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end());</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1af92282ca92b58b320debd486afb7696a" kindref="member">const_iterator</ref>();</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374" refid="class_json_1_1_value_1a2d45bb2e68e8f22fe356d7d955ebd3c9" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_iterator" kindref="compound">Value::iterator</ref><sp/><ref refid="class_json_1_1_value_1ac12df0d6980600c5bac908ed0f64856e" kindref="member">Value::begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a341cdf2e01f8b3c5b7317aa2f0768c53" kindref="member">iterator</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;begin());</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a341cdf2e01f8b3c5b7317aa2f0768c53" kindref="member">iterator</ref>();</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387" refid="class_json_1_1_value_1a2f961eff73f7f79cd29260b6cbd42558" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value_iterator" kindref="compound">Value::iterator</ref><sp/><ref refid="class_json_1_1_value_1a596da1926b2f2a4056bff2edb713eb0b" kindref="member">Value::end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1abd222c2536dc88bf330dedcd076d2356" kindref="member">type_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>)</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a341cdf2e01f8b3c5b7317aa2f0768c53" kindref="member">iterator</ref>(<ref refid="class_json_1_1_value_1aef578244546212705b9f81eb84d7e151" kindref="member">value_</ref>.<ref refid="union_json_1_1_value_1_1_value_holder_1a1e7a5b86d4f52234f55c847ad1ce389a" kindref="member">map_</ref>-&gt;end());</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value_1a341cdf2e01f8b3c5b7317aa2f0768c53" kindref="member">iterator</ref>();</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>PathArgument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403" refid="class_json_1_1_path_argument_1a3c96ed20c56a55eb76d37a11553c528e" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_path_argument_1a3c96ed20c56a55eb76d37a11553c528e" kindref="member">PathArgument::PathArgument</ref>()<sp/>:<sp/>key_(),<sp/>index_(),<sp/>kind_(kindNone)<sp/>{}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405" refid="class_json_1_1_path_argument_1a53c5b27143b161301b95fd544c139ecf" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_path_argument_1a3c96ed20c56a55eb76d37a11553c528e" kindref="member">PathArgument::PathArgument</ref>(<ref refid="namespace_json_1a8048e741f2177c3b5d9ede4a5b8c53c2" kindref="member">ArrayIndex</ref><sp/>index)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>key_(),<sp/>index_(index),<sp/>kind_(kindIndex)<sp/>{}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408" refid="class_json_1_1_path_argument_1a9690417a8a40e6e49f2acdf6c9281345" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_path_argument_1a3c96ed20c56a55eb76d37a11553c528e" kindref="member">PathArgument::PathArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>key_(key),<sp/>index_(),<sp/>kind_(kindKey)<sp/>{}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411" refid="class_json_1_1_path_argument_1a08f872cfee4fc600f7fa3bcaaff0d41c" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_path_argument_1a3c96ed20c56a55eb76d37a11553c528e" kindref="member">PathArgument::PathArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>key_(key.c_str()),<sp/>index_(),<sp/>kind_(kindKey)<sp/>{}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>Path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417" refid="class_json_1_1_path_1aaa37a99650e770d0cd680bf53585ec99" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_path_1aaa37a99650e770d0cd680bf53585ec99" kindref="member">Path::Path</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a1,</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a2,</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a3,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>a5)<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" kindref="member">InArgs</ref><sp/>in;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/>in.push_back(&amp;a1);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>in.push_back(&amp;a2);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>in.push_back(&amp;a3);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>in.push_back(&amp;a4);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>in.push_back(&amp;a5);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" kindref="member">makePath</ref>(path,<sp/>in);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432" refid="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" kindref="member">Path::makePath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" kindref="member">InArgs</ref>&amp;<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>current<sp/>=<sp/>path.c_str();</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end<sp/>=<sp/>current<sp/>+<sp/>path.length();</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>InArgs::const_iterator<sp/>itInArg<sp/>=<sp/>in.begin();</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*current<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*current<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_1af4d2ab3a6f09b69bab3d3e9fcdf13328" kindref="member">addPathInArg</ref>(path,<sp/>in,<sp/>itInArg,<sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" kindref="member">PathArgument::kindIndex</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a8048e741f2177c3b5d9ede4a5b8c53c2" kindref="member">ArrayIndex</ref><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>current<sp/>!=<sp/>end<sp/>&amp;&amp;<sp/>*current<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*current<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">;<sp/>++current)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>index<sp/>*<sp/>10<sp/>+<sp/><ref refid="namespace_json_1a8048e741f2177c3b5d9ede4a5b8c53c2" kindref="member">ArrayIndex</ref>(*current<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.push_back(index);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>==<sp/>end<sp/>||<sp/>*current++<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_1a3729e6d3682338b2cfad2c10d4746f53" kindref="member">invalidPath</ref>(path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(current<sp/>-<sp/>path.c_str()));</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*current<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_1af4d2ab3a6f09b69bab3d3e9fcdf13328" kindref="member">addPathInArg</ref>(path,<sp/>in,<sp/>itInArg,<sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" kindref="member">PathArgument::kindKey</ref>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*current<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>beginName<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>end<sp/>&amp;&amp;<sp/>!strchr(</highlight><highlight class="stringliteral">&quot;[.&quot;</highlight><highlight class="normal">,<sp/>*current))</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++current;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.push_back(std::string(beginName,<sp/>current));</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463" refid="class_json_1_1_path_1af4d2ab3a6f09b69bab3d3e9fcdf13328" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_1af4d2ab3a6f09b69bab3d3e9fcdf13328" kindref="member">Path::addPathInArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*path*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" kindref="member">InArgs</ref>&amp;<sp/>in,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InArgs::const_iterator&amp;<sp/>itInArg,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9" kindref="member">PathArgument::Kind</ref><sp/>kind)<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itInArg<sp/>==<sp/>in.end())<sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>missing<sp/>argument<sp/>%d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*itInArg)-&gt;kind_<sp/>!=<sp/>kind)<sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>bad<sp/>argument<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.push_back(**itInArg);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476" refid="class_json_1_1_path_1a3729e6d3682338b2cfad2c10d4746f53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_1a3729e6d3682338b2cfad2c10d4746f53" kindref="member">Path::invalidPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*path*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*location*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>invalid<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480" refid="class_json_1_1_path_1ae1d05fa985a6ee3c57f2b8ed186b5982" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_path_1ae1d05fa985a6ee3c57f2b8ed186b5982" kindref="member">Path::resolve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>node<sp/>=<sp/>&amp;root;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Args::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>arg<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg.<ref refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" kindref="member">kind_</ref><sp/>==<sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" kindref="member">PathArgument::kindIndex</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" kindref="member">isArray</ref>()<sp/>||<sp/>!node-&gt;<ref refid="class_json_1_1_value_1aaa82ebb4b730ea1567d310874f47d147" kindref="member">isValidIndex</ref>(arg.<ref refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" kindref="member">index_</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>unable<sp/>to<sp/>resolve<sp/>path<sp/>(array<sp/>value<sp/>expected<sp/>at<sp/>position...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>&amp;((*node)[arg.<ref refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" kindref="member">index_</ref>]);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg.<ref refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" kindref="member">kind_</ref><sp/>==<sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" kindref="member">PathArgument::kindKey</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" kindref="member">isObject</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>unable<sp/>to<sp/>resolve<sp/>path<sp/>(object<sp/>value<sp/>expected<sp/>at<sp/>position...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>&amp;((*node)[arg.<ref refid="class_json_1_1_path_argument_1a5d901b404323b61f066fb1adb3babfe1" kindref="member">key_</ref>]);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>&amp;<ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">Value::nullRef</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>unable<sp/>to<sp/>resolve<sp/>path<sp/>(object<sp/>has<sp/>no<sp/>member<sp/>named<sp/>&apos;&apos;<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*node;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503" refid="class_json_1_1_path_1a33d1749770a4cf74e9a3de419bc7febe" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/><ref refid="class_json_1_1_path_1ae1d05fa985a6ee3c57f2b8ed186b5982" kindref="member">Path::resolve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>defaultValue)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>node<sp/>=<sp/>&amp;root;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Args::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>arg<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg.<ref refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" kindref="member">kind_</ref><sp/>==<sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" kindref="member">PathArgument::kindIndex</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" kindref="member">isArray</ref>()<sp/>||<sp/>!node-&gt;<ref refid="class_json_1_1_value_1aaa82ebb4b730ea1567d310874f47d147" kindref="member">isValidIndex</ref>(arg.<ref refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" kindref="member">index_</ref>))</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>defaultValue;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>&amp;((*node)[arg.<ref refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" kindref="member">index_</ref>]);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg.<ref refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" kindref="member">kind_</ref><sp/>==<sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" kindref="member">PathArgument::kindKey</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" kindref="member">isObject</ref>())</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>defaultValue;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>&amp;((*node)[arg.<ref refid="class_json_1_1_path_argument_1a5d901b404323b61f066fb1adb3babfe1" kindref="member">key_</ref>]);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>&amp;<ref refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" kindref="member">Value::nullRef</ref>)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>defaultValue;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*node;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522" refid="class_json_1_1_path_1a5289901fc58ad1fdca1de7fb5a0b620c" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_path_1a5289901fc58ad1fdca1de7fb5a0b620c" kindref="member">Path::make</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>*<sp/>node<sp/>=<sp/>&amp;root;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Args::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" kindref="member">args_</ref>.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>&amp;<sp/>arg<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg.<ref refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" kindref="member">kind_</ref><sp/>==<sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" kindref="member">PathArgument::kindIndex</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" kindref="member">isArray</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>node<sp/>is<sp/>not<sp/>an<sp/>array<sp/>at<sp/>position<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>&amp;((*node)[arg.<ref refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" kindref="member">index_</ref>]);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg.<ref refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" kindref="member">kind_</ref><sp/>==<sp/><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" kindref="member">PathArgument::kindKey</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" kindref="member">isObject</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>node<sp/>is<sp/>not<sp/>an<sp/>object<sp/>at<sp/>position...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>&amp;((*node)[arg.<ref refid="class_json_1_1_path_argument_1a5d901b404323b61f066fb1adb3babfe1" kindref="member">key_</ref>]);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*node;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Json</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp"/>
  </compounddef>
</doxygen>
