<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="json__writer_8cpp" kind="file">
    <compoundname>json_writer.cpp</compoundname>
    <includes refid="writer_8h" local="no">json/writer.h</includes>
    <includes refid="json__tool_8h" local="yes">json_tool.h</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/istream</includes>
    <includes local="no">C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/type_traits</includes>
    <includes local="no">C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/xlocmon</includes>
    <includes local="no">C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/xloctime</includes>
    <includes local="no">memory</includes>
    <includes local="no">sstream</includes>
    <includes local="no">utility</includes>
    <includes local="no">set</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="238">
        <label>iomanip</label>
      </node>
      <node id="231">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="241">
        <label>C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/xlocmon</label>
      </node>
      <node id="250">
        <label>cmath</label>
      </node>
      <node id="247">
        <label>cassert</label>
      </node>
      <node id="232">
        <label>string</label>
      </node>
      <node id="235">
        <label>map</label>
      </node>
      <node id="239">
        <label>C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/istream</label>
      </node>
      <node id="234">
        <label>exception</label>
      </node>
      <node id="236">
        <label>ostream</label>
      </node>
      <node id="228">
        <label>json/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>value.h</label>
        <link refid="value_8h"/>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>forwards.h</label>
        <link refid="forwards_8h"/>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="249">
        <label>cstdio</label>
      </node>
      <node id="233">
        <label>vector</label>
      </node>
      <node id="240">
        <label>C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/type_traits</label>
      </node>
      <node id="245">
        <label>utility</label>
      </node>
      <node id="244">
        <label>sstream</label>
      </node>
      <node id="227">
        <label>F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_writer.cpp</label>
        <link refid="json_writer.cpp"/>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
      </node>
      <node id="237">
        <label>json_tool.h</label>
        <link refid="json__tool_8h"/>
      </node>
      <node id="242">
        <label>C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/xloctime</label>
      </node>
      <node id="246">
        <label>set</label>
      </node>
      <node id="248">
        <label>cstring</label>
      </node>
      <node id="243">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_json_1_1_comment_style" prot="public">Json::CommentStyle</innerclass>
    <innerclass refid="struct_json_1_1_built_styled_stream_writer" prot="public">Json::BuiltStyledStreamWriter</innerclass>
    <innernamespace refid="namespace_json">Json</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="json__writer_8cpp_1aab49fbe39624f083e45ef2d85e7e0705" prot="public" static="no">
        <name>isfinite</name>
        <initializer>std::isfinite</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_writer.cpp" line="45" column="9" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_writer.cpp" bodystart="45" bodyend="-1"/>
        <referencedby refid="namespace_json_1a1c49ced79060a67638d7fa78a63b1813" compoundref="json__writer_8cpp" startline="136" endline="164">Json::valueToString</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2011<sp/>Baptiste<sp/>Lepilleur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>MIT<sp/>license,<sp/>or<sp/>public<sp/>domain<sp/>if<sp/>desired<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recognized<sp/>in<sp/>your<sp/>jurisdiction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>LICENSE<sp/>for<sp/>detail<sp/>or<sp/>copy<sp/>at<sp/>http://jsoncpp.sourceforge.net/LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="writer_8h" kindref="compound">json/writer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__tool_8h" kindref="compound">json_tool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>if<sp/>!defined(JSON_IS_AMALGAMATION)</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1200<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&lt;<sp/>1800<sp/>//<sp/>Between<sp/>VC++<sp/>6.0<sp/>and<sp/>VC++<sp/>11.0</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isfinite<sp/>_finite</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(__sun)<sp/>&amp;&amp;<sp/>defined(__SVR4)<sp/>//Solaris</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(isfinite)</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;ieeefp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isfinite<sp/>finite</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(_AIX)</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(isfinite)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isfinite<sp/>finite</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(__hpux)</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(isfinite)</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(__ia64)<sp/>&amp;&amp;<sp/>!defined(finite)</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>isfinite(x)<sp/>((sizeof(x)<sp/>==<sp/>sizeof(float)<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Isfinitef(x)<sp/>:<sp/>_IsFinite(x)))</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isfinite<sp/>finite</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(defined(__QNXNTO__))<sp/>//<sp/>QNX<sp/>already<sp/>defines<sp/>isfinite</highlight></codeline>
<codeline lineno="45" refid="json__writer_8cpp_1aab49fbe39624f083e45ef2d85e7e0705" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>isfinite<sp/>std::isfinite</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(WINCE)<sp/>&amp;&amp;<sp/>defined(__STDC_SECURE_LIB__)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1500<sp/>//<sp/>VC++<sp/>9.0<sp/>and<sp/>above</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>snprintf<sp/>sprintf_s</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>_MSC_VER<sp/>&gt;=<sp/>1900<sp/>//<sp/>VC++<sp/>14.0<sp/>and<sp/>above</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>snprintf<sp/>std::snprintf</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>snprintf<sp/>_snprintf</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ANDROID__)<sp/>||<sp/>defined(__QNXNTO__)</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>snprintf<sp/>snprintf</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>snprintf<sp/>std::snprintf</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__BORLANDC__)<sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isfinite<sp/>_finite</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>snprintf<sp/>_snprintf</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1400<sp/>//<sp/>VC++<sp/>8.0</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Disable<sp/>warning<sp/>about<sp/>strdup<sp/>being<sp/>deprecated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>4996)</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Json<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>(defined(_CPPLIB_VER)<sp/>&amp;&amp;<sp/>_CPPLIB_VER<sp/>&gt;=<sp/>520)</highlight></codeline>
<codeline lineno="77" refid="namespace_json_1a9554bc17cfe4b8019685fad2fd5d364a" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;StreamWriter&gt;<sp/><ref refid="namespace_json_1a9554bc17cfe4b8019685fad2fd5d364a" kindref="member">StreamWriterPtr</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::auto_ptr&lt;StreamWriter&gt;<sp/><sp/><sp/><ref refid="namespace_json_1a9554bc17cfe4b8019685fad2fd5d364a" kindref="member">StreamWriterPtr</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespace_json_1aa11b210ff98a4f4dd4e2df19260f8c3a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1aa11b210ff98a4f4dd4e2df19260f8c3a" kindref="member">containsControlCharacter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_json_1a0381e631737f51331065a388f4f59197" kindref="member">isControlCharacter</ref>(*(str++)))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespace_json_1ae8a357381f264cf28f46449e79ab1dea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1ae8a357381f264cf28f46449e79ab1dea" kindref="member">containsControlCharacter0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>end<sp/>=<sp/>str<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(end<sp/>!=<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_json_1a0381e631737f51331065a388f4f59197" kindref="member">isControlCharacter</ref>(*str)<sp/>||<sp/>0==*str)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>++str;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="namespace_json_1abd9c650f70d9434f98f9025e2e2faf2d" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a602bcf69c2042fb61c3b243cb16f04ca" kindref="member">UIntToStringBuffer</ref><sp/>buffer;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>current<sp/>=<sp/>buffer<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/><ref refid="class_json_1_1_value_1af91df130daa50dd43d2cd89e6ee67706" kindref="member">Value::minLargestInt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1ac1ffd21a9e55122014353c773ccc496e" kindref="member">uintToString</ref>(<ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>(<ref refid="class_json_1_1_value_1a8b4977696f13296fa8755c7953fafb2f" kindref="member">Value::maxLargestInt</ref>)<sp/>+<sp/>1,<sp/>current);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>*--current<sp/>=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1ac1ffd21a9e55122014353c773ccc496e" kindref="member">uintToString</ref>(<ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>(-value),<sp/>current);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>*--current<sp/>=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1ac1ffd21a9e55122014353c773ccc496e" kindref="member">uintToString</ref>(<ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>(value),<sp/>current);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>assert(current<sp/>&gt;=<sp/>buffer);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="namespace_json_1a3f46b0bc62b95a9426a2da0117bdf9f0" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a602bcf69c2042fb61c3b243cb16f04ca" kindref="member">UIntToStringBuffer</ref><sp/>buffer;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>current<sp/>=<sp/>buffer<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1ac1ffd21a9e55122014353c773ccc496e" kindref="member">uintToString</ref>(value,<sp/>current);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>assert(current<sp/>&gt;=<sp/>buffer);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1a08122e8005b706d982e48cca1e2119c7" kindref="member">Int</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1a218d880af853ce786cd985e82571d297" kindref="member">LargestInt</ref>(value));</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="namespace_json_1a4d43b0ff222bd3975bcf1babca0b978f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1a800fb90eb6ee8d5d62b600c06f87f7d4" kindref="member">UInt</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(<ref refid="namespace_json_1ae202ecad69725e23443f465e257456d0" kindref="member">LargestUInt</ref>(value));</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>#<sp/>if<sp/>defined(JSON_HAS_INT64)</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="namespace_json_1a1c49ced79060a67638d7fa78a63b1813" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useSpecialFloats,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>a<sp/>buffer<sp/>that<sp/>is<sp/>more<sp/>than<sp/>large<sp/>enough<sp/>to<sp/>store<sp/>the<sp/>16<sp/>digits<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>precision<sp/>requested<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[32];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>formatString[6];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>sprintf(formatString,<sp/></highlight><highlight class="stringliteral">&quot;%%.%dg&quot;</highlight><highlight class="normal">,<sp/>precision);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>into<sp/>the<sp/>buffer.<sp/>We<sp/>need<sp/>not<sp/>request<sp/>the<sp/>alternative<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>always<sp/>has<sp/>a<sp/>decimal<sp/>point<sp/>because<sp/>JSON<sp/>doesn&apos;t<sp/>distingish<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>concepts<sp/>of<sp/>reals<sp/>and<sp/>integers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="json__writer_8cpp_1aab49fbe39624f083e45ef2d85e7e0705" kindref="member">isfinite</ref>(value))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/>formatString,<sp/>value);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IEEE<sp/>standard<sp/>states<sp/>that<sp/>NaN<sp/>values<sp/>will<sp/>not<sp/>compare<sp/>to<sp/>themselves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/>useSpecialFloats<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;NaN&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/>useSpecialFloats<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;-Infinity&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;-1e+9999&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/>useSpecialFloats<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Infinity&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;1e+9999&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>those,<sp/>we<sp/>do<sp/>not<sp/>need<sp/>to<sp/>call<sp/>fixNumLoc,<sp/>but<sp/>it<sp/>is<sp/>fast.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>assert(len<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1aa208904144dc7b11ccc28f47c9afab9a" kindref="member">fixNumericLocale</ref>(buffer,<sp/>buffer<sp/>+<sp/>len);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="namespace_json_1a99995d7dafa4f4970b349d7d3c8d1d99" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>17);<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="namespace_json_1a979ed531f091985e22f0051cd2a8e341" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="namespace_json_1aa0c8235a4a5c6599da5d3332743db8ac" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1aa0c8235a4a5c6599da5d3332743db8ac" kindref="member">valueToQuotedString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>sure<sp/>how<sp/>to<sp/>handle<sp/>unicode...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strpbrk(value,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\\\b\f\n\r\t&quot;</highlight><highlight class="normal">)<sp/>==<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespace_json_1aa11b210ff98a4f4dd4e2df19260f8c3a" kindref="member">containsControlCharacter</ref>(value))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>value<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>walk<sp/>value<sp/>and<sp/>escape<sp/>any<sp/>special<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Appending<sp/>to<sp/>std::string<sp/>is<sp/>not<sp/>efficient,<sp/>but<sp/>this<sp/>should<sp/>be<sp/>rare.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(Note:<sp/>forward<sp/>slashes<sp/>are<sp/>*not*<sp/>rare,<sp/>but<sp/>I<sp/>am<sp/>not<sp/>escaping<sp/>them.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>std::string::size_type<sp/>maxsize<sp/>=</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strlen(value)<sp/>*<sp/>2<sp/>+<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>allescaped+quotes+NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>result.reserve(maxsize);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>lots<sp/>of<sp/>mallocs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c<sp/>=<sp/>value;<sp/>*c<sp/>!=<sp/>0;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*c)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\b&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>&apos;/&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>\/<sp/>is<sp/>considered<sp/>a<sp/>legal<sp/>escape<sp/>in<sp/>JSON,<sp/>a<sp/>bare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slash<sp/>is<sp/>also<sp/>legal,<sp/>so<sp/>I<sp/>see<sp/>no<sp/>reason<sp/>to<sp/>escape<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(I<sp/>hope<sp/>I<sp/>am<sp/>not<sp/>misunderstanding<sp/>something.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blep<sp/>notes:<sp/>actually<sp/>escaping<sp/>\/<sp/>may<sp/>be<sp/>useful<sp/>in<sp/>javascript<sp/>to<sp/>avoid<sp/>&lt;/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>add<sp/>a<sp/>flag<sp/>to<sp/>allow<sp/>this<sp/>compatibility<sp/>mode<sp/>and<sp/>prevent<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence<sp/>from<sp/>occurring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_json_1a0381e631737f51331065a388f4f59197" kindref="member">isControlCharacter</ref>(*c))<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\u&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>std::uppercase<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*c);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>oss.str();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>*c;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/upcaste/upcaste/blob/master/src/upcore/src/cstring/strnpbrk.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="namespace_json_1a7492156d0c7d2dd2f672acacfb240320" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="namespace_json_1a7492156d0c7d2dd2f672acacfb240320" kindref="member">strnpbrk</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>accept,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>assert((s<sp/>||<sp/>!n)<sp/>&amp;&amp;<sp/>accept);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>s<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>cur<sp/>=<sp/>s;<sp/>cur<sp/>&lt;<sp/>end;<sp/>++cur)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*cur;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>a<sp/>=<sp/>accept;<sp/>*a;<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*a<sp/>==<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247" refid="namespace_json_1a20d52b5a457ee5d833645d119451c2cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_json_1a20d52b5a457ee5d833645d119451c2cd" kindref="member">valueToQuotedStringN</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>sure<sp/>how<sp/>to<sp/>handle<sp/>unicode...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_json_1a7492156d0c7d2dd2f672acacfb240320" kindref="member">strnpbrk</ref>(value,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\\\b\f\n\r\t&quot;</highlight><highlight class="normal">,<sp/>length)<sp/>==<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespace_json_1ae8a357381f264cf28f46449e79ab1dea" kindref="member">containsControlCharacter0</ref>(value,<sp/>length))</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>value<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>walk<sp/>value<sp/>and<sp/>escape<sp/>any<sp/>special<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Appending<sp/>to<sp/>std::string<sp/>is<sp/>not<sp/>efficient,<sp/>but<sp/>this<sp/>should<sp/>be<sp/>rare.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(Note:<sp/>forward<sp/>slashes<sp/>are<sp/>*not*<sp/>rare,<sp/>but<sp/>I<sp/>am<sp/>not<sp/>escaping<sp/>them.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>std::string::size_type<sp/>maxsize<sp/>=</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>*<sp/>2<sp/>+<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>allescaped+quotes+NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>result.reserve(maxsize);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>lots<sp/>of<sp/>mallocs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>end<sp/>=<sp/>value<sp/>+<sp/>length;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c<sp/>=<sp/>value;<sp/>c<sp/>!=<sp/>end;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*c)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\b&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>&apos;/&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>\/<sp/>is<sp/>considered<sp/>a<sp/>legal<sp/>escape<sp/>in<sp/>JSON,<sp/>a<sp/>bare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slash<sp/>is<sp/>also<sp/>legal,<sp/>so<sp/>I<sp/>see<sp/>no<sp/>reason<sp/>to<sp/>escape<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(I<sp/>hope<sp/>I<sp/>am<sp/>not<sp/>misunderstanding<sp/>something.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blep<sp/>notes:<sp/>actually<sp/>escaping<sp/>\/<sp/>may<sp/>be<sp/>useful<sp/>in<sp/>javascript<sp/>to<sp/>avoid<sp/>&lt;/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>add<sp/>a<sp/>flag<sp/>to<sp/>allow<sp/>this<sp/>compatibility<sp/>mode<sp/>and<sp/>prevent<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence<sp/>from<sp/>occurring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="namespace_json_1a0381e631737f51331065a388f4f59197" kindref="member">isControlCharacter</ref>(*c))<sp/>||<sp/>(*c<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\u&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>std::uppercase<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*c);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>oss.str();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>*c;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>Writer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="class_json_1_1_writer_1a3e618564336f26b14921f0d840db668c" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_writer_1a3e618564336f26b14921f0d840db668c" kindref="member">Writer::~Writer</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>FastWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="class_json_1_1_fast_writer_1a1bbc73ce1a1cc7b09cd1e02db3905170" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_fast_writer_1a1bbc73ce1a1cc7b09cd1e02db3905170" kindref="member">FastWriter::FastWriter</ref>()</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>yamlCompatiblityEnabled_(false),<sp/>dropNullPlaceholders_(false),</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>omitEndingLineFeed_(false)<sp/>{}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="class_json_1_1_fast_writer_1a78d98e9f76d33660ad6e6a1abe287d45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_fast_writer_1a78d98e9f76d33660ad6e6a1abe287d45" kindref="member">FastWriter::enableYAMLCompatibility</ref>()<sp/>{<sp/><ref refid="class_json_1_1_fast_writer_1a4c4c1911179bf472d24492915b0e489a" kindref="member">yamlCompatiblityEnabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="class_json_1_1_fast_writer_1a6e93d8dce951e408517311026a065b40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_fast_writer_1a6e93d8dce951e408517311026a065b40" kindref="member">FastWriter::dropNullPlaceholders</ref>()<sp/>{<sp/><ref refid="class_json_1_1_fast_writer_1a97e9d4ff84b59a48756dcc27a71b5904" kindref="member">dropNullPlaceholders_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="class_json_1_1_fast_writer_1af4ee077d365d75941fb2688d97207a55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_fast_writer_1af4ee077d365d75941fb2688d97207a55" kindref="member">FastWriter::omitEndingLineFeed</ref>()<sp/>{<sp/><ref refid="class_json_1_1_fast_writer_1abd6e13851db6dcf59d84af68d48d50ac" kindref="member">omitEndingLineFeed_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="class_json_1_1_fast_writer_1aee69e3f778982ec9218c1a5a7c6a3e7a" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_json_1_1_fast_writer_1aee69e3f778982ec9218c1a5a7c6a3e7a" kindref="member">FastWriter::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_fast_writer_1a2ef4a2ce13a341171f01f414f4fdd765" kindref="member">writeValue</ref>(root);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_fast_writer_1abd6e13851db6dcf59d84af68d48d50ac" kindref="member">omitEndingLineFeed_</ref>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_json_1_1_fast_writer_1a2ef4a2ce13a341171f01f414f4fdd765" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_fast_writer_1a2ef4a2ce13a341171f01f414f4fdd765" kindref="member">FastWriter::writeValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(value.<ref refid="class_json_1_1_value_1a695ef31fad36b4712918b3ff80158479" kindref="member">type</ref>())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_fast_writer_1a97e9d4ff84b59a48756dcc27a71b5904" kindref="member">dropNullPlaceholders_</ref>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a3786bb100c5cf9a98eb6d13784968956" kindref="member">asLargestInt</ref>());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a692b88345a745b2f89ca5d94b52e94d4" kindref="member">asLargestUInt</ref>());</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a33434ed1c0217a34d04c95fa5342fd37" kindref="member">asDouble</ref>());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>NULL<sp/>possible<sp/>for<sp/>value.string_?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>str;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a1e0263113ae247a632afac43ebc4149f" kindref="member">getString</ref>(&amp;str,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)<sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/><ref refid="namespace_json_1a20d52b5a457ee5d833645d119451c2cd" kindref="member">valueToQuotedStringN</ref>(str,<sp/>static_cast&lt;unsigned&gt;(end-str));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/><ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a7402c797285c020566c3db5f8ae4e940" kindref="member">asBool</ref>());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1a2ef4a2ce13a341171f01f414f4fdd765" kindref="member">writeValue</ref>(value[index]);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Value::Members</ref><sp/>members(value.<ref refid="class_json_1_1_value_1a30fa08af88f2d0a038b22ba9f4e88b2a" kindref="member">getMemberNames</ref>());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1afc70d465b79bfc7741ff75294dcefeab" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Value::Members::iterator<sp/>it<sp/>=<sp/>members.begin();<sp/>it<sp/>!=<sp/>members.end();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>members.begin())</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>document_<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>document_<sp/>+=<sp/><ref refid="namespace_json_1a20d52b5a457ee5d833645d119451c2cd" kindref="member">valueToQuotedStringN</ref>(name.data(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(name.length()));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>document_<sp/>+=<sp/><ref refid="class_json_1_1_fast_writer_1a4c4c1911179bf472d24492915b0e489a" kindref="member">yamlCompatiblityEnabled_</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_fast_writer_1a2ef4a2ce13a341171f01f414f4fdd765" kindref="member">writeValue</ref>(value[name]);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>document_<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>StyledWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="class_json_1_1_styled_writer_1a1f1b5f922a6a0ef0e56c6dd2f6170192" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_styled_writer_1a1f1b5f922a6a0ef0e56c6dd2f6170192" kindref="member">StyledWriter::StyledWriter</ref>()</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rightMargin_(74),<sp/>indentSize_(3),<sp/>addChildValues_()<sp/>{}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="class_json_1_1_styled_writer_1abd42ae0b8a788a46969fc51a28a496f5" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_json_1_1_styled_writer_1abd42ae0b8a788a46969fc51a28a496f5" kindref="member">StyledWriter::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1acaabfa48b50a8bb7fa9ce98e2ae971d9" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a98a33f1d4c853a4dbf87ca17499c5830" kindref="member">indentString_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ad3452c48fabf968bf3693549331ec06e" kindref="member">writeCommentBeforeValue</ref>(root);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac40143cf43f7c4a94d3d0b41e5245069" kindref="member">writeValue</ref>(root);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ab12b274c62822fc51ec4617c6be95139" kindref="member">writeCommentAfterValueOnSameLine</ref>(root);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="class_json_1_1_styled_writer_1ac40143cf43f7c4a94d3d0b41e5245069" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1ac40143cf43f7c4a94d3d0b41e5245069" kindref="member">StyledWriter::writeValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(value.<ref refid="class_json_1_1_value_1a695ef31fad36b4712918b3ff80158479" kindref="member">type</ref>())<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a3786bb100c5cf9a98eb6d13784968956" kindref="member">asLargestInt</ref>()));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a692b88345a745b2f89ca5d94b52e94d4" kindref="member">asLargestUInt</ref>()));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a33434ed1c0217a34d04c95fa5342fd37" kindref="member">asDouble</ref>()));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>NULL<sp/>possible<sp/>for<sp/>value.string_?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>str;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a1e0263113ae247a632afac43ebc4149f" kindref="member">getString</ref>(&amp;str,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)<sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a20d52b5a457ee5d833645d119451c2cd" kindref="member">valueToQuotedStringN</ref>(str,<sp/>static_cast&lt;unsigned&gt;(end-str)));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a7402c797285c020566c3db5f8ae4e940" kindref="member">asBool</ref>()));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a0618c23d62965515def15ece1e677f5d" kindref="member">writeArrayValue</ref>(value);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Value::Members</ref><sp/>members(value.<ref refid="class_json_1_1_value_1a30fa08af88f2d0a038b22ba9f4e88b2a" kindref="member">getMemberNames</ref>());</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(members.empty())</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a7b3cc9da3cb455ee9b2752307ac21b58" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a0b65be6186a7c6638270990265e42b97" kindref="member">indent</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Value::Members::iterator<sp/>it<sp/>=<sp/>members.begin();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>childValue<sp/>=<sp/>value[name];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ad3452c48fabf968bf3693549331ec06e" kindref="member">writeCommentBeforeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a7b3cc9da3cb455ee9b2752307ac21b58" kindref="member">writeWithIndent</ref>(<ref refid="namespace_json_1aa0c8235a4a5c6599da5d3332743db8ac" kindref="member">valueToQuotedString</ref>(name.c_str()));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac40143cf43f7c4a94d3d0b41e5245069" kindref="member">writeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++it<sp/>==<sp/>members.end())<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ab12b274c62822fc51ec4617c6be95139" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ab12b274c62822fc51ec4617c6be95139" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1acee1c9285519b573cfcb00b7e7f5a809" kindref="member">unindent</ref>();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a7b3cc9da3cb455ee9b2752307ac21b58" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_json_1_1_styled_writer_1a0618c23d62965515def15ece1e677f5d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1a0618c23d62965515def15ece1e677f5d" kindref="member">StyledWriter::writeArrayValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isArrayMultiLine<sp/>=<sp/><ref refid="class_json_1_1_styled_writer_1aa5dc671edf10b9976f1511da2271ab9d" kindref="member">isMultineArray</ref>(value);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isArrayMultiLine)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a7b3cc9da3cb455ee9b2752307ac21b58" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a0b65be6186a7c6638270990265e42b97" kindref="member">indent</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasChildValue<sp/>=<sp/>!<ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>.empty();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>childValue<sp/>=<sp/>value[index];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ad3452c48fabf968bf3693549331ec06e" kindref="member">writeCommentBeforeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasChildValue)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a7b3cc9da3cb455ee9b2752307ac21b58" kindref="member">writeWithIndent</ref>(<ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>[index]);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a885f4bfb5701896d60eee6716d2db7e4" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac40143cf43f7c4a94d3d0b41e5245069" kindref="member">writeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++index<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ab12b274c62822fc51ec4617c6be95139" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ab12b274c62822fc51ec4617c6be95139" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1acee1c9285519b573cfcb00b7e7f5a809" kindref="member">unindent</ref>();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a7b3cc9da3cb455ee9b2752307ac21b58" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>output<sp/>on<sp/>a<sp/>single<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>.size()<sp/>==<sp/>size);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>document_<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>document_<sp/>+=<sp/><ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>[index];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>document_<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="class_json_1_1_styled_writer_1aa5dc671edf10b9976f1511da2271ab9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1aa5dc671edf10b9976f1511da2271ab9d" kindref="member">StyledWriter::isMultineArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMultiLine<sp/>=<sp/>size<sp/>*<sp/>3<sp/>&gt;=<sp/><ref refid="class_json_1_1_styled_writer_1a9c8fc62cb4f3b4a6dbed470fea2aa567" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>.clear();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size<sp/>&amp;&amp;<sp/>!isMultiLine;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>childValue<sp/>=<sp/>value[index];</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/>((childValue.<ref refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" kindref="member">isArray</ref>()<sp/>||<sp/>childValue.<ref refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" kindref="member">isObject</ref>())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childValue.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isMultiLine)<sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>line<sp/>length<sp/>&gt;<sp/>max<sp/>line<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>.reserve(size);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1acaabfa48b50a8bb7fa9ce98e2ae971d9" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineLength<sp/>=<sp/>4<sp/>+<sp/>(size<sp/>-<sp/>1)<sp/>*<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>&apos;[<sp/>&apos;<sp/>+<sp/>&apos;,<sp/>&apos;*n<sp/>+<sp/>&apos;<sp/>]&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_styled_writer_1a37a806d010f708cb68556f2666f79bdf" kindref="member">hasCommentForValue</ref>(value[index]))<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac40143cf43f7c4a94d3d0b41e5245069" kindref="member">writeValue</ref>(value[index]);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineLength<sp/>+=<sp/>int(<ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>[index].length());</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1acaabfa48b50a8bb7fa9ce98e2ae971d9" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/>isMultiLine<sp/>||<sp/>lineLength<sp/>&gt;=<sp/><ref refid="class_json_1_1_styled_writer_1a9c8fc62cb4f3b4a6dbed470fea2aa567" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isMultiLine;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1aba120a1ff1b84411b32039188e8fb49f" kindref="member">StyledWriter::pushValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_styled_writer_1acaabfa48b50a8bb7fa9ce98e2ae971d9" kindref="member">addChildValues_</ref>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a1f905495f0705365af117ec541e29fdf" kindref="member">childValues_</ref>.push_back(value);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="class_json_1_1_styled_writer_1a885f4bfb5701896d60eee6716d2db7e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1a885f4bfb5701896d60eee6716d2db7e4" kindref="member">StyledWriter::writeIndent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>last<sp/>=<sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref>[<ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref>.length()<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>already<sp/>indented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>Comments<sp/>may<sp/>add<sp/>new-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/><ref refid="class_json_1_1_styled_writer_1a98a33f1d4c853a4dbf87ca17499c5830" kindref="member">indentString_</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="class_json_1_1_styled_writer_1a7b3cc9da3cb455ee9b2752307ac21b58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1a7b3cc9da3cb455ee9b2752307ac21b58" kindref="member">StyledWriter::writeWithIndent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a885f4bfb5701896d60eee6716d2db7e4" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="class_json_1_1_styled_writer_1a0b65be6186a7c6638270990265e42b97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1a0b65be6186a7c6638270990265e42b97" kindref="member">StyledWriter::indent</ref>()<sp/>{<sp/><ref refid="class_json_1_1_styled_writer_1a98a33f1d4c853a4dbf87ca17499c5830" kindref="member">indentString_</ref><sp/>+=<sp/>std::string(<ref refid="class_json_1_1_styled_writer_1ae911f06042935286c24a9fb23dba78bd" kindref="member">indentSize_</ref>,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="class_json_1_1_styled_writer_1acee1c9285519b573cfcb00b7e7f5a809" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1acee1c9285519b573cfcb00b7e7f5a809" kindref="member">StyledWriter::unindent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>assert(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="class_json_1_1_styled_writer_1a98a33f1d4c853a4dbf87ca17499c5830" kindref="member">indentString_</ref>.size())<sp/>&gt;=<sp/><ref refid="class_json_1_1_styled_writer_1ae911f06042935286c24a9fb23dba78bd" kindref="member">indentSize_</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a98a33f1d4c853a4dbf87ca17499c5830" kindref="member">indentString_</ref>.resize(<ref refid="class_json_1_1_styled_writer_1a98a33f1d4c853a4dbf87ca17499c5830" kindref="member">indentString_</ref>.size()<sp/>-<sp/><ref refid="class_json_1_1_styled_writer_1ae911f06042935286c24a9fb23dba78bd" kindref="member">indentSize_</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="class_json_1_1_styled_writer_1ad3452c48fabf968bf3693549331ec06e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1ad3452c48fabf968bf3693549331ec06e" kindref="member">StyledWriter::writeCommentBeforeValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>))</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a885f4bfb5701896d60eee6716d2db7e4" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>comment<sp/>=<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>std::string::const_iterator<sp/>iter<sp/>=<sp/>comment.begin();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>comment.end())<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/>*iter;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*iter<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter<sp/>!=<sp/>comment.end()<sp/>&amp;&amp;<sp/>*(iter<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1a885f4bfb5701896d60eee6716d2db7e4" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Comments<sp/>are<sp/>stripped<sp/>of<sp/>trailing<sp/>newlines,<sp/>so<sp/>add<sp/>one<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="class_json_1_1_styled_writer_1ab12b274c62822fc51ec4617c6be95139" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1ab12b274c62822fc51ec4617c6be95139" kindref="member">StyledWriter::writeCommentAfterValueOnSameLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>))</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>))<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_writer_1ac092c93313e7ab202b13e075d682faea" kindref="member">document_</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="class_json_1_1_styled_writer_1a37a806d010f708cb68556f2666f79bdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_writer_1a37a806d010f708cb68556f2666f79bdf" kindref="member">StyledWriter::hasCommentForValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>)<sp/>||</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>)<sp/>||</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>StyledStreamWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="class_json_1_1_styled_stream_writer_1ae87567a08de865b6dc84d7218a3001df" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_styled_stream_writer_1ae87567a08de865b6dc84d7218a3001df" kindref="member">StyledStreamWriter::StyledStreamWriter</ref>(std::string<sp/>indentation)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>document_(NULL),<sp/>rightMargin_(74),<sp/>indentation_(indentation),</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addChildValues_()<sp/>{}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="class_json_1_1_styled_stream_writer_1a07807741c6c43ecd35885a87234d0805" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a07807741c6c43ecd35885a87234d0805" kindref="member">StyledStreamWriter::write</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>=<sp/>&amp;out;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a4e4bb7fc223b2652b72b523b1ce414fa" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" kindref="member">indentString_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a79c3c2b320475035c47b2db484a3e434" kindref="member">writeCommentBeforeValue</ref>(root);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref>)<sp/><ref refid="class_json_1_1_styled_stream_writer_1a5a52fa5b406f1580a61dde3b5638e76d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a4359250e09273fa0144021684be001ae" kindref="member">writeValue</ref>(root);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ad2ca860e317ca91d6b2932535b4ce9c7" kindref="member">writeCommentAfterValueOnSameLine</ref>(root);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>Forget<sp/>the<sp/>stream,<sp/>for<sp/>safety.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="class_json_1_1_styled_stream_writer_1a4359250e09273fa0144021684be001ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a4359250e09273fa0144021684be001ae" kindref="member">StyledStreamWriter::writeValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(value.<ref refid="class_json_1_1_value_1a695ef31fad36b4712918b3ff80158479" kindref="member">type</ref>())<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a3786bb100c5cf9a98eb6d13784968956" kindref="member">asLargestInt</ref>()));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a692b88345a745b2f89ca5d94b52e94d4" kindref="member">asLargestUInt</ref>()));</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a33434ed1c0217a34d04c95fa5342fd37" kindref="member">asDouble</ref>()));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>NULL<sp/>possible<sp/>for<sp/>value.string_?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>str;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a1e0263113ae247a632afac43ebc4149f" kindref="member">getString</ref>(&amp;str,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)<sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a20d52b5a457ee5d833645d119451c2cd" kindref="member">valueToQuotedStringN</ref>(str,<sp/>static_cast&lt;unsigned&gt;(end-str)));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a7402c797285c020566c3db5f8ae4e940" kindref="member">asBool</ref>()));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a606f2ddd58093c9b019d452c1b6f09fe" kindref="member">writeArrayValue</ref>(value);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Value::Members</ref><sp/>members(value.<ref refid="class_json_1_1_value_1a30fa08af88f2d0a038b22ba9f4e88b2a" kindref="member">getMemberNames</ref>());</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(members.empty())</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a602fd51aa92cac1f18351806f1d9c8cc" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ab49409578422aa73b060e3492dd6c72a" kindref="member">indent</ref>();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Value::Members::iterator<sp/>it<sp/>=<sp/>members.begin();</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>childValue<sp/>=<sp/>value[name];</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a79c3c2b320475035c47b2db484a3e434" kindref="member">writeCommentBeforeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a602fd51aa92cac1f18351806f1d9c8cc" kindref="member">writeWithIndent</ref>(<ref refid="namespace_json_1aa0c8235a4a5c6599da5d3332743db8ac" kindref="member">valueToQuotedString</ref>(name.c_str()));</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a4359250e09273fa0144021684be001ae" kindref="member">writeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++it<sp/>==<sp/>members.end())<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ad2ca860e317ca91d6b2932535b4ce9c7" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ad2ca860e317ca91d6b2932535b4ce9c7" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a74d8fb9beecd29759d7b79f430386358" kindref="member">unindent</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a602fd51aa92cac1f18351806f1d9c8cc" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="class_json_1_1_styled_stream_writer_1a606f2ddd58093c9b019d452c1b6f09fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a606f2ddd58093c9b019d452c1b6f09fe" kindref="member">StyledStreamWriter::writeArrayValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isArrayMultiLine<sp/>=<sp/><ref refid="class_json_1_1_styled_stream_writer_1a88f4d342cf25c73aabf77c1b8ba01e44" kindref="member">isMultineArray</ref>(value);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isArrayMultiLine)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a602fd51aa92cac1f18351806f1d9c8cc" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ab49409578422aa73b060e3492dd6c72a" kindref="member">indent</ref>();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasChildValue<sp/>=<sp/>!<ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>.empty();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>childValue<sp/>=<sp/>value[index];</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a79c3c2b320475035c47b2db484a3e434" kindref="member">writeCommentBeforeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasChildValue)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a602fd51aa92cac1f18351806f1d9c8cc" kindref="member">writeWithIndent</ref>(<ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>[index]);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref>)<sp/><ref refid="class_json_1_1_styled_stream_writer_1a5a52fa5b406f1580a61dde3b5638e76d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a4359250e09273fa0144021684be001ae" kindref="member">writeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++index<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ad2ca860e317ca91d6b2932535b4ce9c7" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1ad2ca860e317ca91d6b2932535b4ce9c7" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a74d8fb9beecd29759d7b79f430386358" kindref="member">unindent</ref>();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a602fd51aa92cac1f18351806f1d9c8cc" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>output<sp/>on<sp/>a<sp/>single<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>.size()<sp/>==<sp/>size);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*document_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*document_<sp/>&lt;&lt;<sp/><ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>[index];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*document_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="class_json_1_1_styled_stream_writer_1a88f4d342cf25c73aabf77c1b8ba01e44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a88f4d342cf25c73aabf77c1b8ba01e44" kindref="member">StyledStreamWriter::isMultineArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMultiLine<sp/>=<sp/>size<sp/>*<sp/>3<sp/>&gt;=<sp/><ref refid="class_json_1_1_styled_stream_writer_1a67fdaa6758885f082b6a7ede52b0ab91" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>.clear();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size<sp/>&amp;&amp;<sp/>!isMultiLine;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>childValue<sp/>=<sp/>value[index];</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/>((childValue.<ref refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" kindref="member">isArray</ref>()<sp/>||<sp/>childValue.<ref refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" kindref="member">isObject</ref>())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childValue.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isMultiLine)<sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>line<sp/>length<sp/>&gt;<sp/>max<sp/>line<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>.reserve(size);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a4e4bb7fc223b2652b72b523b1ce414fa" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineLength<sp/>=<sp/>4<sp/>+<sp/>(size<sp/>-<sp/>1)<sp/>*<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>&apos;[<sp/>&apos;<sp/>+<sp/>&apos;,<sp/>&apos;*n<sp/>+<sp/>&apos;<sp/>]&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_styled_stream_writer_1ad2892f57171919fa4f8a5ae5574755cf" kindref="member">hasCommentForValue</ref>(value[index]))<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a4359250e09273fa0144021684be001ae" kindref="member">writeValue</ref>(value[index]);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineLength<sp/>+=<sp/>int(<ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>[index].length());</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a4e4bb7fc223b2652b72b523b1ce414fa" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/>isMultiLine<sp/>||<sp/>lineLength<sp/>&gt;=<sp/><ref refid="class_json_1_1_styled_stream_writer_1a67fdaa6758885f082b6a7ede52b0ab91" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isMultiLine;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1ae626a0ab8a529e0e524924f1ab3b1a0d" kindref="member">StyledStreamWriter::pushValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_json_1_1_styled_stream_writer_1a4e4bb7fc223b2652b72b523b1ce414fa" kindref="member">addChildValues_</ref>)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aafd62e00a401df73fcacb2e410114b3d" kindref="member">childValues_</ref>.push_back(value);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="class_json_1_1_styled_stream_writer_1a5a52fa5b406f1580a61dde3b5638e76d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a5a52fa5b406f1580a61dde3b5638e76d" kindref="member">StyledStreamWriter::writeIndent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blep<sp/>intended<sp/>this<sp/>to<sp/>look<sp/>at<sp/>the<sp/>so-far-written<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>whether<sp/>we<sp/>are<sp/>already<sp/>indented,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>stream<sp/>we<sp/>cannot<sp/>do<sp/>that.<sp/>So<sp/>we<sp/>rely<sp/>on<sp/>some<sp/>saved<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>caller<sp/>checks<sp/>indented_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" kindref="member">indentString_</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="class_json_1_1_styled_stream_writer_1a602fd51aa92cac1f18351806f1d9c8cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a602fd51aa92cac1f18351806f1d9c8cc" kindref="member">StyledStreamWriter::writeWithIndent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref>)<sp/><ref refid="class_json_1_1_styled_stream_writer_1a5a52fa5b406f1580a61dde3b5638e76d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="class_json_1_1_styled_stream_writer_1ab49409578422aa73b060e3492dd6c72a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1ab49409578422aa73b060e3492dd6c72a" kindref="member">StyledStreamWriter::indent</ref>()<sp/>{<sp/><ref refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" kindref="member">indentString_</ref><sp/>+=<sp/><ref refid="class_json_1_1_styled_stream_writer_1a58dc0eaf85c58b83d19d6bba8eead27d" kindref="member">indentation_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="class_json_1_1_styled_stream_writer_1a74d8fb9beecd29759d7b79f430386358" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a74d8fb9beecd29759d7b79f430386358" kindref="member">StyledStreamWriter::unindent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>assert(<ref refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" kindref="member">indentString_</ref>.size()<sp/>&gt;=<sp/><ref refid="class_json_1_1_styled_stream_writer_1a58dc0eaf85c58b83d19d6bba8eead27d" kindref="member">indentation_</ref>.size());</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" kindref="member">indentString_</ref>.resize(<ref refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" kindref="member">indentString_</ref>.size()<sp/>-<sp/><ref refid="class_json_1_1_styled_stream_writer_1a58dc0eaf85c58b83d19d6bba8eead27d" kindref="member">indentation_</ref>.size());</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782" refid="class_json_1_1_styled_stream_writer_1a79c3c2b320475035c47b2db484a3e434" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1a79c3c2b320475035c47b2db484a3e434" kindref="member">StyledStreamWriter::writeCommentBeforeValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>))</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref>)<sp/><ref refid="class_json_1_1_styled_stream_writer_1a5a52fa5b406f1580a61dde3b5638e76d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>comment<sp/>=<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>std::string::const_iterator<sp/>iter<sp/>=<sp/>comment.begin();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>comment.end())<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/>*iter;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*iter<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter<sp/>!=<sp/>comment.end()<sp/>&amp;&amp;<sp/>*(iter<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writeIndent();<sp/><sp/>//<sp/>would<sp/>include<sp/>newline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/><ref refid="class_json_1_1_styled_stream_writer_1af9ebd4487e7f69bd1074e6ce29c7cf02" kindref="member">indentString_</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="class_json_1_1_styled_stream_writer_1ad2ca860e317ca91d6b2932535b4ce9c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1ad2ca860e317ca91d6b2932535b4ce9c7" kindref="member">StyledStreamWriter::writeCommentAfterValueOnSameLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>))</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>))<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1a5a52fa5b406f1580a61dde3b5638e76d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_styled_stream_writer_1aa6a4be02f654d9105af8fa560b676967" kindref="member">document_</ref><sp/>&lt;&lt;<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_styled_stream_writer_1aa12db1753619a9b48da41f3e45e3275d" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="class_json_1_1_styled_stream_writer_1ad2892f57171919fa4f8a5ae5574755cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_styled_stream_writer_1ad2892f57171919fa4f8a5ae5574755cf" kindref="member">StyledStreamWriter::hasCommentForValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>)<sp/>||</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>)<sp/>||</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="comment">//<sp/>BuiltStyledStreamWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="821" refid="struct_json_1_1_comment_style" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_json_1_1_comment_style" kindref="compound">CommentStyle</ref><sp/>{</highlight></codeline>
<codeline lineno="823" refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0c" kindref="member">Enum</ref><sp/>{</highlight></codeline>
<codeline lineno="824" refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0cac8b32a8bae63414c8647d4919da8d437" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0cac8b32a8bae63414c8647d4919da8d437" kindref="member">None</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="825" refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0cac65238f050773c107690a456e9c05c98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0cac65238f050773c107690a456e9c05c98" kindref="member">Most</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="826" refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0ca32302c0b97190c1808b3e38f367fef01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0ca32302c0b97190c1808b3e38f367fef01" kindref="member">All</ref><sp/><sp/></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="828"><highlight class="normal">};</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="struct_json_1_1_built_styled_stream_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_json_1_1_built_styled_stream_writer" kindref="compound">BuiltStyledStreamWriter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_stream_writer" kindref="compound">StreamWriter</ref></highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1ab0c2e665c86b22f8fafb0e52c8069954" kindref="member">BuiltStyledStreamWriter</ref>(</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>indentation,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0c" kindref="member">CommentStyle::Enum</ref><sp/>cs,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>colonSymbol,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nullSymbol,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>endingLineFeedSymbol,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useSpecialFloats,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2ecffc3d66c4feddf208e5cd3b1c0f18" kindref="member">write</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root,<sp/>std::ostream*<sp/>sout)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150" kindref="member">writeValue</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1acd20e9274bbcf7876ef3af2e7d23a31f" kindref="member">writeArrayValue</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1af423fd33b3d580506ea3efc53b05a077" kindref="member">isMultineArray</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" kindref="member">writeWithIndent</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a73e09692a2cfbd6e67836b060dc34a9f" kindref="member">indent</ref>();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a0da6c6f603e00c8c6e38af553edd8c55" kindref="member">unindent</ref>();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a32c4afca4e08fba79bb0a80a8010283a" kindref="member">writeCommentBeforeValue</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b" kindref="member">writeCommentAfterValueOnSameLine</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a457c2f3c1e8c952caeb60e52477d0c9a" kindref="member">hasCommentForValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854" refid="struct_json_1_1_built_styled_stream_writer_1a8356597862a354bcd55a7cb6e0512899" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a8356597862a354bcd55a7cb6e0512899" kindref="member">ChildValues</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856" refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a8356597862a354bcd55a7cb6e0512899" kindref="member">ChildValues</ref><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>;</highlight></codeline>
<codeline lineno="857" refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" kindref="member">indentString_</ref>;</highlight></codeline>
<codeline lineno="858" refid="struct_json_1_1_built_styled_stream_writer_1a3a0b46b31273cf61cf3564fba28ea03b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a3a0b46b31273cf61cf3564fba28ea03b" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="859" refid="struct_json_1_1_built_styled_stream_writer_1ab1d7561ca0f480cb46cc113e1005e8ac" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1ab1d7561ca0f480cb46cc113e1005e8ac" kindref="member">indentation_</ref>;</highlight></codeline>
<codeline lineno="860" refid="struct_json_1_1_built_styled_stream_writer_1a89a9c76c7531143b52785861ba21c1d4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0c" kindref="member">CommentStyle::Enum</ref><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a89a9c76c7531143b52785861ba21c1d4" kindref="member">cs_</ref>;</highlight></codeline>
<codeline lineno="861" refid="struct_json_1_1_built_styled_stream_writer_1ac28b111b1c3ecc1ea6d981c8530ceca4" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1ac28b111b1c3ecc1ea6d981c8530ceca4" kindref="member">colonSymbol_</ref>;</highlight></codeline>
<codeline lineno="862" refid="struct_json_1_1_built_styled_stream_writer_1a238a8f4737c9835af78ea80cc4f12658" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a238a8f4737c9835af78ea80cc4f12658" kindref="member">nullSymbol_</ref>;</highlight></codeline>
<codeline lineno="863" refid="struct_json_1_1_built_styled_stream_writer_1a85a8c0e3c9deb2503d497f61bc0da74c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a85a8c0e3c9deb2503d497f61bc0da74c" kindref="member">endingLineFeedSymbol_</ref>;</highlight></codeline>
<codeline lineno="864" refid="struct_json_1_1_built_styled_stream_writer_1abed9cc31da503b48798e7cea68c42e16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1abed9cc31da503b48798e7cea68c42e16" kindref="member">addChildValues_</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="865" refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="866" refid="struct_json_1_1_built_styled_stream_writer_1a6f1b8694b4eb17ab8c34f6d6dd8c8a4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6f1b8694b4eb17ab8c34f6d6dd8c8a4a" kindref="member">useSpecialFloats_</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="867" refid="struct_json_1_1_built_styled_stream_writer_1a6373d8d0ae4741b64e3904e4db0eef46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6373d8d0ae4741b64e3904e4db0eef46" kindref="member">precision_</ref>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal">};</highlight></codeline>
<codeline lineno="869" refid="struct_json_1_1_built_styled_stream_writer_1ab0c2e665c86b22f8fafb0e52c8069954" refkind="member"><highlight class="normal"><ref refid="struct_json_1_1_built_styled_stream_writer_1ab0c2e665c86b22f8fafb0e52c8069954" kindref="member">BuiltStyledStreamWriter::BuiltStyledStreamWriter</ref>(</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>indentation,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0c" kindref="member">CommentStyle::Enum</ref><sp/>cs,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>colonSymbol,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nullSymbol,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>endingLineFeedSymbol,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useSpecialFloats,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>:<sp/>rightMargin_(74)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>,<sp/>indentation_(indentation)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>,<sp/>cs_(cs)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>,<sp/>colonSymbol_(colonSymbol)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>,<sp/>nullSymbol_(nullSymbol)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>,<sp/>endingLineFeedSymbol_(endingLineFeedSymbol)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>,<sp/>addChildValues_(false)</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>,<sp/>indented_(false)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>,<sp/>useSpecialFloats_(useSpecialFloats)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>,<sp/>precision_(precision)</highlight></codeline>
<codeline lineno="887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889" refid="struct_json_1_1_built_styled_stream_writer_1a2ecffc3d66c4feddf208e5cd3b1c0f18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2ecffc3d66c4feddf208e5cd3b1c0f18" kindref="member">BuiltStyledStreamWriter::write</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root,<sp/>std::ostream*<sp/>sout)</highlight></codeline>
<codeline lineno="890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>=<sp/>sout;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1abed9cc31da503b48798e7cea68c42e16" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" kindref="member">indentString_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a32c4afca4e08fba79bb0a80a8010283a" kindref="member">writeCommentBeforeValue</ref>(root);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref>)<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150" kindref="member">writeValue</ref>(root);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b" kindref="member">writeCommentAfterValueOnSameLine</ref>(root);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a85a8c0e3c9deb2503d497f61bc0da74c" kindref="member">endingLineFeedSymbol_</ref>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904" refid="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150" kindref="member">BuiltStyledStreamWriter::writeValue</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(value.<ref refid="class_json_1_1_value_1a695ef31fad36b4712918b3ff80158479" kindref="member">type</ref>())<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>:</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(<ref refid="struct_json_1_1_built_styled_stream_writer_1a238a8f4737c9835af78ea80cc4f12658" kindref="member">nullSymbol_</ref>);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae5a9d708d5c9e23ae9bf98898522512d" kindref="member">intValue</ref>:</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a3786bb100c5cf9a98eb6d13784968956" kindref="member">asLargestInt</ref>()));</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eaea788d9a3bb00adc6d68d97d43e1ccd3" kindref="member">uintValue</ref>:</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a692b88345a745b2f89ca5d94b52e94d4" kindref="member">asLargestUInt</ref>()));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eab837c7b869c14d8be712deb45c9e490e" kindref="member">realValue</ref>:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a33434ed1c0217a34d04c95fa5342fd37" kindref="member">asDouble</ref>(),<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6f1b8694b4eb17ab8c34f6d6dd8c8a4a" kindref="member">useSpecialFloats_</ref>,<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6373d8d0ae4741b64e3904e4db0eef46" kindref="member">precision_</ref>));</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea804ef857affea2d415843c73f261c258" kindref="member">stringValue</ref>:</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>NULL<sp/>is<sp/>possible<sp/>for<sp/>value.string_?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>str;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a1e0263113ae247a632afac43ebc4149f" kindref="member">getString</ref>(&amp;str,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a20d52b5a457ee5d833645d119451c2cd" kindref="member">valueToQuotedStringN</ref>(str,<sp/>static_cast&lt;unsigned&gt;(end-str)));</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea14c30dbf4da86f7b809be299f671f7fd" kindref="member">booleanValue</ref>:</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(<ref refid="namespace_json_1a5d3eba6789f9a9c1ab563ff8b4a5090f" kindref="member">valueToString</ref>(value.<ref refid="class_json_1_1_value_1a7402c797285c020566c3db5f8ae4e940" kindref="member">asBool</ref>()));</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>:</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1acd20e9274bbcf7876ef3af2e7d23a31f" kindref="member">writeArrayValue</ref>(value);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref>:<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Value::Members</ref><sp/>members(value.<ref refid="class_json_1_1_value_1a30fa08af88f2d0a038b22ba9f4e88b2a" kindref="member">getMemberNames</ref>());</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(members.empty())</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a73e09692a2cfbd6e67836b060dc34a9f" kindref="member">indent</ref>();</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Value::Members::iterator<sp/>it<sp/>=<sp/>members.begin();</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>name<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>childValue<sp/>=<sp/>value[name];</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a32c4afca4e08fba79bb0a80a8010283a" kindref="member">writeCommentBeforeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" kindref="member">writeWithIndent</ref>(<ref refid="namespace_json_1a20d52b5a457ee5d833645d119451c2cd" kindref="member">valueToQuotedStringN</ref>(name.data(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(name.length())));</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1ac28b111b1c3ecc1ea6d981c8530ceca4" kindref="member">colonSymbol_</ref>;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150" kindref="member">writeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++it<sp/>==<sp/>members.end())<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a0da6c6f603e00c8c6e38af553edd8c55" kindref="member">unindent</ref>();</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963" refid="struct_json_1_1_built_styled_stream_writer_1acd20e9274bbcf7876ef3af2e7d23a31f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1acd20e9274bbcf7876ef3af2e7d23a31f" kindref="member">BuiltStyledStreamWriter::writeArrayValue</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">pushValue</ref>(</highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMultiLine<sp/>=<sp/>(<ref refid="struct_json_1_1_built_styled_stream_writer_1a89a9c76c7531143b52785861ba21c1d4" kindref="member">cs_</ref><sp/>==<sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0ca32302c0b97190c1808b3e38f367fef01" kindref="member">CommentStyle::All</ref>)<sp/>||<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1af423fd33b3d580506ea3efc53b05a077" kindref="member">isMultineArray</ref>(value);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMultiLine)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a73e09692a2cfbd6e67836b060dc34a9f" kindref="member">indent</ref>();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasChildValue<sp/>=<sp/>!<ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>.empty();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>childValue<sp/>=<sp/>value[index];</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a32c4afca4e08fba79bb0a80a8010283a" kindref="member">writeCommentBeforeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasChildValue)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" kindref="member">writeWithIndent</ref>(<ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>[index]);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref>)<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150" kindref="member">writeValue</ref>(childValue);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++index<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b" kindref="member">writeCommentAfterValueOnSameLine</ref>(childValue);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a0da6c6f603e00c8c6e38af553edd8c55" kindref="member">unindent</ref>();</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" kindref="member">writeWithIndent</ref>(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>output<sp/>on<sp/>a<sp/>single<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>.size()<sp/>==<sp/>size);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_json_1_1_built_styled_stream_writer_1ab1d7561ca0f480cb46cc113e1005e8ac" kindref="member">indentation_</ref>.empty())<sp/>*sout_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sout_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sout_<sp/>&lt;&lt;<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>[index];</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_json_1_1_built_styled_stream_writer_1ab1d7561ca0f480cb46cc113e1005e8ac" kindref="member">indentation_</ref>.empty())<sp/>*sout_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*sout_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010" refid="struct_json_1_1_built_styled_stream_writer_1af423fd33b3d580506ea3efc53b05a077" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1af423fd33b3d580506ea3efc53b05a077" kindref="member">BuiltStyledStreamWriter::isMultineArray</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>value.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMultiLine<sp/>=<sp/>size<sp/>*<sp/>3<sp/>&gt;=<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a3a0b46b31273cf61cf3564fba28ea03b" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>.clear();</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size<sp/>&amp;&amp;<sp/>!isMultiLine;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>childValue<sp/>=<sp/>value[index];</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/>((childValue.<ref refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" kindref="member">isArray</ref>()<sp/>||<sp/>childValue.<ref refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" kindref="member">isObject</ref>())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childValue.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isMultiLine)<sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>line<sp/>length<sp/>&gt;<sp/>max<sp/>line<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>.reserve(size);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1abed9cc31da503b48798e7cea68c42e16" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineLength<sp/>=<sp/>4<sp/>+<sp/>(size<sp/>-<sp/>1)<sp/>*<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>&apos;[<sp/>&apos;<sp/>+<sp/>&apos;,<sp/>&apos;*n<sp/>+<sp/>&apos;<sp/>]&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>size;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_json_1_1_built_styled_stream_writer_1a457c2f3c1e8c952caeb60e52477d0c9a" kindref="member">hasCommentForValue</ref>(value[index]))<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150" kindref="member">writeValue</ref>(value[index]);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineLength<sp/>+=<sp/>int(<ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>[index].length());</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1abed9cc31da503b48798e7cea68c42e16" kindref="member">addChildValues_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>isMultiLine<sp/>=<sp/>isMultiLine<sp/>||<sp/>lineLength<sp/>&gt;=<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a3a0b46b31273cf61cf3564fba28ea03b" kindref="member">rightMargin_</ref>;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isMultiLine;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037" refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e" kindref="member">BuiltStyledStreamWriter::pushValue</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_json_1_1_built_styled_stream_writer_1abed9cc31da503b48798e7cea68c42e16" kindref="member">addChildValues_</ref>)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a47d562d7874c5b1e68995bd62f575792" kindref="member">childValues_</ref>.push_back(value);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d" kindref="member">BuiltStyledStreamWriter::writeIndent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blep<sp/>intended<sp/>this<sp/>to<sp/>look<sp/>at<sp/>the<sp/>so-far-written<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>whether<sp/>we<sp/>are<sp/>already<sp/>indented,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>stream<sp/>we<sp/>cannot<sp/>do<sp/>that.<sp/>So<sp/>we<sp/>rely<sp/>on<sp/>some<sp/>saved<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>caller<sp/>checks<sp/>indented_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_json_1_1_built_styled_stream_writer_1ab1d7561ca0f480cb46cc113e1005e8ac" kindref="member">indentation_</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>case,<sp/>drop<sp/>newlines<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" kindref="member">indentString_</ref>;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056" refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d" kindref="member">BuiltStyledStreamWriter::writeWithIndent</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref>)<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="struct_json_1_1_built_styled_stream_writer_1a73e09692a2cfbd6e67836b060dc34a9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a73e09692a2cfbd6e67836b060dc34a9f" kindref="member">BuiltStyledStreamWriter::indent</ref>()<sp/>{<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" kindref="member">indentString_</ref><sp/>+=<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1ab1d7561ca0f480cb46cc113e1005e8ac" kindref="member">indentation_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="struct_json_1_1_built_styled_stream_writer_1a0da6c6f603e00c8c6e38af553edd8c55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a0da6c6f603e00c8c6e38af553edd8c55" kindref="member">BuiltStyledStreamWriter::unindent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>assert(<ref refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" kindref="member">indentString_</ref>.size()<sp/>&gt;=<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1ab1d7561ca0f480cb46cc113e1005e8ac" kindref="member">indentation_</ref>.size());</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" kindref="member">indentString_</ref>.resize(<ref refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" kindref="member">indentString_</ref>.size()<sp/>-<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1ab1d7561ca0f480cb46cc113e1005e8ac" kindref="member">indentation_</ref>.size());</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069" refid="struct_json_1_1_built_styled_stream_writer_1a32c4afca4e08fba79bb0a80a8010283a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a32c4afca4e08fba79bb0a80a8010283a" kindref="member">BuiltStyledStreamWriter::writeCommentBeforeValue</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_json_1_1_built_styled_stream_writer_1a89a9c76c7531143b52785861ba21c1d4" kindref="member">cs_</ref><sp/>==<sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0cac8b32a8bae63414c8647d4919da8d437" kindref="member">CommentStyle::None</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>))</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref>)<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>comment<sp/>=<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>std::string::const_iterator<sp/>iter<sp/>=<sp/>comment.begin();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>comment.end())<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/>*iter;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*iter<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter<sp/>!=<sp/>comment.end()<sp/>&amp;&amp;<sp/>*(iter<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writeIndent();<sp/><sp/>//<sp/>would<sp/>write<sp/>extra<sp/>newline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2abfd5beb7f33adc3f690ce4f618aa2f" kindref="member">indentString_</ref>;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a6aa0ad023e623f600103631a6bca6d10" kindref="member">indented_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088" refid="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b" kindref="member">BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine</ref>(<ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_json_1_1_built_styled_stream_writer_1a89a9c76c7531143b52785861ba21c1d4" kindref="member">cs_</ref><sp/>==<sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0cac8b32a8bae63414c8647d4919da8d437" kindref="member">CommentStyle::None</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>))</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d" kindref="member">writeIndent</ref>();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_json_1_1_stream_writer_1ac087569ccd2b5a22348cae92ec2a8996" kindref="member">sout_</ref><sp/>&lt;&lt;<sp/>root.<ref refid="class_json_1_1_value_1aa1e105b5d7f55d6e42f4fb2f3674116f" kindref="member">getComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100" refid="struct_json_1_1_built_styled_stream_writer_1a457c2f3c1e8c952caeb60e52477d0c9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer_1a457c2f3c1e8c952caeb60e52477d0c9a" kindref="member">BuiltStyledStreamWriter::hasCommentForValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a52f1733775460517b2ea6bedf4906d52" kindref="member">commentBefore</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351a008a230a0586de54f30b76afe70fdcfa" kindref="member">commentAfterOnSameLine</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.<ref refid="class_json_1_1_value_1a06567a00363cab9601be7e31336db03a" kindref="member">hasComment</ref>(<ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351ac5784ca53b12250888ddb642b06aebef" kindref="member">commentAfter</ref>);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="comment">//<sp/>StreamWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109" refid="class_json_1_1_stream_writer_1a66e6f5113618ce6b04cac9b3c85a3707" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_stream_writer_1a66e6f5113618ce6b04cac9b3c85a3707" kindref="member">StreamWriter::StreamWriter</ref>()</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>sout_(NULL)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1113" refid="class_json_1_1_stream_writer_1a03f8fb6a873b6b50f05bc4556e043c3a" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_stream_writer_1a03f8fb6a873b6b50f05bc4556e043c3a" kindref="member">StreamWriter::~StreamWriter</ref>()</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1116" refid="class_json_1_1_stream_writer_1_1_factory_1ad334ad5e81e3b9b1768620a446366ff1" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_stream_writer_1_1_factory_1ad334ad5e81e3b9b1768620a446366ff1" kindref="member">StreamWriter::Factory::~Factory</ref>()</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="1118" refid="class_json_1_1_stream_writer_builder_1ab95b76179c152673ad14abc639a46ee4" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_stream_writer_builder_1ab95b76179c152673ad14abc639a46ee4" kindref="member">StreamWriterBuilder::StreamWriterBuilder</ref>()</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>setDefaults(&amp;settings_);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122" refid="class_json_1_1_stream_writer_builder_1ac86f882736cb2fff79adb45adeafeb22" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_stream_writer_builder_1ac86f882736cb2fff79adb45adeafeb22" kindref="member">StreamWriterBuilder::~StreamWriterBuilder</ref>()</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="1124" refid="class_json_1_1_stream_writer_builder_1a042d21b84d8c5bede52a764e2ada7d65" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_stream_writer" kindref="compound">StreamWriter</ref>*<sp/><ref refid="class_json_1_1_stream_writer_builder_1a042d21b84d8c5bede52a764e2ada7d65" kindref="member">StreamWriterBuilder::newStreamWriter</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1125"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>std::string<sp/>indentation<sp/>=<sp/>settings_[</highlight><highlight class="stringliteral">&quot;indentation&quot;</highlight><highlight class="normal">].asString();</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>std::string<sp/>cs_str<sp/>=<sp/>settings_[</highlight><highlight class="stringliteral">&quot;commentStyle&quot;</highlight><highlight class="normal">].asString();</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>eyc<sp/>=<sp/>settings_[</highlight><highlight class="stringliteral">&quot;enableYAMLCompatibility&quot;</highlight><highlight class="normal">].asBool();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dnp<sp/>=<sp/>settings_[</highlight><highlight class="stringliteral">&quot;dropNullPlaceholders&quot;</highlight><highlight class="normal">].asBool();</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usf<sp/>=<sp/>settings_[</highlight><highlight class="stringliteral">&quot;useSpecialFloats&quot;</highlight><highlight class="normal">].asBool();<sp/></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pre<sp/>=<sp/>settings_[</highlight><highlight class="stringliteral">&quot;precision&quot;</highlight><highlight class="normal">].asUInt();</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0c" kindref="member">CommentStyle::Enum</ref><sp/>cs<sp/>=<sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0ca32302c0b97190c1808b3e38f367fef01" kindref="member">CommentStyle::All</ref>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cs_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;All&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>cs<sp/>=<sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0ca32302c0b97190c1808b3e38f367fef01" kindref="member">CommentStyle::All</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cs_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>cs<sp/>=<sp/><ref refid="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0cac8b32a8bae63414c8647d4919da8d437" kindref="member">CommentStyle::None</ref>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a97f039a107b3f6cf1c3edee50e978f76" kindref="member">throwRuntimeError</ref>(</highlight><highlight class="stringliteral">&quot;commentStyle<sp/>must<sp/>be<sp/>&apos;All&apos;<sp/>or<sp/>&apos;None&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>std::string<sp/>colonSymbol<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eyc)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>colonSymbol<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indentation.empty())<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>colonSymbol<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>std::string<sp/>nullSymbol<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dnp)<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>nullSymbol<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pre<sp/>&gt;<sp/>17)<sp/>pre<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>std::string<sp/>endingLineFeedSymbol<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_json_1_1_built_styled_stream_writer" kindref="compound">BuiltStyledStreamWriter</ref>(</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indentation,<sp/>cs,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colonSymbol,<sp/>nullSymbol,<sp/>endingLineFeedSymbol,<sp/>usf,<sp/>pre);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1156" refid="namespace_json_1a45c3c8847f03b09cd61035e615d1d820" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_json_1a45c3c8847f03b09cd61035e615d1d820" kindref="member">getValidWriterKeys</ref>(std::set&lt;std::string&gt;*<sp/>valid_keys)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>valid_keys-&gt;clear();</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>valid_keys-&gt;insert(</highlight><highlight class="stringliteral">&quot;indentation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>valid_keys-&gt;insert(</highlight><highlight class="stringliteral">&quot;commentStyle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>valid_keys-&gt;insert(</highlight><highlight class="stringliteral">&quot;enableYAMLCompatibility&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>valid_keys-&gt;insert(</highlight><highlight class="stringliteral">&quot;dropNullPlaceholders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>valid_keys-&gt;insert(</highlight><highlight class="stringliteral">&quot;useSpecialFloats&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>valid_keys-&gt;insert(</highlight><highlight class="stringliteral">&quot;precision&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1166" refid="class_json_1_1_stream_writer_builder_1aa1dfed085a3d369e953e4a3c34da009e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_stream_writer_builder_1aa1dfed085a3d369e953e4a3c34da009e" kindref="member">StreamWriterBuilder::validate</ref>(<ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref>*<sp/>invalid)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1167"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref><sp/>my_invalid;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!invalid)<sp/>invalid<sp/>=<sp/>&amp;my_invalid;<sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>do<sp/>not<sp/>need<sp/>to<sp/>test<sp/>for<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref>&amp;<sp/>inv<sp/>=<sp/>*invalid;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>std::set&lt;std::string&gt;<sp/>valid_keys;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a45c3c8847f03b09cd61035e615d1d820" kindref="member">getValidWriterKeys</ref>(&amp;valid_keys);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_value_1ac61bab5a465848b57610379cc07995c3" kindref="member">Value::Members</ref><sp/>keys<sp/>=<sp/>settings_.getMemberNames();</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>keys.size();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key<sp/>=<sp/>keys[i];</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valid_keys.find(key)<sp/>==<sp/>valid_keys.end())<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv[key]<sp/>=<sp/>settings_[key];</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0u<sp/>==<sp/>inv.<ref refid="class_json_1_1_value_1a4ca8ee6c48a34ca6c2f131956bab5e05" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183" refid="class_json_1_1_stream_writer_builder_1aa010a8a04a92343179f64a5dbb5df340" refkind="member"><highlight class="normal"><ref refid="class_json_1_1_value" kindref="compound">Value</ref>&amp;<sp/><ref refid="class_json_1_1_stream_writer_builder_1aa010a8a04a92343179f64a5dbb5df340" kindref="member">StreamWriterBuilder::operator[]</ref>(std::string<sp/>key)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>settings_[key];</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188" refid="class_json_1_1_stream_writer_builder_1a53bf106b141e28637b01ad0ecd2acbf6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_1_1_stream_writer_builder_1a53bf106b141e28637b01ad0ecd2acbf6" kindref="member">StreamWriterBuilder::setDefaults</ref>(<ref refid="class_json_1_1_value" kindref="compound">Json::Value</ref>*<sp/>settings)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>(*settings)[</highlight><highlight class="stringliteral">&quot;commentStyle&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>(*settings)[</highlight><highlight class="stringliteral">&quot;indentation&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>(*settings)[</highlight><highlight class="stringliteral">&quot;enableYAMLCompatibility&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>(*settings)[</highlight><highlight class="stringliteral">&quot;dropNullPlaceholders&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>(*settings)[</highlight><highlight class="stringliteral">&quot;useSpecialFloats&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>(*settings)[</highlight><highlight class="stringliteral">&quot;precision&quot;</highlight><highlight class="normal">]<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200" refid="namespace_json_1afd767fe4c7e962d0ff3d1a6d1622619f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_json_1afd767fe4c7e962d0ff3d1a6d1622619f" kindref="member">writeString</ref>(<ref refid="class_json_1_1_stream_writer_1_1_factory" kindref="compound">StreamWriter::Factory</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>builder,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a9554bc17cfe4b8019685fad2fd5d364a" kindref="member">StreamWriterPtr</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>writer(builder.<ref refid="class_json_1_1_stream_writer_1_1_factory_1a9d30ec53e8288cd53befccf1009c5f31" kindref="member">newStreamWriter</ref>());</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>writer-&gt;write(root,<sp/>&amp;sout);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sout.str();</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207" refid="namespace_json_1a87bc83d7e90fc666d28aa16727deda2f" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_json_1a87bc83d7e90fc666d28aa16727deda2f" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>sout,<sp/><ref refid="class_json_1_1_value" kindref="compound">Value</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><ref refid="class_json_1_1_stream_writer_builder" kindref="compound">StreamWriterBuilder</ref><sp/>builder;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><ref refid="namespace_json_1a9554bc17cfe4b8019685fad2fd5d364a" kindref="member">StreamWriterPtr</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>writer(builder.<ref refid="class_json_1_1_stream_writer_builder_1a042d21b84d8c5bede52a764e2ada7d65" kindref="member">newStreamWriter</ref>());</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>writer-&gt;write(root,<sp/>&amp;sout);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sout;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Json</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_writer.cpp"/>
  </compounddef>
</doxygen>
