<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_se_mem_pool_8cpp" kind="file">
    <compoundname>SeMemPool.cpp</compoundname>
    <includes refid="_se_mem_pool_8h" local="yes">SeMemPool.h</includes>
    <includes refid="_se_tool_8h" local="yes">SeTool.h</includes>
    <incdepgraph>
      <node id="103735">
        <label>list</label>
      </node>
      <node id="103729">
        <label>locale</label>
      </node>
      <node id="103739">
        <label>queue</label>
      </node>
      <node id="103733">
        <label>limits</label>
      </node>
      <node id="103713">
        <label>SeMemPool.h</label>
        <link refid="_se_mem_pool_8h"/>
        <childnode refid="103714" relation="include">
        </childnode>
        <childnode refid="103742" relation="include">
        </childnode>
        <childnode refid="103721" relation="include">
        </childnode>
      </node>
      <node id="103716">
        <label>windows.h</label>
      </node>
      <node id="103721">
        <label>assert.h</label>
      </node>
      <node id="103719">
        <label>stdlib.h</label>
      </node>
      <node id="103742">
        <label>EsLock.h</label>
      </node>
      <node id="103712">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeMemPool.cpp</label>
        <link refid="SeMemPool.cpp"/>
        <childnode refid="103713" relation="include">
        </childnode>
        <childnode refid="103743" relation="include">
        </childnode>
      </node>
      <node id="103723">
        <label>cmath</label>
      </node>
      <node id="103732">
        <label>string</label>
      </node>
      <node id="103736">
        <label>map</label>
      </node>
      <node id="103718">
        <label>conio.h</label>
      </node>
      <node id="103717">
        <label>direct.h</label>
      </node>
      <node id="103730">
        <label>fstream</label>
      </node>
      <node id="103743">
        <label>SeTool.h</label>
        <link refid="_se_tool_8h"/>
        <childnode refid="103714" relation="include">
        </childnode>
        <childnode refid="103744" relation="include">
        </childnode>
        <childnode refid="103745" relation="include">
        </childnode>
        <childnode refid="103746" relation="include">
        </childnode>
        <childnode refid="103727" relation="include">
        </childnode>
        <childnode refid="103747" relation="include">
        </childnode>
      </node>
      <node id="103715">
        <label>winsock2.h</label>
      </node>
      <node id="103746">
        <label>TeMisc.h</label>
        <link refid="_te_misc_8h"/>
        <childnode refid="103726" relation="include">
        </childnode>
      </node>
      <node id="103726">
        <label>string.h</label>
      </node>
      <node id="103724">
        <label>ctime</label>
      </node>
      <node id="103734">
        <label>vector</label>
      </node>
      <node id="103740">
        <label>new</label>
      </node>
      <node id="103744">
        <label>SeShareDef.h</label>
        <link refid="_se_share_def_8h"/>
        <childnode refid="103714" relation="include">
        </childnode>
      </node>
      <node id="103731">
        <label>sstream</label>
      </node>
      <node id="103747">
        <label>EsString.h</label>
      </node>
      <node id="103714">
        <label>SeInclude.h</label>
        <link refid="_se_include_8h"/>
        <childnode refid="103715" relation="include">
        </childnode>
        <childnode refid="103716" relation="include">
        </childnode>
        <childnode refid="103717" relation="include">
        </childnode>
        <childnode refid="103718" relation="include">
        </childnode>
        <childnode refid="103719" relation="include">
        </childnode>
        <childnode refid="103720" relation="include">
        </childnode>
        <childnode refid="103721" relation="include">
        </childnode>
        <childnode refid="103722" relation="include">
        </childnode>
        <childnode refid="103723" relation="include">
        </childnode>
        <childnode refid="103724" relation="include">
        </childnode>
        <childnode refid="103725" relation="include">
        </childnode>
        <childnode refid="103726" relation="include">
        </childnode>
        <childnode refid="103727" relation="include">
        </childnode>
        <childnode refid="103728" relation="include">
        </childnode>
        <childnode refid="103729" relation="include">
        </childnode>
        <childnode refid="103730" relation="include">
        </childnode>
        <childnode refid="103731" relation="include">
        </childnode>
        <childnode refid="103732" relation="include">
        </childnode>
        <childnode refid="103733" relation="include">
        </childnode>
        <childnode refid="103734" relation="include">
        </childnode>
        <childnode refid="103735" relation="include">
        </childnode>
        <childnode refid="103736" relation="include">
        </childnode>
        <childnode refid="103737" relation="include">
        </childnode>
        <childnode refid="103738" relation="include">
        </childnode>
        <childnode refid="103739" relation="include">
        </childnode>
        <childnode refid="103740" relation="include">
        </childnode>
        <childnode refid="103741" relation="include">
        </childnode>
      </node>
      <node id="103720">
        <label>math.h</label>
      </node>
      <node id="103727">
        <label>EsType.h</label>
      </node>
      <node id="103722">
        <label>cctype</label>
      </node>
      <node id="103745">
        <label>SeToolTemplate.inl</label>
        <link refid="_se_tool_template_8inl"/>
      </node>
      <node id="103737">
        <label>unordered_map</label>
      </node>
      <node id="103741">
        <label>SeDefine.h</label>
        <link refid="_se_define_8h"/>
      </node>
      <node id="103738">
        <label>set</label>
      </node>
      <node id="103728">
        <label>algorithm</label>
      </node>
      <node id="103725">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_mem_pool_8h" kindref="compound">SeMemPool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_tool_8h" kindref="compound">SeTool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="_se_mem_pool_8h_1a801f54874a5669fe9af11c0b9532a1b0" kindref="member">NotifyMempoolAlloc</ref><sp/><sp/><ref refid="class_se_mem_pool_1ade8e071c923b07c82abe846169bc41f5" kindref="member">SeMemPool::m_fAllocCallBack</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4" refid="class_se_mem_pool_1a536b73e5b8e01be398196eb020367cb1" refkind="member"><highlight class="normal"><ref refid="class_se_mem_pool_1a536b73e5b8e01be398196eb020367cb1" kindref="member">SeMemPool::SeMemPool</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iEleSize,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBaseEles,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAddEles,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*acName)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::AutoLock<sp/>kLock(&amp;<ref refid="class_se_mem_pool_1a6b6d3de1e48d247b3bb3c8dbcab6c593" kindref="member">m_kLock</ref>);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>每个元素都需要加上开始和结束标记</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a87953f3f7e9b840f65bc8a51ea58e70c" kindref="member">m_iEleSize</ref><sp/><sp/>=<sp/>iEleSize<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>?<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>:<sp/>iEleSize;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a87953f3f7e9b840f65bc8a51ea58e70c" kindref="member">m_iEleSize</ref><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIZE_T)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>生成开始和结束标记值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_iIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>s_iIdx++;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>s_iIdx<sp/>%=<sp/>1000;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>acMagic[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(acMagic,</highlight><highlight class="stringliteral">&quot;B%03dB%03d&quot;</highlight><highlight class="normal">,s_iIdx,s_iIdx);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;<ref refid="class_se_mem_pool_1a853e4ea132b73fb02bfcda409322b16d" kindref="member">m_stMagicBegin</ref>,acMagic,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIZE_T));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(acMagic,</highlight><highlight class="stringliteral">&quot;E%03dE%03d&quot;</highlight><highlight class="normal">,s_iIdx,s_iIdx);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;<ref refid="class_se_mem_pool_1a22c59f6750e67c45f5c615c5525fc793" kindref="member">m_stMagicEnd</ref>,acMagic,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIZE_T));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a6bb4f82df0359f7d2289e1b602e57842" kindref="member">m_iBaseEles</ref><sp/>=<sp/>iBaseEles;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1aeefb41a06d5ce12e53aea4a5b37bc986" kindref="member">m_iTotalSize</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1abdeafa25050922458fa7c26d80f576cf" kindref="member">m_iAddEles</ref><sp/><sp/>=<sp/>iAddEles;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acName<sp/>&amp;&amp;<sp/>strlen(acName)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="class_se_mem_pool_1a936cde9814993d602a4724c18270e699" kindref="member">m_acName</ref>,<sp/>acName);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_se_mem_pool_1a936cde9814993d602a4724c18270e699" kindref="member">m_acName</ref>,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_se_mem_pool_1a936cde9814993d602a4724c18270e699" kindref="member">m_acName</ref>));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1aee6fc074aabc1e4eff2ca1a5462aae52" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a0a65c2ae2b44690453435ca6fa6ea84a" kindref="member">ExtendPool</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_se_mem_pool_1ab4f0a58b7370e95b4f8d8600dabd1478" refkind="member"><highlight class="normal"><ref refid="class_se_mem_pool_1ab4f0a58b7370e95b4f8d8600dabd1478" kindref="member">SeMemPool::~SeMemPool</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::AutoLock<sp/>kLock(&amp;<ref refid="class_se_mem_pool_1a6b6d3de1e48d247b3bb3c8dbcab6c593" kindref="member">m_kLock</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a249096c740267423ddfc5efc7aa54e92" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_se_mem_pool_1aee6fc074aabc1e4eff2ca1a5462aae52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1aee6fc074aabc1e4eff2ca1a5462aae52" kindref="member">SeMemPool::Reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::AutoLock<sp/>kLock(&amp;<ref refid="class_se_mem_pool_1a6b6d3de1e48d247b3bb3c8dbcab6c593" kindref="member">m_kLock</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a10a49e0ca58754d37de24e3575aeffc9" kindref="member">m_iAllocEles</ref><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a9a97703e609aa29794c923343f669c73" kindref="member">m_iAllocMaxEles</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a5f8fb8a5e6bc2f9b59299c4f13e764ca" kindref="member">m_pkFreeFirst</ref><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1aabe29204ff2e576dbce00402909aa048" kindref="member">m_kHeadList</ref>.<ref refid="struct_se_mem_pool_1_1_se_head_list_1a43d6e0b8343e2565c69a1a06451d721f" kindref="member">pkNext</ref><sp/>=<sp/><ref refid="class_se_mem_pool_1aabe29204ff2e576dbce00402909aa048" kindref="member">m_kHeadList</ref>.<ref refid="struct_se_mem_pool_1_1_se_head_list_1a3c4f01199b3d17f67c09cd03ad1bdf78" kindref="member">pkPrev</ref><sp/>=<sp/>&amp;<ref refid="class_se_mem_pool_1aabe29204ff2e576dbce00402909aa048" kindref="member">m_kHeadList</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_se_mem_pool_1a7bc07582ef29b4521d2923fdecc4d4ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="class_se_mem_pool_1a7bc07582ef29b4521d2923fdecc4d4ad" kindref="member">SeMemPool::NewEle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::AutoLock<sp/>kLock(&amp;<ref refid="class_se_mem_pool_1a6b6d3de1e48d247b3bb3c8dbcab6c593" kindref="member">m_kLock</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_se_mem_pool_1a5f8fb8a5e6bc2f9b59299c4f13e764ca" kindref="member">m_pkFreeFirst</ref><sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>!<ref refid="class_se_mem_pool_1a0a65c2ae2b44690453435ca6fa6ea84a" kindref="member">ExtendPool</ref>())</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="class_se_mem_pool_1a10a49e0ca58754d37de24e3575aeffc9" kindref="member">m_iAllocEles</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_se_mem_pool_1a9a97703e609aa29794c923343f669c73" kindref="member">m_iAllocMaxEles</ref><sp/>&lt;<sp/><ref refid="class_se_mem_pool_1a10a49e0ca58754d37de24e3575aeffc9" kindref="member">m_iAllocEles</ref>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a9a97703e609aa29794c923343f669c73" kindref="member">m_iAllocMaxEles</ref><sp/>=<sp/><ref refid="class_se_mem_pool_1a10a49e0ca58754d37de24e3575aeffc9" kindref="member">m_iAllocEles</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Byte*<sp/>pbyMem<sp/>=<sp/>(Byte<sp/>*)<ref refid="class_se_mem_pool_1a5f8fb8a5e6bc2f9b59299c4f13e764ca" kindref="member">m_pkFreeFirst</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a5f8fb8a5e6bc2f9b59299c4f13e764ca" kindref="member">m_pkFreeFirst</ref><sp/>=<sp/>*((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<ref refid="class_se_mem_pool_1a5f8fb8a5e6bc2f9b59299c4f13e764ca" kindref="member">m_pkFreeFirst</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>在分配的内存起始和结尾加上标签</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>*((SIZE_T<sp/>*)pbyMem)<sp/>=<sp/><ref refid="class_se_mem_pool_1a853e4ea132b73fb02bfcda409322b16d" kindref="member">m_stMagicBegin</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>起始标识</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>*((SIZE_T<sp/>*)(pbyMem<sp/>+<sp/><ref refid="class_se_mem_pool_1a87953f3f7e9b840f65bc8a51ea58e70c" kindref="member">m_iEleSize</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIZE_T)))<sp/>=<sp/><ref refid="class_se_mem_pool_1a22c59f6750e67c45f5c615c5525fc793" kindref="member">m_stMagicEnd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>结尾标识</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pbyMem<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIZE_T));</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_se_mem_pool_1aeb8d557804ec9487bc6ed474c5fb6748" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1aeb8d557804ec9487bc6ed474c5fb6748" kindref="member">SeMemPool::DelEle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pkEle)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::AutoLock<sp/>kLock(&amp;<ref refid="class_se_mem_pool_1a6b6d3de1e48d247b3bb3c8dbcab6c593" kindref="member">m_kLock</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pkEle<sp/>||<sp/><ref refid="class_se_mem_pool_1a10a49e0ca58754d37de24e3575aeffc9" kindref="member">m_iAllocEles</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>pkEle<sp/>=<sp/>((Byte<sp/>*)pkEle)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIZE_T);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="class_se_mem_pool_1a10a49e0ca58754d37de24e3575aeffc9" kindref="member">m_iAllocEles</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)pkEle)<sp/><sp/><sp/>=<sp/><ref refid="class_se_mem_pool_1a5f8fb8a5e6bc2f9b59299c4f13e764ca" kindref="member">m_pkFreeFirst</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a5f8fb8a5e6bc2f9b59299c4f13e764ca" kindref="member">m_pkFreeFirst</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pkEle;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_se_mem_pool_1ac0c8a331fe93ac96ffd90a3ae1212075" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1ac0c8a331fe93ac96ffd90a3ae1212075" kindref="member">SeMemPool::IsValid</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pkEle)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::AutoLock<sp/>kLock(&amp;<ref refid="class_se_mem_pool_1a6b6d3de1e48d247b3bb3c8dbcab6c593" kindref="member">m_kLock</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pkEle)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Byte*<sp/>pbyMem<sp/>=<sp/>(Byte<sp/>*)pkEle;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>pbyMem<sp/>-=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIZE_T);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>SIZE_T<sp/>stMagic<sp/>=<sp/>*((SIZE_T<sp/>*)pbyMem);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stMagic<sp/>!=<sp/><ref refid="class_se_mem_pool_1a853e4ea132b73fb02bfcda409322b16d" kindref="member">m_stMagicBegin</ref>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MyOutputDebugString(&quot;删除缓冲池[%s]起始出错:0x%x\n&quot;,m_acName,pkEle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>stMagic<sp/>=<sp/>*((SIZE_T*)(pbyMem<sp/>+<sp/><ref refid="class_se_mem_pool_1a87953f3f7e9b840f65bc8a51ea58e70c" kindref="member">m_iEleSize</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIZE_T)));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stMagic<sp/>!=<sp/><ref refid="class_se_mem_pool_1a22c59f6750e67c45f5c615c5525fc793" kindref="member">m_stMagicEnd</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MyOutputDebugString(&quot;删除缓冲池[%s]结束出错:0x%x\n&quot;,m_acName,pkEle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_se_mem_pool_1a0a65c2ae2b44690453435ca6fa6ea84a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1a0a65c2ae2b44690453435ca6fa6ea84a" kindref="member">SeMemPool::ExtendPool</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::AutoLock<sp/>kLock(&amp;<ref refid="class_se_mem_pool_1a6b6d3de1e48d247b3bb3c8dbcab6c593" kindref="member">m_kLock</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1abdeafa25050922458fa7c26d80f576cf" kindref="member">m_iAddEles</ref><sp/>=<sp/><ref refid="class_se_mem_pool_1a6bb4f82df0359f7d2289e1b602e57842" kindref="member">m_iBaseEles</ref><sp/>&gt;<sp/>64<sp/>?<sp/><sp/><ref refid="class_se_mem_pool_1a6bb4f82df0359f7d2289e1b602e57842" kindref="member">m_iBaseEles</ref><sp/>/<sp/>4<sp/>:<sp/><ref refid="class_se_mem_pool_1abdeafa25050922458fa7c26d80f576cf" kindref="member">m_iAddEles</ref>;<sp/></highlight><highlight class="comment">//<sp/>池的大小每次扩展1/4，减少内存分配的次数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iEles<sp/><sp/><sp/>=<sp/>(<ref refid="class_se_mem_pool_1aabe29204ff2e576dbce00402909aa048" kindref="member">m_kHeadList</ref>.<ref refid="struct_se_mem_pool_1_1_se_head_list_1a43d6e0b8343e2565c69a1a06451d721f" kindref="member">pkNext</ref><sp/>==<sp/>&amp;<ref refid="class_se_mem_pool_1aabe29204ff2e576dbce00402909aa048" kindref="member">m_kHeadList</ref>)<sp/>?<sp/><ref refid="class_se_mem_pool_1a6bb4f82df0359f7d2289e1b602e57842" kindref="member">m_iBaseEles</ref><sp/>:<sp/><ref refid="class_se_mem_pool_1abdeafa25050922458fa7c26d80f576cf" kindref="member">m_iAddEles</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize<sp/><sp/><sp/>=<sp/>iEles<sp/>*<sp/><ref refid="class_se_mem_pool_1a87953f3f7e9b840f65bc8a51ea58e70c" kindref="member">m_iEleSize</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_se_mem_pool_1_1_se_head_list" kindref="compound">SeHeadList</ref>)<sp/>-<sp/>8;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1aeefb41a06d5ce12e53aea4a5b37bc986" kindref="member">m_iTotalSize</ref><sp/>+=<sp/>iSize;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_se_mem_pool_1_1_se_head_list" kindref="compound">SeHeadList</ref><sp/>*pkHeadList<sp/>=<sp/>(<ref refid="struct_se_mem_pool_1_1_se_head_list" kindref="compound">SeHeadList</ref><sp/>*)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[iSize]);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pkHeadList<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_se_mem_pool_1ade8e071c923b07c82abe846169bc41f5" kindref="member">m_fAllocCallBack</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1ade8e071c923b07c82abe846169bc41f5" kindref="member">m_fAllocCallBack</ref>(<ref refid="class_se_mem_pool_1a936cde9814993d602a4724c18270e699" kindref="member">m_acName</ref>,<sp/>iSize);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>pkHeadList-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a34f77ba682c00ee24c8b3d3b85efc756" kindref="member">iSize</ref><sp/>=<sp/>iSize;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>pkHeadList-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a43d6e0b8343e2565c69a1a06451d721f" kindref="member">pkNext</ref><sp/>=<sp/>&amp;<ref refid="class_se_mem_pool_1aabe29204ff2e576dbce00402909aa048" kindref="member">m_kHeadList</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>pkHeadList-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a3c4f01199b3d17f67c09cd03ad1bdf78" kindref="member">pkPrev</ref><sp/>=<sp/>pkHeadList-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a43d6e0b8343e2565c69a1a06451d721f" kindref="member">pkNext</ref>-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a3c4f01199b3d17f67c09cd03ad1bdf78" kindref="member">pkPrev</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>pkHeadList-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a43d6e0b8343e2565c69a1a06451d721f" kindref="member">pkNext</ref>-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a3c4f01199b3d17f67c09cd03ad1bdf78" kindref="member">pkPrev</ref><sp/>=<sp/>pkHeadList-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a3c4f01199b3d17f67c09cd03ad1bdf78" kindref="member">pkPrev</ref>-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a43d6e0b8343e2565c69a1a06451d721f" kindref="member">pkNext</ref><sp/>=<sp/>pkHeadList;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1a5f8fb8a5e6bc2f9b59299c4f13e764ca" kindref="member">m_pkFreeFirst</ref><sp/>=<sp/>pkHeadList-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a2c37908b2ad4c39dc5fc07c324d1e70d" kindref="member">acData</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pkData<sp/>=<sp/>pkHeadList-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a2c37908b2ad4c39dc5fc07c324d1e70d" kindref="member">acData</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iEles<sp/>-<sp/>1;i++,pkData<sp/>+=<sp/><ref refid="class_se_mem_pool_1a87953f3f7e9b840f65bc8a51ea58e70c" kindref="member">m_iEleSize</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)pkData)<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(pkData<sp/>+<sp/><ref refid="class_se_mem_pool_1a87953f3f7e9b840f65bc8a51ea58e70c" kindref="member">m_iEleSize</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)pkData)<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_se_mem_pool_1a6f510577ab05752363ea243a89a39453" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1a6f510577ab05752363ea243a89a39453" kindref="member">SeMemPool::GetAllocSize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1a10a49e0ca58754d37de24e3575aeffc9" kindref="member">m_iAllocEles</ref><sp/>*<sp/><ref refid="class_se_mem_pool_1a87953f3f7e9b840f65bc8a51ea58e70c" kindref="member">m_iEleSize</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_se_mem_pool_1adff7f8d9cc709802784ed0da53c883e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1adff7f8d9cc709802784ed0da53c883e7" kindref="member">SeMemPool::GetTotalSize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1aeefb41a06d5ce12e53aea4a5b37bc986" kindref="member">m_iTotalSize</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="class_se_mem_pool_1aeb288d7d7be52b01c28088c3b5a7ac68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1aeb288d7d7be52b01c28088c3b5a7ac68" kindref="member">SeMemPool::GetAllocMaxEles</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1a9a97703e609aa29794c923343f669c73" kindref="member">m_iAllocMaxEles</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_se_mem_pool_1a249096c740267423ddfc5efc7aa54e92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1a249096c740267423ddfc5efc7aa54e92" kindref="member">SeMemPool::Clear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::AutoLock<sp/>kLock(&amp;<ref refid="class_se_mem_pool_1a6b6d3de1e48d247b3bb3c8dbcab6c593" kindref="member">m_kLock</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_se_mem_pool_1_1_se_head_list" kindref="compound">SeHeadList</ref><sp/>*pkNext<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="struct_se_mem_pool_1_1_se_head_list" kindref="compound">SeHeadList</ref><sp/>*pkCur<sp/>=<sp/><ref refid="class_se_mem_pool_1aabe29204ff2e576dbce00402909aa048" kindref="member">m_kHeadList</ref>.<ref refid="struct_se_mem_pool_1_1_se_head_list_1a43d6e0b8343e2565c69a1a06451d721f" kindref="member">pkNext</ref>;pkCur<sp/>!=<sp/>&amp;<ref refid="class_se_mem_pool_1aabe29204ff2e576dbce00402909aa048" kindref="member">m_kHeadList</ref>;pkCur<sp/>=<sp/>pkNext)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkNext<sp/>=<sp/>pkCur-&gt;<ref refid="struct_se_mem_pool_1_1_se_head_list_1a43d6e0b8343e2565c69a1a06451d721f" kindref="member">pkNext</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pkCur;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkCur<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1aee6fc074aabc1e4eff2ca1a5462aae52" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_se_mem_pool_1a058c39179427ce7ebb99e3422131bb46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_se_mem_pool_1a058c39179427ce7ebb99e3422131bb46" kindref="member">SeMemPool::RegisterAllocCallBack</ref>(<ref refid="_se_mem_pool_8h_1a801f54874a5669fe9af11c0b9532a1b0" kindref="member">NotifyMempoolAlloc</ref><sp/>fCallBack)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_se_mem_pool_1ade8e071c923b07c82abe846169bc41f5" kindref="member">m_fAllocCallBack</ref><sp/>=<sp/>fCallBack;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeMemPool.cpp"/>
  </compounddef>
</doxygen>
