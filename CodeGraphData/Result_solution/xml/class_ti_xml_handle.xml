<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_ti_xml_handle" kind="class" prot="public">
    <compoundname>TiXmlHandle</compoundname>
    <includes refid="tinyxml_8h" local="no">tinyxml.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ti_xml_handle_1ac5429de14bb78b16288bac5bf33c6858" prot="private" static="no" mutable="no">
        <type><ref refid="class_ti_xml_node" kindref="compound">TiXmlNode</ref> *</type>
        <definition>TiXmlNode* TiXmlHandle::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1684" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1684" bodyend="-1"/>
        <referencedby refid="class_ti_xml_handle_1ad8e5dcf6a87882674203157f29f8e4db" compoundref="tinyxml_8h" startline="1615" endline="1615">operator=</referencedby>
        <referencedby refid="class_ti_xml_handle_1a236d7855e1e56ccc7b980630c48c7fd7" compoundref="tinyxml_8h" startline="1614" endline="1614">TiXmlHandle</referencedby>
        <referencedby refid="class_ti_xml_handle_1af678e5088e83be67baf76f699756f2c3" compoundref="tinyxml_8h" startline="1655" endline="1655">ToNode</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TiXmlHandle::TiXmlHandle</definition>
        <argsstring>(TiXmlNode *_node)</argsstring>
        <name>TiXmlHandle</name>
        <param>
          <type><ref refid="class_ti_xml_node" kindref="compound">TiXmlNode</ref> *</type>
          <declname>_node</declname>
        </param>
        <briefdescription>
<para>Create a handle from any node (at any depth of the tree.) This can be a null pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1612" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1612" bodyend="1612"/>
        <referencedby refid="class_ti_xml_handle_1af9cf6a7d08a5da94a8924425ad0cd5ac" compoundref="tinyxml_8cpp" startline="1667" endline="1683">Child</referencedby>
        <referencedby refid="class_ti_xml_handle_1a8786475b9d1f1518492e3a46704c7ef0" compoundref="tinyxml_8cpp" startline="1705" endline="1721">ChildElement</referencedby>
        <referencedby refid="class_ti_xml_handle_1acdb1faaf88a700b40ca2c8d9aee21139" compoundref="tinyxml_8cpp" startline="1619" endline="1628">FirstChild</referencedby>
        <referencedby refid="class_ti_xml_handle_1a24d1112e995e937e4dddb202d4113d4a" compoundref="tinyxml_8cpp" startline="1643" endline="1652">FirstChildElement</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a236d7855e1e56ccc7b980630c48c7fd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TiXmlHandle::TiXmlHandle</definition>
        <argsstring>(const TiXmlHandle &amp;ref)</argsstring>
        <name>TiXmlHandle</name>
        <param>
          <type>const <ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1614" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1614" bodyend="1614"/>
        <references refid="class_ti_xml_handle_1ac5429de14bb78b16288bac5bf33c6858" compoundref="tinyxml_8h" startline="1684">node</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1ad8e5dcf6a87882674203157f29f8e4db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::operator=</definition>
        <argsstring>(const TiXmlHandle &amp;ref)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1615" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1615" bodyend="1615"/>
        <references refid="class_ti_xml_handle_1ac5429de14bb78b16288bac5bf33c6858" compoundref="tinyxml_8h" startline="1684">node</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1acdb1faaf88a700b40ca2c8d9aee21139" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::FirstChild</definition>
        <argsstring>() const </argsstring>
        <name>FirstChild</name>
        <briefdescription>
<para>Return a handle to the first child node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1618" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp" bodystart="1619" bodyend="1628"/>
        <references refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" compoundref="tinyxml_8h" startline="1612" endline="1612">TiXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a8c61f64ae9365d89c264f289085541f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::FirstChild</definition>
        <argsstring>(const char *value) const </argsstring>
        <name>FirstChild</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return a handle to the first child node with the given name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1620" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp" bodystart="1631" bodyend="1640"/>
        <references refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" compoundref="tinyxml_8h" startline="1612" endline="1612">TiXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a24d1112e995e937e4dddb202d4113d4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::FirstChildElement</definition>
        <argsstring>() const </argsstring>
        <name>FirstChildElement</name>
        <briefdescription>
<para>Return a handle to the first child element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1622" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp" bodystart="1643" bodyend="1652"/>
        <references refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" compoundref="tinyxml_8h" startline="1612" endline="1612">TiXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1af0aea751320f5e430fac6f8fff3b8dd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::FirstChildElement</definition>
        <argsstring>(const char *value) const </argsstring>
        <name>FirstChildElement</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return a handle to the first child element with the given name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1624" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp" bodystart="1655" bodyend="1664"/>
        <references refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" compoundref="tinyxml_8h" startline="1612" endline="1612">TiXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a072492b4be1acdb0db2d03cd8f71ccc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::Child</definition>
        <argsstring>(const char *value, int index) const </argsstring>
        <name>Child</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a handle to the &quot;index&quot; child with the given name. The first child is 0, the second 1, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1629" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp" bodystart="1686" bodyend="1702"/>
        <references refid="class_ti_xml_node_1af854baeba384f5fe9859f5aee03b548e" compoundref="tinyxml_8h" startline="624" endline="624">TiXmlNode::NextSibling</references>
        <references refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" compoundref="tinyxml_8h" startline="1612" endline="1612">TiXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1af9cf6a7d08a5da94a8924425ad0cd5ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::Child</definition>
        <argsstring>(int index) const </argsstring>
        <name>Child</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a handle to the &quot;index&quot; child. The first child is 0, the second 1, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1633" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp" bodystart="1667" bodyend="1683"/>
        <references refid="class_ti_xml_node_1af854baeba384f5fe9859f5aee03b548e" compoundref="tinyxml_8h" startline="624" endline="624">TiXmlNode::NextSibling</references>
        <references refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" compoundref="tinyxml_8h" startline="1612" endline="1612">TiXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a979a3f850984a176ee884e394c7eed2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::ChildElement</definition>
        <argsstring>(const char *value, int index) const </argsstring>
        <name>ChildElement</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a handle to the &quot;index&quot; child element with the given name. The first child element is 0, the second 1, etc. Note that only TiXmlElements are indexed: other types are not counted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1638" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp" bodystart="1724" bodyend="1740"/>
        <references refid="class_ti_xml_node_1a7667217e269e0da01d1f82aee94d1a3d" compoundref="tinyxml_8cpp" startline="450" endline="462">TiXmlNode::NextSiblingElement</references>
        <references refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" compoundref="tinyxml_8h" startline="1612" endline="1612">TiXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a8786475b9d1f1518492e3a46704c7ef0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref></type>
        <definition>TiXmlHandle TiXmlHandle::ChildElement</definition>
        <argsstring>(int index) const </argsstring>
        <name>ChildElement</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a handle to the &quot;index&quot; child element. The first child element is 0, the second 1, etc. Note that only TiXmlElements are indexed: other types are not counted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1643" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp" bodystart="1705" bodyend="1721"/>
        <references refid="class_ti_xml_node_1a7667217e269e0da01d1f82aee94d1a3d" compoundref="tinyxml_8cpp" startline="450" endline="462">TiXmlNode::NextSiblingElement</references>
        <references refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" compoundref="tinyxml_8h" startline="1612" endline="1612">TiXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1af678e5088e83be67baf76f699756f2c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_node" kindref="compound">TiXmlNode</ref> *</type>
        <definition>TiXmlNode* TiXmlHandle::ToNode</definition>
        <argsstring>() const </argsstring>
        <name>ToNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the handle as a <ref refid="class_ti_xml_node" kindref="compound">TiXmlNode</ref>. This may return null. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1655" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1655" bodyend="1655"/>
        <references refid="class_ti_xml_handle_1ac5429de14bb78b16288bac5bf33c6858" compoundref="tinyxml_8h" startline="1684">node</references>
        <referencedby refid="class_ti_xml_handle_1ab44b723a8dc9af72838a303c079d0376" compoundref="tinyxml_8h" startline="1669" endline="1669">Node</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1abc6e7ed383a5fe1e52b0c0004b457b9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_element" kindref="compound">TiXmlElement</ref> *</type>
        <definition>TiXmlElement* TiXmlHandle::ToElement</definition>
        <argsstring>() const </argsstring>
        <name>ToElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the handle as a <ref refid="class_ti_xml_element" kindref="compound">TiXmlElement</ref>. This may return null. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1658" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1658" bodyend="1658"/>
        <referencedby refid="class_ti_xml_handle_1acb5fe8388a526289ea65e817a51e05e7" compoundref="tinyxml_8h" startline="1673" endline="1673">Element</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a4ac53a652296203a5b5e13854d923586" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_text" kindref="compound">TiXmlText</ref> *</type>
        <definition>TiXmlText* TiXmlHandle::ToText</definition>
        <argsstring>() const </argsstring>
        <name>ToText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the handle as a <ref refid="class_ti_xml_text" kindref="compound">TiXmlText</ref>. This may return null. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1661" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1661" bodyend="1661"/>
        <referencedby refid="class_ti_xml_handle_1a9fc739c8a18d160006f82572fc143d13" compoundref="tinyxml_8h" startline="1677" endline="1677">Text</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a1381c17507a130767b1e23afc93b3674" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_unknown" kindref="compound">TiXmlUnknown</ref> *</type>
        <definition>TiXmlUnknown* TiXmlHandle::ToUnknown</definition>
        <argsstring>() const </argsstring>
        <name>ToUnknown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the handle as a <ref refid="class_ti_xml_unknown" kindref="compound">TiXmlUnknown</ref>. This may return null. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1664" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1664" bodyend="1664"/>
        <referencedby refid="class_ti_xml_handle_1a49675b74357ba2aae124657a9a1ef465" compoundref="tinyxml_8h" startline="1681" endline="1681">Unknown</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1ab44b723a8dc9af72838a303c079d0376" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_node" kindref="compound">TiXmlNode</ref> *</type>
        <definition>TiXmlNode* TiXmlHandle::Node</definition>
        <argsstring>() const </argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000011"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use ToNode. Return the handle as a <ref refid="class_ti_xml_node" kindref="compound">TiXmlNode</ref>. This may return null. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1669" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1669" bodyend="1669"/>
        <references refid="class_ti_xml_handle_1af678e5088e83be67baf76f699756f2c3" compoundref="tinyxml_8h" startline="1655" endline="1655">ToNode</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1acb5fe8388a526289ea65e817a51e05e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_element" kindref="compound">TiXmlElement</ref> *</type>
        <definition>TiXmlElement* TiXmlHandle::Element</definition>
        <argsstring>() const </argsstring>
        <name>Element</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000012"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use ToElement. Return the handle as a <ref refid="class_ti_xml_element" kindref="compound">TiXmlElement</ref>. This may return null. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1673" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1673" bodyend="1673"/>
        <references refid="class_ti_xml_handle_1abc6e7ed383a5fe1e52b0c0004b457b9e" compoundref="tinyxml_8h" startline="1658" endline="1658">ToElement</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a9fc739c8a18d160006f82572fc143d13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_text" kindref="compound">TiXmlText</ref> *</type>
        <definition>TiXmlText* TiXmlHandle::Text</definition>
        <argsstring>() const </argsstring>
        <name>Text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000013"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="class_ti_xml_handle_1a4ac53a652296203a5b5e13854d923586" kindref="member">ToText()</ref> Return the handle as a <ref refid="class_ti_xml_text" kindref="compound">TiXmlText</ref>. This may return null. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1677" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1677" bodyend="1677"/>
        <references refid="class_ti_xml_handle_1a4ac53a652296203a5b5e13854d923586" compoundref="tinyxml_8h" startline="1661" endline="1661">ToText</references>
      </memberdef>
      <memberdef kind="function" id="class_ti_xml_handle_1a49675b74357ba2aae124657a9a1ef465" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ti_xml_unknown" kindref="compound">TiXmlUnknown</ref> *</type>
        <definition>TiXmlUnknown* TiXmlHandle::Unknown</definition>
        <argsstring>() const </argsstring>
        <name>Unknown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000014"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="class_ti_xml_handle_1a1381c17507a130767b1e23afc93b3674" kindref="member">ToUnknown()</ref> Return the handle as a <ref refid="class_ti_xml_unknown" kindref="compound">TiXmlUnknown</ref>. This may return null. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1681" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1681" bodyend="1681"/>
        <references refid="class_ti_xml_handle_1a1381c17507a130767b1e23afc93b3674" compoundref="tinyxml_8h" startline="1664" endline="1664">ToUnknown</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref> is a class that wraps a node pointer with null checks; this is an incredibly useful thing. Note that <ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref> is not part of the TinyXml DOM structure. It is a separate utility class.</para><para>Take an example: <verbatim>&lt;Document&gt;
    &lt;Element attributeA = &quot;valueA&quot;&gt;
        &lt;Child attributeB = &quot;value1&quot; /&gt;
        &lt;Child attributeB = &quot;value2&quot; /&gt;
    &lt;/Element&gt;
&lt;Document&gt;
</verbatim></para><para>Assuming you want the value of &quot;attributeB&quot; in the 2nd &quot;Child&quot; element, it&apos;s very easy to write a <emphasis>lot</emphasis> of code that looks like:</para><para><verbatim>TiXmlElement* root = document.FirstChildElement( &quot;Document&quot; );
if ( root )
{
    TiXmlElement* element = root-&gt;FirstChildElement( &quot;Element&quot; );
    if ( element )
    {
        TiXmlElement* child = element-&gt;FirstChildElement( &quot;Child&quot; );
        if ( child )
        {
            TiXmlElement* child2 = child-&gt;NextSiblingElement( &quot;Child&quot; );
            if ( child2 )
            {
                // Finally do something useful.
</verbatim></para><para>And that doesn&apos;t even cover &quot;else&quot; cases. <ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref> addresses the verbosity of such code. A <ref refid="class_ti_xml_handle" kindref="compound">TiXmlHandle</ref> checks for null pointers so it is perfectly safe and correct to use:</para><para><verbatim>TiXmlHandle docHandle( &amp;document );
TiXmlElement* child2 = docHandle.FirstChild( &quot;Document&quot; ).FirstChild( &quot;Element&quot; ).Child( &quot;Child&quot;, 1 ).ToElement();
if ( child2 )
{
    // do something useful
</verbatim></para><para>Which is MUCH more concise and useful.</para><para>It is also safe to copy handles - internally they are nothing more than node pointers. <verbatim>TiXmlHandle handleCopy = handle;
</verbatim></para><para>What they should not be used for is iteration:</para><para><verbatim>int i=0; 
while ( true )
{
    TiXmlElement* child = docHandle.FirstChild( &quot;Document&quot; ).FirstChild( &quot;Element&quot; ).Child( &quot;Child&quot;, i ).ToElement();
    if ( !child )
        break;
    // do something
    ++i;
}
</verbatim></para><para>It seems reasonable, but it is in fact two embedded while loops. The Child method is a linear walk to find the element, so this code would iterate much more than it needs to. Instead, prefer:</para><para><verbatim>TiXmlElement* child = docHandle.FirstChild( &quot;Document&quot; ).FirstChild( &quot;Element&quot; ).FirstChild( &quot;Child&quot; ).ToElement();

for( child; child; child=child-&gt;NextSiblingElement() )
{
    // do something
}
</verbatim> </para>    </detaileddescription>
    <collaborationgraph>
      <node id="9340">
        <label>TiXmlCursor</label>
        <link refid="struct_ti_xml_cursor"/>
      </node>
      <node id="9338">
        <label>TiXmlNode</label>
        <link refid="class_ti_xml_node"/>
        <childnode refid="9339" relation="public-inheritance">
        </childnode>
        <childnode refid="9338" relation="usage">
          <edgelabel>prev</edgelabel>
          <edgelabel>next</edgelabel>
          <edgelabel>firstChild</edgelabel>
          <edgelabel>lastChild</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="9339">
        <label>TiXmlBase</label>
        <link refid="class_ti_xml_base"/>
        <childnode refid="9340" relation="usage">
          <edgelabel>location</edgelabel>
        </childnode>
        <childnode refid="9341" relation="usage">
          <edgelabel>entity</edgelabel>
        </childnode>
      </node>
      <node id="9341">
        <label>TiXmlBase::Entity</label>
        <link refid="struct_ti_xml_base_1_1_entity"/>
      </node>
      <node id="9337">
        <label>TiXmlHandle</label>
        <link refid="class_ti_xml_handle"/>
        <childnode refid="9338" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" line="1609" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h" bodystart="1608" bodyend="1685"/>
    <listofallmembers>
      <member refid="class_ti_xml_handle_1a072492b4be1acdb0db2d03cd8f71ccc4" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>Child</name></member>
      <member refid="class_ti_xml_handle_1af9cf6a7d08a5da94a8924425ad0cd5ac" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>Child</name></member>
      <member refid="class_ti_xml_handle_1a979a3f850984a176ee884e394c7eed2d" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>ChildElement</name></member>
      <member refid="class_ti_xml_handle_1a8786475b9d1f1518492e3a46704c7ef0" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>ChildElement</name></member>
      <member refid="class_ti_xml_handle_1acb5fe8388a526289ea65e817a51e05e7" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>Element</name></member>
      <member refid="class_ti_xml_handle_1acdb1faaf88a700b40ca2c8d9aee21139" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>FirstChild</name></member>
      <member refid="class_ti_xml_handle_1a8c61f64ae9365d89c264f289085541f8" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>FirstChild</name></member>
      <member refid="class_ti_xml_handle_1a24d1112e995e937e4dddb202d4113d4a" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>FirstChildElement</name></member>
      <member refid="class_ti_xml_handle_1af0aea751320f5e430fac6f8fff3b8dd4" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>FirstChildElement</name></member>
      <member refid="class_ti_xml_handle_1ac5429de14bb78b16288bac5bf33c6858" prot="private" virt="non-virtual"><scope>TiXmlHandle</scope><name>node</name></member>
      <member refid="class_ti_xml_handle_1ab44b723a8dc9af72838a303c079d0376" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>Node</name></member>
      <member refid="class_ti_xml_handle_1ad8e5dcf6a87882674203157f29f8e4db" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>operator=</name></member>
      <member refid="class_ti_xml_handle_1a9fc739c8a18d160006f82572fc143d13" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>Text</name></member>
      <member refid="class_ti_xml_handle_1aba18fd7bdefb942ecdea4bf4b8e29ec8" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>TiXmlHandle</name></member>
      <member refid="class_ti_xml_handle_1a236d7855e1e56ccc7b980630c48c7fd7" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>TiXmlHandle</name></member>
      <member refid="class_ti_xml_handle_1abc6e7ed383a5fe1e52b0c0004b457b9e" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>ToElement</name></member>
      <member refid="class_ti_xml_handle_1af678e5088e83be67baf76f699756f2c3" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>ToNode</name></member>
      <member refid="class_ti_xml_handle_1a4ac53a652296203a5b5e13854d923586" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>ToText</name></member>
      <member refid="class_ti_xml_handle_1a1381c17507a130767b1e23afc93b3674" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>ToUnknown</name></member>
      <member refid="class_ti_xml_handle_1a49675b74357ba2aae124657a9a1ef465" prot="public" virt="non-virtual"><scope>TiXmlHandle</scope><name>Unknown</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
