<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_json_1_1_features" kind="class" prot="public">
    <compoundname>Json::Features</compoundname>
    <includes refid="features_8h" local="no">features.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_json_1_1_features_1a33afd389719624b6bdb23950b3c346c9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::Features::allowComments_</definition>
        <argsstring></argsstring>
        <name>allowComments_</name>
        <briefdescription>
<para><computeroutput>true</computeroutput> if comments are allowed. Default: <computeroutput>true</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" line="42" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="class_json_1_1_reader_1ac71ef2b64c7c27b062052e692af3fb32" compoundref="json__reader_8cpp" startline="118" endline="158">Json::Reader::parse</referencedby>
        <referencedby refid="class_json_1_1_reader_1a22e677ef400d8223f27e631b4cd4b821" compoundref="json__reader_8cpp" startline="244" endline="252">Json::Reader::skipCommentTokens</referencedby>
        <referencedby refid="class_json_1_1_features_1ae23176c14b2e79e81fb61fb1a8ab58ee" compoundref="json__reader_8cpp" startline="65" endline="72">strictMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_json_1_1_features_1a1162c37a1458adc32582b585b552f9c3" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::Features::strictRoot_</definition>
        <argsstring></argsstring>
        <name>strictRoot_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>true</computeroutput> if root must be either an array or an object value. Default: <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" line="46" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_json_1_1_reader_1ac71ef2b64c7c27b062052e692af3fb32" compoundref="json__reader_8cpp" startline="118" endline="158">Json::Reader::parse</referencedby>
        <referencedby refid="class_json_1_1_features_1ae23176c14b2e79e81fb61fb1a8ab58ee" compoundref="json__reader_8cpp" startline="65" endline="72">strictMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_json_1_1_features_1a5076aa72c05c7596ac339ede36c97a6a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::Features::allowDroppedNullPlaceholders_</definition>
        <argsstring></argsstring>
        <name>allowDroppedNullPlaceholders_</name>
        <briefdescription>
<para><computeroutput>true</computeroutput> if dropped null placeholders are allowed. Default: <computeroutput>false</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" line="49" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_json_1_1_reader_1a47e56844b803d41ec993a83fadf4495c" compoundref="json__reader_8cpp" startline="160" endline="242">Json::Reader::readValue</referencedby>
        <referencedby refid="class_json_1_1_features_1ae23176c14b2e79e81fb61fb1a8ab58ee" compoundref="json__reader_8cpp" startline="65" endline="72">strictMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_json_1_1_features_1aff3cb16b79d15d3d761b11a0dd6d4d6b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::Features::allowNumericKeys_</definition>
        <argsstring></argsstring>
        <name>allowNumericKeys_</name>
        <briefdescription>
<para><computeroutput>true</computeroutput> if numeric object key are allowed. Default: <computeroutput>false</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" line="52" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_json_1_1_reader_1a0068eb3d8e86e91f0e4806f60da66b9c" compoundref="json__reader_8cpp" startline="459" endline="513">Json::Reader::readObject</referencedby>
        <referencedby refid="class_json_1_1_features_1ae23176c14b2e79e81fb61fb1a8ab58ee" compoundref="json__reader_8cpp" startline="65" endline="72">strictMode</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_json_1_1_features_1a63894da6e2c100b38741fa933f3d33ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_features" kindref="compound">Features</ref></type>
        <definition>Features Json::Features::all</definition>
        <argsstring>()</argsstring>
        <name>all</name>
        <briefdescription>
<para>A configuration that allows all features and assumes all strings are UTF-8. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>C &amp; C++ comments are allowed</para></listitem><listitem><para>Root object can be any JSON value</para></listitem><listitem><para>Assumes <ref refid="class_json_1_1_value" kindref="compound">Value</ref> strings are encoded in UTF-8 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" line="27" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_reader.cpp" bodystart="63" bodyend="63"/>
        <references refid="class_json_1_1_features_1ad15a091cb61bb31323299a95970d2644" compoundref="json__reader_8cpp" startline="59" endline="61">Features</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_features_1ae23176c14b2e79e81fb61fb1a8ab58ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_features" kindref="compound">Features</ref></type>
        <definition>Features Json::Features::strictMode</definition>
        <argsstring>()</argsstring>
        <name>strictMode</name>
        <briefdescription>
<para>A configuration that is strictly compatible with the JSON specification. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Comments are forbidden.</para></listitem><listitem><para>Root object must be either an array or an object value.</para></listitem><listitem><para>Assumes <ref refid="class_json_1_1_value" kindref="compound">Value</ref> strings are encoded in UTF-8 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" line="35" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_reader.cpp" bodystart="65" bodyend="72"/>
        <references refid="class_json_1_1_features_1a33afd389719624b6bdb23950b3c346c9" compoundref="features_8h" startline="42">allowComments_</references>
        <references refid="class_json_1_1_features_1a5076aa72c05c7596ac339ede36c97a6a" compoundref="features_8h" startline="49">allowDroppedNullPlaceholders_</references>
        <references refid="class_json_1_1_features_1aff3cb16b79d15d3d761b11a0dd6d4d6b" compoundref="features_8h" startline="52">allowNumericKeys_</references>
        <references refid="class_json_1_1_features_1a1162c37a1458adc32582b585b552f9c3" compoundref="features_8h" startline="46">strictRoot_</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_json_1_1_features_1ad15a091cb61bb31323299a95970d2644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::Features::Features</definition>
        <argsstring>()</argsstring>
        <name>Features</name>
        <briefdescription>
<para>Initialize the configuration like JsonConfig::allFeatures;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" line="39" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_reader.cpp" bodystart="59" bodyend="61"/>
        <referencedby refid="class_json_1_1_features_1a63894da6e2c100b38741fa933f3d33ae" compoundref="json__reader_8cpp" startline="63" endline="63">all</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration passed to reader and writer. This configuration object can be used to force the <ref refid="class_json_1_1_reader" kindref="compound">Reader</ref> or <ref refid="class_json_1_1_writer" kindref="compound">Writer</ref> to behave in a standard conforming way. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" line="19" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/features.h" bodystart="19" bodyend="53"/>
    <listofallmembers>
      <member refid="class_json_1_1_features_1a63894da6e2c100b38741fa933f3d33ae" prot="public" virt="non-virtual"><scope>Json::Features</scope><name>all</name></member>
      <member refid="class_json_1_1_features_1a33afd389719624b6bdb23950b3c346c9" prot="public" virt="non-virtual"><scope>Json::Features</scope><name>allowComments_</name></member>
      <member refid="class_json_1_1_features_1a5076aa72c05c7596ac339ede36c97a6a" prot="public" virt="non-virtual"><scope>Json::Features</scope><name>allowDroppedNullPlaceholders_</name></member>
      <member refid="class_json_1_1_features_1aff3cb16b79d15d3d761b11a0dd6d4d6b" prot="public" virt="non-virtual"><scope>Json::Features</scope><name>allowNumericKeys_</name></member>
      <member refid="class_json_1_1_features_1ad15a091cb61bb31323299a95970d2644" prot="public" virt="non-virtual"><scope>Json::Features</scope><name>Features</name></member>
      <member refid="class_json_1_1_features_1ae23176c14b2e79e81fb61fb1a8ab58ee" prot="public" virt="non-virtual"><scope>Json::Features</scope><name>strictMode</name></member>
      <member refid="class_json_1_1_features_1a1162c37a1458adc32582b585b552f9c3" prot="public" virt="non-virtual"><scope>Json::Features</scope><name>strictRoot_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
