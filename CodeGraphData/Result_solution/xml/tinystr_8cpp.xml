<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="tinystr_8cpp" kind="file">
    <compoundname>tinystr.cpp</compoundname>
    <includes refid="tinystr_8h" local="yes">tinystr.h</includes>
    <incdepgraph>
      <node id="176963">
        <label>assert.h</label>
      </node>
      <node id="176962">
        <label>tinystr.h</label>
        <link refid="tinystr_8h"/>
        <childnode refid="176963" relation="include">
        </childnode>
        <childnode refid="176964" relation="include">
        </childnode>
      </node>
      <node id="176964">
        <label>string.h</label>
      </node>
      <node id="176961">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp</label>
        <link refid="tinystr.cpp"/>
        <childnode refid="176962" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tinystr_8cpp_1a6ee35bce93b3aaf8a2353471c0dd2d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref></type>
        <definition>TiXmlString operator+</definition>
        <argsstring>(const TiXmlString &amp;a, const TiXmlString &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" line="86" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" bodystart="86" bodyend="93"/>
        <references refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" compoundref="tinystr_8h" startline="148" endline="148">TiXmlString::length</references>
        <references refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" compoundref="tinystr_8cpp" startline="42" endline="51">TiXmlString::reserve</references>
      </memberdef>
      <memberdef kind="function" id="tinystr_8cpp_1ab77ef9617d62643b24e52118db159b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref></type>
        <definition>TiXmlString operator+</definition>
        <argsstring>(const TiXmlString &amp;a, const char *b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" line="95" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" bodystart="95" bodyend="103"/>
        <references refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" compoundref="tinystr_8cpp" startline="73" endline="83">TiXmlString::append</references>
        <references refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" compoundref="tinystr_8h" startline="148" endline="148">TiXmlString::length</references>
        <references refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" compoundref="tinystr_8cpp" startline="42" endline="51">TiXmlString::reserve</references>
      </memberdef>
      <memberdef kind="function" id="tinystr_8cpp_1ac0f2988a051a761664d80de81462fc4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref></type>
        <definition>TiXmlString operator+</definition>
        <argsstring>(const char *a, const TiXmlString &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" line="105" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" bodystart="105" bodyend="113"/>
        <references refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" compoundref="tinystr_8cpp" startline="73" endline="83">TiXmlString::append</references>
        <references refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" compoundref="tinystr_8h" startline="148" endline="148">TiXmlString::length</references>
        <references refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" compoundref="tinystr_8cpp" startline="42" endline="51">TiXmlString::reserve</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">www.sourceforge.net/projects/tinyxml</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Original<sp/>file<sp/>by<sp/>Yves<sp/>Berquin.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment">warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment">damages<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="10"><highlight class="comment">purpose,<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and</highlight></codeline>
<codeline lineno="11"><highlight class="comment">redistribute<sp/>it<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must</highlight></codeline>
<codeline lineno="14"><highlight class="comment">not<sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this</highlight></codeline>
<codeline lineno="15"><highlight class="comment">software<sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation</highlight></codeline>
<codeline lineno="16"><highlight class="comment">would<sp/>be<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and</highlight></codeline>
<codeline lineno="19"><highlight class="comment">must<sp/>not<sp/>be<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source</highlight></codeline>
<codeline lineno="22"><highlight class="comment">distribution.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>WAS<sp/>ALTERED<sp/>BY<sp/>Tyge<sp/>Lé´™set,<sp/>7.<sp/>April<sp/>2005.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TIXML_USE_STL</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tinystr_8h" kindref="compound">tinystr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>value<sp/>for<sp/>find<sp/>primitive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">TiXmlString::size_type</ref><sp/><ref refid="class_ti_xml_string_1a8f4422d227088dc7bec96f479b275d0a" kindref="member">TiXmlString::npos</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">TiXmlString::size_type</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Null<sp/>rep.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="struct_ti_xml_string_1_1_rep" kindref="compound">TiXmlString::Rep</ref><sp/><ref refid="class_ti_xml_string_1ae1f9e0de28328eed27d5623ff67a3191" kindref="member">TiXmlString::nullrep_</ref><sp/>=<sp/>{<sp/>0,<sp/>0,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" kindref="member">TiXmlString::reserve</ref><sp/>(<ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>cap)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cap<sp/>&gt;<sp/><ref refid="class_ti_xml_string_1a76e4d6aba7845f4cf9c02332a5fbf916" kindref="member">capacity</ref>())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.<ref refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" kindref="member">init</ref>(<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>(),<sp/>cap);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(tmp.<ref refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" kindref="member">start</ref>(),<sp/><ref refid="class_ti_xml_string_1a00abc60f135c7ca1951c7334cc2c7993" kindref="member">data</ref>(),<sp/><ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1aa392cbc180752a79f007f4f9280c7762" kindref="member">swap</ref>(tmp);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_ti_xml_string_1ac72f3d9149b7812c1e6c59402014d0d5" refkind="member"><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ac72f3d9149b7812c1e6c59402014d0d5" kindref="member">TiXmlString::assign</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>len)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>cap<sp/>=<sp/><ref refid="class_ti_xml_string_1a76e4d6aba7845f4cf9c02332a5fbf916" kindref="member">capacity</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>cap<sp/>||<sp/>cap<sp/>&gt;<sp/>3*(len<sp/>+<sp/>8))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.<ref refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" kindref="member">init</ref>(len);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(tmp.<ref refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" kindref="member">start</ref>(),<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1aa392cbc180752a79f007f4f9280c7762" kindref="member">swap</ref>(tmp);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(<ref refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" kindref="member">start</ref>(),<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a5d70615367bf2920c25feddf6ac4ad30" kindref="member">set_size</ref>(len);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" refkind="member"><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" kindref="member">TiXmlString::append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>len)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>newsize<sp/>=<sp/><ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>()<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newsize<sp/>&gt;<sp/><ref refid="class_ti_xml_string_1a76e4d6aba7845f4cf9c02332a5fbf916" kindref="member">capacity</ref>())</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" kindref="member">reserve</ref><sp/>(newsize<sp/>+<sp/><ref refid="class_ti_xml_string_1a76e4d6aba7845f4cf9c02332a5fbf916" kindref="member">capacity</ref>());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(<ref refid="class_ti_xml_string_1a58faf1c6b9828c8d5d5092bebf146167" kindref="member">finish</ref>(),<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a5d70615367bf2920c25feddf6ac4ad30" kindref="member">set_size</ref>(newsize);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="tinystr_8h_1a6ee35bce93b3aaf8a2353471c0dd2d58" refkind="member"><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/><ref refid="tinystr_8cpp_1a6ee35bce93b3aaf8a2353471c0dd2d58" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" kindref="member">reserve</ref>(a.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>()<sp/>+<sp/>b.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>a;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="tinystr_8h_1ab77ef9617d62643b24e52118db159b7b" refkind="member"><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/><ref refid="tinystr_8cpp_1a6ee35bce93b3aaf8a2353471c0dd2d58" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">TiXmlString::size_type</ref><sp/>b_len<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">TiXmlString::size_type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>strlen(b)<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" kindref="member">reserve</ref>(a.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>()<sp/>+<sp/>b_len);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>a;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" kindref="member">append</ref>(b,<sp/>b_len);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="tinystr_8h_1ac0f2988a051a761664d80de81462fc4d" refkind="member"><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/><ref refid="tinystr_8cpp_1a6ee35bce93b3aaf8a2353471c0dd2d58" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">TiXmlString::size_type</ref><sp/>a_len<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">TiXmlString::size_type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>strlen(a)<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" kindref="member">reserve</ref>(a_len<sp/>+<sp/>b.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" kindref="member">append</ref>(a,<sp/>a_len);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TIXML_USE_STL</highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp"/>
  </compounddef>
</doxygen>
