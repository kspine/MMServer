<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_c_interval_folder_set" kind="class" prot="public">
    <compoundname>CIntervalFolderSet</compoundname>
    <includes refid="src_2_performance_timing_8h" local="no">PerformanceTiming.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_interval_folder_set_1a74a71ef43883b8d533f88bc2bedeb16e" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * CIntervalFolderSet::m_szFolderName</definition>
        <argsstring></argsstring>
        <name>m_szFolderName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="839" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="839" bodyend="-1"/>
        <referencedby refid="class_c_interval_folder_set_1a1070d56559a134f6f192f9781b169807" compoundref="src_2_performance_timing_8h" startline="828" endline="828">FolderName</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_interval_folder_set_1a0bcb6e02b7eee7013b033639d66c71bd" prot="private" static="no" mutable="no">
        <type><ref refid="src_2_performance_timing_fwd_decl_8h_1abeb679dbf226046cf865060f1ee6398f" kindref="member">CRC_ID</ref></type>
        <definition>CRC_ID CIntervalFolderSet::m_FolderNameCRC</definition>
        <argsstring></argsstring>
        <name>m_FolderNameCRC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="840" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="840" bodyend="-1"/>
        <referencedby refid="class_c_interval_folder_set_1aead1f2d8cb32f6b0cd5c9ff55534b909" compoundref="src_2_performance_timing_8h" startline="829" endline="829">FolderNameCRC</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_interval_folder_set_1a25b63a60b591942e767450e8d4b58fbf" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_performance_timing_1a5b5f704d02e5edeabd1c6b97d4745ec1" kindref="member">PerformanceTiming::TConstIntervalArray</ref></type>
        <definition>PerformanceTiming::TConstIntervalArray CIntervalFolderSet::m_vIntervals</definition>
        <argsstring></argsstring>
        <name>m_vIntervals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="841" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="841" bodyend="-1"/>
        <referencedby refid="class_c_interval_folder_set_1aea56b50dde178fafcf7a8321e356a829" compoundref="src_2_performance_timing_8h" startline="830" endline="833">AddInterval</referencedby>
        <referencedby refid="class_c_interval_folder_set_1a6a1935e0a4cec71b7ab7ce4ad453a019" compoundref="src_2_performance_timing_8h" startline="834" endline="834">Intervals</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_interval_folder_set_1a3ef29fa8b704783e14857fb8a68554fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CIntervalFolderSet::CIntervalFolderSet</definition>
        <argsstring>(const char *szName, CRC_ID folderNameCRC)</argsstring>
        <name>CIntervalFolderSet</name>
        <param>
          <type>const char *</type>
          <declname>szName</declname>
        </param>
        <param>
          <type><ref refid="src_2_performance_timing_fwd_decl_8h_1abeb679dbf226046cf865060f1ee6398f" kindref="member">CRC_ID</ref></type>
          <declname>folderNameCRC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="823" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="823" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1a1070d56559a134f6f192f9781b169807" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* CIntervalFolderSet::FolderName</definition>
        <argsstring>() const </argsstring>
        <name>FolderName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="828" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="828" bodyend="828"/>
        <references refid="class_c_interval_folder_set_1a74a71ef43883b8d533f88bc2bedeb16e" compoundref="src_2_performance_timing_8h" startline="839">m_szFolderName</references>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1aead1f2d8cb32f6b0cd5c9ff55534b909" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="src_2_performance_timing_fwd_decl_8h_1abeb679dbf226046cf865060f1ee6398f" kindref="member">CRC_ID</ref></type>
        <definition>CRC_ID CIntervalFolderSet::FolderNameCRC</definition>
        <argsstring>() const </argsstring>
        <name>FolderNameCRC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="829" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="829" bodyend="829"/>
        <references refid="class_c_interval_folder_set_1a0bcb6e02b7eee7013b033639d66c71bd" compoundref="src_2_performance_timing_8h" startline="840">m_FolderNameCRC</references>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1aea56b50dde178fafcf7a8321e356a829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CIntervalFolderSet::AddInterval</definition>
        <argsstring>(const PerformanceTiming::CInterval *pInterval)</argsstring>
        <name>AddInterval</name>
        <param>
          <type>const <ref refid="class_performance_timing_1_1_c_interval" kindref="compound">PerformanceTiming::CInterval</ref> *</type>
          <declname>pInterval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="830" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="830" bodyend="833"/>
        <references refid="class_c_interval_folder_set_1a25b63a60b591942e767450e8d4b58fbf" compoundref="src_2_performance_timing_8h" startline="841">m_vIntervals</references>
        <referencedby refid="class_c_interval_folder_set_1ac62dfb8037511cf7eab8bf1d4f0d0f2f" compoundref="src_2_performance_timing_8cpp" startline="846" endline="880">BuildFolderSets</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1a6a1935e0a4cec71b7ab7ce4ad453a019" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_performance_timing_1a5b5f704d02e5edeabd1c6b97d4745ec1" kindref="member">PerformanceTiming::TConstIntervalArray</ref> &amp;</type>
        <definition>const PerformanceTiming::TConstIntervalArray&amp; CIntervalFolderSet::Intervals</definition>
        <argsstring>() const </argsstring>
        <name>Intervals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="834" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="834" bodyend="834"/>
        <references refid="class_c_interval_folder_set_1a25b63a60b591942e767450e8d4b58fbf" compoundref="src_2_performance_timing_8h" startline="841">m_vIntervals</references>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1a3ef29fa8b704783e14857fb8a68554fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CIntervalFolderSet::CIntervalFolderSet</definition>
        <argsstring>(const char *szName, CRC_ID folderNameCRC)</argsstring>
        <name>CIntervalFolderSet</name>
        <param>
          <type>const char *</type>
          <declname>szName</declname>
        </param>
        <param>
          <type><ref refid="src_2_performance_timing_fwd_decl_8h_1abeb679dbf226046cf865060f1ee6398f" kindref="member">CRC_ID</ref></type>
          <declname>folderNameCRC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="823" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="823" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1a1070d56559a134f6f192f9781b169807" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* CIntervalFolderSet::FolderName</definition>
        <argsstring>() const </argsstring>
        <name>FolderName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="828" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="828" bodyend="828"/>
        <references refid="class_c_interval_folder_set_1a74a71ef43883b8d533f88bc2bedeb16e" compoundref="src_2_performance_timing_8h" startline="839">m_szFolderName</references>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1aead1f2d8cb32f6b0cd5c9ff55534b909" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="src_2_performance_timing_fwd_decl_8h_1abeb679dbf226046cf865060f1ee6398f" kindref="member">CRC_ID</ref></type>
        <definition>CRC_ID CIntervalFolderSet::FolderNameCRC</definition>
        <argsstring>() const </argsstring>
        <name>FolderNameCRC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="829" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="829" bodyend="829"/>
        <references refid="class_c_interval_folder_set_1a0bcb6e02b7eee7013b033639d66c71bd" compoundref="src_2_performance_timing_8h" startline="840">m_FolderNameCRC</references>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1aea56b50dde178fafcf7a8321e356a829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CIntervalFolderSet::AddInterval</definition>
        <argsstring>(const PerformanceTiming::CInterval *pInterval)</argsstring>
        <name>AddInterval</name>
        <param>
          <type>const <ref refid="class_performance_timing_1_1_c_interval" kindref="compound">PerformanceTiming::CInterval</ref> *</type>
          <declname>pInterval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="830" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="830" bodyend="833"/>
        <references refid="class_c_interval_folder_set_1a25b63a60b591942e767450e8d4b58fbf" compoundref="src_2_performance_timing_8h" startline="841">m_vIntervals</references>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1a6a1935e0a4cec71b7ab7ce4ad453a019" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_performance_timing_1a5b5f704d02e5edeabd1c6b97d4745ec1" kindref="member">PerformanceTiming::TConstIntervalArray</ref> &amp;</type>
        <definition>const PerformanceTiming::TConstIntervalArray&amp; CIntervalFolderSet::Intervals</definition>
        <argsstring>() const </argsstring>
        <name>Intervals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="834" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="834" bodyend="834"/>
        <references refid="class_c_interval_folder_set_1a25b63a60b591942e767450e8d4b58fbf" compoundref="src_2_performance_timing_8h" startline="841">m_vIntervals</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_interval_folder_set_1ac62dfb8037511cf7eab8bf1d4f0d0f2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CIntervalFolderSet::BuildFolderSets</definition>
        <argsstring>(std::vector&lt; CIntervalFolderSet &gt; &amp;vFolderSets, PerformanceTiming::TConstIntervalArray &amp;vAllIntervals)</argsstring>
        <name>BuildFolderSets</name>
        <param>
          <type>std::vector&lt; <ref refid="class_c_interval_folder_set" kindref="compound">CIntervalFolderSet</ref> &gt; &amp;</type>
          <declname>vFolderSets</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1a5b5f704d02e5edeabd1c6b97d4745ec1" kindref="member">PerformanceTiming::TConstIntervalArray</ref> &amp;</type>
          <declname>vAllIntervals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="836" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="846" bodyend="880"/>
        <references refid="class_c_interval_folder_set_1aea56b50dde178fafcf7a8321e356a829" compoundref="src_2_performance_timing_8h" startline="830" endline="833">AddInterval</references>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad29415a1240f66800c4330e2053c0dd1" compoundref="src_2_performance_timing_8h" startline="359" endline="362">PerformanceTiming::CPerformanceStat::GetFolderName</references>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a6cb5b9cb52e92cbd593b1fbb8a1a37cb" compoundref="src_2_performance_timing_8h" startline="364" endline="367">PerformanceTiming::CPerformanceStat::GetFolderNameCRC</references>
      </memberdef>
      <memberdef kind="function" id="class_c_interval_folder_set_1a54e4dc4f9f30d589d2b505548291e1d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void CIntervalFolderSet::BuildFolderSets</definition>
        <argsstring>(std::vector&lt; CIntervalFolderSet &gt; &amp;vFolderSets, PerformanceTiming::TConstIntervalArray &amp;vAllIntervals)</argsstring>
        <name>BuildFolderSets</name>
        <param>
          <type>std::vector&lt; <ref refid="class_c_interval_folder_set" kindref="compound">CIntervalFolderSet</ref> &gt; &amp;</type>
          <declname>vFolderSets</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1a5b5f704d02e5edeabd1c6b97d4745ec1" kindref="member">PerformanceTiming::TConstIntervalArray</ref> &amp;</type>
          <declname>vAllIntervals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="836" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_c_interval_folder_set" kindref="compound">CIntervalFolderSet</ref> - helper class for display of intervals </para>    </detaileddescription>
    <collaborationgraph>
      <node id="902">
        <label>CIntervalFolderSet</label>
        <link refid="class_c_interval_folder_set"/>
        <childnode refid="903" relation="usage">
          <edgelabel>m_vIntervals</edgelabel>
        </childnode>
      </node>
      <node id="903">
        <label>std::vector&lt; const CInterval * &gt;</label>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="821" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="820" bodyend="842"/>
    <listofallmembers>
      <member refid="class_c_interval_folder_set_1aea56b50dde178fafcf7a8321e356a829" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>AddInterval</name></member>
      <member refid="class_c_interval_folder_set_1aea56b50dde178fafcf7a8321e356a829" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>AddInterval</name></member>
      <member refid="class_c_interval_folder_set_1ac62dfb8037511cf7eab8bf1d4f0d0f2f" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>BuildFolderSets</name></member>
      <member refid="class_c_interval_folder_set_1a54e4dc4f9f30d589d2b505548291e1d4" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>BuildFolderSets</name></member>
      <member refid="class_c_interval_folder_set_1a3ef29fa8b704783e14857fb8a68554fa" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>CIntervalFolderSet</name></member>
      <member refid="class_c_interval_folder_set_1a3ef29fa8b704783e14857fb8a68554fa" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>CIntervalFolderSet</name></member>
      <member refid="class_c_interval_folder_set_1a1070d56559a134f6f192f9781b169807" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>FolderName</name></member>
      <member refid="class_c_interval_folder_set_1a1070d56559a134f6f192f9781b169807" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>FolderName</name></member>
      <member refid="class_c_interval_folder_set_1aead1f2d8cb32f6b0cd5c9ff55534b909" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>FolderNameCRC</name></member>
      <member refid="class_c_interval_folder_set_1aead1f2d8cb32f6b0cd5c9ff55534b909" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>FolderNameCRC</name></member>
      <member refid="class_c_interval_folder_set_1a6a1935e0a4cec71b7ab7ce4ad453a019" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>Intervals</name></member>
      <member refid="class_c_interval_folder_set_1a6a1935e0a4cec71b7ab7ce4ad453a019" prot="public" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>Intervals</name></member>
      <member refid="class_c_interval_folder_set_1a0bcb6e02b7eee7013b033639d66c71bd" prot="private" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>m_FolderNameCRC</name></member>
      <member refid="class_c_interval_folder_set_1a74a71ef43883b8d533f88bc2bedeb16e" prot="private" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>m_szFolderName</name></member>
      <member refid="class_c_interval_folder_set_1a25b63a60b591942e767450e8d4b58fbf" prot="private" virt="non-virtual"><scope>CIntervalFolderSet</scope><name>m_vIntervals</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
