<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="tinystr_8h" kind="file">
    <compoundname>tinystr.h</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includedby refid="tinystr_8cpp" local="yes">F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp</includedby>
    <includedby refid="tinyxml_8h" local="yes">F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h</includedby>
    <incdepgraph>
      <node id="176967">
        <label>assert.h</label>
      </node>
      <node id="176966">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h</label>
        <link refid="tinystr.h"/>
        <childnode refid="176967" relation="include">
        </childnode>
        <childnode refid="176968" relation="include">
        </childnode>
      </node>
      <node id="176968">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="176969">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h</label>
        <link refid="tinystr.h"/>
        <childnode refid="176970" relation="include">
        </childnode>
        <childnode refid="176971" relation="include">
        </childnode>
      </node>
      <node id="176972">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.cpp</label>
        <link refid="tinyxml_8cpp"/>
      </node>
      <node id="176970">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp</label>
        <link refid="tinystr_8cpp"/>
      </node>
      <node id="176973">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxmlerror.cpp</label>
        <link refid="tinyxmlerror_8cpp"/>
      </node>
      <node id="176971">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxml.h</label>
        <link refid="tinyxml_8h"/>
        <childnode refid="176972" relation="include">
        </childnode>
        <childnode refid="176973" relation="include">
        </childnode>
        <childnode refid="176974" relation="include">
        </childnode>
      </node>
      <node id="176974">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinyxmlparser.cpp</label>
        <link refid="tinyxmlparser_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_ti_xml_string" prot="public">TiXmlString</innerclass>
    <innerclass refid="struct_ti_xml_string_1_1_rep" prot="private">TiXmlString::Rep</innerclass>
    <innerclass refid="class_ti_xml_out_stream" prot="public">TiXmlOutStream</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tinystr_8h_1ae341476cd6b94ee32e3e93110a759581" prot="public" static="no">
        <name>TIXML_EXPLICIT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="56" column="11" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tinystr_8h_1ab43569e63f57a29dbc7deebfee90f98e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const TiXmlString &amp;a, const TiXmlString &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="269" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="269" bodyend="273"/>
        <references refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" compoundref="tinystr_8h" startline="142" endline="142">TiXmlString::c_str</references>
        <references refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" compoundref="tinystr_8h" startline="148" endline="148">TiXmlString::length</references>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1a28e13086a32670328b9f4fac22f09ccb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const TiXmlString &amp;a, const TiXmlString &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="274" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="274" bodyend="277"/>
        <references refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" compoundref="tinystr_8h" startline="142" endline="142">TiXmlString::c_str</references>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1ad56c73c4b133b623f29fdf9e5240296d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const TiXmlString &amp;a, const TiXmlString &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="279" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1a1390d728e894f489d3f02cedbaf53e35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const TiXmlString &amp;a, const TiXmlString &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="280" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="280" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1ab7fa4756616605a2697128067b80ffa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const TiXmlString &amp;a, const TiXmlString &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="281" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1ad5a4ecbced1596c900ac7d7a51660357" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const TiXmlString &amp;a, const TiXmlString &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="282" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="282" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1ace60487cee20f188d1d8c0f4504549da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const TiXmlString &amp;a, const char *b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="284" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="284" bodyend="284"/>
        <references refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" compoundref="tinystr_8h" startline="142" endline="142">TiXmlString::c_str</references>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1aa1ab32fa6995bc5bca0e8c0b305d71a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const char *a, const TiXmlString &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="285" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1a9deca021bf0c79c97b4b3c4a4579e3a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const TiXmlString &amp;a, const char *b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="286" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1aa37ff9329e975d8aae82ede2051ad8b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const char *a, const TiXmlString &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="287" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" bodystart="287" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1a6ee35bce93b3aaf8a2353471c0dd2d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref></type>
        <definition>TiXmlString operator+</definition>
        <argsstring>(const TiXmlString &amp;a, const TiXmlString &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="289" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" bodystart="86" bodyend="93"/>
        <references refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" compoundref="tinystr_8h" startline="148" endline="148">TiXmlString::length</references>
        <references refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" compoundref="tinystr_8cpp" startline="42" endline="51">TiXmlString::reserve</references>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1ab77ef9617d62643b24e52118db159b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref></type>
        <definition>TiXmlString operator+</definition>
        <argsstring>(const TiXmlString &amp;a, const char *b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="290" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" bodystart="95" bodyend="103"/>
        <references refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" compoundref="tinystr_8cpp" startline="73" endline="83">TiXmlString::append</references>
        <references refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" compoundref="tinystr_8h" startline="148" endline="148">TiXmlString::length</references>
        <references refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" compoundref="tinystr_8cpp" startline="42" endline="51">TiXmlString::reserve</references>
      </memberdef>
      <memberdef kind="function" id="tinystr_8h_1ac0f2988a051a761664d80de81462fc4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref></type>
        <definition>TiXmlString operator+</definition>
        <argsstring>(const char *a, const TiXmlString &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h" line="291" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.cpp" bodystart="105" bodyend="113"/>
        <references refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" compoundref="tinystr_8cpp" startline="73" endline="83">TiXmlString::append</references>
        <references refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" compoundref="tinystr_8h" startline="148" endline="148">TiXmlString::length</references>
        <references refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" compoundref="tinystr_8cpp" startline="42" endline="51">TiXmlString::reserve</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">www.sourceforge.net/projects/tinyxml</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Original<sp/>file<sp/>by<sp/>Yves<sp/>Berquin.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment">warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment">damages<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="10"><highlight class="comment">purpose,<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and</highlight></codeline>
<codeline lineno="11"><highlight class="comment">redistribute<sp/>it<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must</highlight></codeline>
<codeline lineno="14"><highlight class="comment">not<sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this</highlight></codeline>
<codeline lineno="15"><highlight class="comment">software<sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation</highlight></codeline>
<codeline lineno="16"><highlight class="comment">would<sp/>be<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and</highlight></codeline>
<codeline lineno="19"><highlight class="comment">must<sp/>not<sp/>be<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source</highlight></codeline>
<codeline lineno="22"><highlight class="comment">distribution.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>WAS<sp/>ALTERED<sp/>BY<sp/>Tyge<sp/>Lovset,<sp/>7.<sp/>April<sp/>2005.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>-<sp/>completely<sp/>rewritten.<sp/>compact,<sp/>clean,<sp/>and<sp/>fast<sp/>implementation.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>-<sp/>sizeof(TiXmlString)<sp/>=<sp/>pointer<sp/>size<sp/>(4<sp/>bytes<sp/>on<sp/>32-bit<sp/>systems)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>-<sp/>fixed<sp/>reserve()<sp/>to<sp/>work<sp/>as<sp/>per<sp/>specification.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>-<sp/>fixed<sp/>buggy<sp/>compares<sp/>operator==(),<sp/>operator&lt;(),<sp/>and<sp/>operator&gt;()</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>-<sp/>fixed<sp/>operator+=()<sp/>to<sp/>take<sp/>a<sp/>const<sp/>ref<sp/>argument,<sp/>following<sp/>spec.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>-<sp/>added<sp/>&quot;copy&quot;<sp/>constructor<sp/>with<sp/>length,<sp/>and<sp/>most<sp/>compare<sp/>operators.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>-<sp/>added<sp/>swap(),<sp/>clear(),<sp/>size(),<sp/>capacity(),<sp/>operator+().</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TIXML_USE_STL</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TIXML_STRING_INCLUDED</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TIXML_STRING_INCLUDED</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>The<sp/>support<sp/>for<sp/>explicit<sp/>isn&apos;t<sp/>that<sp/>universal,<sp/>and<sp/>it<sp/>isn&apos;t<sp/>really</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>required<sp/>-<sp/>it<sp/>is<sp/>used<sp/>to<sp/>check<sp/>that<sp/>the<sp/>TiXmlString<sp/>class<sp/>isn&apos;t<sp/>incorrectly</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/>used.<sp/>Be<sp/>nice<sp/>to<sp/>old<sp/>compilers<sp/>and<sp/>macro<sp/>it<sp/>here:</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER<sp/>&gt;=<sp/>1200<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Microsoft<sp/>visual<sp/>studio,<sp/>version<sp/>6<sp/>and<sp/>higher.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>TIXML_EXPLICIT<sp/>explicit</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(__GNUC__<sp/>&gt;=<sp/>3<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GCC<sp/>version<sp/>3<sp/>and<sp/>higher.s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>TIXML_EXPLICIT<sp/>explicit</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="56" refid="tinystr_8h_1ae341476cd6b94ee32e3e93110a759581" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>TIXML_EXPLICIT</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>TiXmlString<sp/>is<sp/>an<sp/>emulation<sp/>of<sp/>a<sp/>subset<sp/>of<sp/>the<sp/>std::string<sp/>template.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>Its<sp/>purpose<sp/>is<sp/>to<sp/>allow<sp/>compiling<sp/>TinyXML<sp/>on<sp/>compilers<sp/>with<sp/>no<sp/>or<sp/>poor<sp/>STL<sp/>support.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>Only<sp/>the<sp/>member<sp/>functions<sp/>relevant<sp/>to<sp/>the<sp/>TinyXML<sp/>project<sp/>have<sp/>been<sp/>implemented.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>The<sp/>buffer<sp/>allocation<sp/>is<sp/>made<sp/>by<sp/>a<sp/>simplistic<sp/>power<sp/>of<sp/>2<sp/>like<sp/>mechanism<sp/>:<sp/>if<sp/>we<sp/>increase</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>a<sp/>string<sp/>and<sp/>there&apos;s<sp/>no<sp/>more<sp/>room,<sp/>we<sp/>allocate<sp/>a<sp/>buffer<sp/>twice<sp/>as<sp/>big<sp/>as<sp/>we<sp/>need.</highlight></codeline>
<codeline lineno="66"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_ti_xml_string" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>type<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>value<sp/>for<sp/>find<sp/>primitive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_ti_xml_string_1a8f4422d227088dc7bec96f479b275d0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/><ref refid="class_ti_xml_string_1a8f4422d227088dc7bec96f479b275d0a" kindref="member">npos</ref>;<sp/></highlight><highlight class="comment">//<sp/>=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TiXmlString<sp/>empty<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_ti_xml_string_1a342f61e0fc2244df300b73aedf6d3fef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a342f61e0fc2244df300b73aedf6d3fef" kindref="member">TiXmlString</ref><sp/>()<sp/>:<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>(&amp;<ref refid="class_ti_xml_string_1ae1f9e0de28328eed27d5623ff67a3191" kindref="member">nullrep_</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TiXmlString<sp/>copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_ti_xml_string_1ac80fe17693a438c9ab2591664743fcb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1ac80fe17693a438c9ab2591664743fcb6" kindref="member">TiXmlString</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>copy)<sp/>:<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>(0)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" kindref="member">init</ref>(copy.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" kindref="member">start</ref>(),<sp/>copy.<ref refid="class_ti_xml_string_1a00abc60f135c7ca1951c7334cc2c7993" kindref="member">data</ref>(),<sp/><ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TiXmlString<sp/>constructor,<sp/>based<sp/>on<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_ti_xml_string_1aa3b32bd2891a757c9f36c21db44c81d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tinystr_8h_1ae341476cd6b94ee32e3e93110a759581" kindref="member">TIXML_EXPLICIT</ref><sp/><ref refid="class_ti_xml_string_1aa3b32bd2891a757c9f36c21db44c81d2" kindref="member">TiXmlString</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>copy)<sp/>:<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>(0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" kindref="member">init</ref>(<sp/>static_cast&lt;size_type&gt;(<sp/>strlen(copy)<sp/>));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" kindref="member">start</ref>(),<sp/>copy,<sp/><ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TiXmlString<sp/>constructor,<sp/>based<sp/>on<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_ti_xml_string_1a4b17ea5c5db986f14827223dfa8f1547" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tinystr_8h_1ae341476cd6b94ee32e3e93110a759581" kindref="member">TIXML_EXPLICIT</ref><sp/><ref refid="class_ti_xml_string_1a4b17ea5c5db986f14827223dfa8f1547" kindref="member">TiXmlString</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str,<sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>len)<sp/>:<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>(0)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" kindref="member">init</ref>(len);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" kindref="member">start</ref>(),<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TiXmlString<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_ti_xml_string_1a7ac03f581ca3422c4808162ab14f3450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a7ac03f581ca3422c4808162ab14f3450" kindref="member">~TiXmlString</ref><sp/>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1aa6008ae51286a342cd366fbf1e3eeafc" kindref="member">quit</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_ti_xml_string_1ae0bc6147afc0ec2aa0da3a3c0a8fcfb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ae0bc6147afc0ec2aa0da3a3c0a8fcfb0" kindref="member">operator = </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>copy)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac72f3d9149b7812c1e6c59402014d0d5" kindref="member">assign</ref>(<sp/>copy,<sp/>(<ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref>)strlen(copy));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_ti_xml_string_1ab1f1f5d3eceaa0f22d0a7e6055ea81b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ae0bc6147afc0ec2aa0da3a3c0a8fcfb0" kindref="member">operator = </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>copy)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac72f3d9149b7812c1e6c59402014d0d5" kindref="member">assign</ref>(copy.<ref refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" kindref="member">start</ref>(),<sp/>copy.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+=<sp/>operator.<sp/>Maps<sp/>to<sp/>append</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_ti_xml_string_1ab56336ac2aa2a08d24a71eb9a2b502a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ab56336ac2aa2a08d24a71eb9a2b502a5" kindref="member">operator += </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>suffix)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" kindref="member">append</ref>(suffix,<sp/>static_cast&lt;size_type&gt;(<sp/>strlen(suffix)<sp/>));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+=<sp/>operator.<sp/>Maps<sp/>to<sp/>append</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_ti_xml_string_1a6aa09d5240470b76d54ec709e04f8c13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ab56336ac2aa2a08d24a71eb9a2b502a5" kindref="member">operator += </ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>single)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" kindref="member">append</ref>(&amp;single,<sp/>1);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+=<sp/>operator.<sp/>Maps<sp/>to<sp/>append</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_ti_xml_string_1afdcae5ea2b4d9e194dc21226b817f417" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ab56336ac2aa2a08d24a71eb9a2b502a5" kindref="member">operator += </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>suffix)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" kindref="member">append</ref>(suffix.<ref refid="class_ti_xml_string_1a00abc60f135c7ca1951c7334cc2c7993" kindref="member">data</ref>(),<sp/>suffix.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>TiXmlString<sp/>into<sp/>a<sp/>null-terminated<sp/>char<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" kindref="member">c_str</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref>;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>TiXmlString<sp/>into<sp/>a<sp/>char<sp/>*<sp/>(need<sp/>not<sp/>be<sp/>null<sp/>terminated).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_ti_xml_string_1a00abc60f135c7ca1951c7334cc2c7993" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_ti_xml_string_1a00abc60f135c7ca1951c7334cc2c7993" kindref="member">data</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref>;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>length<sp/>of<sp/>a<sp/>TiXmlString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/><ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a3470330fe806a575dbb5909a1b908ac1" kindref="member">size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alias<sp/>for<sp/>length()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_ti_xml_string_1a96103e5c0f67e987fa48527e1f47a1f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/><ref refid="class_ti_xml_string_1a96103e5c0f67e987fa48527e1f47a1f6" kindref="member">size</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a3470330fe806a575dbb5909a1b908ac1" kindref="member">size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>a<sp/>TiXmlString<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_ti_xml_string_1a9a61e1d11cdb71bea4a4ed79caa793f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1a9a61e1d11cdb71bea4a4ed79caa793f4" kindref="member">empty</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a3470330fe806a575dbb5909a1b908ac1" kindref="member">size</ref><sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>capacity<sp/>of<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_ti_xml_string_1a76e4d6aba7845f4cf9c02332a5fbf916" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/><ref refid="class_ti_xml_string_1a76e4d6aba7845f4cf9c02332a5fbf916" kindref="member">capacity</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a9f38da318212f4a2f6ebe0afdbfaf477" kindref="member">capacity</ref>;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>char<sp/>extraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_ti_xml_string_1a6763093267bbdecbf03f8840bc349877" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/><ref refid="class_ti_xml_string_1a6763093267bbdecbf03f8840bc349877" kindref="member">at</ref><sp/>(<ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="162"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>index<sp/>&lt;<sp/><ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>()<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref>[<sp/>index<sp/>];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[]<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_ti_xml_string_1ae8cdc1d46c538536b786f7ae03c0c1d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/><ref refid="class_ti_xml_string_1ae8cdc1d46c538536b786f7ae03c0c1d9" kindref="member">operator [] </ref>(<ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>index<sp/>&lt;<sp/><ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>()<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref>[<sp/>index<sp/>];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>a<sp/>char<sp/>in<sp/>a<sp/>string.<sp/>Return<sp/>TiXmlString::npos<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_ti_xml_string_1a5c2b368b5eafe075fd9565cbcbd4c2f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/><ref refid="class_ti_xml_string_1a5c2b368b5eafe075fd9565cbcbd4c2f9" kindref="member">find</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lookup)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="176"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1a5c2b368b5eafe075fd9565cbcbd4c2f9" kindref="member">find</ref>(lookup,<sp/>0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>a<sp/>char<sp/>in<sp/>a<sp/>string<sp/>from<sp/>an<sp/>offset.<sp/>Return<sp/>TiXmlString::npos<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="class_ti_xml_string_1a5f2a6fd565751410b392f249a9786db4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/><ref refid="class_ti_xml_string_1a5f2a6fd565751410b392f249a9786db4" kindref="member">find</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tofind,<sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>offset)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="182"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/><ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1a8f4422d227088dc7bec96f479b275d0a" kindref="member">npos</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/><ref refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" kindref="member">c_str</ref>()<sp/>+<sp/>offset;<sp/>*p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>++p)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/>tofind)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>p<sp/>-<sp/><ref refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" kindref="member">c_str</ref>()<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1a8f4422d227088dc7bec96f479b275d0a" kindref="member">npos</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_ti_xml_string_1ab20e06e4c666abf3bdbfb3a1191d4888" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ab20e06e4c666abf3bdbfb3a1191d4888" kindref="member">clear</ref><sp/>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Lee:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>original<sp/>was<sp/>just<sp/>too<sp/>strange,<sp/>though<sp/>correct:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>TiXmlString().swap(*this);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Instead<sp/>use<sp/>the<sp/>quit<sp/>&amp;<sp/>re-init:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1aa6008ae51286a342cd366fbf1e3eeafc" kindref="member">quit</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" kindref="member">init</ref>(0,0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Function<sp/>to<sp/>reserve<sp/>a<sp/>big<sp/>amount<sp/>of<sp/>data<sp/>when<sp/>we<sp/>know<sp/>we&apos;ll<sp/>need<sp/>it.<sp/>Be<sp/>aware<sp/>that<sp/>this</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>DOES<sp/>NOT<sp/>clear<sp/>the<sp/>content<sp/>of<sp/>the<sp/>TiXmlString<sp/>if<sp/>any<sp/>exists.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1a88ecf9f0f00cb5c67b6b637958d7049c" kindref="member">reserve</ref><sp/>(<ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>cap);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ac72f3d9149b7812c1e6c59402014d0d5" kindref="member">assign</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>len);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/><ref refid="class_ti_xml_string_1ad44b21700d2ec24a511367b222b643fb" kindref="member">append</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>len);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_ti_xml_string_1aa392cbc180752a79f007f4f9280c7762" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1aa392cbc180752a79f007f4f9280c7762" kindref="member">swap</ref><sp/>(<ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ti_xml_string_1_1_rep" kindref="compound">Rep</ref>*<sp/>r<sp/>=<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref><sp/>=<sp/>other.<ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.<ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" kindref="member">init</ref>(<ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>sz)<sp/>{<sp/><ref refid="class_ti_xml_string_1a694eacb51c43d8eba8aa7d4552b598ff" kindref="member">init</ref>(sz,<sp/>sz);<sp/>}</highlight></codeline>
<codeline lineno="221" refid="class_ti_xml_string_1a5d70615367bf2920c25feddf6ac4ad30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1a5d70615367bf2920c25feddf6ac4ad30" kindref="member">set_size</ref>(<ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>sz)<sp/>{<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref>[<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a3470330fe806a575dbb5909a1b908ac1" kindref="member">size</ref><sp/>=<sp/>sz<sp/>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="222" refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ti_xml_string_1a36417caceebe25352f53a87e8cd966b4" kindref="member">start</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref>;<sp/>}</highlight></codeline>
<codeline lineno="223" refid="class_ti_xml_string_1a58faf1c6b9828c8d5d5092bebf146167" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ti_xml_string_1a58faf1c6b9828c8d5d5092bebf146167" kindref="member">finish</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref><sp/>+<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a3470330fe806a575dbb5909a1b908ac1" kindref="member">size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="struct_ti_xml_string_1_1_rep" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ti_xml_string_1_1_rep" kindref="compound">Rep</ref></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227" refid="struct_ti_xml_string_1_1_rep_1a3470330fe806a575dbb5909a1b908ac1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/><ref refid="struct_ti_xml_string_1_1_rep_1a3470330fe806a575dbb5909a1b908ac1" kindref="member">size</ref>,<sp/><ref refid="struct_ti_xml_string_1_1_rep_1a9f38da318212f4a2f6ebe0afdbfaf477" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="228" refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref>[1];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_ti_xml_string_1ae11cd23e090fd2e7bb62eda05b45a2d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1ae11cd23e090fd2e7bb62eda05b45a2d6" kindref="member">init</ref>(<ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>sz,<sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>cap)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cap)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lee:<sp/>the<sp/>original<sp/>form:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>rep_<sp/>=<sp/>static_cast&lt;Rep*&gt;(operator<sp/>new(sizeof(Rep)<sp/>+<sp/>cap));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>work<sp/>in<sp/>some<sp/>cases<sp/>of<sp/>new<sp/>being<sp/>overloaded.<sp/>Switching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>normal<sp/>allocation,<sp/>although<sp/>use<sp/>an<sp/>&apos;int&apos;<sp/>for<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>are<sp/>overly<sp/>picky<sp/>about<sp/>structure<sp/>alignment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>bytesNeeded<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_ti_xml_string_1_1_rep" kindref="compound">Rep</ref>)<sp/>+<sp/>cap;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1abeb2c1893a04c17904f7c06546d0b971" kindref="member">size_type</ref><sp/>intsNeeded<sp/>=<sp/>(<sp/>bytesNeeded<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)<sp/>-<sp/>1<sp/>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>int<sp/>);<sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="struct_ti_xml_string_1_1_rep" kindref="compound">Rep</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[<sp/>intsNeeded<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a88a7037a489827ec9e59b008e11342b0" kindref="member">str</ref>[<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a3470330fe806a575dbb5909a1b908ac1" kindref="member">size</ref><sp/>=<sp/>sz<sp/>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>-&gt;<ref refid="struct_ti_xml_string_1_1_rep_1a9f38da318212f4a2f6ebe0afdbfaf477" kindref="member">capacity</ref><sp/>=<sp/>cap;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref><sp/>=<sp/>&amp;<ref refid="class_ti_xml_string_1ae1f9e0de28328eed27d5623ff67a3191" kindref="member">nullrep_</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="class_ti_xml_string_1aa6008ae51286a342cd366fbf1e3eeafc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string_1aa6008ae51286a342cd366fbf1e3eeafc" kindref="member">quit</ref>()</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref><sp/>!=<sp/>&amp;<ref refid="class_ti_xml_string_1ae1f9e0de28328eed27d5623ff67a3191" kindref="member">nullrep_</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rep_<sp/>is<sp/>really<sp/>an<sp/>array<sp/>of<sp/>ints.<sp/>(see<sp/>the<sp/>allocator,<sp/>above).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cast<sp/>it<sp/>back<sp/>before<sp/>delete,<sp/>so<sp/>the<sp/>compiler<sp/>won&apos;t<sp/>incorrectly<sp/>call<sp/>destructors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>(<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_ti_xml_string_1_1_rep" kindref="compound">Rep</ref><sp/>*<sp/><ref refid="class_ti_xml_string_1ac7be48f31ca451bcb16de428b5c40e0c" kindref="member">rep_</ref>;</highlight></codeline>
<codeline lineno="264" refid="class_ti_xml_string_1ae1f9e0de28328eed27d5623ff67a3191" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_ti_xml_string_1_1_rep" kindref="compound">Rep</ref><sp/><ref refid="class_ti_xml_string_1ae1f9e0de28328eed27d5623ff67a3191" kindref="member">nullrep_</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="tinystr_8h_1ab43569e63f57a29dbc7deebfee90f98e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ab43569e63f57a29dbc7deebfee90f98e" kindref="member">operator == </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>a.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>()<sp/>==<sp/>b.<ref refid="class_ti_xml_string_1a3202f27d139a3fac79205f1f3c707727" kindref="member">length</ref>()<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optimization<sp/>on<sp/>some<sp/>platforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<sp/>strcmp(a.<ref refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" kindref="member">c_str</ref>(),<sp/>b.<ref refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" kindref="member">c_str</ref>())<sp/>==<sp/>0<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274" refid="tinystr_8h_1a28e13086a32670328b9f4fac22f09ccb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1a28e13086a32670328b9f4fac22f09ccb" kindref="member">operator &lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(a.<ref refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" kindref="member">c_str</ref>(),<sp/>b.<ref refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" kindref="member">c_str</ref>())<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="tinystr_8h_1ad56c73c4b133b623f29fdf9e5240296d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ad56c73c4b133b623f29fdf9e5240296d" kindref="member">operator != </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(a<sp/>==<sp/>b);<sp/>}</highlight></codeline>
<codeline lineno="280" refid="tinystr_8h_1a1390d728e894f489d3f02cedbaf53e35" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1a1390d728e894f489d3f02cedbaf53e35" kindref="member">operator &gt;  </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>&lt;<sp/>a;<sp/>}</highlight></codeline>
<codeline lineno="281" refid="tinystr_8h_1ab7fa4756616605a2697128067b80ffa5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ab7fa4756616605a2697128067b80ffa5" kindref="member">operator &lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(b<sp/>&lt;<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="282" refid="tinystr_8h_1ad5a4ecbced1596c900ac7d7a51660357" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ad5a4ecbced1596c900ac7d7a51660357" kindref="member">operator &gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(a<sp/>&lt;<sp/>b);<sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="tinystr_8h_1ace60487cee20f188d1d8c0f4504549da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ab43569e63f57a29dbc7deebfee90f98e" kindref="member">operator == </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(a.<ref refid="class_ti_xml_string_1a5581ca641d915551d3cda90f8e7bf49b" kindref="member">c_str</ref>(),<sp/>b)<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="285" refid="tinystr_8h_1aa1ab32fa6995bc5bca0e8c0b305d71a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ab43569e63f57a29dbc7deebfee90f98e" kindref="member">operator == </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>==<sp/>a;<sp/>}</highlight></codeline>
<codeline lineno="286" refid="tinystr_8h_1a9deca021bf0c79c97b4b3c4a4579e3a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ad56c73c4b133b623f29fdf9e5240296d" kindref="member">operator != </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(a<sp/>==<sp/>b);<sp/>}</highlight></codeline>
<codeline lineno="287" refid="tinystr_8h_1aa37ff9329e975d8aae82ede2051ad8b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tinystr_8h_1ad56c73c4b133b623f29fdf9e5240296d" kindref="member">operator != </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(b<sp/>==<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/><ref refid="tinystr_8h_1a6ee35bce93b3aaf8a2353471c0dd2d58" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/><ref refid="tinystr_8h_1a6ee35bce93b3aaf8a2353471c0dd2d58" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/><ref refid="tinystr_8h_1a6ee35bce93b3aaf8a2353471c0dd2d58" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/>TiXmlOutStream<sp/>is<sp/>an<sp/>emulation<sp/>of<sp/>std::ostream.<sp/>It<sp/>is<sp/>based<sp/>on<sp/>TiXmlString.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/>Only<sp/>the<sp/>operators<sp/>that<sp/>we<sp/>need<sp/>for<sp/>TinyXML<sp/>have<sp/>been<sp/>developped.</highlight></codeline>
<codeline lineno="297"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_ti_xml_out_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ti_xml_out_stream" kindref="compound">TiXmlOutStream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref></highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TiXmlOutStream<sp/>&lt;&lt;<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="class_ti_xml_out_stream_1a3640dcb1c0903be3bc6966cdc9a79db6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_out_stream" kindref="compound">TiXmlOutStream</ref><sp/>&amp;<sp/><ref refid="class_ti_xml_out_stream_1a3640dcb1c0903be3bc6966cdc9a79db6" kindref="member">operator &lt;&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ti_xml_string" kindref="compound">TiXmlString</ref><sp/>&amp;<sp/>in)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+=<sp/>in;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TiXmlOutStream<sp/>&lt;&lt;<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="class_ti_xml_out_stream_1af2117e5a8cbfcb69544804ad2859bfb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ti_xml_out_stream" kindref="compound">TiXmlOutStream</ref><sp/>&amp;<sp/><ref refid="class_ti_xml_out_stream_1a3640dcb1c0903be3bc6966cdc9a79db6" kindref="member">operator &lt;&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>in)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+=<sp/>in;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TIXML_STRING_INCLUDED</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TIXML_USE_STL</highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/Table/tinyxml/tinystr.h"/>
  </compounddef>
</doxygen>
