<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="struct_performance_timing_1_1_se_performace_task" kind="struct" prot="public">
    <compoundname>PerformanceTiming::SePerformaceTask</compoundname>
    <includes refid="src_2_performance_timing_8h" local="no">PerformanceTiming.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_performance_timing_1_1_se_performace_task_1a2d379f174869498e8c7a9809fa89fd95" prot="public" static="no" mutable="no">
        <type>Es::String</type>
        <definition>Es::String PerformanceTiming::SePerformaceTask::_fileName</definition>
        <argsstring></argsstring>
        <name>_fileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="67" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" compoundref="src_2_performance_timing_8cpp" startline="93" endline="275">PerformanceTiming::SePerformanceSave::DoWork</referencedby>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" compoundref="src_2_performance_timing_8cpp" startline="277" endline="288">PerformanceTiming::SePerformanceSave::PushTask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_performance_timing_1_1_se_performace_task_1a50696d2f5ae60c2e2df3028f1ed3bc6f" prot="public" static="no" mutable="no">
        <type>Es::String *</type>
        <definition>Es::String * PerformanceTiming::SePerformaceTask::_pFileDat</definition>
        <argsstring></argsstring>
        <name>_pFileDat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="68" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="68" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" compoundref="src_2_performance_timing_8cpp" startline="93" endline="275">PerformanceTiming::SePerformanceSave::DoWork</referencedby>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" compoundref="src_2_performance_timing_8cpp" startline="277" endline="288">PerformanceTiming::SePerformanceSave::PushTask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_performance_timing_1_1_se_performace_task_1a6e2482bb068e695a2cef7b652dda41c6" prot="public" static="no" mutable="no">
        <type><ref refid="struct_performance_timing_1_1_se_perfocemance_time" kindref="compound">SePerfocemanceTime</ref></type>
        <definition>SePerfocemanceTime PerformanceTiming::SePerformaceTask::_oTime</definition>
        <argsstring></argsstring>
        <name>_oTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="69" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="69" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" compoundref="src_2_performance_timing_8cpp" startline="93" endline="275">PerformanceTiming::SePerformanceSave::DoWork</referencedby>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" compoundref="src_2_performance_timing_8cpp" startline="277" endline="288">PerformanceTiming::SePerformanceSave::PushTask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_performance_timing_1_1_se_performace_task_1a03b6ead500755f3a1fa150c11050977f" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_performance_timing_1ac6707feaaa4f4727d7bf2f86f2539dbb" kindref="member">PerformanceTiming::TIntervalCloneArray</ref></type>
        <definition>PerformanceTiming::TIntervalCloneArray PerformanceTiming::SePerformaceTask::_IntervalArray</definition>
        <argsstring></argsstring>
        <name>_IntervalArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="71" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="71" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" compoundref="src_2_performance_timing_8cpp" startline="93" endline="275">PerformanceTiming::SePerformanceSave::DoWork</referencedby>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" compoundref="src_2_performance_timing_8cpp" startline="277" endline="288">PerformanceTiming::SePerformanceSave::PushTask</referencedby>
        <referencedby refid="struct_performance_timing_1_1_se_performace_task_1ae51c203860172e3ffee1a15b43018945" compoundref="src_2_performance_timing_8h" startline="58" endline="65">SePerformaceTask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_performance_timing_1_1_se_performace_task_1a40e0d51277c0fcaa8c88e8adcbdb8b3d" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_performance_timing_1ac964deca5e0cd7c10b938682b5ec145b" kindref="member">PerformanceTiming::TCounterCloneArray</ref></type>
        <definition>PerformanceTiming::TCounterCloneArray PerformanceTiming::SePerformaceTask::_CounterArray</definition>
        <argsstring></argsstring>
        <name>_CounterArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="72" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="72" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" compoundref="src_2_performance_timing_8cpp" startline="93" endline="275">PerformanceTiming::SePerformanceSave::DoWork</referencedby>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" compoundref="src_2_performance_timing_8cpp" startline="277" endline="288">PerformanceTiming::SePerformanceSave::PushTask</referencedby>
        <referencedby refid="struct_performance_timing_1_1_se_performace_task_1ae51c203860172e3ffee1a15b43018945" compoundref="src_2_performance_timing_8h" startline="58" endline="65">SePerformaceTask</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_performance_timing_1_1_se_performace_task_1a30292b404fcb1a8b5285cc5db50bdeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::SePerformaceTask::DECLARE_POOL</definition>
        <argsstring>(SePerformaceTask)</argsstring>
        <name>DECLARE_POOL</name>
        <param>
          <type><ref refid="struct_performance_timing_1_1_se_performace_task" kindref="compound">SePerformaceTask</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_performance_timing_1_1_se_performace_task_1addf5fd60b8cf2301ec448cf11ff78524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::SePerformaceTask::SePerformaceTask</definition>
        <argsstring>()</argsstring>
        <name>SePerformaceTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="54" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_performance_timing_1_1_se_performace_task_1ae51c203860172e3ffee1a15b43018945" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::SePerformaceTask::SePerformaceTask</definition>
        <argsstring>(const Es::String &amp;rFileName, Es::String *pStrDat, PerformanceTiming::TIntervalCloneArray &amp;rIntervals, PerformanceTiming::TCounterCloneArray &amp;rCounts, const SePerfocemanceTime &amp;oTime)</argsstring>
        <name>SePerformaceTask</name>
        <param>
          <type>const Es::String &amp;</type>
          <declname>rFileName</declname>
        </param>
        <param>
          <type>Es::String *</type>
          <declname>pStrDat</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1ac6707feaaa4f4727d7bf2f86f2539dbb" kindref="member">PerformanceTiming::TIntervalCloneArray</ref> &amp;</type>
          <declname>rIntervals</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1ac964deca5e0cd7c10b938682b5ec145b" kindref="member">PerformanceTiming::TCounterCloneArray</ref> &amp;</type>
          <declname>rCounts</declname>
        </param>
        <param>
          <type>const <ref refid="struct_performance_timing_1_1_se_perfocemance_time" kindref="compound">SePerfocemanceTime</ref> &amp;</type>
          <declname>oTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="58" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="58" bodyend="65"/>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a40e0d51277c0fcaa8c88e8adcbdb8b3d" compoundref="src_2_performance_timing_8h" startline="72">_CounterArray</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a03b6ead500755f3a1fa150c11050977f" compoundref="src_2_performance_timing_8h" startline="71">_IntervalArray</references>
      </memberdef>
      <memberdef kind="function" id="struct_performance_timing_1_1_se_performace_task_1a30292b404fcb1a8b5285cc5db50bdeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::SePerformaceTask::DECLARE_POOL</definition>
        <argsstring>(SePerformaceTask)</argsstring>
        <name>DECLARE_POOL</name>
        <param>
          <type><ref refid="struct_performance_timing_1_1_se_performace_task" kindref="compound">SePerformaceTask</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_performance_timing_1_1_se_performace_task_1addf5fd60b8cf2301ec448cf11ff78524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::SePerformaceTask::SePerformaceTask</definition>
        <argsstring>()</argsstring>
        <name>SePerformaceTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="54" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_performance_timing_1_1_se_performace_task_1ae51c203860172e3ffee1a15b43018945" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::SePerformaceTask::SePerformaceTask</definition>
        <argsstring>(const Es::String &amp;rFileName, Es::String *pStrDat, PerformanceTiming::TIntervalCloneArray &amp;rIntervals, PerformanceTiming::TCounterCloneArray &amp;rCounts, const SePerfocemanceTime &amp;oTime)</argsstring>
        <name>SePerformaceTask</name>
        <param>
          <type>const Es::String &amp;</type>
          <declname>rFileName</declname>
        </param>
        <param>
          <type>Es::String *</type>
          <declname>pStrDat</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1ac6707feaaa4f4727d7bf2f86f2539dbb" kindref="member">PerformanceTiming::TIntervalCloneArray</ref> &amp;</type>
          <declname>rIntervals</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1ac964deca5e0cd7c10b938682b5ec145b" kindref="member">PerformanceTiming::TCounterCloneArray</ref> &amp;</type>
          <declname>rCounts</declname>
        </param>
        <param>
          <type>const <ref refid="struct_performance_timing_1_1_se_perfocemance_time" kindref="compound">SePerfocemanceTime</ref> &amp;</type>
          <declname>oTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="58" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="58" bodyend="65"/>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a40e0d51277c0fcaa8c88e8adcbdb8b3d" compoundref="src_2_performance_timing_8h" startline="72">_CounterArray</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a03b6ead500755f3a1fa150c11050977f" compoundref="src_2_performance_timing_8h" startline="71">_IntervalArray</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5103">
        <label>PerformanceTiming::SePerfocemanceTime</label>
        <link refid="struct_performance_timing_1_1_se_perfocemance_time"/>
      </node>
      <node id="5106">
        <label>std::vector&lt; CIntervalClone * &gt;</label>
        <childnode refid="5107" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5102">
        <label>PerformanceTiming::SePerformaceTask</label>
        <link refid="struct_performance_timing_1_1_se_performace_task"/>
        <childnode refid="5103" relation="usage">
          <edgelabel>_oTime</edgelabel>
        </childnode>
        <childnode refid="5104" relation="usage">
          <edgelabel>_CounterArray</edgelabel>
        </childnode>
        <childnode refid="5106" relation="usage">
          <edgelabel>_IntervalArray</edgelabel>
        </childnode>
      </node>
      <node id="5107">
        <label>PerformanceTiming::CIntervalClone</label>
        <link refid="class_performance_timing_1_1_c_interval_clone"/>
      </node>
      <node id="5105">
        <label>PerformanceTiming::CCounterClone</label>
        <link refid="class_performance_timing_1_1_c_counter_clone"/>
      </node>
      <node id="5104">
        <label>std::vector&lt; CCounterClone * &gt;</label>
        <childnode refid="5105" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="52" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="51" bodyend="73"/>
    <listofallmembers>
      <member refid="struct_performance_timing_1_1_se_performace_task_1a40e0d51277c0fcaa8c88e8adcbdb8b3d" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>_CounterArray</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1a2d379f174869498e8c7a9809fa89fd95" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>_fileName</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1a03b6ead500755f3a1fa150c11050977f" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>_IntervalArray</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1a6e2482bb068e695a2cef7b652dda41c6" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>_oTime</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1a50696d2f5ae60c2e2df3028f1ed3bc6f" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>_pFileDat</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1a30292b404fcb1a8b5285cc5db50bdeec" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>DECLARE_POOL</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1a30292b404fcb1a8b5285cc5db50bdeec" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>DECLARE_POOL</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1addf5fd60b8cf2301ec448cf11ff78524" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>SePerformaceTask</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1ae51c203860172e3ffee1a15b43018945" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>SePerformaceTask</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1addf5fd60b8cf2301ec448cf11ff78524" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>SePerformaceTask</name></member>
      <member refid="struct_performance_timing_1_1_se_performace_task_1ae51c203860172e3ffee1a15b43018945" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformaceTask</scope><name>SePerformaceTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
