<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_json_1_1_path" kind="class" prot="public">
    <compoundname>Json::Path</compoundname>
    <includes refid="value_8h" local="no">value.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" prot="private" static="no">
        <type>std::vector&lt; const <ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref> * &gt;</type>
        <definition>typedef std::vector&lt;const PathArgument*&gt; Json::Path::InArgs</definition>
        <argsstring></argsstring>
        <name>InArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="655" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_path_1a27d96232d034d7a78286468676f9cb3e" prot="private" static="no">
        <type>std::vector&lt; <ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref> &gt;</type>
        <definition>typedef std::vector&lt;PathArgument&gt; Json::Path::Args</definition>
        <argsstring></argsstring>
        <name>Args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="656" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" prot="private" static="no" mutable="no">
        <type><ref refid="class_json_1_1_path_1a27d96232d034d7a78286468676f9cb3e" kindref="member">Args</ref></type>
        <definition>Args Json::Path::args_</definition>
        <argsstring></argsstring>
        <name>args_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="665" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="665" bodyend="-1"/>
        <referencedby refid="class_json_1_1_path_1af4d2ab3a6f09b69bab3d3e9fcdf13328" compoundref="json__value_8cpp" startline="1463" endline="1474">addPathInArg</referencedby>
        <referencedby refid="class_json_1_1_path_1a5289901fc58ad1fdca1de7fb5a0b620c" compoundref="json__value_8cpp" startline="1522" endline="1539">make</referencedby>
        <referencedby refid="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" compoundref="json__value_8cpp" startline="1432" endline="1461">makePath</referencedby>
        <referencedby refid="class_json_1_1_path_1ae1d05fa985a6ee3c57f2b8ed186b5982" compoundref="json__value_8cpp" startline="1480" endline="1501">resolve</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_json_1_1_path_1aaa37a99650e770d0cd680bf53585ec99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::Path::Path</definition>
        <argsstring>(const std::string &amp;path, const PathArgument &amp;a1=PathArgument(), const PathArgument &amp;a2=PathArgument(), const PathArgument &amp;a3=PathArgument(), const PathArgument &amp;a4=PathArgument(), const PathArgument &amp;a5=PathArgument())</argsstring>
        <name>Path</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref> &amp;</type>
          <declname>a1</declname>
          <defval><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref> &amp;</type>
          <declname>a2</declname>
          <defval><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref> &amp;</type>
          <declname>a3</declname>
          <defval><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref> &amp;</type>
          <declname>a4</declname>
          <defval><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref> &amp;</type>
          <declname>a5</declname>
          <defval><ref refid="class_json_1_1_path_argument" kindref="compound">PathArgument</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="641" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="1417" bodyend="1430"/>
        <references refid="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" compoundref="json__value_8cpp" startline="1432" endline="1461">makePath</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_path_1ae1d05fa985a6ee3c57f2b8ed186b5982" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_json_1_1_value" kindref="compound">Value</ref> &amp;</type>
        <definition>const Value &amp; Json::Path::resolve</definition>
        <argsstring>(const Value &amp;root) const </argsstring>
        <name>resolve</name>
        <param>
          <type>const <ref refid="class_json_1_1_value" kindref="compound">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="648" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="1480" bodyend="1501"/>
        <references refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" compoundref="value_8h" startline="665">args_</references>
        <references refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" compoundref="value_8h" startline="624">Json::PathArgument::index_</references>
        <references refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" compoundref="json__value_8cpp" startline="1303" endline="1303">Json::Value::isArray</references>
        <references refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" compoundref="json__value_8cpp" startline="1305" endline="1305">Json::Value::isObject</references>
        <references refid="class_json_1_1_value_1aaa82ebb4b730ea1567d310874f47d147" compoundref="json__value_8cpp" startline="1014" endline="1014">Json::Value::isValidIndex</references>
        <references refid="class_json_1_1_path_argument_1a5d901b404323b61f066fb1adb3babfe1" compoundref="value_8h" startline="623">Json::PathArgument::key_</references>
        <references refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" compoundref="value_8h" startline="625">Json::PathArgument::kind_</references>
        <references refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" compoundref="value_8h" startline="620">Json::PathArgument::kindIndex</references>
        <references refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" compoundref="value_8h" startline="621">Json::PathArgument::kindKey</references>
        <references refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" compoundref="value_8h" startline="179">Json::Value::nullRef</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_path_1a33d1749770a4cf74e9a3de419bc7febe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value" kindref="compound">Value</ref></type>
        <definition>Value Json::Path::resolve</definition>
        <argsstring>(const Value &amp;root, const Value &amp;defaultValue) const </argsstring>
        <name>resolve</name>
        <param>
          <type>const <ref refid="class_json_1_1_value" kindref="compound">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="class_json_1_1_value" kindref="compound">Value</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="649" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="1503" bodyend="1520"/>
        <references refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" compoundref="value_8h" startline="665">args_</references>
        <references refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" compoundref="value_8h" startline="624">Json::PathArgument::index_</references>
        <references refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" compoundref="json__value_8cpp" startline="1303" endline="1303">Json::Value::isArray</references>
        <references refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" compoundref="json__value_8cpp" startline="1305" endline="1305">Json::Value::isObject</references>
        <references refid="class_json_1_1_value_1aaa82ebb4b730ea1567d310874f47d147" compoundref="json__value_8cpp" startline="1014" endline="1014">Json::Value::isValidIndex</references>
        <references refid="class_json_1_1_path_argument_1a5d901b404323b61f066fb1adb3babfe1" compoundref="value_8h" startline="623">Json::PathArgument::key_</references>
        <references refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" compoundref="value_8h" startline="625">Json::PathArgument::kind_</references>
        <references refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" compoundref="value_8h" startline="620">Json::PathArgument::kindIndex</references>
        <references refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" compoundref="value_8h" startline="621">Json::PathArgument::kindKey</references>
        <references refid="class_json_1_1_value_1aaa4ffd4e53967170c3e8c9abf682b5cd" compoundref="value_8h" startline="179">Json::Value::nullRef</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_path_1a5289901fc58ad1fdca1de7fb5a0b620c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value" kindref="compound">Value</ref> &amp;</type>
        <definition>Value &amp; Json::Path::make</definition>
        <argsstring>(Value &amp;root) const </argsstring>
        <name>make</name>
        <param>
          <type><ref refid="class_json_1_1_value" kindref="compound">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the &quot;path&quot; to access the specified node and returns a reference on the node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="652" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="1522" bodyend="1539"/>
        <references refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" compoundref="value_8h" startline="665">args_</references>
        <references refid="class_json_1_1_path_argument_1afd5857d1b6bfaae6961333bdae7bd5ec" compoundref="value_8h" startline="624">Json::PathArgument::index_</references>
        <references refid="class_json_1_1_value_1ac8c898f93543e55b67418f94bced20af" compoundref="json__value_8cpp" startline="1303" endline="1303">Json::Value::isArray</references>
        <references refid="class_json_1_1_value_1a80cffaa0402b80317c0437216bbb6d92" compoundref="json__value_8cpp" startline="1305" endline="1305">Json::Value::isObject</references>
        <references refid="class_json_1_1_path_argument_1a5d901b404323b61f066fb1adb3babfe1" compoundref="value_8h" startline="623">Json::PathArgument::key_</references>
        <references refid="class_json_1_1_path_argument_1ad4bc4b544b155a3d9c7788572ecf991b" compoundref="value_8h" startline="625">Json::PathArgument::kind_</references>
        <references refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" compoundref="value_8h" startline="620">Json::PathArgument::kindIndex</references>
        <references refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" compoundref="value_8h" startline="621">Json::PathArgument::kindKey</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::Path::makePath</definition>
        <argsstring>(const std::string &amp;path, const InArgs &amp;in)</argsstring>
        <name>makePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" kindref="member">InArgs</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="658" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="1432" bodyend="1461"/>
        <references refid="class_json_1_1_path_1af4d2ab3a6f09b69bab3d3e9fcdf13328" compoundref="json__value_8cpp" startline="1463" endline="1474">addPathInArg</references>
        <references refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" compoundref="value_8h" startline="665">args_</references>
        <references refid="class_json_1_1_path_1a3729e6d3682338b2cfad2c10d4746f53" compoundref="json__value_8cpp" startline="1476" endline="1478">invalidPath</references>
        <references refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9ae5a976b898111903334cb131f5e03dc4" compoundref="value_8h" startline="620">Json::PathArgument::kindIndex</references>
        <references refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9a74f5968d06c01701b7a46092c33ba7d1" compoundref="value_8h" startline="621">Json::PathArgument::kindKey</references>
        <referencedby refid="class_json_1_1_path_1aaa37a99650e770d0cd680bf53585ec99" compoundref="json__value_8cpp" startline="1417" endline="1430">Path</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_path_1af4d2ab3a6f09b69bab3d3e9fcdf13328" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::Path::addPathInArg</definition>
        <argsstring>(const std::string &amp;path, const InArgs &amp;in, InArgs::const_iterator &amp;itInArg, PathArgument::Kind kind)</argsstring>
        <name>addPathInArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" kindref="member">InArgs</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>InArgs::const_iterator &amp;</type>
          <declname>itInArg</declname>
        </param>
        <param>
          <type><ref refid="class_json_1_1_path_argument_1a2420bbad778573c147e578701b84d9b9" kindref="member">PathArgument::Kind</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="659" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="1463" bodyend="1474"/>
        <references refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" compoundref="value_8h" startline="665">args_</references>
        <referencedby refid="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" compoundref="json__value_8cpp" startline="1432" endline="1461">makePath</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_path_1a3729e6d3682338b2cfad2c10d4746f53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::Path::invalidPath</definition>
        <argsstring>(const std::string &amp;path, int location)</argsstring>
        <name>invalidPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="663" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/lib_json/json_value.cpp" bodystart="1476" bodyend="1478"/>
        <referencedby refid="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" compoundref="json__value_8cpp" startline="1432" endline="1461">makePath</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Experimental and untested: represents a &quot;path&quot; to access a node. </para>    </briefdescription>
    <detaileddescription>
<para>Syntax:<itemizedlist>
<listitem><para>&quot;.&quot; =&gt; root node</para></listitem><listitem><para>&quot;.[n]&quot; =&gt; elements at index &apos;n&apos; of root node (an array value)</para></listitem><listitem><para>&quot;.name&quot; =&gt; member named &apos;name&apos; of root node (an object value)</para></listitem><listitem><para>&quot;.name1.name2.name3&quot;</para></listitem><listitem><para>&quot;.[0][1][2].name1[3]&quot;</para></listitem><listitem><para>&quot;.%&quot; =&gt; member name is provided as parameter</para></listitem><listitem><para>&quot;.[%]&quot; =&gt; index is provied as parameter </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="2040">
        <label>Json::Path</label>
        <link refid="class_json_1_1_path"/>
        <childnode refid="2041" relation="usage">
          <edgelabel>args_</edgelabel>
        </childnode>
      </node>
      <node id="2041">
        <label>std::vector&lt; PathArgument &gt;</label>
        <childnode refid="2042" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2042">
        <label>Json::PathArgument</label>
        <link refid="class_json_1_1_path_argument"/>
        <childnode refid="2043" relation="usage">
          <edgelabel>key_</edgelabel>
        </childnode>
      </node>
      <node id="2044">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="2043">
        <label>std::string</label>
        <childnode refid="2044" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" line="639" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Other/3rdpart/json/json/value.h" bodystart="639" bodyend="666"/>
    <listofallmembers>
      <member refid="class_json_1_1_path_1af4d2ab3a6f09b69bab3d3e9fcdf13328" prot="private" virt="non-virtual"><scope>Json::Path</scope><name>addPathInArg</name></member>
      <member refid="class_json_1_1_path_1a27d96232d034d7a78286468676f9cb3e" prot="private" virt="non-virtual"><scope>Json::Path</scope><name>Args</name></member>
      <member refid="class_json_1_1_path_1af33d0de7ee9f99d3e361bdf504dc2bc7" prot="private" virt="non-virtual"><scope>Json::Path</scope><name>args_</name></member>
      <member refid="class_json_1_1_path_1ab29d7b2fc896c7d3c5ed4609af3a3f23" prot="private" virt="non-virtual"><scope>Json::Path</scope><name>InArgs</name></member>
      <member refid="class_json_1_1_path_1a3729e6d3682338b2cfad2c10d4746f53" prot="private" virt="non-virtual"><scope>Json::Path</scope><name>invalidPath</name></member>
      <member refid="class_json_1_1_path_1a5289901fc58ad1fdca1de7fb5a0b620c" prot="public" virt="non-virtual"><scope>Json::Path</scope><name>make</name></member>
      <member refid="class_json_1_1_path_1a874e5339f8059ebeef049721f8897277" prot="private" virt="non-virtual"><scope>Json::Path</scope><name>makePath</name></member>
      <member refid="class_json_1_1_path_1aaa37a99650e770d0cd680bf53585ec99" prot="public" virt="non-virtual"><scope>Json::Path</scope><name>Path</name></member>
      <member refid="class_json_1_1_path_1ae1d05fa985a6ee3c57f2b8ed186b5982" prot="public" virt="non-virtual"><scope>Json::Path</scope><name>resolve</name></member>
      <member refid="class_json_1_1_path_1a33d1749770a4cf74e9a3de419bc7febe" prot="public" virt="non-virtual"><scope>Json::Path</scope><name>resolve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
