<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="make_command_8hpp" kind="file">
    <compoundname>makeCommand.hpp</compoundname>
    <includedby refid="_command_8hpp" local="yes">F:/TeamWork/ServerVersion/projects/server/Share/ServerBase/utils/Command.hpp</includedby>
    <invincdepgraph>
      <node id="144675">
        <label>RaceServer/Src/SeRaceServerProcess.cpp</label>
        <link refid="_src_2_se_race_server_process_8cpp"/>
      </node>
      <node id="144634">
        <label>RaceServer/src/SeRCSend.cpp</label>
        <link refid="src_2_se_r_c_send_8cpp"/>
      </node>
      <node id="144660">
        <label>RaceServer/Src/SeRaceRoomMgr.cpp</label>
        <link refid="_src_2_se_race_room_mgr_8cpp"/>
      </node>
      <node id="144665">
        <label>RaceServer/Src/SeRBLSend.cpp</label>
        <link refid="_src_2_se_r_b_l_send_8cpp"/>
      </node>
      <node id="144676">
        <label>RaceServer/Src/SeRaceMgr.h</label>
        <link refid="_race_server_2_src_2_se_race_mgr_8h"/>
        <childnode refid="144647" relation="include">
        </childnode>
        <childnode refid="144652" relation="include">
        </childnode>
        <childnode refid="144659" relation="include">
        </childnode>
      </node>
      <node id="144611">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/ServerBase/utils/makeCommand.hpp</label>
        <link refid="makeCommand.hpp"/>
        <childnode refid="144612" relation="include">
        </childnode>
      </node>
      <node id="144656">
        <label>RaceServer/Src/SeMRProcess.cpp</label>
        <link refid="_src_2_se_m_r_process_8cpp"/>
      </node>
      <node id="144624">
        <label>RaceServer/src/SeMRProcess.cpp</label>
        <link refid="src_2_se_m_r_process_8cpp"/>
      </node>
      <node id="144638">
        <label>RaceServer/src/SeRWCSSend.cpp</label>
        <link refid="src_2_se_r_w_c_s_send_8cpp"/>
      </node>
      <node id="144632">
        <label>RaceServer/src/SeRaceSvrOther.cpp</label>
        <link refid="src_2_se_race_svr_other_8cpp"/>
      </node>
      <node id="144628">
        <label>RaceServer/src/SeRaceRoomMgr.cpp</label>
        <link refid="src_2_se_race_room_mgr_8cpp"/>
      </node>
      <node id="144669">
        <label>RaceServer/Src/SeRNSend.cpp</label>
        <link refid="_src_2_se_r_n_send_8cpp"/>
      </node>
      <node id="144646">
        <label>RaceServer/Src/RaceService.h</label>
        <link refid="_src_2_race_service_8h"/>
        <childnode refid="144647" relation="include">
        </childnode>
        <childnode refid="144652" relation="include">
        </childnode>
        <childnode refid="144675" relation="include">
        </childnode>
        <childnode refid="144661" relation="include">
        </childnode>
      </node>
      <node id="144651">
        <label>RaceServer/Src/RaceServer.cpp</label>
        <link refid="_src_2_race_server_8cpp"/>
      </node>
      <node id="144664">
        <label>RaceServer/Src/SeRaceSvrOther.cpp</label>
        <link refid="_src_2_se_race_svr_other_8cpp"/>
      </node>
      <node id="144640">
        <label>RaceServer/src/SeThreadRaceMgr.cpp</label>
        <link refid="src_2_se_thread_race_mgr_8cpp"/>
      </node>
      <node id="144670">
        <label>RaceServer/Src/SeRWCSSend.cpp</label>
        <link refid="_src_2_se_r_w_c_s_send_8cpp"/>
      </node>
      <node id="144637">
        <label>RaceServer/src/SeRNSend.cpp</label>
        <link refid="src_2_se_r_n_send_8cpp"/>
      </node>
      <node id="144641">
        <label>RaceServer/src/SeWCSRProcess.cpp</label>
        <link refid="src_2_se_w_c_s_r_process_8cpp"/>
      </node>
      <node id="144621">
        <label>RaceServer/src/SeBLRProcess.cpp</label>
        <link refid="src_2_se_b_l_r_process_8cpp"/>
      </node>
      <node id="144663">
        <label>RaceServer/Src/SeRaceServicePush.cpp</label>
        <link refid="_src_2_se_race_service_push_8cpp"/>
      </node>
      <node id="144620">
        <label>RaceServer/src/RaceService.cpp</label>
        <link refid="src_2_race_service_8cpp"/>
      </node>
      <node id="144616">
        <label>RaceServer/src/PerformanceIntervalFileDump.cpp</label>
        <link refid="src_2_performance_interval_file_dump_8cpp"/>
      </node>
      <node id="144619">
        <label>RaceServer/src/RaceServer.cpp</label>
        <link refid="src_2_race_server_8cpp"/>
      </node>
      <node id="144631">
        <label>RaceServer/src/SeRaceServicePush.cpp</label>
        <link refid="src_2_se_race_service_push_8cpp"/>
      </node>
      <node id="144652">
        <label>RaceServer/Src/RaceService.cpp</label>
        <link refid="_src_2_race_service_8cpp"/>
      </node>
      <node id="144642">
        <label>RaceServer/src/SeWRProcess.cpp</label>
        <link refid="src_2_se_w_r_process_8cpp"/>
      </node>
      <node id="144668">
        <label>RaceServer/Src/SeRMSend.cpp</label>
        <link refid="_src_2_se_r_m_send_8cpp"/>
      </node>
      <node id="144674">
        <label>RaceServer/Src/SeWRProcess.cpp</label>
        <link refid="_src_2_se_w_r_process_8cpp"/>
      </node>
      <node id="144627">
        <label>RaceServer/src/SeRaceMgr.cpp</label>
        <link refid="_race_server_2src_2_se_race_mgr_8cpp"/>
      </node>
      <node id="144661">
        <label>RaceServer/Src/SeRaceServerPush.cpp</label>
        <link refid="_src_2_se_race_server_push_8cpp"/>
      </node>
      <node id="144633">
        <label>RaceServer/src/SeRBLSend.cpp</label>
        <link refid="src_2_se_r_b_l_send_8cpp"/>
      </node>
      <node id="144657">
        <label>RaceServer/Src/SeNRProcess.cpp</label>
        <link refid="_src_2_se_n_r_process_8cpp"/>
      </node>
      <node id="144636">
        <label>RaceServer/src/SeRMSend.cpp</label>
        <link refid="src_2_se_r_m_send_8cpp"/>
      </node>
      <node id="144645">
        <label>RaceServer/Src/SePtl_RSC_To_RS.h</label>
        <link refid="_src_2_se_ptl___r_s_c___to___r_s_8h"/>
        <childnode refid="144646" relation="include">
        </childnode>
        <childnode refid="144676" relation="include">
        </childnode>
      </node>
      <node id="144625">
        <label>RaceServer/src/SeNRProcess.cpp</label>
        <link refid="src_2_se_n_r_process_8cpp"/>
      </node>
      <node id="144635">
        <label>RaceServer/src/SeReconMgr.cpp</label>
        <link refid="src_2_se_recon_mgr_8cpp"/>
      </node>
      <node id="144650">
        <label>RaceServer/Src/raceRecordSaveThread.cpp</label>
        <link refid="_race_server_2_src_2race_record_save_thread_8cpp"/>
      </node>
      <node id="144623">
        <label>RaceServer/src/SeMatchPlayer.cpp</label>
        <link refid="src_2_se_match_player_8cpp"/>
      </node>
      <node id="144673">
        <label>RaceServer/Src/SeWCSRProcess.cpp</label>
        <link refid="_src_2_se_w_c_s_r_process_8cpp"/>
      </node>
      <node id="144629">
        <label>RaceServer/src/SeRaceServerPush.cpp</label>
        <link refid="src_2_se_race_server_push_8cpp"/>
      </node>
      <node id="144612">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/ServerBase/utils/Command.hpp</label>
        <link refid="_command_8hpp"/>
        <childnode refid="144613" relation="include">
        </childnode>
        <childnode refid="144645" relation="include">
        </childnode>
      </node>
      <node id="144662">
        <label>RaceServer/Src/SeRaceServiceProcess.cpp</label>
        <link refid="_src_2_se_race_service_process_8cpp"/>
      </node>
      <node id="144643">
        <label>RaceServer/src/SeRaceServerProcess.cpp</label>
        <link refid="src_2_se_race_server_process_8cpp"/>
      </node>
      <node id="144614">
        <label>RaceServer/src/RaceService.h</label>
        <link refid="src_2_race_service_8h"/>
        <childnode refid="144615" relation="include">
        </childnode>
        <childnode refid="144620" relation="include">
        </childnode>
        <childnode refid="144643" relation="include">
        </childnode>
        <childnode refid="144629" relation="include">
        </childnode>
      </node>
      <node id="144613">
        <label>RaceServer/src/SePtl_RSC_To_RS.h</label>
        <link refid="src_2_se_ptl___r_s_c___to___r_s_8h"/>
        <childnode refid="144614" relation="include">
        </childnode>
        <childnode refid="144644" relation="include">
        </childnode>
      </node>
      <node id="144654">
        <label>RaceServer/Src/SeCRProcess.cpp</label>
        <link refid="_src_2_se_c_r_process_8cpp"/>
      </node>
      <node id="144672">
        <label>RaceServer/Src/SeThreadRaceMgr.cpp</label>
        <link refid="_src_2_se_thread_race_mgr_8cpp"/>
      </node>
      <node id="144667">
        <label>RaceServer/Src/SeReconMgr.cpp</label>
        <link refid="_src_2_se_recon_mgr_8cpp"/>
      </node>
      <node id="144622">
        <label>RaceServer/src/SeCRProcess.cpp</label>
        <link refid="src_2_se_c_r_process_8cpp"/>
      </node>
      <node id="144618">
        <label>RaceServer/src/raceRecordSaveThread.cpp</label>
        <link refid="_race_server_2src_2race_record_save_thread_8cpp"/>
      </node>
      <node id="144658">
        <label>RaceServer/Src/SeRaceData.cpp</label>
        <link refid="_src_2_se_race_data_8cpp"/>
      </node>
      <node id="144630">
        <label>RaceServer/src/SeRaceServiceProcess.cpp</label>
        <link refid="src_2_se_race_service_process_8cpp"/>
      </node>
      <node id="144617">
        <label>RaceServer/src/RaceDetailMgr.cpp</label>
        <link refid="src_2_race_detail_mgr_8cpp"/>
      </node>
      <node id="144648">
        <label>RaceServer/Src/PerformanceIntervalFileDump.cpp</label>
        <link refid="_src_2_performance_interval_file_dump_8cpp"/>
      </node>
      <node id="144653">
        <label>RaceServer/Src/SeBLRProcess.cpp</label>
        <link refid="_src_2_se_b_l_r_process_8cpp"/>
      </node>
      <node id="144671">
        <label>RaceServer/Src/SeRWSend.cpp</label>
        <link refid="_src_2_se_r_w_send_8cpp"/>
      </node>
      <node id="144615">
        <label>RaceServer/src/RaceServer.h</label>
        <link refid="src_2_race_server_8h"/>
        <childnode refid="144616" relation="include">
        </childnode>
        <childnode refid="144617" relation="include">
        </childnode>
        <childnode refid="144618" relation="include">
        </childnode>
        <childnode refid="144619" relation="include">
        </childnode>
        <childnode refid="144620" relation="include">
        </childnode>
        <childnode refid="144621" relation="include">
        </childnode>
        <childnode refid="144622" relation="include">
        </childnode>
        <childnode refid="144623" relation="include">
        </childnode>
        <childnode refid="144624" relation="include">
        </childnode>
        <childnode refid="144625" relation="include">
        </childnode>
        <childnode refid="144626" relation="include">
        </childnode>
        <childnode refid="144627" relation="include">
        </childnode>
        <childnode refid="144628" relation="include">
        </childnode>
        <childnode refid="144629" relation="include">
        </childnode>
        <childnode refid="144630" relation="include">
        </childnode>
        <childnode refid="144631" relation="include">
        </childnode>
        <childnode refid="144632" relation="include">
        </childnode>
        <childnode refid="144633" relation="include">
        </childnode>
        <childnode refid="144634" relation="include">
        </childnode>
        <childnode refid="144635" relation="include">
        </childnode>
        <childnode refid="144636" relation="include">
        </childnode>
        <childnode refid="144637" relation="include">
        </childnode>
        <childnode refid="144638" relation="include">
        </childnode>
        <childnode refid="144639" relation="include">
        </childnode>
        <childnode refid="144640" relation="include">
        </childnode>
        <childnode refid="144641" relation="include">
        </childnode>
        <childnode refid="144642" relation="include">
        </childnode>
      </node>
      <node id="144626">
        <label>RaceServer/src/SeRaceData.cpp</label>
        <link refid="src_2_se_race_data_8cpp"/>
      </node>
      <node id="144649">
        <label>RaceServer/Src/RaceDetailMgr.cpp</label>
        <link refid="_src_2_race_detail_mgr_8cpp"/>
      </node>
      <node id="144659">
        <label>RaceServer/Src/SeRaceMgr.cpp</label>
        <link refid="_race_server_2_src_2_se_race_mgr_8cpp"/>
      </node>
      <node id="144666">
        <label>RaceServer/Src/SeRCSend.cpp</label>
        <link refid="_src_2_se_r_c_send_8cpp"/>
      </node>
      <node id="144639">
        <label>RaceServer/src/SeRWSend.cpp</label>
        <link refid="src_2_se_r_w_send_8cpp"/>
      </node>
      <node id="144644">
        <label>RaceServer/src/SeRaceMgr.h</label>
        <link refid="_race_server_2src_2_se_race_mgr_8h"/>
        <childnode refid="144615" relation="include">
        </childnode>
        <childnode refid="144620" relation="include">
        </childnode>
        <childnode refid="144627" relation="include">
        </childnode>
      </node>
      <node id="144655">
        <label>RaceServer/Src/SeMatchPlayer.cpp</label>
        <link refid="_src_2_se_match_player_8cpp"/>
      </node>
      <node id="144647">
        <label>RaceServer/Src/RaceServer.h</label>
        <link refid="_src_2_race_server_8h"/>
        <childnode refid="144648" relation="include">
        </childnode>
        <childnode refid="144649" relation="include">
        </childnode>
        <childnode refid="144650" relation="include">
        </childnode>
        <childnode refid="144651" relation="include">
        </childnode>
        <childnode refid="144652" relation="include">
        </childnode>
        <childnode refid="144653" relation="include">
        </childnode>
        <childnode refid="144654" relation="include">
        </childnode>
        <childnode refid="144655" relation="include">
        </childnode>
        <childnode refid="144656" relation="include">
        </childnode>
        <childnode refid="144657" relation="include">
        </childnode>
        <childnode refid="144658" relation="include">
        </childnode>
        <childnode refid="144659" relation="include">
        </childnode>
        <childnode refid="144660" relation="include">
        </childnode>
        <childnode refid="144661" relation="include">
        </childnode>
        <childnode refid="144662" relation="include">
        </childnode>
        <childnode refid="144663" relation="include">
        </childnode>
        <childnode refid="144664" relation="include">
        </childnode>
        <childnode refid="144665" relation="include">
        </childnode>
        <childnode refid="144666" relation="include">
        </childnode>
        <childnode refid="144667" relation="include">
        </childnode>
        <childnode refid="144668" relation="include">
        </childnode>
        <childnode refid="144669" relation="include">
        </childnode>
        <childnode refid="144670" relation="include">
        </childnode>
        <childnode refid="144671" relation="include">
        </childnode>
        <childnode refid="144672" relation="include">
        </childnode>
        <childnode refid="144673" relation="include">
        </childnode>
        <childnode refid="144674" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>()&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)())</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>()&gt;(func);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>()&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>()&gt;::FUNC_TYPE<sp/>func):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>()&gt;::execute()</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1)&gt;(func,p1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1)&gt;::execute()</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1,P2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1,P2)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1,P2);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1,P2),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2)&gt;(func,p1,p2);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2)&gt;::execute()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1,m_p2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1,P2,P3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1,P2,P3)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1,P2,P3);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1,P2,P3),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3)&gt;(func,p1,p2,p3);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3)&gt;::execute()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1,m_p2,m_p3);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1,P2,P3,P4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1,P2,P3,P4)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1,P2,P3,P4);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1,P2,P3,P4),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4)&gt;(func,p1,p2,p3,p4);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4)&gt;::execute()</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1,m_p2,m_p3,m_p4);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1,P2,P3,P4,P5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1,P2,P3,P4,P5)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1,P2,P3,P4,P5);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1,P2,P3,P4,P5),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5)&gt;(func,p1,p2,p3,p4,p5);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5&gt;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5):</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5)&gt;::execute()</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1,P2,P3,P4,P5,P6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1,P2,P3,P4,P5,P6);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P6&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1,P2,P3,P4,P5,P6),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6)&gt;(func,p1,p2,p3,p4,p5,p6);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6(p6)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6)&gt;::execute()</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5,m_p6);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1,P2,P3,P4,P5,P6,P7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1,P2,P3,P4,P5,P6,P7);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P6&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P7&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7&gt;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1,P2,P3,P4,P5,P6,P7),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7)&gt;(func,p1,p2,p3,p4,p5,p6,p7);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7&gt;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7):</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6(p6),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7(p7)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7&gt;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7)&gt;::execute()</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5,m_p6,m_p7);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8&gt;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1,P2,P3,P4,P5,P6,P7,P8);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P6&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P7&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P8&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p8;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8&gt;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1,P2,P3,P4,P5,P6,P7,P8),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8)&gt;(func,p1,p2,p3,p4,p5,p6,p7,p8);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8):</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5),</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6(p6),</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7(p7),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p8(p8)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8)&gt;::execute()</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5,m_p6,m_p7,m_p8);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8,P9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P9&gt;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(*FUNC_TYPE)(P1,P2,P3,P4,P5,P6,P7,P8,P9);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8,std::add_lvalue_reference_t&lt;P9&gt;<sp/>p9);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P6&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P7&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P8&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p8;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P9&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p9;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P9&gt;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(*func)(P1,P2,P3,P4,P5,P6,P7,P8,P9),std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8,std::add_lvalue_reference_t&lt;P9&gt;<sp/>p9)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;(func,p1,p2,p3,p4,p5,p6,p7,p8,p9);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P9&gt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;::FUNC_TYPE<sp/>func,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8,std::add_lvalue_reference_t&lt;P9&gt;<sp/>p9):</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5),</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6(p6),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7(p7),</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p8(p8),</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p9(p9)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P9&gt;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;::execute()</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5,m_p6,m_p7,m_p8,m_p9);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)()&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(),C<sp/>*<sp/>obj)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)()&gt;(func,obj);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)()&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)()&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj):</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)()&gt;::execute()</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1)&gt;(func,obj,p1);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1):</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1)&gt;::execute()</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1,P2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1,P2)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1,P2);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1,P2),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2)&gt;(func,obj,p1,p2);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2):</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2)&gt;::execute()</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1,m_p2);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1,P2,P3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1,P2,P3)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1,P2,P3);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1,P2,P3),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3)&gt;(func,obj,p1,p2,p3);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3):</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3)&gt;::execute()</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1,m_p2,m_p3);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1,P2,P3,P4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4&gt;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1,P2,P3,P4);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4&gt;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1,P2,P3,P4),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4)&gt;(func,obj,p1,p2,p3,p4);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4&gt;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4):</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4&gt;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4)&gt;::execute()</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1,m_p2,m_p3,m_p4);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1,P2,P3,P4,P5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5&gt;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1,P2,P3,P4,P5);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5&gt;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1,P2,P3,P4,P5),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5)&gt;(func,obj,p1,p2,p3,p4,p5);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5&gt;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5):</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5&gt;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5)&gt;::execute()</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1,P2,P3,P4,P5,P6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6&gt;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1,P2,P3,P4,P5,P6);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P6&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6&gt;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1,P2,P3,P4,P5,P6),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6)&gt;(func,obj,p1,p2,p3,p4,p5,p6);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6&gt;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6):</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5),</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6(p6)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6&gt;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6)&gt;::execute()</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5,m_p6);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7&gt;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1,P2,P3,P4,P5,P6,P7);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P6&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P7&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7&gt;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1,P2,P3,P4,P5,P6,P7),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7)&gt;(func,obj,p1,p2,p3,p4,p5,p6,p7);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7&gt;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7):</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5),</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6(p6),</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7(p7)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7&gt;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7)&gt;::execute()</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5,m_p6,m_p7);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8&gt;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1,P2,P3,P4,P5,P6,P7,P8);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P6&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P7&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P8&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p8;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8&gt;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1,P2,P3,P4,P5,P6,P7,P8),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8)&gt;(func,obj,p1,p2,p3,p4,p5,p6,p7,p8);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8&gt;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8):</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5),</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6(p6),</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7(p7),</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p8(p8)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8&gt;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8)&gt;::execute()</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5,m_p6,m_p7,m_p8);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8,P9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P9&gt;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Command</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>(C::*FUNC_TYPE)(P1,P2,P3,P4,P5,P6,P7,P8,P9);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCommand(FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8,std::add_lvalue_reference_t&lt;P9&gt;<sp/>p9);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_TYPE<sp/><sp/><sp/>m_func;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P4&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P5&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P6&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P7&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P8&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p8;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_reference_t&lt;P9&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p9;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P9&gt;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Command<sp/>*<sp/>makeCommand(R<sp/>(C::*func)(P1,P2,P3,P4,P5,P6,P7,P8,P9),C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8,std::add_lvalue_reference_t&lt;P9&gt;<sp/>p9)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;(func,obj,p1,p2,p3,p4,p5,p6,p7,p8,p9);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P9&gt;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;::TCommand(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;::FUNC_TYPE<sp/>func,C<sp/>*<sp/>obj,std::add_lvalue_reference_t&lt;P1&gt;<sp/>p1,std::add_lvalue_reference_t&lt;P2&gt;<sp/>p2,std::add_lvalue_reference_t&lt;P3&gt;<sp/>p3,std::add_lvalue_reference_t&lt;P4&gt;<sp/>p4,std::add_lvalue_reference_t&lt;P5&gt;<sp/>p5,std::add_lvalue_reference_t&lt;P6&gt;<sp/>p6,std::add_lvalue_reference_t&lt;P7&gt;<sp/>p7,std::add_lvalue_reference_t&lt;P8&gt;<sp/>p8,std::add_lvalue_reference_t&lt;P9&gt;<sp/>p9):</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_func(func),</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_obj(obj),</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p1(p1),</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2(p2),</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p3(p3),</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p4(p4),</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p5(p5),</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p6(p6),</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p7(p7),</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p8(p8),</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p9(p9)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P4,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P5,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P6,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P7,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P8,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P9&gt;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TCommand&lt;R<sp/>(C::*)(P1,P2,P3,P4,P5,P6,P7,P8,P9)&gt;::execute()</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_obj-&gt;*m_func)(m_p1,m_p2,m_p3,m_p4,m_p5,m_p6,m_p7,m_p8,m_p9);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/ServerBase/utils/makeCommand.hpp"/>
  </compounddef>
</doxygen>
