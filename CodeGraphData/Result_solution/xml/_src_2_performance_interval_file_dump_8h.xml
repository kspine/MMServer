<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_src_2_performance_interval_file_dump_8h" kind="file">
    <compoundname>PerformanceIntervalFileDump.h</compoundname>
    <includes refid="_src_2_performance_timing_8h" local="yes">PerformanceTiming.h</includes>
    <includes local="yes">EsString.h</includes>
    <includedby refid="_src_2_performance_interval_file_dump_8cpp" local="yes">RaceServer/Src/PerformanceIntervalFileDump.cpp</includedby>
    <includedby refid="_src_2_race_server_8cpp" local="yes">RaceServer/Src/RaceServer.cpp</includedby>
    <includedby refid="_src_2_race_service_8cpp" local="yes">RaceServer/Src/RaceService.cpp</includedby>
    <incdepgraph>
      <node id="46380">
        <label>list</label>
      </node>
      <node id="46374">
        <label>locale</label>
      </node>
      <node id="46384">
        <label>queue</label>
      </node>
      <node id="46358">
        <label>PerfDef.inl</label>
        <link refid="_perf_def_8inl"/>
      </node>
      <node id="46378">
        <label>limits</label>
      </node>
      <node id="46360">
        <label>SeMemPool.h</label>
        <link refid="_se_mem_pool_8h"/>
        <childnode refid="46361" relation="include">
        </childnode>
        <childnode refid="46387" relation="include">
        </childnode>
        <childnode refid="46368" relation="include">
        </childnode>
      </node>
      <node id="46363">
        <label>windows.h</label>
      </node>
      <node id="46359">
        <label>PerformanceTimingFwdDecl.h</label>
        <link refid="_src_2_performance_timing_fwd_decl_8h"/>
        <childnode refid="46360" relation="include">
        </childnode>
        <childnode refid="46382" relation="include">
        </childnode>
      </node>
      <node id="46368">
        <label>assert.h</label>
      </node>
      <node id="46366">
        <label>stdlib.h</label>
      </node>
      <node id="46387">
        <label>EsLock.h</label>
      </node>
      <node id="46370">
        <label>cmath</label>
      </node>
      <node id="46388">
        <label>EsThread.h</label>
      </node>
      <node id="46377">
        <label>string</label>
      </node>
      <node id="46381">
        <label>map</label>
      </node>
      <node id="46365">
        <label>conio.h</label>
      </node>
      <node id="46364">
        <label>direct.h</label>
      </node>
      <node id="46375">
        <label>fstream</label>
      </node>
      <node id="46362">
        <label>winsock2.h</label>
      </node>
      <node id="46355">
        <label>TeMisc.h</label>
        <link refid="_te_misc_8h"/>
        <childnode refid="46356" relation="include">
        </childnode>
      </node>
      <node id="46389">
        <label>SeThreadMsg.h</label>
        <link refid="_se_thread_msg_8h"/>
        <childnode refid="46361" relation="include">
        </childnode>
        <childnode refid="46387" relation="include">
        </childnode>
      </node>
      <node id="46356">
        <label>string.h</label>
      </node>
      <node id="46357">
        <label>PerfMacro.h</label>
        <link refid="_perf_macro_8h"/>
      </node>
      <node id="46371">
        <label>ctime</label>
      </node>
      <node id="46379">
        <label>vector</label>
      </node>
      <node id="46385">
        <label>new</label>
      </node>
      <node id="46376">
        <label>sstream</label>
      </node>
      <node id="46390">
        <label>EsString.h</label>
      </node>
      <node id="46361">
        <label>SeInclude.h</label>
        <link refid="_se_include_8h"/>
        <childnode refid="46362" relation="include">
        </childnode>
        <childnode refid="46363" relation="include">
        </childnode>
        <childnode refid="46364" relation="include">
        </childnode>
        <childnode refid="46365" relation="include">
        </childnode>
        <childnode refid="46366" relation="include">
        </childnode>
        <childnode refid="46367" relation="include">
        </childnode>
        <childnode refid="46368" relation="include">
        </childnode>
        <childnode refid="46369" relation="include">
        </childnode>
        <childnode refid="46370" relation="include">
        </childnode>
        <childnode refid="46371" relation="include">
        </childnode>
        <childnode refid="46372" relation="include">
        </childnode>
        <childnode refid="46356" relation="include">
        </childnode>
        <childnode refid="46352" relation="include">
        </childnode>
        <childnode refid="46373" relation="include">
        </childnode>
        <childnode refid="46374" relation="include">
        </childnode>
        <childnode refid="46375" relation="include">
        </childnode>
        <childnode refid="46376" relation="include">
        </childnode>
        <childnode refid="46377" relation="include">
        </childnode>
        <childnode refid="46378" relation="include">
        </childnode>
        <childnode refid="46379" relation="include">
        </childnode>
        <childnode refid="46380" relation="include">
        </childnode>
        <childnode refid="46381" relation="include">
        </childnode>
        <childnode refid="46382" relation="include">
        </childnode>
        <childnode refid="46383" relation="include">
        </childnode>
        <childnode refid="46384" relation="include">
        </childnode>
        <childnode refid="46385" relation="include">
        </childnode>
        <childnode refid="46386" relation="include">
        </childnode>
      </node>
      <node id="46367">
        <label>math.h</label>
      </node>
      <node id="46352">
        <label>EsType.h</label>
      </node>
      <node id="46369">
        <label>cctype</label>
      </node>
      <node id="46382">
        <label>unordered_map</label>
      </node>
      <node id="46351">
        <label>PerformanceTiming.h</label>
        <link refid="_src_2_performance_timing_8h"/>
        <childnode refid="46352" relation="include">
        </childnode>
        <childnode refid="46353" relation="include">
        </childnode>
        <childnode refid="46354" relation="include">
        </childnode>
        <childnode refid="46359" relation="include">
        </childnode>
        <childnode refid="46388" relation="include">
        </childnode>
        <childnode refid="46389" relation="include">
        </childnode>
        <childnode refid="46360" relation="include">
        </childnode>
        <childnode refid="46373" relation="include">
        </childnode>
        <childnode refid="46380" relation="include">
        </childnode>
      </node>
      <node id="46353">
        <label>EsPrerequisites.h</label>
      </node>
      <node id="46354">
        <label>PerformacenTimingMgr.h</label>
        <link refid="_performacen_timing_mgr_8h"/>
        <childnode refid="46352" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46357" relation="include">
        </childnode>
        <childnode refid="46358" relation="include">
        </childnode>
      </node>
      <node id="46386">
        <label>SeDefine.h</label>
        <link refid="_se_define_8h"/>
      </node>
      <node id="46350">
        <label>RaceServer/Src/PerformanceIntervalFileDump.h</label>
        <link refid="Src/PerformanceIntervalFileDump.h"/>
        <childnode refid="46351" relation="include">
        </childnode>
        <childnode refid="46390" relation="include">
        </childnode>
      </node>
      <node id="46383">
        <label>set</label>
      </node>
      <node id="46373">
        <label>algorithm</label>
      </node>
      <node id="46372">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="46393">
        <label>RaceServer/Src/RaceServer.cpp</label>
        <link refid="_src_2_race_server_8cpp"/>
      </node>
      <node id="46394">
        <label>RaceServer/Src/RaceService.cpp</label>
        <link refid="_src_2_race_service_8cpp"/>
      </node>
      <node id="46392">
        <label>RaceServer/Src/PerformanceIntervalFileDump.cpp</label>
        <link refid="_src_2_performance_interval_file_dump_8cpp"/>
      </node>
      <node id="46391">
        <label>RaceServer/Src/PerformanceIntervalFileDump.h</label>
        <link refid="Src/PerformanceIntervalFileDump.h"/>
        <childnode refid="46392" relation="include">
        </childnode>
        <childnode refid="46393" relation="include">
        </childnode>
        <childnode refid="46394" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_performance_interval_file_dump" prot="public">CPerformanceIntervalFileDump</innerclass>
    <innerclass refid="struct_c_performance_interval_file_dump_1_1_config" prot="public">CPerformanceIntervalFileDump::Config</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_PERFORMANCEINTERVALFILEDUMP_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_PERFORMANCEINTERVALFILEDUMP_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_src_2_performance_timing_8h" kindref="compound">PerformanceTiming.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EsString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_timing_sink" kindref="compound">CPerformanceTimingSink</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Config</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a04e1f1e8bbd1895178e85d29884a553f" kindref="member">Config</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a04e1f1e8bbd1895178e85d29884a553f" kindref="member">Config</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1aed445527929b39ed8958e758483c622f" kindref="member">sApplicationName</ref>,<sp/>Float32<sp/>fInterval,<sp/>Float32<sp/>fThreashold,<sp/>UInt32<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a8c22950debba5d3dcbffa7dbc6630559" kindref="member">uMaxPacketSize</ref><sp/>=<sp/>50<sp/>*<sp/>1024,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWriteIntervalSec<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sInLogDir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Stats&quot;</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float32<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a2facda1fab2bfa1a2b1e7831841eb4af" kindref="member">fFileWriteIntervalSec</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float32<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1afe090bd9e357ab5e7c32366c66ffd786" kindref="member">fFileWriteThresholdSec</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a8c22950debba5d3dcbffa7dbc6630559" kindref="member">uMaxPacketSize</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1aed445527929b39ed8958e758483c622f" kindref="member">sApplicationName</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a3a7791dc521b5c962129dac7d2441e63" kindref="member">sLogDir</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1aa975b13670cc7ae2e93aa99a82e98b8a" kindref="member">bWriteIntervalSec</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" kindref="member">CPerformanceIntervalFileDump</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config&amp;<sp/>rConfig<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1a5bbcd3f0b21aeec73935a61556a50ca3" kindref="member">~CPerformanceIntervalFileDump</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" kindref="member">Tick</ref>(<sp/>Float32<sp/>fDeltaTime<sp/>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1ab01ad3a269493af0dfccff5f879f54fb" kindref="member">BeginTrack</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1acf5a5fe5b1304c36ee5ccaa5a12134f1" kindref="member">EndTrack</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1ad2591c1146f6080e163195b2eb9a0b16" kindref="member">ForceDump</ref>();</highlight></codeline>
<codeline lineno="31" refid="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" kindref="member">SetOwner</ref>(<ref refid="class_i_performace_timing" kindref="compound">IPerformaceTiming</ref>*<sp/>pOwner)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" kindref="member">m_pOwner</ref><sp/>=<sp/>(<ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref>*)pOwner;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" kindref="member">CPerformanceIntervalFileDump</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref>&amp;<sp/>);<sp/></highlight><highlight class="comment">//<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref>&amp;<sp/><ref refid="class_c_performance_interval_file_dump_1a998e48e519fae35efc3e8d41236c44a8" kindref="member">operator= </ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref>&amp;<sp/>);<sp/></highlight><highlight class="comment">//<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref>*<sp/><ref refid="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" kindref="member">GetOwnerInst</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" kindref="member">m_pOwner</ref>;<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" kindref="member">ResetNextWriteTime</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" kindref="member">DumpIntervals</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bThresholdDump<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1a67c0021f0948c6f07f30712ee3e89d3a" kindref="member">DumpIntervalLine</ref>(<sp/>Es::String&amp;<sp/>sText,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFoldered,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFolder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Es::String&amp;<sp/>sName,<sp/>Float64<sp/>dTimeMS,<sp/>UInt32<sp/>uEntries,<sp/>Float64<sp/>fPercentage,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOddLine,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bClosed<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1abf157a01cdb9b33f0d4d2a72f7216a64" kindref="member">DumpCounterLine</ref>(Es::String&amp;<sp/>sText,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFoldered,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFolder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Es::String&amp;<sp/>sName,<sp/>UInt32<sp/>uValue,<sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/>uTotal,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHistory,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOddLine);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1ad16321414825be6788d49be80c7b439a" kindref="member">DumpHistoryIntervalLine</ref>(<sp/>Es::String&amp;<sp/>sText,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Es::String&amp;<sp/>sName,<sp/>Float64<sp/>dTimeMS,<sp/>UInt32<sp/>uEntries,<sp/>Float64<sp/>dMax,<sp/>Float64<sp/>dMin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOddLine<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1aa22e9c66cba08ebc30ecf4c113e72620" kindref="member">DumpPacketCounterLine</ref>(Es::String&amp;<sp/>sText,UInt32<sp/>packtID,UInt32<sp/>uSize,<sp/>UInt32<sp/>uCount,<sp/>UInt32<sp/>uTotal,<sp/>UInt32<sp/>uRealTotal,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOddLine);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config<sp/><ref refid="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" kindref="member">m_Config</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>Float32<sp/><ref refid="class_c_performance_interval_file_dump_1a679fa8671e40545dc721cde10dff67e0" kindref="member">m_fNextWriteTime</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Float32<sp/><ref refid="class_c_performance_interval_file_dump_1a34b2cc6bc36bc3ed9e0167ff294d679f" kindref="member">m_fLastDumpDeltaTime</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_performance_interval_file_dump_1a04c5d92c6ccc83a0d20a3bfc3dc12d69" kindref="member">m_sStatsFolder</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>Float64<sp/><ref refid="class_c_performance_interval_file_dump_1a37a429eecc533d097a8a8c08b95a0d92" kindref="member">m_dMaxDumpTimeSec</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>Float64<sp/><ref refid="class_c_performance_interval_file_dump_1a0c46a1a22b96cd70d2a0a36b377babbd" kindref="member">m_dLastDumpTimeSec</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>intervals<sp/><sp/>in<sp/>a<sp/>period.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a83376eda7e57dde6a321a2d05f9b5c1f" kindref="member">m_bTracking</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a99b0b3df10615151335ebb9e1175dd2b" kindref="member">m_tmBeginTrack</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref>*<sp/><ref refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" kindref="member">m_pOwner</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceIntervalFileDump.h"/>
  </compounddef>
</doxygen>
