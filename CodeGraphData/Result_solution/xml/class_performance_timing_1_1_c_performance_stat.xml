<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_performance_timing_1_1_c_performance_stat" kind="class" prot="public" abstract="yes">
    <compoundname>PerformanceTiming::CPerformanceStat</compoundname>
    <derivedcompoundref refid="class_performance_timing_1_1_c_counter" prot="public" virt="non-virtual">PerformanceTiming::CCounter</derivedcompoundref>
    <derivedcompoundref refid="class_performance_timing_1_1_c_counter" prot="public" virt="non-virtual">PerformanceTiming::CCounter</derivedcompoundref>
    <derivedcompoundref refid="class_performance_timing_1_1_c_interval" prot="public" virt="non-virtual">PerformanceTiming::CInterval</derivedcompoundref>
    <derivedcompoundref refid="class_performance_timing_1_1_c_interval" prot="public" virt="non-virtual">PerformanceTiming::CInterval</derivedcompoundref>
    <derivedcompoundref refid="class_performance_timing_1_1_c_pack_counter" prot="public" virt="non-virtual">PerformanceTiming::CPackCounter</derivedcompoundref>
    <derivedcompoundref refid="class_performance_timing_1_1_c_pack_counter" prot="public" virt="non-virtual">PerformanceTiming::CPackCounter</derivedcompoundref>
    <includes refid="src_2_performance_timing_8h" local="no">PerformanceTiming.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_performance_timing_1_1_c_performance_stat_1a258b61031576bcc6a3e15b583c75a6cc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string PerformanceTiming::CPerformanceStat::m_sName</definition>
        <argsstring></argsstring>
        <name>m_sName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="391" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_performance_stat_1a8ed9e0f8cb2f9c740d654523e2147468" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string PerformanceTiming::CPerformanceStat::m_sFolderName</definition>
        <argsstring></argsstring>
        <name>m_sFolderName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>folder name for the stat - for display/organization purposes </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="392" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="392" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_performance_stat_1ad29415a1240f66800c4330e2053c0dd1" compoundref="src_2_performance_timing_8h" startline="359" endline="362">GetFolderName</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_performance_stat_1a0e2b11d7f9ce826ac5b9512f92a94340" prot="private" static="no" mutable="no">
        <type><ref refid="src_2_performance_timing_fwd_decl_8h_1abeb679dbf226046cf865060f1ee6398f" kindref="member">CRC_ID</ref></type>
        <definition>CRC_ID PerformanceTiming::CPerformanceStat::m_FolderNameCRC</definition>
        <argsstring></argsstring>
        <name>m_FolderNameCRC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="393" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="393" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_performance_stat_1a424b2bbaa5f6457ea8990b33e943bddc" compoundref="src_2_performance_timing_8cpp" startline="747" endline="752">CPerformanceStat</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_performance_stat_1a6cb5b9cb52e92cbd593b1fbb8a1a37cb" compoundref="src_2_performance_timing_8h" startline="364" endline="367">GetFolderNameCRC</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_c_performance_stat_1ad5e31f07a31b22c339ee7b6242b6cd04" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PerformanceTiming::CPerformanceStat::m_bTouched</definition>
        <argsstring></argsstring>
        <name>m_bTouched</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="394" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="394" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_c_performance_stat_1a30c9f32df81a8b04a88ff77d4b1ed99f" compoundref="src_2_performance_timing_8h" startline="369" endline="372">IsTouched</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" compoundref="src_2_performance_timing_8h" startline="382" endline="385">ResetTouch</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_performance_stat_1a8759102951a2b02084f33c6565e1b9d4" compoundref="src_2_performance_timing_8h" startline="378" endline="381">Touch</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a424b2bbaa5f6457ea8990b33e943bddc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::CPerformanceStat::CPerformanceStat</definition>
        <argsstring>(const std::string &amp;sName)</argsstring>
        <name>CPerformanceStat</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="352" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="747" bodyend="752"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a0e2b11d7f9ce826ac5b9512f92a94340" compoundref="src_2_performance_timing_8h" startline="393">m_FolderNameCRC</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a24d2ef1fb91699902def98e91ff3bf28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual PerformanceTiming::CPerformanceStat::~CPerformanceStat</definition>
        <argsstring>()</argsstring>
        <name>~CPerformanceStat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="353" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="353" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a52826ace51151b5511dc91d2bff39a4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; PerformanceTiming::CPerformanceStat::Name</definition>
        <argsstring>() const </argsstring>
        <name>Name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="357" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="754" bodyend="757"/>
        <referencedby refid="class_c_performance_timing_1a5bfd75b3a3c3933063244609888e2dfc" compoundref="src_2_performance_timing_8cpp" startline="677" endline="710">CPerformanceTiming::EnumerateAllCounters</referencedby>
        <referencedby refid="class_c_performance_timing_1a38561b85313af8dcbef1bac3b4d6087f" compoundref="src_2_performance_timing_8cpp" startline="657" endline="675">CPerformanceTiming::EnumerateIntervals</referencedby>
        <referencedby refid="struct_performance_timing_1_1_pred___stat_by_name_1abfe845e8d29e851c4e79a68bbfe1a48c" compoundref="src_2_performance_timing_8h" startline="793" endline="796">PerformanceTiming::Pred_StatByName::operator()</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1ad29415a1240f66800c4330e2053c0dd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* PerformanceTiming::CPerformanceStat::GetFolderName</definition>
        <argsstring>() const </argsstring>
        <name>GetFolderName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="359" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="359" bodyend="362"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a8ed9e0f8cb2f9c740d654523e2147468" compoundref="src_2_performance_timing_8h" startline="392">m_sFolderName</references>
        <referencedby refid="class_c_interval_folder_set_1ac62dfb8037511cf7eab8bf1d4f0d0f2f" compoundref="src_2_performance_timing_8cpp" startline="846" endline="880">CIntervalFolderSet::BuildFolderSets</referencedby>
        <referencedby refid="class_c_counter_folder_set_1a4cb313bd2345a049934ba5cbbf08d6d7" compoundref="src_2_performance_timing_8cpp" startline="918" endline="954">CCounterFolderSet::BuildFolderSets</referencedby>
        <referencedby refid="class_c_performance_timing_1a5bfd75b3a3c3933063244609888e2dfc" compoundref="src_2_performance_timing_8cpp" startline="677" endline="710">CPerformanceTiming::EnumerateAllCounters</referencedby>
        <referencedby refid="class_c_performance_timing_1a38561b85313af8dcbef1bac3b4d6087f" compoundref="src_2_performance_timing_8cpp" startline="657" endline="675">CPerformanceTiming::EnumerateIntervals</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a6cb5b9cb52e92cbd593b1fbb8a1a37cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="src_2_performance_timing_fwd_decl_8h_1abeb679dbf226046cf865060f1ee6398f" kindref="member">CRC_ID</ref></type>
        <definition>CRC_ID PerformanceTiming::CPerformanceStat::GetFolderNameCRC</definition>
        <argsstring>() const </argsstring>
        <name>GetFolderNameCRC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="364" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="364" bodyend="367"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a0e2b11d7f9ce826ac5b9512f92a94340" compoundref="src_2_performance_timing_8h" startline="393">m_FolderNameCRC</references>
        <referencedby refid="class_c_interval_folder_set_1ac62dfb8037511cf7eab8bf1d4f0d0f2f" compoundref="src_2_performance_timing_8cpp" startline="846" endline="880">CIntervalFolderSet::BuildFolderSets</referencedby>
        <referencedby refid="class_c_counter_folder_set_1a4cb313bd2345a049934ba5cbbf08d6d7" compoundref="src_2_performance_timing_8cpp" startline="918" endline="954">CCounterFolderSet::BuildFolderSets</referencedby>
        <referencedby refid="class_c_performance_timing_1a5bfd75b3a3c3933063244609888e2dfc" compoundref="src_2_performance_timing_8cpp" startline="677" endline="710">CPerformanceTiming::EnumerateAllCounters</referencedby>
        <referencedby refid="class_c_performance_timing_1a38561b85313af8dcbef1bac3b4d6087f" compoundref="src_2_performance_timing_8cpp" startline="657" endline="675">CPerformanceTiming::EnumerateIntervals</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a30c9f32df81a8b04a88ff77d4b1ed99f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PerformanceTiming::CPerformanceStat::IsTouched</definition>
        <argsstring>() const </argsstring>
        <name>IsTouched</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="369" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="369" bodyend="372"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad5e31f07a31b22c339ee7b6242b6cd04" compoundref="src_2_performance_timing_8h" startline="394">m_bTouched</references>
        <referencedby refid="class_c_performance_timing_1ac08c7af33d9cce3d7276af1ef5eacee4" compoundref="src_2_performance_timing_8cpp" startline="403" endline="413">CPerformanceTiming::LookupInterval</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1ac49696dfa0ed2caeb759cfd45071f11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void PerformanceTiming::CPerformanceStat::HardReset</definition>
        <argsstring>()=0</argsstring>
        <name>HardReset</name>
        <reimplementedby refid="class_performance_timing_1_1_c_counter_1ae5c3459a0fed610457a312ea0aeaa9a4">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_counter_1ae5c3459a0fed610457a312ea0aeaa9a4">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_pack_counter_1a8c09ea2723fddeb4fee5dec62eafce80">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_pack_counter_1a8c09ea2723fddeb4fee5dec62eafce80">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb">HardReset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a424b2bbaa5f6457ea8990b33e943bddc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::CPerformanceStat::CPerformanceStat</definition>
        <argsstring>(const std::string &amp;sName)</argsstring>
        <name>CPerformanceStat</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a24d2ef1fb91699902def98e91ff3bf28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual PerformanceTiming::CPerformanceStat::~CPerformanceStat</definition>
        <argsstring>()</argsstring>
        <name>~CPerformanceStat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="353" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="353" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a757d210669b62d6ca1c1e9d94f81dc47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; PerformanceTiming::CPerformanceStat::Name</definition>
        <argsstring>() const </argsstring>
        <name>Name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1ad29415a1240f66800c4330e2053c0dd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* PerformanceTiming::CPerformanceStat::GetFolderName</definition>
        <argsstring>() const </argsstring>
        <name>GetFolderName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="359" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="359" bodyend="362"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a8ed9e0f8cb2f9c740d654523e2147468" compoundref="src_2_performance_timing_8h" startline="392">m_sFolderName</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a6cb5b9cb52e92cbd593b1fbb8a1a37cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="src_2_performance_timing_fwd_decl_8h_1abeb679dbf226046cf865060f1ee6398f" kindref="member">CRC_ID</ref></type>
        <definition>CRC_ID PerformanceTiming::CPerformanceStat::GetFolderNameCRC</definition>
        <argsstring>() const </argsstring>
        <name>GetFolderNameCRC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="364" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="364" bodyend="367"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1a0e2b11d7f9ce826ac5b9512f92a94340" compoundref="src_2_performance_timing_8h" startline="393">m_FolderNameCRC</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a30c9f32df81a8b04a88ff77d4b1ed99f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PerformanceTiming::CPerformanceStat::IsTouched</definition>
        <argsstring>() const </argsstring>
        <name>IsTouched</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="369" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="369" bodyend="372"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad5e31f07a31b22c339ee7b6242b6cd04" compoundref="src_2_performance_timing_8h" startline="394">m_bTouched</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1ac49696dfa0ed2caeb759cfd45071f11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void PerformanceTiming::CPerformanceStat::HardReset</definition>
        <argsstring>()=0</argsstring>
        <name>HardReset</name>
        <reimplementedby refid="class_performance_timing_1_1_c_counter_1ae5c3459a0fed610457a312ea0aeaa9a4">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_counter_1ae5c3459a0fed610457a312ea0aeaa9a4">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_pack_counter_1a8c09ea2723fddeb4fee5dec62eafce80">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_pack_counter_1a8c09ea2723fddeb4fee5dec62eafce80">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb">HardReset</reimplementedby>
        <reimplementedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb">HardReset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="374" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a8759102951a2b02084f33c6565e1b9d4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CPerformanceStat::Touch</definition>
        <argsstring>()</argsstring>
        <name>Touch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="378" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="378" bodyend="381"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad5e31f07a31b22c339ee7b6242b6cd04" compoundref="src_2_performance_timing_8h" startline="394">m_bTouched</references>
        <referencedby refid="class_performance_timing_1_1_c_counter_1a53a30d36a3c890fecfa8c5792de1dba8" compoundref="src_2_performance_timing_8h" startline="428" endline="432">PerformanceTiming::CCounter::Add</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_counter_1afa98a57c5f1445e285e514f641932a53" compoundref="src_2_performance_timing_8h" startline="440" endline="444">PerformanceTiming::CCounter::Decrement</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_counter_1a314eccf6570ef3d8ee28810158b08b98" compoundref="src_2_performance_timing_8h" startline="434" endline="438">PerformanceTiming::CCounter::Increment</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_counter_1ad60d6b380bb7e437b0ddc999a6b30a38" compoundref="src_2_performance_timing_8h" startline="422" endline="426">PerformanceTiming::CCounter::SetValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CPerformanceStat::ResetTouch</definition>
        <argsstring>()</argsstring>
        <name>ResetTouch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="382" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="382" bodyend="385"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad5e31f07a31b22c339ee7b6242b6cd04" compoundref="src_2_performance_timing_8h" startline="394">m_bTouched</references>
        <referencedby refid="class_performance_timing_1_1_c_counter_1ae5c3459a0fed610457a312ea0aeaa9a4" compoundref="src_2_performance_timing_8h" startline="411" endline="415">PerformanceTiming::CCounter::HardReset</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a7b0c198266dedd5af83af8c15d0e1bdb" compoundref="src_2_performance_timing_8h" startline="606" endline="618">PerformanceTiming::CInterval::HardReset</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1ad9d23cd316f85d975cb7cb4cdfb30979" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CPerformanceStat::DoSetFolderName</definition>
        <argsstring>(const char *szFolderName)</argsstring>
        <name>DoSetFolderName</name>
        <param>
          <type>const char *</type>
          <declname>szFolderName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="387" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="759" bodyend="767"/>
        <references refid="namespace_performance_timing_1aaa1359d75567ed83fbfbfcfbfc7563d1" compoundref="_performacen_timing_mgr_8cpp" startline="80" endline="111">PerformanceTiming::CRCString</references>
        <referencedby refid="class_c_performance_timing_1ad185bb86b437ea3a1847e57af28d5ea8" compoundref="src_2_performance_timing_8cpp" startline="342" endline="355">CPerformanceTiming::CPerformanceTiming</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_counter_1a52abe54853cf495d4b524746c77b9a96" compoundref="src_2_performance_timing_8h" startline="466" endline="470">PerformanceTiming::CCounter::SetFolderName</referencedby>
        <referencedby refid="class_performance_timing_1_1_c_interval_1a3572cb5c021a91c7708b898159a62fdb" compoundref="src_2_performance_timing_8h" startline="744" endline="748">PerformanceTiming::CInterval::SetFolderName</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a007f1a93611053b600a6e50bfbc88d61" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CPerformanceStat::DoSetFolderFlag</definition>
        <argsstring>(int iFlag)</argsstring>
        <name>DoSetFolderFlag</name>
        <param>
          <type>int</type>
          <declname>iFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="388" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="769" bodyend="786"/>
        <references refid="namespace_performance_timing_1aaa1359d75567ed83fbfbfcfbfc7563d1" compoundref="_performacen_timing_mgr_8cpp" startline="80" endline="111">PerformanceTiming::CRCString</references>
        <referencedby refid="class_performance_timing_1_1_c_counter_1a590ef2c0bb1ad04bd432e6606867b5bb" compoundref="src_2_performance_timing_8h" startline="472" endline="476">PerformanceTiming::CCounter::SetFolderName</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a8759102951a2b02084f33c6565e1b9d4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CPerformanceStat::Touch</definition>
        <argsstring>()</argsstring>
        <name>Touch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="378" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="378" bodyend="381"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad5e31f07a31b22c339ee7b6242b6cd04" compoundref="src_2_performance_timing_8h" startline="394">m_bTouched</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CPerformanceStat::ResetTouch</definition>
        <argsstring>()</argsstring>
        <name>ResetTouch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="382" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="382" bodyend="385"/>
        <references refid="class_performance_timing_1_1_c_performance_stat_1ad5e31f07a31b22c339ee7b6242b6cd04" compoundref="src_2_performance_timing_8h" startline="394">m_bTouched</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1ad9d23cd316f85d975cb7cb4cdfb30979" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CPerformanceStat::DoSetFolderName</definition>
        <argsstring>(const char *szFolderName)</argsstring>
        <name>DoSetFolderName</name>
        <param>
          <type>const char *</type>
          <declname>szFolderName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_c_performance_stat_1a007f1a93611053b600a6e50bfbc88d61" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::CPerformanceStat::DoSetFolderFlag</definition>
        <argsstring>(int iFlag)</argsstring>
        <name>DoSetFolderFlag</name>
        <param>
          <type>int</type>
          <declname>iFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="388" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base performance stat </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1057">
        <label>PerformanceTiming::CInterval</label>
        <link refid="class_performance_timing_1_1_c_interval"/>
        <childnode refid="1054" relation="public-inheritance">
        </childnode>
        <childnode refid="1054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1055">
        <label>PerformanceTiming::CCounter</label>
        <link refid="class_performance_timing_1_1_c_counter"/>
        <childnode refid="1054" relation="public-inheritance">
        </childnode>
        <childnode refid="1054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1056">
        <label>PerformanceTiming::CHistoryCounter</label>
        <link refid="class_performance_timing_1_1_c_history_counter"/>
        <childnode refid="1055" relation="public-inheritance">
        </childnode>
        <childnode refid="1055" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1058">
        <label>PerformanceTiming::CPackCounter</label>
        <link refid="class_performance_timing_1_1_c_pack_counter"/>
        <childnode refid="1054" relation="public-inheritance">
        </childnode>
        <childnode refid="1054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1054">
        <label>PerformanceTiming::CPerformanceStat</label>
        <link refid="class_performance_timing_1_1_c_performance_stat"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1061">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="1059">
        <label>PerformanceTiming::CPerformanceStat</label>
        <link refid="class_performance_timing_1_1_c_performance_stat"/>
        <childnode refid="1060" relation="usage">
          <edgelabel>m_sFolderName</edgelabel>
          <edgelabel>m_sName</edgelabel>
        </childnode>
      </node>
      <node id="1060">
        <label>std::string</label>
        <childnode refid="1061" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="350" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="349" bodyend="395"/>
    <listofallmembers>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a424b2bbaa5f6457ea8990b33e943bddc" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>CPerformanceStat</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a424b2bbaa5f6457ea8990b33e943bddc" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>CPerformanceStat</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a007f1a93611053b600a6e50bfbc88d61" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>DoSetFolderFlag</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a007f1a93611053b600a6e50bfbc88d61" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>DoSetFolderFlag</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad9d23cd316f85d975cb7cb4cdfb30979" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>DoSetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad9d23cd316f85d975cb7cb4cdfb30979" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>DoSetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad29415a1240f66800c4330e2053c0dd1" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>GetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad29415a1240f66800c4330e2053c0dd1" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>GetFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a6cb5b9cb52e92cbd593b1fbb8a1a37cb" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>GetFolderNameCRC</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a6cb5b9cb52e92cbd593b1fbb8a1a37cb" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>GetFolderNameCRC</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ac49696dfa0ed2caeb759cfd45071f11f" prot="public" virt="pure-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>HardReset</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ac49696dfa0ed2caeb759cfd45071f11f" prot="public" virt="pure-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>HardReset</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a30c9f32df81a8b04a88ff77d4b1ed99f" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>IsTouched</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a30c9f32df81a8b04a88ff77d4b1ed99f" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>IsTouched</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1ad5e31f07a31b22c339ee7b6242b6cd04" prot="private" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>m_bTouched</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a0e2b11d7f9ce826ac5b9512f92a94340" prot="private" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>m_FolderNameCRC</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a8ed9e0f8cb2f9c740d654523e2147468" prot="private" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>m_sFolderName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a258b61031576bcc6a3e15b583c75a6cc" prot="private" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>m_sName</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a52826ace51151b5511dc91d2bff39a4a" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>Name</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a757d210669b62d6ca1c1e9d94f81dc47" prot="public" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>Name</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>ResetTouch</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a0d1bd25e48aca6da7830c315e0568181" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>ResetTouch</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a8759102951a2b02084f33c6565e1b9d4" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>Touch</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a8759102951a2b02084f33c6565e1b9d4" prot="protected" virt="non-virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>Touch</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a24d2ef1fb91699902def98e91ff3bf28" prot="public" virt="virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>~CPerformanceStat</name></member>
      <member refid="class_performance_timing_1_1_c_performance_stat_1a24d2ef1fb91699902def98e91ff3bf28" prot="public" virt="virtual"><scope>PerformanceTiming::CPerformanceStat</scope><name>~CPerformanceStat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
