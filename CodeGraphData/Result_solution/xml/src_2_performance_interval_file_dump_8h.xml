<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="src_2_performance_interval_file_dump_8h" kind="file">
    <compoundname>PerformanceIntervalFileDump.h</compoundname>
    <includes refid="src_2_performance_timing_8h" local="yes">PerformanceTiming.h</includes>
    <includes local="yes">EsString.h</includes>
    <includedby refid="src_2_performance_interval_file_dump_8cpp" local="yes">RaceServer/src/PerformanceIntervalFileDump.cpp</includedby>
    <includedby refid="src_2_race_server_8cpp" local="yes">RaceServer/src/RaceServer.cpp</includedby>
    <includedby refid="src_2_race_service_8cpp" local="yes">RaceServer/src/RaceService.cpp</includedby>
    <incdepgraph>
      <node id="46335">
        <label>list</label>
      </node>
      <node id="46329">
        <label>locale</label>
      </node>
      <node id="46339">
        <label>queue</label>
      </node>
      <node id="46313">
        <label>PerfDef.inl</label>
        <link refid="_perf_def_8inl"/>
      </node>
      <node id="46333">
        <label>limits</label>
      </node>
      <node id="46315">
        <label>SeMemPool.h</label>
        <link refid="_se_mem_pool_8h"/>
        <childnode refid="46316" relation="include">
        </childnode>
        <childnode refid="46342" relation="include">
        </childnode>
        <childnode refid="46323" relation="include">
        </childnode>
      </node>
      <node id="46318">
        <label>windows.h</label>
      </node>
      <node id="46323">
        <label>assert.h</label>
      </node>
      <node id="46321">
        <label>stdlib.h</label>
      </node>
      <node id="46342">
        <label>EsLock.h</label>
      </node>
      <node id="46325">
        <label>cmath</label>
      </node>
      <node id="46343">
        <label>EsThread.h</label>
      </node>
      <node id="46332">
        <label>string</label>
      </node>
      <node id="46336">
        <label>map</label>
      </node>
      <node id="46320">
        <label>conio.h</label>
      </node>
      <node id="46306">
        <label>PerformanceTiming.h</label>
        <link refid="src_2_performance_timing_8h"/>
        <childnode refid="46307" relation="include">
        </childnode>
        <childnode refid="46308" relation="include">
        </childnode>
        <childnode refid="46309" relation="include">
        </childnode>
        <childnode refid="46314" relation="include">
        </childnode>
        <childnode refid="46343" relation="include">
        </childnode>
        <childnode refid="46344" relation="include">
        </childnode>
        <childnode refid="46315" relation="include">
        </childnode>
        <childnode refid="46328" relation="include">
        </childnode>
        <childnode refid="46335" relation="include">
        </childnode>
      </node>
      <node id="46319">
        <label>direct.h</label>
      </node>
      <node id="46330">
        <label>fstream</label>
      </node>
      <node id="46317">
        <label>winsock2.h</label>
      </node>
      <node id="46310">
        <label>TeMisc.h</label>
        <link refid="_te_misc_8h"/>
        <childnode refid="46311" relation="include">
        </childnode>
      </node>
      <node id="46344">
        <label>SeThreadMsg.h</label>
        <link refid="_se_thread_msg_8h"/>
        <childnode refid="46316" relation="include">
        </childnode>
        <childnode refid="46342" relation="include">
        </childnode>
      </node>
      <node id="46311">
        <label>string.h</label>
      </node>
      <node id="46312">
        <label>PerfMacro.h</label>
        <link refid="_perf_macro_8h"/>
      </node>
      <node id="46326">
        <label>ctime</label>
      </node>
      <node id="46334">
        <label>vector</label>
      </node>
      <node id="46340">
        <label>new</label>
      </node>
      <node id="46331">
        <label>sstream</label>
      </node>
      <node id="46345">
        <label>EsString.h</label>
      </node>
      <node id="46316">
        <label>SeInclude.h</label>
        <link refid="_se_include_8h"/>
        <childnode refid="46317" relation="include">
        </childnode>
        <childnode refid="46318" relation="include">
        </childnode>
        <childnode refid="46319" relation="include">
        </childnode>
        <childnode refid="46320" relation="include">
        </childnode>
        <childnode refid="46321" relation="include">
        </childnode>
        <childnode refid="46322" relation="include">
        </childnode>
        <childnode refid="46323" relation="include">
        </childnode>
        <childnode refid="46324" relation="include">
        </childnode>
        <childnode refid="46325" relation="include">
        </childnode>
        <childnode refid="46326" relation="include">
        </childnode>
        <childnode refid="46327" relation="include">
        </childnode>
        <childnode refid="46311" relation="include">
        </childnode>
        <childnode refid="46307" relation="include">
        </childnode>
        <childnode refid="46328" relation="include">
        </childnode>
        <childnode refid="46329" relation="include">
        </childnode>
        <childnode refid="46330" relation="include">
        </childnode>
        <childnode refid="46331" relation="include">
        </childnode>
        <childnode refid="46332" relation="include">
        </childnode>
        <childnode refid="46333" relation="include">
        </childnode>
        <childnode refid="46334" relation="include">
        </childnode>
        <childnode refid="46335" relation="include">
        </childnode>
        <childnode refid="46336" relation="include">
        </childnode>
        <childnode refid="46337" relation="include">
        </childnode>
        <childnode refid="46338" relation="include">
        </childnode>
        <childnode refid="46339" relation="include">
        </childnode>
        <childnode refid="46340" relation="include">
        </childnode>
        <childnode refid="46341" relation="include">
        </childnode>
      </node>
      <node id="46322">
        <label>math.h</label>
      </node>
      <node id="46307">
        <label>EsType.h</label>
      </node>
      <node id="46324">
        <label>cctype</label>
      </node>
      <node id="46305">
        <label>RaceServer/src/PerformanceIntervalFileDump.h</label>
        <link refid="src/PerformanceIntervalFileDump.h"/>
        <childnode refid="46306" relation="include">
        </childnode>
        <childnode refid="46345" relation="include">
        </childnode>
      </node>
      <node id="46337">
        <label>unordered_map</label>
      </node>
      <node id="46308">
        <label>EsPrerequisites.h</label>
      </node>
      <node id="46309">
        <label>PerformacenTimingMgr.h</label>
        <link refid="_performacen_timing_mgr_8h"/>
        <childnode refid="46307" relation="include">
        </childnode>
        <childnode refid="46310" relation="include">
        </childnode>
        <childnode refid="46312" relation="include">
        </childnode>
        <childnode refid="46313" relation="include">
        </childnode>
      </node>
      <node id="46341">
        <label>SeDefine.h</label>
        <link refid="_se_define_8h"/>
      </node>
      <node id="46338">
        <label>set</label>
      </node>
      <node id="46328">
        <label>algorithm</label>
      </node>
      <node id="46327">
        <label>stdio.h</label>
      </node>
      <node id="46314">
        <label>PerformanceTimingFwdDecl.h</label>
        <link refid="src_2_performance_timing_fwd_decl_8h"/>
        <childnode refid="46315" relation="include">
        </childnode>
        <childnode refid="46337" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="46349">
        <label>RaceServer/src/RaceService.cpp</label>
        <link refid="src_2_race_service_8cpp"/>
      </node>
      <node id="46347">
        <label>RaceServer/src/PerformanceIntervalFileDump.cpp</label>
        <link refid="src_2_performance_interval_file_dump_8cpp"/>
      </node>
      <node id="46348">
        <label>RaceServer/src/RaceServer.cpp</label>
        <link refid="src_2_race_server_8cpp"/>
      </node>
      <node id="46346">
        <label>RaceServer/src/PerformanceIntervalFileDump.h</label>
        <link refid="src/PerformanceIntervalFileDump.h"/>
        <childnode refid="46347" relation="include">
        </childnode>
        <childnode refid="46348" relation="include">
        </childnode>
        <childnode refid="46349" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_performance_interval_file_dump" prot="public">CPerformanceIntervalFileDump</innerclass>
    <innerclass refid="struct_c_performance_interval_file_dump_1_1_config" prot="public">CPerformanceIntervalFileDump::Config</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_PERFORMANCEINTERVALFILEDUMP_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_PERFORMANCEINTERVALFILEDUMP_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2_performance_timing_8h" kindref="compound">PerformanceTiming.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EsString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_c_performance_interval_file_dump" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_timing_sink" kindref="compound">CPerformanceTimingSink</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10" refid="struct_c_performance_interval_file_dump_1_1_config" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_performance_interval_file_dump_1_1_config" kindref="compound">Config</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a04e1f1e8bbd1895178e85d29884a553f" kindref="member">Config</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a04e1f1e8bbd1895178e85d29884a553f" kindref="member">Config</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1aed445527929b39ed8958e758483c622f" kindref="member">sApplicationName</ref>,<sp/>Float32<sp/>fInterval,<sp/>Float32<sp/>fThreashold,<sp/>UInt32<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a8c22950debba5d3dcbffa7dbc6630559" kindref="member">uMaxPacketSize</ref><sp/>=<sp/>50<sp/>*<sp/>1024,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWriteIntervalSec<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sInLogDir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Stats&quot;</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_c_performance_interval_file_dump_1_1_config_1a2facda1fab2bfa1a2b1e7831841eb4af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float32<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a2facda1fab2bfa1a2b1e7831841eb4af" kindref="member">fFileWriteIntervalSec</ref>;</highlight></codeline>
<codeline lineno="16" refid="struct_c_performance_interval_file_dump_1_1_config_1afe090bd9e357ab5e7c32366c66ffd786" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float32<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1afe090bd9e357ab5e7c32366c66ffd786" kindref="member">fFileWriteThresholdSec</ref>;</highlight></codeline>
<codeline lineno="17" refid="struct_c_performance_interval_file_dump_1_1_config_1a8c22950debba5d3dcbffa7dbc6630559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a8c22950debba5d3dcbffa7dbc6630559" kindref="member">uMaxPacketSize</ref>;</highlight></codeline>
<codeline lineno="18" refid="struct_c_performance_interval_file_dump_1_1_config_1aed445527929b39ed8958e758483c622f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1aed445527929b39ed8958e758483c622f" kindref="member">sApplicationName</ref>;</highlight></codeline>
<codeline lineno="19" refid="struct_c_performance_interval_file_dump_1_1_config_1a3a7791dc521b5c962129dac7d2441e63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1a3a7791dc521b5c962129dac7d2441e63" kindref="member">sLogDir</ref>;</highlight></codeline>
<codeline lineno="20" refid="struct_c_performance_interval_file_dump_1_1_config_1aa975b13670cc7ae2e93aa99a82e98b8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config_1aa975b13670cc7ae2e93aa99a82e98b8a" kindref="member">bWriteIntervalSec</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" kindref="member">CPerformanceIntervalFileDump</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config" kindref="compound">Config</ref>&amp;<sp/>rConfig<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1a5bbcd3f0b21aeec73935a61556a50ca3" kindref="member">~CPerformanceIntervalFileDump</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1aa76d178c06c25f4938cd3ef093bbaca1" kindref="member">Tick</ref>(<sp/>Float32<sp/>fDeltaTime<sp/>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1ab01ad3a269493af0dfccff5f879f54fb" kindref="member">BeginTrack</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1acf5a5fe5b1304c36ee5ccaa5a12134f1" kindref="member">EndTrack</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1ad2591c1146f6080e163195b2eb9a0b16" kindref="member">ForceDump</ref>();</highlight></codeline>
<codeline lineno="31" refid="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1aac3ed97fc2c98125c1a1f606e15e893d" kindref="member">SetOwner</ref>(<ref refid="class_i_performace_timing" kindref="compound">IPerformaceTiming</ref>*<sp/>pOwner)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" kindref="member">m_pOwner</ref><sp/>=<sp/>(<ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref>*)pOwner;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a3829ecf442c1b76c659fc938e097344b" kindref="member">CPerformanceIntervalFileDump</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref>&amp;<sp/>);<sp/></highlight><highlight class="comment">//<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref>&amp;<sp/><ref refid="class_c_performance_interval_file_dump_1a998e48e519fae35efc3e8d41236c44a8" kindref="member">operator= </ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump" kindref="compound">CPerformanceIntervalFileDump</ref>&amp;<sp/>);<sp/></highlight><highlight class="comment">//<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref>*<sp/><ref refid="class_c_performance_interval_file_dump_1a30bec50a801730bfb3f5282a4a98ef36" kindref="member">GetOwnerInst</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" kindref="member">m_pOwner</ref>;<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1aa80c9588f56f98ff1769995fe5a008d8" kindref="member">ResetNextWriteTime</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" kindref="member">DumpIntervals</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bThresholdDump<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1a67c0021f0948c6f07f30712ee3e89d3a" kindref="member">DumpIntervalLine</ref>(<sp/>Es::String&amp;<sp/>sText,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFoldered,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFolder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Es::String&amp;<sp/>sName,<sp/>Float64<sp/>dTimeMS,<sp/>UInt32<sp/>uEntries,<sp/>Float64<sp/>fPercentage,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOddLine,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bClosed<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1abf157a01cdb9b33f0d4d2a72f7216a64" kindref="member">DumpCounterLine</ref>(Es::String&amp;<sp/>sText,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFoldered,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFolder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Es::String&amp;<sp/>sName,<sp/>UInt32<sp/>uValue,<sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/>uTotal,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHistory,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOddLine);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1ad16321414825be6788d49be80c7b439a" kindref="member">DumpHistoryIntervalLine</ref>(<sp/>Es::String&amp;<sp/>sText,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Es::String&amp;<sp/>sName,<sp/>Float64<sp/>dTimeMS,<sp/>UInt32<sp/>uEntries,<sp/>Float64<sp/>dMax,<sp/>Float64<sp/>dMin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOddLine<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_performance_interval_file_dump_1aa22e9c66cba08ebc30ecf4c113e72620" kindref="member">DumpPacketCounterLine</ref>(Es::String&amp;<sp/>sText,UInt32<sp/>packtID,UInt32<sp/>uSize,<sp/>UInt32<sp/>uCount,<sp/>UInt32<sp/>uTotal,<sp/>UInt32<sp/>uRealTotal,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOddLine);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_performance_interval_file_dump_1_1_config" kindref="compound">Config</ref><sp/><ref refid="class_c_performance_interval_file_dump_1acb46ba80c2360c33eaa12be44f1d702a" kindref="member">m_Config</ref>;</highlight></codeline>
<codeline lineno="49" refid="class_c_performance_interval_file_dump_1a679fa8671e40545dc721cde10dff67e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Float32<sp/><ref refid="class_c_performance_interval_file_dump_1a679fa8671e40545dc721cde10dff67e0" kindref="member">m_fNextWriteTime</ref>;</highlight></codeline>
<codeline lineno="50" refid="class_c_performance_interval_file_dump_1a34b2cc6bc36bc3ed9e0167ff294d679f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Float32<sp/><ref refid="class_c_performance_interval_file_dump_1a34b2cc6bc36bc3ed9e0167ff294d679f" kindref="member">m_fLastDumpDeltaTime</ref>;</highlight></codeline>
<codeline lineno="51" refid="class_c_performance_interval_file_dump_1a04c5d92c6ccc83a0d20a3bfc3dc12d69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_performance_interval_file_dump_1a04c5d92c6ccc83a0d20a3bfc3dc12d69" kindref="member">m_sStatsFolder</ref>;</highlight></codeline>
<codeline lineno="52" refid="class_c_performance_interval_file_dump_1a37a429eecc533d097a8a8c08b95a0d92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Float64<sp/><ref refid="class_c_performance_interval_file_dump_1a37a429eecc533d097a8a8c08b95a0d92" kindref="member">m_dMaxDumpTimeSec</ref>;</highlight></codeline>
<codeline lineno="53" refid="class_c_performance_interval_file_dump_1a0c46a1a22b96cd70d2a0a36b377babbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Float64<sp/><ref refid="class_c_performance_interval_file_dump_1a0c46a1a22b96cd70d2a0a36b377babbd" kindref="member">m_dLastDumpTimeSec</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>intervals<sp/><sp/>in<sp/>a<sp/>period.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_c_performance_interval_file_dump_1a83376eda7e57dde6a321a2d05f9b5c1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a83376eda7e57dde6a321a2d05f9b5c1f" kindref="member">m_bTracking</ref>;</highlight></codeline>
<codeline lineno="57" refid="class_c_performance_interval_file_dump_1a99b0b3df10615151335ebb9e1175dd2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/><sp/><ref refid="class_c_performance_interval_file_dump_1a99b0b3df10615151335ebb9e1175dd2b" kindref="member">m_tmBeginTrack</ref>;</highlight></codeline>
<codeline lineno="58" refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_performance_timing" kindref="compound">CPerformanceTiming</ref>*<sp/><ref refid="class_c_performance_interval_file_dump_1a76e0fae9b5de6be42971c25937f4645b" kindref="member">m_pOwner</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceIntervalFileDump.h"/>
  </compounddef>
</doxygen>
