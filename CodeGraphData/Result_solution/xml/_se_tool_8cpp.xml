<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_se_tool_8cpp" kind="file">
    <compoundname>SeTool.cpp</compoundname>
    <includes refid="_se_tool_8h" local="yes">SeTool.h</includes>
    <includes refid="_se_ptl_define_8h" local="yes">SePtlDefine.h</includes>
    <incdepgraph>
      <node id="109595">
        <label>list</label>
      </node>
      <node id="109572">
        <label>F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp</label>
        <link refid="SeTool.cpp"/>
        <childnode refid="109573" relation="include">
        </childnode>
        <childnode refid="109606" relation="include">
        </childnode>
      </node>
      <node id="109589">
        <label>locale</label>
      </node>
      <node id="109599">
        <label>queue</label>
      </node>
      <node id="109593">
        <label>limits</label>
      </node>
      <node id="109608">
        <label>SePtlCommDefine.h</label>
        <link refid="_se_ptl_comm_define_8h"/>
      </node>
      <node id="109609">
        <label>SeMemPool.h</label>
        <link refid="_se_mem_pool_8h"/>
        <childnode refid="109574" relation="include">
        </childnode>
        <childnode refid="109610" relation="include">
        </childnode>
        <childnode refid="109581" relation="include">
        </childnode>
      </node>
      <node id="109576">
        <label>windows.h</label>
      </node>
      <node id="109581">
        <label>assert.h</label>
      </node>
      <node id="109579">
        <label>stdlib.h</label>
      </node>
      <node id="109610">
        <label>EsLock.h</label>
      </node>
      <node id="109583">
        <label>cmath</label>
      </node>
      <node id="109592">
        <label>string</label>
      </node>
      <node id="109596">
        <label>map</label>
      </node>
      <node id="109578">
        <label>conio.h</label>
      </node>
      <node id="109607">
        <label>SePtlRandomNumDef.h</label>
        <link refid="_se_ptl_random_num_def_8h"/>
      </node>
      <node id="109577">
        <label>direct.h</label>
      </node>
      <node id="109590">
        <label>fstream</label>
      </node>
      <node id="109573">
        <label>SeTool.h</label>
        <link refid="_se_tool_8h"/>
        <childnode refid="109574" relation="include">
        </childnode>
        <childnode refid="109602" relation="include">
        </childnode>
        <childnode refid="109603" relation="include">
        </childnode>
        <childnode refid="109604" relation="include">
        </childnode>
        <childnode refid="109587" relation="include">
        </childnode>
        <childnode refid="109605" relation="include">
        </childnode>
      </node>
      <node id="109575">
        <label>winsock2.h</label>
      </node>
      <node id="109604">
        <label>TeMisc.h</label>
        <link refid="_te_misc_8h"/>
        <childnode refid="109586" relation="include">
        </childnode>
      </node>
      <node id="109586">
        <label>string.h</label>
      </node>
      <node id="109584">
        <label>ctime</label>
      </node>
      <node id="109594">
        <label>vector</label>
      </node>
      <node id="109600">
        <label>new</label>
      </node>
      <node id="109606">
        <label>SePtlDefine.h</label>
        <link refid="_se_ptl_define_8h"/>
        <childnode refid="109574" relation="include">
        </childnode>
        <childnode refid="109602" relation="include">
        </childnode>
        <childnode refid="109573" relation="include">
        </childnode>
        <childnode refid="109607" relation="include">
        </childnode>
        <childnode refid="109608" relation="include">
        </childnode>
        <childnode refid="109609" relation="include">
        </childnode>
      </node>
      <node id="109602">
        <label>SeShareDef.h</label>
        <link refid="_se_share_def_8h"/>
        <childnode refid="109574" relation="include">
        </childnode>
      </node>
      <node id="109591">
        <label>sstream</label>
      </node>
      <node id="109605">
        <label>EsString.h</label>
      </node>
      <node id="109574">
        <label>SeInclude.h</label>
        <link refid="_se_include_8h"/>
        <childnode refid="109575" relation="include">
        </childnode>
        <childnode refid="109576" relation="include">
        </childnode>
        <childnode refid="109577" relation="include">
        </childnode>
        <childnode refid="109578" relation="include">
        </childnode>
        <childnode refid="109579" relation="include">
        </childnode>
        <childnode refid="109580" relation="include">
        </childnode>
        <childnode refid="109581" relation="include">
        </childnode>
        <childnode refid="109582" relation="include">
        </childnode>
        <childnode refid="109583" relation="include">
        </childnode>
        <childnode refid="109584" relation="include">
        </childnode>
        <childnode refid="109585" relation="include">
        </childnode>
        <childnode refid="109586" relation="include">
        </childnode>
        <childnode refid="109587" relation="include">
        </childnode>
        <childnode refid="109588" relation="include">
        </childnode>
        <childnode refid="109589" relation="include">
        </childnode>
        <childnode refid="109590" relation="include">
        </childnode>
        <childnode refid="109591" relation="include">
        </childnode>
        <childnode refid="109592" relation="include">
        </childnode>
        <childnode refid="109593" relation="include">
        </childnode>
        <childnode refid="109594" relation="include">
        </childnode>
        <childnode refid="109595" relation="include">
        </childnode>
        <childnode refid="109596" relation="include">
        </childnode>
        <childnode refid="109597" relation="include">
        </childnode>
        <childnode refid="109598" relation="include">
        </childnode>
        <childnode refid="109599" relation="include">
        </childnode>
        <childnode refid="109600" relation="include">
        </childnode>
        <childnode refid="109601" relation="include">
        </childnode>
      </node>
      <node id="109580">
        <label>math.h</label>
      </node>
      <node id="109587">
        <label>EsType.h</label>
      </node>
      <node id="109582">
        <label>cctype</label>
      </node>
      <node id="109603">
        <label>SeToolTemplate.inl</label>
        <link refid="_se_tool_template_8inl"/>
      </node>
      <node id="109597">
        <label>unordered_map</label>
      </node>
      <node id="109601">
        <label>SeDefine.h</label>
        <link refid="_se_define_8h"/>
      </node>
      <node id="109598">
        <label>set</label>
      </node>
      <node id="109588">
        <label>algorithm</label>
      </node>
      <node id="109585">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_se_tool_8cpp_1a52f512edcd644e1f2cc38ecee5a7d3f7" prot="public" static="no">
        <name>COMPRESS_NEED_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="7" column="9" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_se_tool_8cpp_1afe24c9b45564284b7a60063a970b89f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StrCat</definition>
        <argsstring>(char *dest, int iDstSize, const char *src)</argsstring>
        <name>StrCat</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDstSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="34" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a4d30fbe56257fc998ebc1346e53be0d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StrCpy</definition>
        <argsstring>(char *pcDst, int iDstSize, const char *pcSrc)</argsstring>
        <name>StrCpy</name>
        <param>
          <type>char *</type>
          <declname>pcDst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDstSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcSrc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="50" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="50" bodyend="73"/>
        <referencedby refid="class_se_match_recon_mgr_1af056e087b3519aa3689d68e3391be1ec" compoundref="src_2_se_recon_mgr_8cpp" startline="105" endline="120">SeMatchReconMgr::AddPlayer</referencedby>
        <referencedby refid="class_se_match_recon_mgr_1a88d370698d760336a8686f04dd76bf5a" compoundref="src_2_se_recon_mgr_8cpp" startline="384" endline="402">SeMatchReconMgr::AddReconPlayerName</referencedby>
        <referencedby refid="class_se_session_mgr_1ab3c5fb17df661561d719aced0786de4d" compoundref="_se_session_mgr_8cpp" startline="15" endline="42">SeSessionMgr::AddSession</referencedby>
        <referencedby refid="class_se_open_room_mgr_1aa3b4e4e2f1f984e745913b387bab33b2" compoundref="_src_2_se_open_room_mgr_8cpp" startline="215" endline="255">SeOpenRoomMgr::ConvOpenRoomInfo</referencedby>
        <referencedby refid="struct_se_race_history_1af40c782a058f07df697076c133006c7e" compoundref="_world_server_2_src_2_se_player_def_8h" startline="151" endline="162">SeRaceHistory::Copy</referencedby>
        <referencedby refid="class_nexus_link_user_mgr_1ad829b9e5ae0d954525c2837722caea02" compoundref="_nexus_link_user_mgr_8cpp" startline="14" endline="39">NexusLinkUserMgr::create</referencedby>
        <referencedby refid="class_nexus_measure_mgr_1a8da7b8ef87b03da6cff5c0e5ea0d443a" compoundref="_nexus_measure_mgr_8cpp" startline="53" endline="68">NexusMeasureMgr::create_guest_measure</referencedby>
        <referencedby refid="class_nexus_team_mgr_1ae89d8b20029f7dc694c6c40fed77830e" compoundref="_nexus_team_mgr_8cpp" startline="182" endline="201">NexusTeamMgr::create_member</referencedby>
        <referencedby refid="class_nexus_measure_mgr_1ac797058e0804801316112ff29cae4c17" compoundref="_nexus_measure_mgr_8cpp" startline="36" endline="51">NexusMeasureMgr::create_user_measure</referencedby>
        <referencedby refid="class_race_detail_mgr_1a273160080ee8fa1de3ab7f8925bd70bd" compoundref="src_2_race_detail_mgr_8cpp" startline="38" endline="177">RaceDetailMgr::CreateRaceDetail</referencedby>
        <referencedby refid="_se_file_log_8h_1a7f202fba65dbbe3b72d6e01dbeb88440" compoundref="_se_file_log_8cpp" startline="359" endline="381">EnableFileLog</referencedby>
        <referencedby refid="struct_se_race_history_1a165b8a27038a590f785d34910ac8d3e3" compoundref="_world_server_2_src_2_se_player_def_8h" startline="164" endline="175">SeRaceHistory::GetPtlRaceHistory</referencedby>
        <referencedby refid="_src_2_item_mgr_8cpp_1a78c80ff6e034e9e6ba742903638458d5" compoundref="_src_2_item_mgr_8cpp" startline="268" endline="291">GetRangeValue</referencedby>
        <referencedby refid="class_se_race_room_mgr_1a91b90b2efd0ec6bdb7b8a3a85f485caf" compoundref="src_2_se_race_room_mgr_8cpp" startline="159" endline="238">SeRaceRoomMgr::GetReloadRoomInfo</referencedby>
        <referencedby refid="class_se_race_record_1a33e29c4b46647b5a8bd73da582eb87b7" compoundref="_se_race_record_8cpp" startline="1434" endline="1492">SeRaceRecord::GetReplayInfo</referencedby>
        <referencedby refid="class_se_file_log_1af463767ecda1363cd0525687cfd8db26" compoundref="_se_file_log_8cpp" startline="96" endline="128">SeFileLog::Initialize</referencedby>
        <referencedby refid="class_block_server_1a6e2911039ff304a9361902aa526575d5" compoundref="_src_2_se_block_other_8cpp" startline="105" endline="148">BlockServer::KickPlayerByID</referencedby>
        <referencedby refid="struct_ladder_rank_item_1ac72937c2cf29094e8c07b84cd5577a7d" compoundref="_src_2_ladder_rank_mgr_8cpp" startline="90" endline="99">LadderRankItem::LadderRankItem</referencedby>
        <referencedby refid="struct_se_char_ladder_data_1a61b1d16d1baff6028b13197b3f9bfe3a" compoundref="_world_server_2_src_2_se_player_def_8h" startline="357" endline="365">SeCharLadderData::Load</referencedby>
        <referencedby refid="class_se_d_b_mem_mgr_1a68975dbc86371d4a8cc5b669d3087c6b" compoundref="_se_d_b_mem_mgr_8cpp" startline="166" endline="212">SeDBMemMgr::LoadConfig</referencedby>
        <referencedby refid="class_town_server_1a27d439b428c323317bec5900666bc1af" compoundref="_src_2_town_server_8cpp" startline="37" endline="102">TownServer::LoadConfig</referencedby>
        <referencedby refid="class_watch_server_1_1_c_watch_server_1a02d324973f10d692522b461a7004be78" compoundref="_watch_server_8cpp" startline="351" endline="455">WatchServer::CWatchServer::LoadConfig</referencedby>
        <referencedby refid="class_world_server_1afb9dc70c7da676b263cd148880a6a8d3" compoundref="_src_2_world_server_8cpp" startline="99" endline="230">WorldServer::LoadConfig</referencedby>
        <referencedby refid="class_d_b_server_1af27177a43f8d8233fe6a50cc34aad973" compoundref="_src_2_d_b_server_8cpp" startline="557" endline="706">DBServer::LoadConfig</referencedby>
        <referencedby refid="class_login_server_1a3abc217e83954813cf24dae1e6a7e92a" compoundref="_src_2_login_server_8cpp" startline="137" endline="218">LoginServer::LoadDynamicConfig</referencedby>
        <referencedby refid="struct_ladder_rank_item_1ae395ea0b65b0f2783e1bc81013e81560" compoundref="_src_2_ladder_rank_mgr_8cpp" startline="101" endline="109">LadderRankItem::LoadInfo</referencedby>
        <referencedby refid="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" compoundref="src_2_race_server_8cpp" startline="621" endline="925">RaceServer::LoadRSTempConfig</referencedby>
        <referencedby refid="_se_server_tool_8h_1a89dc0550e6e499cbeb3af03ae425da69" compoundref="_se_server_tool_8cpp" startline="142" endline="185">MkDir</referencedby>
        <referencedby refid="class_se_open_room_mgr_1a864ad73adcf4df7d2d3a7a11960d228c" compoundref="_src_2_se_open_room_mgr_8cpp" startline="101" endline="201">SeOpenRoomMgr::OnCreateRoom</referencedby>
        <referencedby refid="class_global_server_1aec57364bffa3037dc2ee400384568b81" compoundref="src_2_global_server_8cpp" startline="540" endline="611">GlobalServer::OnLoginQueryRet</referencedby>
        <referencedby refid="class_se_match_mgr_1a5b7155dca0f8b4e5d54b9785515de80e" compoundref="_src_2_se_match_mgr_8cpp" startline="233" endline="332">SeMatchMgr::OnMatchReq</referencedby>
        <referencedby refid="class_tcp_server_1a8d7adffedcab94bb6fdad94558f88d2b" compoundref="_tcp_server_8cpp" startline="307" endline="350">TcpServer::OnNetAccept</referencedby>
        <referencedby refid="class_d_b_server_1ac914e32e457b244642617264051415f6" compoundref="_src_2_d_b_server_8cpp" startline="202" endline="208">DBServer::OnNetAccept</referencedby>
        <referencedby refid="class_backend_server_1aa10a6b04eb7ac8d43709887ebb5014cd" compoundref="_backend_server_8cpp" startline="93" endline="101">BackendServer::OnNetAccept</referencedby>
        <referencedby refid="class_nexus_server_1aabab3ebbed8f7f2bab3339422aa537eb" compoundref="_nexus_server_8cpp" startline="135" endline="146">NexusServer::OnNetAccept</referencedby>
        <referencedby refid="class_watch_server_1_1_c_watch_server_1a89eb1d5a83320410e331532d79aa53fe" compoundref="_watch_server_8cpp" startline="592" endline="622">WatchServer::CWatchServer::OnNetAccept</referencedby>
        <referencedby refid="class_match_server_1a7d44410136314148817e0c71ef5388e4" compoundref="_src_2_match_server_8cpp" startline="403" endline="413">MatchServer::OnNetAccept</referencedby>
        <referencedby refid="class_race_server_1a8ebdffe0e60d02a88e21827d26953e70" compoundref="src_2_race_server_8cpp" startline="284" endline="316">RaceServer::OnNetAccept</referencedby>
        <referencedby refid="class_world_server_1aa3b2f5472af183963585425251ba944f" compoundref="_src_2_world_server_8cpp" startline="774" endline="785">WorldServer::OnNetAccept</referencedby>
        <referencedby refid="class_watch_server_1_1_c_watch_server_1a1ca64bea8b2d3bdb67b0b6666209230d" compoundref="_watch_server_8cpp" startline="780" endline="804">WatchServer::CWatchServer::OnPlayerConnected</referencedby>
        <referencedby refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" compoundref="src_2_race_server_8cpp" startline="1253" endline="1277">RaceServer::OnPlayerConnected</referencedby>
        <referencedby refid="class_se_race_mgr_1ab60ba508298450b49c72e0b5cd0c1b5e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="3017" endline="3070">SeRaceMgr::OnPlayerRaceViewBegin</referencedby>
        <referencedby refid="class_se_race_mgr_1a59c745d406675a73ec84583d6a5184db" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="2868" endline="3015">SeRaceMgr::OnPlayerReconBegin</referencedby>
        <referencedby refid="class_se_race_mgr_1a6f86cab772c6473217e3f4e3cfe06747" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1925" endline="2285">SeRaceMgr::OnRaceModeEnd</referencedby>
        <referencedby refid="class_se_race_query_mgr_1a619b9fbef8c53b61db7e3272cb157c60" compoundref="_src_2_se_race_query_mgr_8cpp" startline="162" endline="200">SeRaceQueryMgr::OnRaceSeatUpdateState</referencedby>
        <referencedby refid="class_se_race_query_mgr_1a4ac7ef2b2a7814bb1beb633b5058e783" compoundref="_src_2_se_race_query_mgr_8cpp" startline="128" endline="159">SeRaceQueryMgr::OnRaceSvrUpdateRoomLoadInfo</referencedby>
        <referencedby refid="class_se_race_query_mgr_1a65ecdc877600d45b47726af680c570bf" compoundref="_src_2_se_race_query_mgr_8cpp" startline="221" endline="251">SeRaceQueryMgr::OnReloadPlayerInfo</referencedby>
        <referencedby refid="class_se_player_1acc1f7a8663a77221dc8fcd9069ac39ed" compoundref="_world_server_2_src_2_se_player_8cpp" startline="318" endline="328">SePlayer::OnRenameEnd</referencedby>
        <referencedby refid="class_se_open_room_mgr_1addfded1afe02cbeb4fa1692fd1fd0931" compoundref="_src_2_se_open_room_mgr_8cpp" startline="833" endline="905">SeOpenRoomMgr::OnRoomInviteRspOk</referencedby>
        <referencedby refid="class_se_open_room_mgr_1afe2195e6282fc0d6b2f1260574537119" compoundref="_src_2_se_open_room_mgr_8cpp" startline="377" endline="455">SeOpenRoomMgr::OnRoomJoin</referencedby>
        <referencedby refid="class_se_open_room_mgr_1ad4834862a9ab46461087c42731178ac9" compoundref="_src_2_se_open_room_mgr_8cpp" startline="639" endline="761">SeOpenRoomMgr::OnRoomKickSomeone</referencedby>
        <referencedby refid="class_se_open_room_mgr_1ab755853f93f32227d5ce55fd9b9a5cff" compoundref="_src_2_se_open_room_mgr_8cpp" startline="573" endline="637">SeOpenRoomMgr::OnRoomSwitchSeat</referencedby>
        <referencedby refid="class_world_server_1a8e261cd6c4480be7f2765a794ec09d7e" compoundref="_src_2_se_world_logic_8cpp" startline="221" endline="242">WorldServer::OnSendBSRaceEndRace</referencedby>
        <referencedby refid="class_se_match_mgr_1a6252d5e57e70815a9e9f294239dd35ec" compoundref="_src_2_se_match_mgr_8cpp" startline="117" endline="163">SeMatchMgr::openRoom</referencedby>
        <referencedby refid="_se_server_tool_8h_1a4d2cad61065382371c4da0e13c6961b7" compoundref="_se_server_tool_8cpp" startline="66" endline="105">ParseSetupVal</referencedby>
        <referencedby refid="class_race_server_1abaae55bfd825a7258fca8d05c1d666c7" compoundref="src_2_race_server_8cpp" startline="1053" endline="1092">RaceServer::ParseSetupVal</referencedby>
        <referencedby refid="class_world_server_1aab51d2feb1e68531a9af4d5820690f03" compoundref="_src_2_se_b_l_w_process_8cpp" startline="73" endline="99">WorldServer::ProcessBLW_PlayerLoadComplete</referencedby>
        <referencedby refid="class_world_server_1ad3d303860d86118621534c7c1c5c223d" compoundref="_src_2_se_b_w_process_8cpp" startline="66" endline="115">WorldServer::ProcessBW_InitGenIDRet</referencedby>
        <referencedby refid="class_login_server_1a7edb713a9f0e97cb44d490403a2358da" compoundref="_src_2_se_c_l_process_8cpp" startline="98" endline="130">LoginServer::ProcessCL_PlayerLogin_NEW</referencedby>
        <referencedby refid="class_race_server_1a4ff26da1cc7b4a54e4f4b4c8253d58d0" compoundref="src_2_se_c_r_process_8cpp" startline="52" endline="211">RaceServer::ProcessCR_RaceValidate</referencedby>
        <referencedby refid="class_race_server_1a8f6bb836b9c7ef2a69ec4bb0131be4e5" compoundref="src_2_se_c_r_process_8cpp" startline="422" endline="456">RaceServer::ProcessCR_Talk</referencedby>
        <referencedby refid="class_global_server_1a84864400e97e5b768587b375217753e6" compoundref="_global_server_2src_2_se_d_b_process_8cpp" startline="49" endline="185">GlobalServer::ProcessDB_AccountQuery</referencedby>
        <referencedby refid="class_d_b_server_1a07f0323a1bb67ff0fe5dcf0293c0e7e4" compoundref="_src_2_se_d_b_process___char_8cpp" startline="401" endline="441">DBServer::ProcessDB_CharNexusFriendLoad</referencedby>
        <referencedby refid="class_d_b_server_1a9a7d57c0421c9b1722e842678bc06cec" compoundref="_src_2_se_d_b_process___char_8cpp" startline="173" endline="215">DBServer::ProcessDB_CharRenameEnd</referencedby>
        <referencedby refid="class_d_b_server_1abf6f575554f885dbc7278777f8afc060" compoundref="_src_2_se_d_b_process___char_8cpp" startline="217" endline="266">DBServer::ProcessDB_ChraRenameEndQuery</referencedby>
        <referencedby refid="class_d_b_server_1ab912153109a86b703fefaa65bf67859b" compoundref="_src_2_se_d_b_process___char_8cpp" startline="305" endline="399">DBServer::ProcessDB_IsPlayerExistByAccountOrName</referencedby>
        <referencedby refid="class_d_b_server_1af4ff13792efe4831e5418134d7cdce32" compoundref="_src_2_se_d_b_process___char_8cpp" startline="268" endline="303">DBServer::ProcessDB_IsPlayerExistByID</referencedby>
        <referencedby refid="class_login_server_1a9ce99371234924ff87b91c71dc0106c6" compoundref="_src_2_se_g_l_process_8cpp" startline="50" endline="109">LoginServer::ProcessGL_AccountLoginSuccess</referencedby>
        <referencedby refid="class_world_server_1aaf8647e224c4eb268fb4d46a14bb4d3e" compoundref="_world_server_2_src_2_se_http_process_8cpp" startline="103" endline="159">WorldServer::ProcessHS_QueryNearestRaceInfoRet</referencedby>
        <referencedby refid="class_global_server_1a22f0473ab0bf844ed5586de8c4ffe2fa" compoundref="src_2_se_l_g_process_8cpp" startline="83" endline="144">GlobalServer::ProcessLG_AccountLogin</referencedby>
        <referencedby refid="class_global_server_1a342f1a57819ea63f16c403e3911ff1b0" compoundref="src_2_se_l_g_process_8cpp" startline="146" endline="231">GlobalServer::ProcessLG_PlayerLogin</referencedby>
        <referencedby refid="class_block_server_1a935bfa16b74ce279e11e4410ceb886e9" compoundref="_src_2_se_m_b_l_process_8cpp" startline="45" endline="63">BlockServer::ProcessMBL_GetPlayerMatchValue</referencedby>
        <referencedby refid="class_town_server_1a0da3e523056dfc90d085ee05951408aa" compoundref="_src_2_se_t_c_p_svr_proc_8cpp" startline="37" endline="74">TownServer::ProcessTCPSvr_ClientConnect</referencedby>
        <referencedby refid="class_town_server_1a7148806047d979c7e53119d9e2899a0d" compoundref="_src_2_se_t_c_p_svr_proc_8cpp" startline="126" endline="177">TownServer::ProcessTCPSvr_ReLoadReadyID</referencedby>
        <referencedby refid="class_d_b_server_1afd60af14ef42fd352497bcd836ad7e8c" compoundref="_src_2_se_w_b_process_8cpp" startline="152" endline="236">DBServer::ProcessWB_IsPlayerExist</referencedby>
        <referencedby refid="class_town_server_1a4763603f0c39dfb2bec3134845ef121f" compoundref="_src_2_se_w_t_process_8cpp" startline="213" endline="258">TownServer::ProcessWT_InitPlayerInfo</referencedby>
        <referencedby refid="struct_c_item_1ae7bd1f31b9f5ae71e0eea3fda6cc3a6f" compoundref="_src_2_item_mgr_8h" startline="78" endline="89">CItem::save</referencedby>
        <referencedby refid="class_block_server_1a01a8b64a9346299799d64db20840e9a1" compoundref="_src_2_se_b_l_s_proc_char_load_8cpp" startline="71" endline="126">BlockServer::SeBSProcess_CharNexusFriend</referencedby>
        <referencedby refid="class_world_server_1aa2744aec993a635ec0eddac58c93e038" compoundref="_src_2_se_d_b_ser_pro___char_8cpp" startline="66" endline="92">WorldServer::SeDBSerProcess_CharRename</referencedby>
        <referencedby refid="class_d_b_server_1a1ee0b17a549d8aa72fc73db891ab176f" compoundref="_src_2_se_d_b_send___char_8cpp" startline="392" endline="433">DBServer::SendDB_CharData</referencedby>
        <referencedby refid="class_d_b_server_1a2b60f83f27671162e696c2dc7c31ea69" compoundref="_src_2_d_b_server_8cpp" startline="1314" endline="1332">DBServer::SendDBLog_SqlLog</referencedby>
        <referencedby refid="class_match_server_1a33003ade519ab6598e53c69a900e1399" compoundref="_match_server_2_src_2_se_http_send_8cpp" startline="57" endline="69">MatchServer::SendHS_BiVoiceCreateChatRoom</referencedby>
        <referencedby refid="class_match_server_1a4b4ed133d3d7abf732e8e5bf8592c80e" compoundref="_match_server_2_src_2_se_http_send_8cpp" startline="46" endline="55">MatchServer::SendHS_BiVoiceUserLoginRet</referencedby>
        <referencedby refid="class_global_server_1afbf729239c5610395f5492b41ac2cbcf" compoundref="_global_server_2src_2_se_http_send_8cpp" startline="35" endline="50">GlobalServer::SendHS_DHAccountLogin</referencedby>
        <referencedby refid="class_se_race_mgr_1a51dd9494f018279ef23edbf579d0b525" compoundref="_match_server_2_src_2_se_race_mgr_8cpp" startline="906" endline="966">SeRaceMgr::SendMatchAddrMsg</referencedby>
        <referencedby refid="class_tcp_server_1a6c1ad918ac65a0345ebedaf11c2d8160" compoundref="_se_parent_send_8cpp" startline="82" endline="90">TcpServer::SendParent_ClientConnect</referencedby>
        <referencedby refid="_se_server_main_def_8h_1a60171c50a0ddc6eeab8c0a7c6e4c5c2f" compoundref="_se_server_main_8cpp" startline="84" endline="167">ServerMain</referencedby>
        <referencedby refid="class_se_cache_mgr_1ab4279b591aed28f942b4c3b96c05276b" compoundref="src_2_se_cache_mgr_8cpp" startline="269" endline="272">SeCacheMgr::SetClearAccount</referencedby>
        <referencedby refid="_town_server_2_src_2_se_player_8inl_1a890e15e9085ea8fbf51369555e880814" compoundref="_town_server_2_src_2_se_player_8inl" startline="16" endline="22">SetName</referencedby>
        <referencedby refid="_se_server_tool_8h_1ad2735ec90511f0d6ec1535cf448709b8" compoundref="_se_server_tool_8cpp" startline="31" endline="64">SPrintf</referencedby>
        <referencedby refid="class_nexus_link_user_mgr_1ac13a51fe9bef0ddb1a07a737f34a48fe" compoundref="_nexus_link_user_mgr_8cpp" startline="89" endline="99">NexusLinkUserMgr::verify_user_attr</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a4697a1b0adee30e7c3810134c6cfe519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MemCpy</definition>
        <argsstring>(void *pkDst, int iDstSize, const void *pkSrc, int iCpySize)</argsstring>
        <name>MemCpy</name>
        <param>
          <type>void *</type>
          <declname>pkDst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDstSize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pkSrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iCpySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="76" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="76" bodyend="91"/>
        <referencedby refid="class_se_cache_mgr_1a5618d4fe34912f73d27816c6698d85ba" compoundref="src_2_se_cache_mgr_8cpp" startline="123" endline="156">SeCacheMgr::AddAccount</referencedby>
        <referencedby refid="class_d_b_server_1ac4dbd7a85310f1bdfc3b3abb9e7fe455" compoundref="_src_2_se_w_s_proc___logic_8cpp" startline="123" endline="227">DBServer::Excu_SelectData</referencedby>
        <referencedby refid="class_se_race_mgr_1ae7b8f0b07008c3a82b118ef3dd8bd5ea" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="728" endline="750">SeRaceMgr::GenRaceID</referencedby>
        <referencedby refid="struct_se_ptl_h_sock_1a3ea3efc8d9b592198c46a44b8453fa85" compoundref="_se_server_define_8h" startline="41" endline="54">SePtlHSock::GetHSock</referencedby>
        <referencedby refid="class_se_race_record_1a2d0bfc32beb58f7a3ae666874b3959f7" compoundref="_se_race_record_8cpp" startline="768" endline="778">SeRaceRecord::GetRaceBigData</referencedby>
        <referencedby refid="class_se_race_record_1a040544929293e10c09fa41adab848a6b" compoundref="_se_race_record_8cpp" startline="756" endline="766">SeRaceRecord::GetRaceData</referencedby>
        <referencedby refid="class_race_server_1a617ae9d0c66cefb68d860f4c277231ed" compoundref="src_2_race_server_8cpp" startline="588" endline="614">RaceServer::LoadConfig</referencedby>
        <referencedby refid="class_se_d_b_mem_mgr_1a975bcfdf91112ec139eff4a3c2d50a25" compoundref="_se_d_b_mem_mgr_8cpp" startline="97" endline="136">SeDBMemMgr::MemCheckOutFunc</referencedby>
        <referencedby refid="class_race_service_1a8fc8a0181ec42136cfe0e3bd3492ba39" compoundref="src_2_race_service_8cpp" startline="322" endline="334">RaceService::OnAchievementCounts</referencedby>
        <referencedby refid="class_race_service_1a682d00a8b87522fd1e27245a150021df" compoundref="src_2_race_service_8cpp" startline="203" endline="224">RaceService::OnRaceEvent</referencedby>
        <referencedby refid="class_race_service_1a0ca5013b8c78bacbcf81ab063b83006e" compoundref="src_2_race_service_8cpp" startline="226" endline="237">RaceService::OnRaceSvrModelPack</referencedby>
        <referencedby refid="class_race_server_1abba46baa0ac501923d0667fb3495c9c8" compoundref="src_2_se_race_svr_other_8cpp" startline="78" endline="96">RaceServer::OnSendMatchRoomLoadInfo</referencedby>
        <referencedby refid="_se_server_tool_8h_1a4d2cad61065382371c4da0e13c6961b7" compoundref="_se_server_tool_8cpp" startline="66" endline="105">ParseSetupVal</referencedby>
        <referencedby refid="class_race_server_1abaae55bfd825a7258fca8d05c1d666c7" compoundref="src_2_race_server_8cpp" startline="1053" endline="1092">RaceServer::ParseSetupVal</referencedby>
        <referencedby refid="class_world_server_1a080e13c36686fe065158fedc20656d8a" compoundref="_src_2_se_b_l_w_process_8cpp" startline="27" endline="37">WorldServer::ProcessBLW_ShowNotice</referencedby>
        <referencedby refid="class_town_server_1a1c6ce74739f24fff3d68412ec7fc23b7" compoundref="_src_2_se_c_t_process_8cpp" startline="109" endline="135">TownServer::ProcessCT_CreateChar</referencedby>
        <referencedby refid="class_town_server_1a4e05d73f5dc0929bdc4d75815e1227e1" compoundref="_src_2_se_c_t_process_8cpp" startline="90" endline="107">TownServer::ProcessCT_QueryName</referencedby>
        <referencedby refid="class_world_server_1aaf8647e224c4eb268fb4d46a14bb4d3e" compoundref="_world_server_2_src_2_se_http_process_8cpp" startline="103" endline="159">WorldServer::ProcessHS_QueryNearestRaceInfoRet</referencedby>
        <referencedby refid="class_world_server_1a830f01be1b083f2145dec9fcc561de4f" compoundref="_src_2_se_t_w_process_8cpp" startline="226" endline="254">WorldServer::ProcessTW_CreateChar</referencedby>
        <referencedby refid="class_world_server_1aaae57bfd4b92adfde74cdd6934cbd721" compoundref="_src_2_se_t_w_process_8cpp" startline="196" endline="224">WorldServer::ProcessTW_QueryName</referencedby>
        <referencedby refid="class_world_server_1a472b4071bcd195bb834d45d3518bf075" compoundref="_src_2_se_t_w_process_8cpp" startline="497" endline="522">WorldServer::ProcessTW_SearchUserArchivesInfoReq</referencedby>
        <referencedby refid="class_town_server_1a98554b5756de4987243915ff07d36d72" compoundref="_src_2_se_w_t_process_8cpp" startline="52" endline="64">TownServer::ProcessWT_ShowNotice</referencedby>
        <referencedby refid="class_se_thread_msg_mgr_1a2138303823638539c975f7cd63cb46d4" compoundref="_se_thread_msg_8cpp" startline="36" endline="58">SeThreadMsgMgr::PushMsg</referencedby>
        <referencedby refid="class_race_server_1a8a5747b16a377f090cce5caf582fee8c" compoundref="src_2_se_race_service_push_8cpp" startline="26" endline="38">RaceServer::PushRSC_RaceStream</referencedby>
        <referencedby refid="class_d_b_server_1a1b52518c88b87ccfdaccdfdd0dbc02d5" compoundref="_src_2_se_d_b_send___char_8cpp" startline="158" endline="188">DBServer::SendDB_IsPlayerExistByID</referencedby>
        <referencedby refid="class_d_b_server_1ac49c0b718a37ab71234caf5ba4e92fcd" compoundref="_src_2_se_d_b_send___char_8cpp" startline="190" endline="225">DBServer::SendDB_IsPlayerExistByName</referencedby>
        <referencedby refid="class_tcp_server_1a7402e8b47e4f3dee4a8afd51639ae125" compoundref="_se_parent_send_8cpp" startline="100" endline="112">TcpServer::SendParent_RecvData</referencedby>
        <referencedby refid="class_tcp_server_1a2a827abc4e28587ebd825fc92894157a" compoundref="_se_parent_send_8cpp" startline="68" endline="80">TcpServer::SendParent_ReLoadReadyID</referencedby>
        <referencedby refid="class_se_race_room_mgr_1ad44de83ae9693e08325f35d88eefb13b" compoundref="src_2_se_race_room_mgr_8cpp" startline="1309" endline="1350">SeRaceRoomMgr::SendRacePlayerBaseInfo</referencedby>
        <referencedby refid="class_town_server_1a3290f7df54f4ca1977f1f76bb4128942" compoundref="_src_2_se_t_c_p_svr_send_8cpp" startline="60" endline="72">TownServer::SendTCPSvr_SendData</referencedby>
        <referencedby refid="struct_se_ptl_h_sock_1a48c2280b0fdc5200117be5a0445f2efe" compoundref="_se_server_define_8h" startline="36" endline="39">SePtlHSock::SePtlHSock</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a6002fe8fbfd203d701f1e574800a8015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CHStrStr</definition>
        <argsstring>(const char *pcDstChar, const char *pcSrcChar)</argsstring>
        <name>CHStrStr</name>
        <param>
          <type>const char *</type>
          <declname>pcDstChar</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcSrcChar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="93" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="93" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a33600034126a334c11146f2f411faf06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CHStrStr_s</definition>
        <argsstring>(const char *pcDstChar, const char *pcSrcChar)</argsstring>
        <name>CHStrStr_s</name>
        <param>
          <type>const char *</type>
          <declname>pcDstChar</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcSrcChar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="149" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="149" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a283fbb2e28e0571cc7a7b1aaf5334ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* GetAString</definition>
        <argsstring>(const char *pcSrcStr, char *pcGetStr, int iGetSize)</argsstring>
        <name>GetAString</name>
        <param>
          <type>const char *</type>
          <declname>pcSrcStr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pcGetStr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iGetSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="206" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="206" bodyend="250"/>
        <referencedby refid="class_se_config_1a4afab93102626e63e8d44a4cb8b97f35" compoundref="_se_config_8cpp" startline="97" endline="159">SeConfig::GetDBAddr</referencedby>
        <referencedby refid="class_se_config_1a1952c4ba6c10fa03fcc8ef2967be45b3" compoundref="_se_config_8cpp" startline="161" endline="229">SeConfig::GetDBTableAddrFromStr</referencedby>
        <referencedby refid="class_se_config_1a43053c43415805b06a37c69aa359b5f0" compoundref="_se_config_8cpp" startline="231" endline="320">SeConfig::GetLogDBAddr</referencedby>
        <referencedby refid="class_se_config_1a0bd6ce789230fc24e8e09674c0265d5d" compoundref="_se_config_8cpp" startline="56" endline="95">SeConfig::GetNetAddr</referencedby>
        <referencedby refid="class_se_config_1add44446c028eb679ec67c9098cba4d6b" compoundref="_se_config_8cpp" startline="322" endline="397">SeConfig::GetRedisAddrFromStr</referencedby>
        <referencedby refid="class_world_server_1a50d0ca40947da19885acac9eaf9d6412" compoundref="_src_2_se_world_other_8cpp" startline="446" endline="482">WorldServer::InitLeagueInfo</referencedby>
        <referencedby refid="class_se_race_svr_mgr_1a00c1624251b52adcdba2ec09fb081157" compoundref="_src_2_se_race_svr_mgr_8cpp" startline="211" endline="250">SeRaceSvrMgr::InitPlayerRaceSvr</referencedby>
        <referencedby refid="class_match_server_1a317677c4a0bcebbb34730171d370cc88" compoundref="_src_2_se_match_other_8cpp" startline="177" endline="252">MatchServer::InitRaceBetInfo</referencedby>
        <referencedby refid="class_d_b_server_1af27177a43f8d8233fe6a50cc34aad973" compoundref="_src_2_d_b_server_8cpp" startline="557" endline="706">DBServer::LoadConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a0738c1c6a2304023c6ef64813fe1e635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetAccountType</definition>
        <argsstring>(const char *pcAccount)</argsstring>
        <name>GetAccountType</name>
        <param>
          <type>const char *</type>
          <declname>pcAccount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="253" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="253" bodyend="306"/>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa18cafe3efe01affef3c9def797330428" compoundref="_se_ptl_comm_define_8h" startline="27">SSD_MAX_ACCOUNT</references>
        <references refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa610957174673d74b1c66e3fce668f664" compoundref="_se_ptl_comm_define_8h" startline="26">SSD_MIN_ACCOUNT</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a525fcb7d706b5d7c5bdda57e9cabe795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetDBTime</definition>
        <argsstring>(SeDBTime &amp;rkTime, const char *pcDBTime)</argsstring>
        <name>GetDBTime</name>
        <param>
          <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkTime</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcDBTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="308" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="308" bodyend="335"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="_se_tool_8h_1af895e134d21e379dc8121695ceeb4e42" compoundref="_se_tool_8cpp" startline="1121" endline="1155">GetIDCardAge</referencedby>
        <referencedby refid="class_world_server_1a50d0ca40947da19885acac9eaf9d6412" compoundref="_src_2_se_world_other_8cpp" startline="446" endline="482">WorldServer::InitLeagueInfo</referencedby>
        <referencedby refid="class_match_server_1a317677c4a0bcebbb34730171d370cc88" compoundref="_src_2_se_match_other_8cpp" startline="177" endline="252">MatchServer::InitRaceBetInfo</referencedby>
        <referencedby refid="class_ladder_level_mgr_1af81d92611f0ba45a9c646d514108c814" compoundref="_src_2_ladder_level_mgr_8cpp" startline="121" endline="167">LadderLevelMgr::joinTop</referencedby>
        <referencedby refid="_se_tool_8h_1ab5215c746438d47cd602ac9cd661d806" compoundref="_se_tool_8cpp" startline="428" endline="433">NowTime</referencedby>
        <referencedby refid="_src_2_se_w_b_process_8cpp_1aff5f66406c4be0ae1af6ddeb4cf914a3" compoundref="_src_2_se_w_b_process_8cpp" startline="276" endline="343">onTabSelect</referencedby>
        <referencedby refid="class_global_server_1a84864400e97e5b768587b375217753e6" compoundref="_global_server_2src_2_se_d_b_process_8cpp" startline="49" endline="185">GlobalServer::ProcessDB_AccountQuery</referencedby>
        <referencedby refid="class_d_b_server_1a07f0323a1bb67ff0fe5dcf0293c0e7e4" compoundref="_src_2_se_d_b_process___char_8cpp" startline="401" endline="441">DBServer::ProcessDB_CharNexusFriendLoad</referencedby>
        <referencedby refid="class_d_b_server_1aad401b0fa0c6d36abf5e88cd34af2bff" compoundref="_src_2_se_d_b_process___char_8cpp" startline="41" endline="77">DBServer::ProcessDB_CharQueryValid</referencedby>
        <referencedby refid="class_ladder_level_mgr_1a5f2dde80c12500c73a5a24438adcae12" compoundref="_src_2_ladder_level_mgr_8cpp" startline="92" endline="111">LadderLevelMgr::updateScore</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1abc9e47253533252ceb5e59c99928a0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt64</type>
        <definition>UInt64 DiffDBTime</definition>
        <argsstring>(const SeDBTime &amp;rkBeginTime, const SeDBTime &amp;rkEndTime)</argsstring>
        <name>DiffDBTime</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="337" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="337" bodyend="360"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="class_se_d_b_player_mgr_1ae91823904b10ff2425790f156da03425" compoundref="_src_2_se_d_b_player_mgr_8cpp" startline="293" endline="328">SeDBPlayerMgr::GetCharMemoryByIndex</referencedby>
        <referencedby refid="_se_tool_8h_1a5e2e5def9b988f39d21047b9de9c1bb9" compoundref="_se_tool_8cpp" startline="538" endline="551">GetWeekOfYear</referencedby>
        <referencedby refid="_se_tool_8h_1a8344bb964fcc40c072a835ad3a0b4aa7" compoundref="_se_tool_8cpp" startline="470" endline="494">IsDiffWeek</referencedby>
        <referencedby refid="struct_se_char_memory_1a0c9fc33c2d4cece9b73ca357c9b06eaf" compoundref="_world_server_2_src_2_se_player_def_8h" startline="302" endline="310">SeCharMemory::IsOverdue</referencedby>
        <referencedby refid="class_se_player_1ae3727b6ac2168a6d16f31ad97f3d874d" compoundref="_world_server_2_src_2_se_player_8cpp" startline="287" endline="297">SePlayer::UpdateOnlineTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a1f4142f13f05b8945b43196f6f5d1ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt64</type>
        <definition>UInt64 DiffDailyDBTime</definition>
        <argsstring>(const SeDBTime &amp;rkBeginTime, const SeDBTime &amp;rkEndTime)</argsstring>
        <name>DiffDailyDBTime</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="362" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="362" bodyend="386"/>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a92be8b4b36c5b5b17c097dde7fc9c293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddDBTime</definition>
        <argsstring>(const SeDBTime &amp;rkBeginTime, SeDBTime &amp;rkEndTime, int iDay, int iHour, int iMin, int iSec)</argsstring>
        <name>AddDBTime</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDay</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iHour</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="388" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="388" bodyend="426"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
        <references refid="struct_se_d_b_time_1ad3512b135cdbfe62e1ad4fa1a6ab95ab" compoundref="_se_share_def_8h" startline="194" endline="197">SeDBTime::IsValid</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="class_d_b_server_1a946073f01d14fc1997b3fedf65ba4606" compoundref="_src_2_d_b_server_8cpp" startline="1193" endline="1268">DBServer::SaveSqlLog2File</referencedby>
        <referencedby refid="class_d_b_server_1a039db6288f264373751b4c60574cd50a" compoundref="_src_2_d_b_server_8cpp" startline="1270" endline="1312">DBServer::UpdateSqlLog2File</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NowTime</definition>
        <argsstring>(SeDBTime &amp;rkTime)</argsstring>
        <name>NowTime</name>
        <param>
          <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="428" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="428" bodyend="433"/>
        <references refid="_se_tool_8cpp_1a525fcb7d706b5d7c5bdda57e9cabe795" compoundref="_se_tool_8cpp" startline="308" endline="335">GetDBTime</references>
        <referencedby refid="_world_server_2_src_2_se_player_8inl_1a1fbaa3c8589319e26d2e6943e7ba2ea0" compoundref="_world_server_2_src_2_se_player_8inl" startline="371" endline="400">adjustDefeat</referencedby>
        <referencedby refid="class_achieve_finish_mgr_1a258af22a59f7eb0db776a47cf031e72a" compoundref="_src_2_achieve_finish_mgr_8cpp" startline="87" endline="102">AchieveFinishMgr::ComposeInfo</referencedby>
        <referencedby refid="class_d_b_server_1ab2288fbe9f287d2b4a28b707c9c69703" compoundref="_src_2_d_b_server_8cpp" startline="35" endline="50">DBServer::DBServer</referencedby>
        <referencedby refid="class_d_b_server_1a4bc31e791122ece41333794936180226" compoundref="_src_2_d_b_server_8cpp" startline="131" endline="177">DBServer::Finialize</referencedby>
        <referencedby refid="class_world_server_1a77a2fcd1bbac8ffe4d93ea36e3b8bef9" compoundref="_src_2_se_world_other_8cpp" startline="537" endline="587">WorldServer::GenLeagueTime</referencedby>
        <referencedby refid="class_se_player_1a5d285ae5480246eecd7872675f33b5f3" compoundref="_world_server_2_src_2_se_player_8cpp" startline="356" endline="376">SePlayer::GetAllExchange</referencedby>
        <referencedby refid="_world_server_2_src_2_se_player_8inl_1a00fd747e1e194f87bab59f7253a5d200" compoundref="_world_server_2_src_2_se_player_8inl" startline="409" endline="420">GetBattleField</referencedby>
        <referencedby refid="class_se_d_b_player_mgr_1ae91823904b10ff2425790f156da03425" compoundref="_src_2_se_d_b_player_mgr_8cpp" startline="293" endline="328">SeDBPlayerMgr::GetCharMemoryByIndex</referencedby>
        <referencedby refid="_se_tool_8h_1aa759099a5cb96533821497fdb4bc3614" compoundref="_se_tool_8cpp" startline="527" endline="536">GetDayEndTime</referencedby>
        <referencedby refid="_se_tool_8h_1af895e134d21e379dc8121695ceeb4e42" compoundref="_se_tool_8cpp" startline="1121" endline="1155">GetIDCardAge</referencedby>
        <referencedby refid="class_se_player_1aa1afbaca75db9af3457085dd40309ba9" compoundref="_world_server_2_src_2_se_player_8cpp" startline="940" endline="961">SePlayer::GetLadder</referencedby>
        <referencedby refid="_world_server_2_src_2_se_player_8inl_1abff1c8399bc4bf362ea000f8ef0c96f1" compoundref="_world_server_2_src_2_se_player_8inl" startline="430" endline="443">GetMatch</referencedby>
        <referencedby refid="class_se_player_1a5f96c203f2c384a58750cf222aaeb583" compoundref="_world_server_2_src_2_se_player_8cpp" startline="584" endline="611">SePlayer::GetMemoryValue</referencedby>
        <referencedby refid="class_town_server_1a094fb0c869e86649fda1bb1a4a640672" compoundref="_src_2_se_town_other_8cpp" startline="8" endline="16">TownServer::GetWSTime</referencedby>
        <referencedby refid="class_se_player_1a156866bea6fba5fed68c367c6a4f7a7c" compoundref="_world_server_2_src_2_se_player_8cpp" startline="122" endline="171">SePlayer::LoadingComplete</referencedby>
        <referencedby refid="_se_tool_8h_1a8010cec75553ac9e7d562f78e63cd07a" compoundref="_se_tool_8cpp" startline="516" endline="525">NowTime</referencedby>
        <referencedby refid="class_se_cache_mgr_1a4aa516af0d7671d11ff5cc5c158555f4" compoundref="src_2_se_cache_mgr_8cpp" startline="237" endline="254">SeCacheMgr::OnUpdateAccountDynamic</referencedby>
        <referencedby refid="class_global_server_1a84864400e97e5b768587b375217753e6" compoundref="_global_server_2src_2_se_d_b_process_8cpp" startline="49" endline="185">GlobalServer::ProcessDB_AccountQuery</referencedby>
        <referencedby refid="class_global_server_1a0ed5e7688c53f98efb1b51f329bb7b18" compoundref="src_2_se_l_g_process_8cpp" startline="233" endline="243">GlobalServer::ProcessLG_PlayerTownIndex</referencedby>
        <referencedby refid="class_block_server_1a640f4e61bc33a2b186030024b0e0c984" compoundref="_src_2_se_r_b_l_process_8cpp" startline="242" endline="259">BlockServer::ProcessRBL_RaceEndArenaBaseInfoSync</referencedby>
        <referencedby refid="class_block_server_1a295896a58e78e24c2bd3e92ea8856f23" compoundref="_src_2_se_r_b_l_process_8cpp" startline="32" endline="122">BlockServer::ProcessRBL_UpdateScore</referencedby>
        <referencedby refid="class_nexus_server_1a14881b6153d431f805176877804b6ef5" compoundref="_se_t_n_process_8cpp" startline="121" endline="316">NexusServer::ProcessTN_NexusUserActionReq</referencedby>
        <referencedby refid="class_task_mgr_1af70c862090441288d1d9c3c9ee821d71" compoundref="_src_2_task_mgr_8cpp" startline="213" endline="298">TaskMgr::RefreshTask</referencedby>
        <referencedby refid="class_se_race_record_1a8371775734b57d065293a4723b6416ea" compoundref="_se_race_record_8cpp" startline="915" endline="960">SeRaceRecord::SaveToFile</referencedby>
        <referencedby refid="class_se_d_b_player_mgr_1aa46cfd1c83122699dbdf2a925cc78839" compoundref="_src_2_se_d_b_player_mgr_8cpp" startline="8" endline="22">SeDBPlayerMgr::SeDBPlayerMgr</referencedby>
        <referencedby refid="class_d_b_server_1abe6cdfc11ea2f4a63a447c6930589a80" compoundref="_src_2_se_d_b_send___char_8cpp" startline="118" endline="156">DBServer::SendDB_CharInfoAdd</referencedby>
        <referencedby refid="class_d_b_server_1a2b60f83f27671162e696c2dc7c31ea69" compoundref="_src_2_d_b_server_8cpp" startline="1314" endline="1332">DBServer::SendDBLog_SqlLog</referencedby>
        <referencedby refid="class_world_server_1ae12bad16d92e85f16fd917417093859d" compoundref="_src_2_se_d_b_ser_sd___char_8cpp" startline="113" endline="126">WorldServer::SendDBServer_CharQueryValid</referencedby>
        <referencedby refid="class_se_player_1aac1f70580b5a2422ccd6fbd8304a4432" compoundref="_world_server_2_src_2_se_player_8cpp" startline="27" endline="65">SePlayer::SePlayer</referencedby>
        <referencedby refid="class_town_server_1aeb01bdc327e70b802ce61a60d53d6d62" compoundref="_src_2_town_server_8cpp" startline="8" endline="30">TownServer::TownServer</referencedby>
        <referencedby refid="class_hero_mgr_1a0f1d20deb76cc4c713b0f6532089a3d4" compoundref="_src_2_hero_mgr_8cpp" startline="34" endline="101">HeroMgr::unlockHero</referencedby>
        <referencedby refid="class_se_player_1ab5f235459da536cda96d7d6d8ca100b5" compoundref="_world_server_2_src_2_se_player_8cpp" startline="546" endline="582">SePlayer::UpdateMemoryData</referencedby>
        <referencedby refid="class_se_player_1ae3727b6ac2168a6d16f31ad97f3d874d" compoundref="_world_server_2_src_2_se_player_8cpp" startline="287" endline="297">SePlayer::UpdateOnlineTime</referencedby>
        <referencedby refid="class_se_d_b_player_mgr_1a88275c5d1ff0a00e2497a10d72dce4f4" compoundref="_src_2_se_d_b_player_mgr_8cpp" startline="1282" endline="1293">SeDBPlayerMgr::UpdatePlayerLastLoginTime</referencedby>
        <referencedby refid="class_world_server_1adb8f3dfb99fb679ca1127fcf18997577" compoundref="_src_2_se_world_other_8cpp" startline="421" endline="444">WorldServer::UpdateQueryFreeHeroList</referencedby>
        <referencedby refid="class_match_server_1ae1ef7127d1df2756943ba108e652ba9d" compoundref="_src_2_se_match_other_8cpp" startline="287" endline="321">MatchServer::UpdateRaceBetInfo</referencedby>
        <referencedby refid="class_d_b_server_1a039db6288f264373751b4c60574cd50a" compoundref="_src_2_d_b_server_8cpp" startline="1270" endline="1312">DBServer::UpdateSqlLog2File</referencedby>
        <referencedby refid="class_world_server_1ace2c88fdcdeb2708265c20c36ffef6ed" compoundref="_src_2_world_server_8cpp" startline="51" endline="92">WorldServer::WorldServer</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a53e587eb049ef13e4ef94f32d5643790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetDBTime</definition>
        <argsstring>(time_t time, SeDBTime &amp;rkTime)</argsstring>
        <name>GetDBTime</name>
        <param>
          <type>time_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="435" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="435" bodyend="446"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a9a85bd4679db5886f6c846731b5606ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetDayOfWeek</definition>
        <argsstring>(const SeDBTime &amp;rkTime)</argsstring>
        <name>GetDayOfWeek</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="448" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="448" bodyend="468"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="_se_tool_8h_1a9e84649d897760fc3afa76254f653322" compoundref="_se_tool_8cpp" startline="554" endline="567">GetDiffWeek</referencedby>
        <referencedby refid="_se_tool_8h_1a5e2e5def9b988f39d21047b9de9c1bb9" compoundref="_se_tool_8cpp" startline="538" endline="551">GetWeekOfYear</referencedby>
        <referencedby refid="_se_tool_8h_1a8344bb964fcc40c072a835ad3a0b4aa7" compoundref="_se_tool_8cpp" startline="470" endline="494">IsDiffWeek</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a8344bb964fcc40c072a835ad3a0b4aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsDiffWeek</definition>
        <argsstring>(const SeDBTime &amp;rkBeginTime, const SeDBTime &amp;rkEndTime)</argsstring>
        <name>IsDiffWeek</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="470" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="470" bodyend="494"/>
        <references refid="_se_tool_8cpp_1abc9e47253533252ceb5e59c99928a0ed" compoundref="_se_tool_8cpp" startline="337" endline="360">DiffDBTime</references>
        <references refid="_se_tool_8cpp_1a9a85bd4679db5886f6c846731b5606ff" compoundref="_se_tool_8cpp" startline="448" endline="468">GetDayOfWeek</references>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="class_world_server_1adb8f3dfb99fb679ca1127fcf18997577" compoundref="_src_2_se_world_other_8cpp" startline="421" endline="444">WorldServer::UpdateQueryFreeHeroList</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a3d5259950103d84bbf1773bdc37a210b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsDiffDay</definition>
        <argsstring>(const SeDBTime &amp;rkBeginTime, const SeDBTime &amp;rkEndTime)</argsstring>
        <name>IsDiffDay</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="496" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="496" bodyend="504"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="class_task_mgr_1af70c862090441288d1d9c3c9ee821d71" compoundref="_src_2_task_mgr_8cpp" startline="213" endline="298">TaskMgr::RefreshTask</referencedby>
        <referencedby refid="class_match_server_1ae1ef7127d1df2756943ba108e652ba9d" compoundref="_src_2_se_match_other_8cpp" startline="287" endline="321">MatchServer::UpdateRaceBetInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1ac5383c15a1bc28fa991575a77e0af696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsDiffMonth</definition>
        <argsstring>(const SeDBTime &amp;rkBeginTime, const SeDBTime &amp;rkEndTime)</argsstring>
        <name>IsDiffMonth</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="506" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="506" bodyend="514"/>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a8010cec75553ac9e7d562f78e63cd07a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* NowTime</definition>
        <argsstring>(void)</argsstring>
        <name>NowTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="516" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="516" bodyend="525"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <references refid="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" compoundref="_se_tool_8cpp" startline="428" endline="433">NowTime</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1aa759099a5cb96533821497fdb4bc3614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetDayEndTime</definition>
        <argsstring>(SeDBTime &amp;rkEndTime)</argsstring>
        <name>GetDayEndTime</name>
        <param>
          <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="527" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="527" bodyend="536"/>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
        <references refid="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" compoundref="_se_tool_8cpp" startline="428" endline="433">NowTime</references>
        <referencedby refid="class_block_server_1ab0b855f2c5710daaebbe99b3388f5bd9" compoundref="_src_2_se_w_b_l_process_8cpp" startline="484" endline="499">BlockServer::ProcessWBL_MatchRaceLoad</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a5e2e5def9b988f39d21047b9de9c1bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetWeekOfYear</definition>
        <argsstring>(SeDBTime &amp;rkTime)</argsstring>
        <name>GetWeekOfYear</name>
        <param>
          <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="538" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="538" bodyend="551"/>
        <references refid="_se_tool_8cpp_1abc9e47253533252ceb5e59c99928a0ed" compoundref="_se_tool_8cpp" startline="337" endline="360">DiffDBTime</references>
        <references refid="_se_tool_8cpp_1a9a85bd4679db5886f6c846731b5606ff" compoundref="_se_tool_8cpp" startline="448" endline="468">GetDayOfWeek</references>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a9e84649d897760fc3afa76254f653322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetDiffWeek</definition>
        <argsstring>(SeDBTime &amp;rkBeginTime, SeDBTime &amp;rkEndTime)</argsstring>
        <name>GetDiffWeek</name>
        <param>
          <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="554" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="554" bodyend="567"/>
        <references refid="_se_tool_8cpp_1a07f3613adb429ccc97a9456835a66ee3" compoundref="_se_tool_8cpp" startline="569" endline="586">DiffDBDay</references>
        <references refid="_se_tool_8cpp_1a9a85bd4679db5886f6c846731b5606ff" compoundref="_se_tool_8cpp" startline="448" endline="468">GetDayOfWeek</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a07f3613adb429ccc97a9456835a66ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DiffDBDay</definition>
        <argsstring>(const SeDBTime &amp;rkBeginTime, const SeDBTime &amp;rkEndTime)</argsstring>
        <name>DiffDBDay</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="569" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="569" bodyend="586"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="_se_tool_8h_1a9e84649d897760fc3afa76254f653322" compoundref="_se_tool_8cpp" startline="554" endline="567">GetDiffWeek</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a2aa051ed04091591f44ef1c1d00199c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t GetTDBTime</definition>
        <argsstring>(const SeDBTime &amp;rkDBTime)</argsstring>
        <name>GetTDBTime</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkDBTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="588" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="588" bodyend="600"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="_world_server_2_src_2_se_player_8inl_1a1fbaa3c8589319e26d2e6943e7ba2ea0" compoundref="_world_server_2_src_2_se_player_8inl" startline="371" endline="400">adjustDefeat</referencedby>
        <referencedby refid="class_se_player_1aa1afbaca75db9af3457085dd40309ba9" compoundref="_world_server_2_src_2_se_player_8cpp" startline="940" endline="961">SePlayer::GetLadder</referencedby>
        <referencedby refid="_world_server_2_src_2_se_player_8inl_1a01f1348ed786fcab74c9ea677d9400f0" compoundref="_world_server_2_src_2_se_player_8inl" startline="278" endline="286">GetMatchBaseInfo</referencedby>
        <referencedby refid="struct_se_char_achievement_data_1acb9dcf8fb6351eecf72cb2031e9970bc" compoundref="_world_server_2_src_2_se_player_def_8h" startline="210" endline="215">SeCharAchievementData::GetPtlData</referencedby>
        <referencedby refid="_src_2_ladder_level_mgr_8cpp_1ab92174adb94e8524bd8b2194ab14d81e" compoundref="_src_2_ladder_level_mgr_8cpp" startline="229" endline="240">onLadderLoad</referencedby>
        <referencedby refid="class_block_server_1a295896a58e78e24c2bd3e92ea8856f23" compoundref="_src_2_se_r_b_l_process_8cpp" startline="32" endline="122">BlockServer::ProcessRBL_UpdateScore</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a03bcc77ad4ef4845b20fc5cf4db96834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetStr2ID</definition>
        <argsstring>(const char *acID)</argsstring>
        <name>GetStr2ID</name>
        <param>
          <type>const char *</type>
          <declname>acID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="603" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="603" bodyend="610"/>
        <referencedby refid="class_se_race_mgr_1aeec6e7ffa9c8414f904f53d4509dde0e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1775" endline="1908">SeRaceMgr::CreateRobotRace</referencedby>
        <referencedby refid="class_se_race_svr_mgr_1a00c1624251b52adcdba2ec09fb081157" compoundref="_src_2_se_race_svr_mgr_8cpp" startline="211" endline="250">SeRaceSvrMgr::InitPlayerRaceSvr</referencedby>
        <referencedby refid="class_se_d_b_mem_mgr_1a68975dbc86371d4a8cc5b669d3087c6b" compoundref="_se_d_b_mem_mgr_8cpp" startline="166" endline="212">SeDBMemMgr::LoadConfig</referencedby>
        <referencedby refid="class_tcp_server_1a52a028cf3f9b36fa6c854186927460fd" compoundref="_tcp_server_8cpp" startline="23" endline="60">TcpServer::LoadConfig</referencedby>
        <referencedby refid="class_global_server_1afa1574bfeacb7ab222f6842ab808f01a" compoundref="src_2_global_server_8cpp" startline="225" endline="264">GlobalServer::LoadConfig</referencedby>
        <referencedby refid="class_login_server_1a44d75705c4debce144b50dbd0c961b3d" compoundref="_src_2_login_server_8cpp" startline="73" endline="135">LoginServer::LoadConfig</referencedby>
        <referencedby refid="class_backend_server_1ae58a3f69e4a81c8da456344a11bdfe5b" compoundref="_backend_server_8cpp" startline="189" endline="233">BackendServer::LoadConfig</referencedby>
        <referencedby refid="class_http_server_1a66312168a48b7f22f1e56078c9a588c7" compoundref="_http_server_8cpp" startline="276" endline="327">HttpServer::LoadConfig</referencedby>
        <referencedby refid="class_town_server_1a27d439b428c323317bec5900666bc1af" compoundref="_src_2_town_server_8cpp" startline="37" endline="102">TownServer::LoadConfig</referencedby>
        <referencedby refid="class_watch_server_1_1_c_watch_server_1a02d324973f10d692522b461a7004be78" compoundref="_watch_server_8cpp" startline="351" endline="455">WatchServer::CWatchServer::LoadConfig</referencedby>
        <referencedby refid="class_match_server_1a16c0a4c43f480d67e41613066925888a" compoundref="_src_2_match_server_8cpp" startline="77" endline="150">MatchServer::LoadConfig</referencedby>
        <referencedby refid="class_nexus_server_1a692ff80a90c8124c028980a9448ffd83" compoundref="_nexus_server_8cpp" startline="311" endline="375">NexusServer::LoadConfig</referencedby>
        <referencedby refid="class_world_server_1afb9dc70c7da676b263cd148880a6a8d3" compoundref="_src_2_world_server_8cpp" startline="99" endline="230">WorldServer::LoadConfig</referencedby>
        <referencedby refid="class_d_b_server_1af27177a43f8d8233fe6a50cc34aad973" compoundref="_src_2_d_b_server_8cpp" startline="557" endline="706">DBServer::LoadConfig</referencedby>
        <referencedby refid="class_match_server_1a966af313cd7394328cfde57318c53b0f" compoundref="_src_2_match_server_8cpp" startline="152" endline="200">MatchServer::LoadDynamicConfig</referencedby>
        <referencedby refid="class_race_server_1a3ab10150c89d2ea8ea8658ef9bde3337" compoundref="src_2_race_server_8cpp" startline="621" endline="925">RaceServer::LoadRSTempConfig</referencedby>
        <referencedby refid="_se_server_tool_8h_1a4d2cad61065382371c4da0e13c6961b7" compoundref="_se_server_tool_8cpp" startline="66" endline="105">ParseSetupVal</referencedby>
        <referencedby refid="class_race_server_1abaae55bfd825a7258fca8d05c1d666c7" compoundref="src_2_race_server_8cpp" startline="1053" endline="1092">RaceServer::ParseSetupVal</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a9dbdd88f6ee44ba1a2d6a9c94e86bf3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Word</type>
        <definition>Word GetStr2Word</definition>
        <argsstring>(const char *acID)</argsstring>
        <name>GetStr2Word</name>
        <param>
          <type>const char *</type>
          <declname>acID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="613" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="613" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a6497eac0be6c9f745075277304dc24d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetCheckCode</definition>
        <argsstring>(void *pkData, int iSize, unsigned int dwOrgCRC)</argsstring>
        <name>GetCheckCode</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dwOrgCRC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="622" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="622" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a1cf7ec78fb6f69a807c3f15e0554909a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GenEncryptKey</definition>
        <argsstring>(void *pkKey, int iSize)</argsstring>
        <name>GenEncryptKey</name>
        <param>
          <type>void *</type>
          <declname>pkKey</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="633" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="633" bodyend="640"/>
        <referencedby refid="class_se_race_mgr_1aeec6e7ffa9c8414f904f53d4509dde0e" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1775" endline="1908">SeRaceMgr::CreateRobotRace</referencedby>
        <referencedby refid="class_login_server_1aa9a84a8c5ba8f91f8a4dc6e4d1aff740" compoundref="_src_2_login_server_8cpp" startline="447" endline="483">LoginServer::OnNetAccept</referencedby>
        <referencedby refid="class_watch_server_1_1_c_watch_server_1a1ca64bea8b2d3bdb67b0b6666209230d" compoundref="_watch_server_8cpp" startline="780" endline="804">WatchServer::CWatchServer::OnPlayerConnected</referencedby>
        <referencedby refid="class_race_server_1a5847643304f7413be6138cf975c3e7fd" compoundref="src_2_race_server_8cpp" startline="1253" endline="1277">RaceServer::OnPlayerConnected</referencedby>
        <referencedby refid="class_se_race_mgr_1a6f86cab772c6473217e3f4e3cfe06747" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1925" endline="2285">SeRaceMgr::OnRaceModeEnd</referencedby>
        <referencedby refid="class_town_server_1a0da3e523056dfc90d085ee05951408aa" compoundref="_src_2_se_t_c_p_svr_proc_8cpp" startline="37" endline="74">TownServer::ProcessTCPSvr_ClientConnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a8385d9d5d87ef362db3c57e257efeaec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EncodeProtocol</definition>
        <argsstring>(void *pkData, int iSize, Byte abyKey[])</argsstring>
        <name>EncodeProtocol</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>Byte</type>
          <declname>abyKey</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="642" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="642" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a7355f89218924241ce9baf483e808596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DecodeProtocol</definition>
        <argsstring>(void *pkData, int iSize, Byte abyKey[])</argsstring>
        <name>DecodeProtocol</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSize</declname>
        </param>
        <param>
          <type>Byte</type>
          <declname>abyKey</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="655" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="655" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a96ab73af0f20c39198b553a067bbe46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CompressProtocal</definition>
        <argsstring>(void *pkData, int &amp;iSize)</argsstring>
        <name>CompressProtocal</name>
        <param>
          <type>void *</type>
          <declname>pkData</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="671" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="671" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1ac1878a1000fde2b1b574ed8df3701086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UnCompressProtocal</definition>
        <argsstring>(void *pkDstData, int &amp;iDstSize, void *pkSrcData, int iSrcSize)</argsstring>
        <name>UnCompressProtocal</name>
        <param>
          <type>void *</type>
          <declname>pkDstData</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>iDstSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pkSrcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iSrcSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="703" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="703" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1aa557da79ea285c12e96b72a332ae0d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float GetDistance2D</definition>
        <argsstring>(float fX1, float fY1, float fX2, float fY2)</argsstring>
        <name>GetDistance2D</name>
        <param>
          <type>float</type>
          <declname>fX1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fY1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fX2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fY2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="726" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="726" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a9c7b689c5099401af32bbac48153d89f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetParabolaParamater</definition>
        <argsstring>(float fOrgX, float fOrgY, float fMaxX, float fMaxY, float fTarX, float fTarY, float &amp;fParaA, float &amp;fParaB, float &amp;fParaC)</argsstring>
        <name>GetParabolaParamater</name>
        <param>
          <type>float</type>
          <declname>fOrgX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fOrgY</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fMaxX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fMaxY</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fTarX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fTarY</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>fParaA</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>fParaB</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>fParaC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="734" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="734" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1afaaa186ffc10038bbc4deae0f879f5ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CharToFileFun</definition>
        <argsstring>(const char *pcLogName, const char *pcInfo)</argsstring>
        <name>CharToFileFun</name>
        <param>
          <type>const char *</type>
          <declname>pcLogName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="741" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="741" bodyend="756"/>
        <referencedby refid="class_se_race_mgr_1a54a1f538cd1bed11d35eac25a1f22d12" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1631" endline="1733">SeRaceMgr::LocalCheckEnd_Guanqia</referencedby>
        <referencedby refid="class_se_race_mgr_1a80510852deed2727e759982dca6418b5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1527" endline="1629">SeRaceMgr::LocalCheckEnd_Race</referencedby>
        <referencedby refid="class_d_b_server_1a0db3175394ab3a43c744a1bf76a358fe" compoundref="_src_2_d_b_server_8cpp" startline="1171" endline="1191">DBServer::OnPrintfNetState</referencedby>
        <referencedby refid="class_match_server_1ae40699477a2e6fb92d32d925d0b9b2ea" compoundref="_src_2_se_match_other_8cpp" startline="30" endline="53">MatchServer::PrintUpdateTime</referencedby>
        <referencedby refid="class_d_b_server_1a5c5ceab5feaedb6329824a83f3affac1" compoundref="_src_2_d_b_server_8cpp" startline="1146" endline="1169">DBServer::PrintUpdateTime</referencedby>
        <referencedby refid="class_world_server_1ae9253ba0018a943c9ed75a12af533e86" compoundref="_src_2_world_server_8cpp" startline="594" endline="691">WorldServer::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1ac419ff9ea26d68f5e8738ef9b4fbbc0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CopyText</definition>
        <argsstring>(FILE *pSource, FILE *pDest)</argsstring>
        <name>CopyText</name>
        <param>
          <type>FILE *</type>
          <declname>pSource</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>pDest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="763" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="763" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1ae4a7dcae8c7ade4db1d6125aa53ab540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GetVersion</definition>
        <argsstring>(unsigned int dwVersion)</argsstring>
        <name>GetVersion</name>
        <param>
          <type>unsigned int</type>
          <declname>dwVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="786" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="786" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a6772af268d723988eceef1651a2f93e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplitStr</definition>
        <argsstring>(const std::string &amp;rkStr, const std::string &amp;rkSep, std::vector&lt; std::string &gt; &amp;rkResult)</argsstring>
        <name>SplitStr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>rkStr</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>rkSep</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>rkResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="812" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="812" bodyend="834"/>
        <referencedby refid="_se_tool_8cpp_1a2fbfbcfd5a17eae400339ac86ef57f52" compoundref="_se_tool_8cpp" startline="1473" endline="1483">SetHonorDataStrToInt</referencedby>
        <referencedby refid="_se_tool_8h_1ae9a3c2a02dea07e5e0061d74bba494bc" compoundref="_se_tool_8cpp" startline="1016" endline="1044">SplitModel_ID_Index_Texture</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a4c6ba7c350197a6fe15f739aaab4dac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplitStr</definition>
        <argsstring>(const Es::StdString &amp;rkStr, const Es::StdString &amp;rkSep, std::vector&lt; Es::StdString &gt; &amp;rkResult)</argsstring>
        <name>SplitStr</name>
        <param>
          <type>const Es::StdString &amp;</type>
          <declname>rkStr</declname>
        </param>
        <param>
          <type>const Es::StdString &amp;</type>
          <declname>rkSep</declname>
        </param>
        <param>
          <type>std::vector&lt; Es::StdString &gt; &amp;</type>
          <declname>rkResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="836" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="836" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a4bb08c7fa98ce2eda36eacba35caf413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SplitStrByPair</definition>
        <argsstring>(std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; kSep, const std::string &amp;kString, std::vector&lt; std::string &gt; &amp;akResult)</argsstring>
        <name>SplitStrByPair</name>
        <param>
          <type>std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
          <declname>kSep</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>kString</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>akResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="860" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="860" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1aa467c07e3edafc3bdbaf818b9beb37b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int SplitStrColor</definition>
        <argsstring>(const std::string &amp;kString, std::string &amp;kResult, unsigned int dwDefaultColor)</argsstring>
        <name>SplitStrColor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>kString</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>kResult</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dwDefaultColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="929" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="929" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a9ed463f9b767eaef0a38fa4e4896cb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SplitIDLevel</definition>
        <argsstring>(const std::string &amp;kStr, int &amp;iSkillTypeID, int &amp;iSkillLevel)</argsstring>
        <name>SplitIDLevel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>kStr</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>iSkillTypeID</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>iSkillLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="986" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="986" bodyend="1014"/>
        <references refid="_se_tool_8h_1a2e21c76627c851da74e084dd69fe411c" compoundref="_se_tool_8h" startline="86">STRING2INT</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1ae9a3c2a02dea07e5e0061d74bba494bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SplitModel_ID_Index_Texture</definition>
        <argsstring>(const std::string &amp;kStr, int &amp;iTypeID, int &amp;iIndex, int &amp;iTexture)</argsstring>
        <name>SplitModel_ID_Index_Texture</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>kStr</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>iTypeID</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>iIndex</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>iTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1016" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1016" bodyend="1044"/>
        <references refid="_se_tool_8cpp_1a6772af268d723988eceef1651a2f93e1" compoundref="_se_tool_8cpp" startline="812" endline="834">SplitStr</references>
        <references refid="_se_tool_8h_1a2e21c76627c851da74e084dd69fe411c" compoundref="_se_tool_8h" startline="86">STRING2INT</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1abcd1eb1d6e4c9e401c933d253faf0cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsRightIpString</definition>
        <argsstring>(const char *acIP)</argsstring>
        <name>IsRightIpString</name>
        <param>
          <type>const char *</type>
          <declname>acIP</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1046" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1046" bodyend="1074"/>
        <referencedby refid="_se_tool_8h_1a4a8fd834e7cd7e160db5b8a3dcefb21d" compoundref="_se_tool_8cpp" startline="1341" endline="1365">GetIPString2DWord</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a0f812838c0e3f15ce24dc36b623c46d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int HexCharToDec</definition>
        <argsstring>(const char *pcStr)</argsstring>
        <name>HexCharToDec</name>
        <param>
          <type>const char *</type>
          <declname>pcStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1076" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1076" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1aa99c54f5aad8a6cb427be950f05ead0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Fun_ARGB</definition>
        <argsstring>(int a, int r, int g, int b)</argsstring>
        <name>Fun_ARGB</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1108" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1108" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a8fd87a93693f5198ad0299f2e3c6019b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Get_ARGB</definition>
        <argsstring>(unsigned int col, int &amp;a, int &amp;r, int &amp;g, int &amp;b)</argsstring>
        <name>Get_ARGB</name>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1113" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1113" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1af895e134d21e379dc8121695ceeb4e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetIDCardAge</definition>
        <argsstring>(const char *pcIDCard)</argsstring>
        <name>GetIDCardAge</name>
        <param>
          <type>const char *</type>
          <declname>pcIDCard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1121" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1121" bodyend="1155"/>
        <references refid="_se_tool_8cpp_1a525fcb7d706b5d7c5bdda57e9cabe795" compoundref="_se_tool_8cpp" startline="308" endline="335">GetDBTime</references>
        <references refid="struct_se_d_b_time_1ad3512b135cdbfe62e1ad4fa1a6ab95ab" compoundref="_se_share_def_8h" startline="194" endline="197">SeDBTime::IsValid</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <references refid="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" compoundref="_se_tool_8cpp" startline="428" endline="433">NowTime</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1aad926258bf6611cd67fe84a55a8245a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ChangeVerifyCodeByKey</definition>
        <argsstring>(char *pData, int iLength, char cKey)</argsstring>
        <name>ChangeVerifyCodeByKey</name>
        <param>
          <type>char *</type>
          <declname>pData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iLength</declname>
        </param>
        <param>
          <type>char</type>
          <declname>cKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1157" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1157" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1ae07f80936f97b5fb3e97054bb0d52a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt64</type>
        <definition>UInt64 GetCPUCountS</definition>
        <argsstring>(void)</argsstring>
        <name>GetCPUCountS</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1189" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1189" bodyend="1199"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a4a8fd834e7cd7e160db5b8a3dcefb21d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetIPString2DWord</definition>
        <argsstring>(const char *acIP)</argsstring>
        <name>GetIPString2DWord</name>
        <param>
          <type>const char *</type>
          <declname>acIP</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1341" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1341" bodyend="1365"/>
        <references refid="_se_tool_8cpp_1abcd1eb1d6e4c9e401c933d253faf0cef" compoundref="_se_tool_8cpp" startline="1046" endline="1074">IsRightIpString</references>
        <referencedby refid="class_se_player_mgr_1a55a5ce79b27f3610fb6dfac278cc29ac" compoundref="_src_2_se_player_mgr_8cpp" startline="107" endline="122">SePlayerMgr::GetPlayerIP</referencedby>
        <referencedby refid="class_login_server_1ad24da72fafe770747e94c4f06375cdbc" compoundref="_src_2_se_c_l_process_8cpp" startline="30" endline="96">LoginServer::ProcessCL_PlayerLogin</referencedby>
        <referencedby refid="class_login_server_1a7edb713a9f0e97cb44d490403a2358da" compoundref="_src_2_se_c_l_process_8cpp" startline="98" endline="130">LoginServer::ProcessCL_PlayerLogin_NEW</referencedby>
        <referencedby refid="class_town_server_1a75b0b0033728f35da16780100fd67d4b" compoundref="_src_2_se_c_t_process_8cpp" startline="36" endline="88">TownServer::ProcessCT_PlayerValidate</referencedby>
        <referencedby refid="class_tcp_server_1af603e2982226258bc52370863bf8c304" compoundref="_se_parent_proc_8cpp" startline="21" endline="67">TcpServer::ProcessParent_RegisterRet</referencedby>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a1c215880fd4d2d28460df043b1286b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CanID2Str</definition>
        <argsstring>(unsigned int dwID)</argsstring>
        <name>CanID2Str</name>
        <param>
          <type>unsigned int</type>
          <declname>dwID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1381" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1381" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1aad62753a6133772cd01ee1065df2abd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetMaxValue</definition>
        <argsstring>(int iValue1, int iValue2, int iValue3, int iValue4, int iValue5)</argsstring>
        <name>GetMaxValue</name>
        <param>
          <type>int</type>
          <declname>iValue1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iValue2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iValue3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iValue4</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iValue5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1402" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1402" bodyend="1423"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a1cfa8556704af43da1523cfc84495c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int AToDw</definition>
        <argsstring>(const char *pcStr)</argsstring>
        <name>AToDw</name>
        <param>
          <type>const char *</type>
          <declname>pcStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1426" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1426" bodyend="1444"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a35f7814b0225e7b908fd7922326176a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DiffDay</definition>
        <argsstring>(const SeDBTime &amp;rkBeginTime, const SeDBTime &amp;rkEndTime)</argsstring>
        <name>DiffDay</name>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkBeginTime</declname>
        </param>
        <param>
          <type>const <ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref> &amp;</type>
          <declname>rkEndTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1446" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1446" bodyend="1471"/>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a2fbfbcfd5a17eae400339ac86ef57f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetHonorDataStrToInt</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;rkHonorInfo, const char *acSqlData)</argsstring>
        <name>SetHonorDataStrToInt</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>rkHonorInfo</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>acSqlData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1473" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1473" bodyend="1483"/>
        <references refid="_se_tool_8cpp_1a6772af268d723988eceef1651a2f93e1" compoundref="_se_tool_8cpp" startline="812" endline="834">SplitStr</references>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1af8c284797426aac794f2d1f800a6048b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetFileMD5</definition>
        <argsstring>(const char *pcFileName, TeMD5 &amp;rkMD5)</argsstring>
        <name>GetFileMD5</name>
        <param>
          <type>const char *</type>
          <declname>pcFileName</declname>
        </param>
        <param>
          <type><ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref> &amp;</type>
          <declname>rkMD5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1485" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1485" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a5c48803aa6479cbcaffd5b00bafaeb27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyOutputDebugString</definition>
        <argsstring>(const char *pcFmt,...)</argsstring>
        <name>MyOutputDebugString</name>
        <param>
          <type>const char *</type>
          <declname>pcFmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1517" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1517" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="_se_tool_8cpp_1a2fc76284dab961f5442f35bb06ef31cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref></type>
        <definition>SeDBTime GetLocalTime</definition>
        <argsstring>()</argsstring>
        <name>GetLocalTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" line="1529" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp" bodystart="1529" bodyend="1559"/>
        <references refid="_se_tool_8cpp_1a2fc76284dab961f5442f35bb06ef31cb" compoundref="_se_tool_8cpp" startline="1529" endline="1559">GetLocalTime</references>
        <references refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" compoundref="_se_share_def_8h" startline="230">SeDBTime::iDay</references>
        <references refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" compoundref="_se_share_def_8h" startline="231">SeDBTime::iHour</references>
        <references refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" compoundref="_se_share_def_8h" startline="232">SeDBTime::iMinute</references>
        <references refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" compoundref="_se_share_def_8h" startline="229">SeDBTime::iMonth</references>
        <references refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" compoundref="_se_share_def_8h" startline="233">SeDBTime::iSecond</references>
        <references refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" compoundref="_se_share_def_8h" startline="228">SeDBTime::iYear</references>
        <referencedby refid="class_tcp_server_1a34d826cc9c797b1f70b9880344da11f2" compoundref="_tcp_server_8cpp" startline="821" endline="844">TcpServer::DisconnectPlayerSock</referencedby>
        <referencedby refid="class_town_server_1a8577b1512923d05e1a55241e3c087c68" compoundref="_src_2_se_town_other_8cpp" startline="137" endline="158">TownServer::DisconnectTcpUser</referencedby>
        <referencedby refid="class_se_log_show_1ab786a2ecf548833ecd5a7132d5152999" compoundref="_se_log_show_8cpp" startline="46" endline="79">SeLogShow::Display</referencedby>
        <referencedby refid="_se_tool_8h_1a2fc76284dab961f5442f35bb06ef31cb" compoundref="_se_tool_8cpp" startline="1529" endline="1559">GetLocalTime</referencedby>
        <referencedby refid="class_se_log_show_1a4486ac618e6083c441d469d11ec94146" compoundref="_se_log_show_8cpp" startline="23" endline="44">SeLogShow::Initialize</referencedby>
        <referencedby refid="class_se_race_mgr_1a54a1f538cd1bed11d35eac25a1f22d12" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1631" endline="1733">SeRaceMgr::LocalCheckEnd_Guanqia</referencedby>
        <referencedby refid="class_se_race_mgr_1a80510852deed2727e759982dca6418b5" compoundref="_race_server_2src_2_se_race_mgr_8cpp" startline="1527" endline="1629">SeRaceMgr::LocalCheckEnd_Race</referencedby>
        <referencedby refid="_se_mini_dump_8h_1a298fe83db5109b4e7882addb075b78be" compoundref="_se_mini_dump_8cpp" startline="67" endline="158">MyExceptionFilter</referencedby>
        <referencedby refid="class_d_b_server_1a0db3175394ab3a43c744a1bf76a358fe" compoundref="_src_2_d_b_server_8cpp" startline="1171" endline="1191">DBServer::OnPrintfNetState</referencedby>
        <referencedby refid="class_match_server_1ae40699477a2e6fb92d32d925d0b9b2ea" compoundref="_src_2_se_match_other_8cpp" startline="30" endline="53">MatchServer::PrintUpdateTime</referencedby>
        <referencedby refid="class_d_b_server_1a5c5ceab5feaedb6329824a83f3affac1" compoundref="_src_2_d_b_server_8cpp" startline="1146" endline="1169">DBServer::PrintUpdateTime</referencedby>
        <referencedby refid="class_world_server_1ae9253ba0018a943c9ed75a12af533e86" compoundref="_src_2_world_server_8cpp" startline="594" endline="691">WorldServer::Update</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_tool_8h" kindref="compound">SeTool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_se_ptl_define_8h" kindref="compound">SePtlDefine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;io.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;TeLanguage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="_se_tool_8cpp_1a52f512edcd644e1f2cc38ecee5a7d3f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPRESS_NEED_SIZE<sp/>512<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>需要压缩的大小</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_VISION_POSIX</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wSecond;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wMinute;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wHour;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wDay;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wMonth;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wYear;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wDayOfWeek;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tm_yday;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tm_isdst;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__USE_BSD</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tm_gmtoff;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>__const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tm_zone;<sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__tm_gmtoff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>__const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__tm_zone;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal">}SYSTEMTIME;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_se_tool_8h_1afe24c9b45564284b7a60063a970b89f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1afe24c9b45564284b7a60063a970b89f0" kindref="member">StrCat</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDstSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest<sp/>||<sp/>iDstSize<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;StrCat<sp/>Error<sp/>Point<sp/>Is<sp/>Null!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((dest<sp/>-<sp/>tmp<sp/>&lt;<sp/>(iDstSize-1))<sp/>&amp;&amp;<sp/>*dest)<sp/>dest++;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((dest<sp/>-tmp<sp/>&lt;<sp/>(iDstSize-1))<sp/>&amp;&amp;<sp/><sp/>(*dest++<sp/>=<sp/>*src++)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>字符串拷贝</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="_se_tool_8h_1a4d30fbe56257fc998ebc1346e53be0d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a4d30fbe56257fc998ebc1346e53be0d8" kindref="member">StrCpy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcDst,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDstSize,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcSrc)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pcDst<sp/>||<sp/>iDstSize<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0&amp;&amp;</highlight><highlight class="stringliteral">&quot;StrCpy<sp/>Error<sp/>Point<sp/>Is<sp/>Null!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcSrc)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*pcSrc)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iSize<sp/>&gt;=<sp/>(iDstSize<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pcDst++)<sp/>=<sp/>*(pcSrc++);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iSize++;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>*pcDst<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>内存拷贝</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="_se_tool_8h_1a4697a1b0adee30e7c3810134c6cfe519" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a4697a1b0adee30e7c3810134c6cfe519" kindref="member">MemCpy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkDst,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDstSize,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkSrc,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCpySize)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pkDst<sp/>||<sp/>!pkSrc<sp/>||<sp/>iDstSize<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0&amp;&amp;</highlight><highlight class="stringliteral">&quot;MemCpy<sp/>Error<sp/>Point<sp/>Is<sp/>Null!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iCpySize<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize<sp/>=<sp/>(iCpySize<sp/>&gt;<sp/>iDstSize)<sp/>?<sp/>iDstSize<sp/>:<sp/>iCpySize;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::FastMemCpy(pkDst,pkSrc,iSize);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="_se_tool_8h_1a6002fe8fbfd203d701f1e574800a8015" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a6002fe8fbfd203d701f1e574800a8015" kindref="member">CHStrStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcDstChar,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcSrcChar)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(!pcDstChar<sp/>||<sp/>!pcSrcChar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>iDstLen<sp/>=<sp/>(int)strlen(pcDstChar);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>iSrcLen<sp/>=<sp/>(int)strlen(pcSrcChar);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(iDstLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>iSrcLen<sp/>&lt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(iDstLen<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>iSrcLen<sp/>&lt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(iSrcLen<sp/>&gt;<sp/>iDstLen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>for(int<sp/>iDstIndex<sp/>=<sp/>0;<sp/>iDstIndex<sp/>&lt;<sp/>iDstLen;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><sp/>char*<sp/>pcDstTmp<sp/>=<sp/>&amp;pcDstChar[iDstIndex];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><sp/>char*<sp/>pcSrcTmp<sp/>=<sp/>pcSrcChar;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>while(*pcDstTmp<sp/>==<sp/>*pcSrcTmp<sp/>&amp;&amp;<sp/>*pcDstTmp<sp/>!=<sp/>&apos;\0&apos;<sp/>&amp;&amp;<sp/>*pcSrcTmp<sp/>!=<sp/>&apos;\0&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcDstTmp++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcSrcTmp++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(*pcSrcTmp<sp/>==<sp/>&apos;\0&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>非英文的处理</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(IsAnsiWord(pcDstChar<sp/>+<sp/>iDstIndex))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iDstIndex<sp/>+=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iDstIndex++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="_se_tool_8h_1a33600034126a334c11146f2f411faf06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a33600034126a334c11146f2f411faf06" kindref="member">CHStrStr_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcDstChar,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcSrcChar)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(!pcDstChar<sp/>||<sp/>!pcSrcChar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>iDstLen<sp/>=<sp/>(int)strlen(pcDstChar);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>iSrcLen<sp/>=<sp/>(int)strlen(pcSrcChar);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(iDstLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>iSrcLen<sp/>&lt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(iDstLen<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>iSrcLen<sp/>&lt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(iSrcLen<sp/>&gt;<sp/>iDstLen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>for(int<sp/>iDstIndex<sp/>=<sp/>0;<sp/>iDstIndex<sp/>&lt;<sp/>iDstLen,iDstIndex<sp/>&lt;<sp/>iSrcLen;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><sp/>char*<sp/>pcDstTmp<sp/>=<sp/>&amp;pcDstChar[iDstIndex];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><sp/>char*<sp/>pcSrcTmp<sp/>=<sp/>pcSrcChar;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>while(*pcDstTmp<sp/>==<sp/>*pcSrcTmp<sp/>&amp;&amp;<sp/>*pcDstTmp<sp/>!=<sp/>&apos;\0&apos;<sp/>&amp;&amp;<sp/>*pcSrcTmp<sp/>!=<sp/>&apos;\0&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcDstTmp++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcSrcTmp++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(*pcSrcTmp<sp/>==<sp/>&apos;\0&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>非英文的处理</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(IsAnsiWord(pcDstChar<sp/>+<sp/>iDstIndex))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iDstIndex<sp/>+=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//iDstIndex++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>字符串拆分</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="_se_tool_8h_1a283fbb2e28e0571cc7a7b1aaf5334ecd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_se_tool_8cpp_1a283fbb2e28e0571cc7a7b1aaf5334ecd" kindref="member">GetAString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcSrcStr,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcGetStr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iGetSize)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p0<sp/>=<sp/>pcSrcStr;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>过滤开始的空格和Tab键</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*p0<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*p0<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*p0<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0++;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>得到结束的位置</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p1<sp/>=<sp/>p0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*p1<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>||<sp/>*p1<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*p1<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1++;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p1<sp/>&lt;=<sp/>p0)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen<sp/>=<sp/>(int)(p1<sp/>-<sp/>p0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iLen<sp/>&gt;<sp/>(iGetSize<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iLen<sp/>=<sp/>iGetSize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(pcGetStr,p0,iLen);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>pcGetStr[iLen]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p1;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>帐号类型<sp/>0:非法<sp/>1:邮箱地址<sp/>2:数字ID<sp/>3:手机号</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="_se_tool_8h_1a0738c1c6a2304023c6ef64813fe1e635" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a0738c1c6a2304023c6ef64813fe1e635" kindref="member">GetAccountType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcAccount)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>长度是否符合(数字ID必然是4位数以上)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen<sp/>=<sp/>(int)strlen(pcAccount);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iLen<sp/>&lt;<sp/>4<sp/>||<sp/>iLen<sp/>&gt;=<sp/><ref refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa18cafe3efe01affef3c9def797330428" kindref="member">SSD_MAX_ACCOUNT</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>是否是数字ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllNum<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>iLen;++i)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcAccount[i]<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>||<sp/>pcAccount[i]<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bAllNum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>全是数值并且长度是11位的则是手机号</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bAllNum<sp/>&amp;&amp;<sp/>iLen<sp/>==<sp/>11)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bAllNum)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>判断是否符合邮箱的格式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iLen<sp/>&lt;<sp/><ref refid="_se_ptl_comm_define_8h_1af62c3a00672953c86a2586d53c60663aa610957174673d74b1c66e3fce668f664" kindref="member">SSD_MIN_ACCOUNT</ref>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>是否有&apos;@&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>取消判断邮箱格式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>const<sp/>char*<sp/>pcStr<sp/>=<sp/>strstr(pcAccount,&quot;@&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(!pcStr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>&apos;@&apos;后面是否有&apos;.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>pcStr<sp/>=<sp/>strstr(pcStr,&quot;.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(!pcStr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="_se_tool_8h_1a525fcb7d706b5d7c5bdda57e9cabe795" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a525fcb7d706b5d7c5bdda57e9cabe795" kindref="member">GetDBTime</ref>(<ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkTime,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcDBTime)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pcDBTime)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;rkTime,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MySql的时间格式为19个字符(比如&apos;2010-02-01<sp/>18:34:17&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(pcDBTime)<sp/>!=<sp/>19)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcStr<sp/>=<sp/>pcDBTime;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>atoi(pcStr);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>pcStr<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>atoi(pcStr);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>pcStr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>atoi(pcStr);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>pcStr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref><sp/>=<sp/>atoi(pcStr);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>pcStr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref><sp/>=<sp/>atoi(pcStr);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>pcStr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref><sp/>=<sp/>atoi(pcStr);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="_se_tool_8h_1abc9e47253533252ceb5e59c99928a0ed" refkind="member"><highlight class="normal"><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/><ref refid="_se_tool_8cpp_1abc9e47253533252ceb5e59c99928a0ed" kindref="member">DiffDBTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kBegin;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kBegin,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_year<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_mon<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_mday<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_hour<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_min<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_sec<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/>iTime<sp/>=<sp/>mktime(&amp;kBegin);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kEnd;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kEnd,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_year<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_mon<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_mday<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_hour<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_min<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_sec<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>iTime<sp/>=<sp/>mktime(&amp;kEnd)<sp/>-<sp/>iTime;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iTime;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="_se_tool_8h_1a1f4142f13f05b8945b43196f6f5d1ef0" refkind="member"><highlight class="normal"><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/><ref refid="_se_tool_8cpp_1a1f4142f13f05b8945b43196f6f5d1ef0" kindref="member">DiffDailyDBTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kBegin;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kBegin,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_year<sp/>=<sp/>114;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_mon<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_mday<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_hour<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_min<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_sec<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/>iTime<sp/>=<sp/>mktime(&amp;kBegin);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kEnd;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kEnd,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_year<sp/>=<sp/>114;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_mon<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_mday<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_hour<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_min<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_sec<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>iTime<sp/>=<sp/>mktime(&amp;kEnd)<sp/>-<sp/>iTime;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iTime;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="_se_tool_8h_1abeb3711f70853977b613c46868ec5b0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a92be8b4b36c5b5b17c097dde7fc9c293" kindref="member">AddDBTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,<ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDay,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iHour,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMin,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSec)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!rkBeginTime.<ref refid="struct_se_d_b_time_1ad3512b135cdbfe62e1ad4fa1a6ab95ab" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kTime;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_year<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_mon<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_mday<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_hour<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_min<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_sec<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_yday<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>days<sp/>since<sp/>January<sp/>1<sp/>-<sp/>[0,365]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_isdst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/>iTime<sp/>=<sp/>mktime(&amp;kTime);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>iTime<sp/>+=<sp/>(<ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>)((<ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>)iDay<sp/>*<sp/>24<sp/>+<sp/>(<ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>)iHour)<sp/>*<sp/>3600<sp/>+<sp/>(<ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>)iMin<sp/>*<sp/>60<sp/>+<sp/>(<ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref>)iSec;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iTime<sp/>&lt;<sp/>0<sp/>||<sp/>iTime<sp/>&gt;<sp/>4136544000)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>说明是个很大的数字，要进行纠错</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>2100;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime<sp/>=<sp/>*localtime((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_t*)&amp;iTime);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>kTime.tm_year<sp/>+<sp/>1900;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>kTime.tm_mon<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>kTime.tm_mday;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref><sp/>=<sp/>kTime.tm_hour;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref><sp/>=<sp/>kTime.tm_min;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref><sp/>=<sp/>kTime.tm_sec;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="_se_tool_8h_1ab5215c746438d47cd602ac9cd661d806" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" kindref="member">NowTime</ref>(<ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkTime)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>tmTime;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>tmTime<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_se_tool_8cpp_1a525fcb7d706b5d7c5bdda57e9cabe795" kindref="member">GetDBTime</ref>(tmTime,<sp/>rkTime);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="_se_tool_8h_1a53e587eb049ef13e4ef94f32d5643790" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a525fcb7d706b5d7c5bdda57e9cabe795" kindref="member">GetDBTime</ref>(time_t<sp/>time,<sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkTime)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kTime;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime<sp/>=<sp/>*localtime(&amp;time);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>kTime.tm_year<sp/>+<sp/>1900;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>kTime.tm_mon<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>kTime.tm_mday;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref><sp/>=<sp/>kTime.tm_hour;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref><sp/>=<sp/>kTime.tm_min;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>rkTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref><sp/>=<sp/>kTime.tm_sec;</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="_se_tool_8h_1a9a85bd4679db5886f6c846731b5606ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a9a85bd4679db5886f6c846731b5606ff" kindref="member">GetDayOfWeek</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkTime)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>原星期算法存在问题,把算法改为蔡勒算法</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCentury<sp/>=<sp/>rkTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iYear<sp/>=<sp/>rkTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>iCentury<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMonth<sp/>=<sp/>rkTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iMonth<sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iMonth<sp/>=<sp/>iMonth<sp/>+<sp/>12;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iYear<sp/>=<sp/>iYear<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iTemp<sp/>=<sp/>iCentury<sp/>/<sp/>4<sp/>-<sp/>2<sp/>*<sp/>iCentury<sp/>+<sp/>iYear<sp/>+<sp/>iYear<sp/>/<sp/>4<sp/>+<sp/>13<sp/>*<sp/>(iMonth<sp/>+<sp/>1)<sp/>/<sp/>5<sp/>+<sp/>rkTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(iTemp<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iTemp<sp/>+=<sp/>7;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iTemp<sp/>%<sp/>7;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="_se_tool_8h_1a8344bb964fcc40c072a835ad3a0b4aa7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a8344bb964fcc40c072a835ad3a0b4aa7" kindref="member">IsDiffWeek</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref><sp/>kTemBeginTime,kTemEndTime;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>kTemBeginTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>kTemBeginTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>kTemBeginTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>kTemEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>kTemEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>kTemEndTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBeginWeekDay<sp/>=<sp/><ref refid="_se_tool_8cpp_1a9a85bd4679db5886f6c846731b5606ff" kindref="member">GetDayOfWeek</ref>(kTemBeginTime);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iBeginWeekDay<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iBeginWeekDay<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSubfDay<sp/>=<sp/>(int)(<ref refid="_se_tool_8cpp_1abc9e47253533252ceb5e59c99928a0ed" kindref="member">DiffDBTime</ref>(kTemBeginTime,kTemEndTime)<sp/>/<sp/>(24<sp/>*<sp/>60<sp/>*<sp/>60));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((iBeginWeekDay<sp/>+<sp/>iSubfDay)<sp/>&gt;<sp/>7)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="_se_tool_8h_1a3d5259950103d84bbf1773bdc37a210b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a3d5259950103d84bbf1773bdc37a210b" kindref="member">IsDiffDay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rkBeginTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>!=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>||<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>!=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>||<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>!=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="_se_tool_8h_1ac5383c15a1bc28fa991575a77e0af696" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1ac5383c15a1bc28fa991575a77e0af696" kindref="member">IsDiffMonth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rkBeginTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>!=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>||<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>!=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="_se_tool_8h_1a8010cec75553ac9e7d562f78e63cd07a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" kindref="member">NowTime</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref><sp/>kTime;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" kindref="member">NowTime</ref>(kTime);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s_acString[64]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(s_acString,</highlight><highlight class="stringliteral">&quot;%04d-%02d-%02d<sp/>%02d:%02d:%02d&quot;</highlight><highlight class="normal">,kTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref>,kTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref>,kTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>,kTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref>,kTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref>,kTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_acString;</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="_se_tool_8h_1aa759099a5cb96533821497fdb4bc3614" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1aa759099a5cb96533821497fdb4bc3614" kindref="member">GetDayEndTime</ref>(<ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref><sp/>kNowTime;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" kindref="member">NowTime</ref>(kNowTime);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime<sp/>=<sp/>kNowTime;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref><sp/>=<sp/>23;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref><sp/>=<sp/>59;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref><sp/>=<sp/>59;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="_se_tool_8h_1a5e2e5def9b988f39d21047b9de9c1bb9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a5e2e5def9b988f39d21047b9de9c1bb9" kindref="member">GetWeekOfYear</ref>(<ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkTime)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref><sp/>kFirstTime;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>kFirstTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>rkTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>kFirstTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>kFirstTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>先计算该年第一天是周几</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iFirstDayOfWeek<sp/>=<sp/><ref refid="_se_tool_8cpp_1a9a85bd4679db5886f6c846731b5606ff" kindref="member">GetDayOfWeek</ref>(kFirstTime);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/>iDiffDay<sp/>=<sp/><ref refid="_se_tool_8cpp_1abc9e47253533252ceb5e59c99928a0ed" kindref="member">DiffDBTime</ref>(kFirstTime,rkTime);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算一年的几天</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDayOfYear<sp/>=<sp/>(int)(iDiffDay<sp/>/<sp/>(60<sp/>*<sp/>60<sp/>*<sp/>24))<sp/>+<sp/>iFirstDayOfWeek;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iWeekOfYear<sp/>=<sp/>iDayOfYear<sp/>/<sp/>7<sp/>+<sp/>((iDayOfYear<sp/>%<sp/>7)?1:0);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iWeekOfYear;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">//<sp/>开始日期设为第一周，计算是第几周</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="_se_tool_8h_1a9e84649d897760fc3afa76254f653322" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a9e84649d897760fc3afa76254f653322" kindref="member">GetDiffWeek</ref>(<ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,<ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iFirstDayOfWeek<sp/>=<sp/><ref refid="_se_tool_8cpp_1a9a85bd4679db5886f6c846731b5606ff" kindref="member">GetDayOfWeek</ref>(rkBeginTime);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDiffDay<sp/>=<sp/><ref refid="_se_tool_8cpp_1a07f3613adb429ccc97a9456835a66ee3" kindref="member">DiffDBDay</ref>(rkBeginTime,rkEndTime);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iFirstDayOfWeek<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iFirstDayOfWeek<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算第几天</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDayOfYear<sp/>=<sp/>(int)(iDiffDay)<sp/>+<sp/>iFirstDayOfWeek;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iWeekOfYear<sp/>=<sp/>iDayOfYear<sp/>/<sp/>7<sp/>+<sp/>((iDayOfYear<sp/>%<sp/>7)?1:0);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iWeekOfYear;</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="_se_tool_8h_1a07f3613adb429ccc97a9456835a66ee3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a07f3613adb429ccc97a9456835a66ee3" kindref="member">DiffDBDay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kBegin;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kBegin,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_year<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_mon<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_mday<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/>iTime<sp/>=<sp/>mktime(&amp;kBegin);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kEnd;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kEnd,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_year<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_mon<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_mday<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>iTime<sp/>=<sp/>mktime(&amp;kEnd)<sp/>-<sp/>iTime;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(iTime<sp/>/<sp/>(3600*24));</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="_se_tool_8h_1a2aa051ed04091591f44ef1c1d00199c9" refkind="member"><highlight class="normal">time_t<sp/><ref refid="_se_tool_8cpp_1a2aa051ed04091591f44ef1c1d00199c9" kindref="member">GetTDBTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkDBTime)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kTime;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kTime,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_year<sp/>=<sp/>rkDBTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_mon<sp/>=<sp/>rkDBTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_mday<sp/>=<sp/>rkDBTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_hour<sp/>=<sp/>rkDBTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_min<sp/>=<sp/>rkDBTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.tm_sec<sp/>=<sp/>rkDBTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mktime(&amp;kTime);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>字符串到ID的转换</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="_se_tool_8h_1a03bcc77ad4ef4845b20fc5cf4db96834" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a03bcc77ad4ef4845b20fc5cf4db96834" kindref="member">GetStr2ID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acID)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acID)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)acID[0])&lt;&lt;24)|(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)acID[1])&lt;&lt;16)|(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)acID[2])&lt;&lt;8)|((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)acID[3]));</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>字符串到Word的转换</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="_se_tool_8h_1a9dbdd88f6ee44ba1a2d6a9c94e86bf3d" refkind="member"><highlight class="normal">Word<sp/><ref refid="_se_tool_8cpp_1a9dbdd88f6ee44ba1a2d6a9c94e86bf3d" kindref="member">GetStr2Word</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acID)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acID)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((((Word)acID[1])&lt;&lt;8)|((Word)acID[0]));</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="_se_tool_8h_1ae79cd7584710bcec1b607bdd2f1d626d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a6497eac0be6c9f745075277304dc24d0" kindref="member">GetCheckCode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkData,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwOrgCRC)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pkData<sp/>||<sp/>iSize<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>(unsigned<sp/>int)GetCRC32(pkData,<sp/>iSize,<sp/>(int)dwOrgCRC);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="_se_tool_8h_1a1cf7ec78fb6f69a807c3f15e0554909a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a1cf7ec78fb6f69a807c3f15e0554909a" kindref="member">GenEncryptKey</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkKey,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>Byte*<sp/>pbyKey<sp/>=<sp/>(Byte<sp/>*)pkKey;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>iSize;i++,pbyKey++)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pbyKey<sp/>=<sp/>1<sp/>+<sp/>rand()<sp/>%<sp/>253;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="_se_tool_8h_1a8385d9d5d87ef362db3c57e257efeaec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a8385d9d5d87ef362db3c57e257efeaec" kindref="member">EncodeProtocol</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkData,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize,Byte<sp/>abyKey[])</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>iSize<sp/>-=<sp/>sizeof(SeCMD);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(iSize<sp/>&lt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SeCMD*<sp/>pkCmdData<sp/>=<sp/>(SeCMD<sp/>*)pkData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>pkCmdData-&gt;SetFlag(SCF_ENCRYPT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>EncodeData((Byte<sp/>*)pkData<sp/>+<sp/>sizeof(SeCMD),iSize,abyKey);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="_se_tool_8h_1a7355f89218924241ce9baf483e808596" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a7355f89218924241ce9baf483e808596" kindref="member">DecodeProtocol</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSize,<sp/>Byte<sp/>abyKey[])</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>iSize<sp/>-=<sp/>sizeof(SeCMD);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(iSize<sp/>&lt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SeCMD*<sp/>pkCmdData<sp/>=<sp/>(SeCMD<sp/>*)pkData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(pkCmdData-&gt;HasFlag(SCF_ENCRYPT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>DecodeData((Byte<sp/>*)pkData<sp/>+<sp/>sizeof(SeCMD),<sp/>iSize,<sp/>abyKey);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>pkCmdData-&gt;ClrFlag(SCF_ENCRYPT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="_se_tool_8h_1a96ab73af0f20c39198b553a067bbe46e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a96ab73af0f20c39198b553a067bbe46e" kindref="member">CompressProtocal</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkData,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iSize)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(iSize<sp/>&lt;<sp/>COMPRESS_NEED_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>iComSize<sp/>=<sp/>iSize<sp/>-<sp/>sizeof(SeCMD);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(iComSize<sp/>&lt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Byte<sp/>abyData[SSD_SEND_SIZE]<sp/>=<sp/>{0};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>iDstSize<sp/>=<sp/>SSD_SEND_SIZE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(CompressData(abyData,iDstSize,(Byte<sp/>*)pkData<sp/>+<sp/>sizeof(SeCMD),iComSize))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(iDstSize<sp/>&gt;=<sp/>iComSize)<sp/><sp/><sp/><sp/>//<sp/>如果压缩后结果反而大了，则不需要改变</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>SeCMD*<sp/>pkCmdData<sp/>=<sp/>(SeCMD<sp/>*)pkData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>pkCmdData-&gt;SetFlag(SCF_COMPRESS);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>memcpy((Byte<sp/>*)pkData<sp/>+<sp/>sizeof(SeCMD),abyData,iDstSize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>iSize<sp/>=<sp/>iDstSize<sp/>+<sp/>sizeof(SeCMD);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="_se_tool_8h_1ac1878a1000fde2b1b574ed8df3701086" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1ac1878a1000fde2b1b574ed8df3701086" kindref="member">UnCompressProtocal</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkDstData,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iDstSize,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pkSrcData,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSrcSize)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*SeCMD*<sp/>pkCmdData<sp/>=<sp/>(SeCMD<sp/>*)pkSrcData;</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/><sp/>if(pkCmdData-&gt;HasFlag(SCF_COMPRESS))</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/><sp/>Byte*<sp/>pbyDst<sp/>=<sp/>(Byte<sp/>*)pkDstData;</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/><sp/>memcpy(pbyDst,pkSrcData,sizeof(SeCMD));</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/><sp/><sp/><sp/>pbyDst<sp/>+=<sp/>sizeof(SeCMD);</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/><sp/><sp/>iDstSize<sp/>-=<sp/>sizeof(SeCMD);</highlight></codeline>
<codeline lineno="712"><highlight class="comment"></highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>iComSize<sp/>=<sp/>iSrcSize<sp/>-<sp/>sizeof(SeCMD);</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/><sp/>if(UncompressData(pbyDst,iDstSize,(Byte<sp/>*)pkSrcData<sp/>+<sp/>sizeof(SeCMD),iComSize))</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/>iDstSize<sp/>+=<sp/>sizeof(SeCMD);</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/><sp/><sp/>pkCmdData-&gt;ClrFlag(SCF_COMPRESS);</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="_se_tool_8h_1aa557da79ea285c12e96b72a332ae0d98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1aa557da79ea285c12e96b72a332ae0d98" kindref="member">GetDistance2D</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fX1,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fY1,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fX2,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fY2)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDeltaX<sp/>=<sp/>fX1<sp/>-<sp/>fX2;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDeltaY<sp/>=<sp/>fY1<sp/>-<sp/>fY2;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrtf(fDeltaX<sp/>*<sp/>fDeltaX<sp/>+<sp/>fDeltaY<sp/>*<sp/>fDeltaY);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="comment">//<sp/>已经起点，最高点，终点，求抛物线的参数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="_se_tool_8h_1a9c7b689c5099401af32bbac48153d89f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a9c7b689c5099401af32bbac48153d89f" kindref="member">GetParabolaParamater</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOrgX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOrgY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fMaxX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fMaxY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fTarX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fTarY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>fParaA,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>fParaB,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>fParaC)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>fParaB<sp/>=<sp/>((fOrgY<sp/>-<sp/>fTarY)<sp/>*<sp/>(fOrgX<sp/>*<sp/>fOrgX<sp/>-<sp/>fMaxX<sp/>*<sp/>fMaxX)<sp/>-<sp/>(fOrgY<sp/>-<sp/>fMaxY)<sp/>*<sp/>(fOrgX<sp/>*<sp/>fOrgX<sp/>-<sp/>fTarX<sp/>*<sp/>fTarX))<sp/>/<sp/>((fOrgX<sp/>-<sp/>fTarX)<sp/>*<sp/>(fOrgX<sp/>*<sp/>fOrgX<sp/>-<sp/>fMaxX<sp/>*<sp/>fMaxX)<sp/>-<sp/>(fOrgX<sp/>-<sp/>fMaxX)<sp/>*<sp/>(fOrgX<sp/>*<sp/>fOrgX<sp/>-<sp/>fTarX<sp/>*<sp/>fTarX));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>fParaA<sp/>=<sp/>((fOrgY<sp/>-<sp/>fMaxY)<sp/>-<sp/>fParaB<sp/>*<sp/>(fOrgX<sp/>-<sp/>fMaxX))<sp/>/<sp/>(fOrgX<sp/>*<sp/>fOrgX<sp/>-<sp/>fMaxX<sp/>*<sp/>fMaxX);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>fParaC<sp/>=<sp/>fOrgY<sp/>-<sp/>fParaA<sp/>*<sp/>fOrgX<sp/>*<sp/>fOrgX<sp/>-<sp/>fParaB<sp/>*<sp/>fOrgX;</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741" refid="_se_tool_8h_1afaaa186ffc10038bbc4deae0f879f5ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1afaaa186ffc10038bbc4deae0f879f5ea" kindref="member">CharToFileFun</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcLogName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcInfo)</highlight></codeline>
<codeline lineno="742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pcLogName<sp/>||<sp/>!strlen(pcLogName)<sp/>||<sp/>strlen(pcLogName)<sp/>&gt;<sp/>128<sp/>||<sp/>!pcInfo)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>记录要有效</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>acTemp[256]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(acTemp,</highlight><highlight class="stringliteral">&quot;./%s.log&quot;</highlight><highlight class="normal">,pcLogName);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>fp<sp/>=<sp/>fopen(acTemp,</highlight><highlight class="stringliteral">&quot;a+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fp)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputs(pcInfo,fp);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>IsFileExist(const<sp/>char*<sp/>pcFile)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>(access(pcFile,0)<sp/>==<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763" refid="_se_tool_8h_1ac419ff9ea26d68f5e8738ef9b4fbbc0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1ac419ff9ea26d68f5e8738ef9b4fbbc0d" kindref="member">CopyText</ref>(FILE*<sp/>pSource,FILE*<sp/>pDest)</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pSource<sp/>||<sp/>!pDest)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cChar;<sp/></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!feof(pSource))</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cChar<sp/>=<sp/>fgetc(pSource);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(cChar,pDest);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cChar<sp/>==<sp/>-1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//去掉来自源文件尾的文件结束符</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek(pDest,-1L,SEEK_CUR);<sp/><sp/></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,pDest);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="_se_tool_8h_1ae4a7dcae8c7ade4db1d6125aa53ab540" refkind="member"><highlight class="normal">std::string<sp/><ref refid="_se_tool_8cpp_1ae4a7dcae8c7ade4db1d6125aa53ab540" kindref="member">GetVersion</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwVersion)</highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>kRet;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>i<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>acResult[128]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwMain<sp/>=<sp/>((dwVersion<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(acResult,</highlight><highlight class="stringliteral">&quot;%d.&quot;</highlight><highlight class="normal">,dwMain);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>kRet<sp/>+=<sp/>acResult;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwSub1<sp/>=<sp/>((dwVersion<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(acResult,</highlight><highlight class="stringliteral">&quot;%d.&quot;</highlight><highlight class="normal">,dwSub1);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>kRet<sp/>+=<sp/>acResult;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwSub2<sp/>=<sp/>((dwVersion<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(acResult,</highlight><highlight class="stringliteral">&quot;%d.&quot;</highlight><highlight class="normal">,dwSub2);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>kRet<sp/>+=<sp/>acResult;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwSub3<sp/>=<sp/>(dwVersion<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(acResult,</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,dwSub3);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>kRet<sp/>+=<sp/>acResult;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kRet;</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="comment">//<sp/>全局的功能函数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="_se_tool_8h_1a6b31e5761c6bf42a214990a855be9764" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a6772af268d723988eceef1651a2f93e1" kindref="member">SplitStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>rkStr,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>rkSep,std::vector&lt;std::string&gt;&amp;<sp/>rkResult)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rkStr.empty()<sp/>||<sp/>rkSep.empty())</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>kTemp<sp/>=<sp/>rkStr;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(kTemp.length())</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string::size_type<sp/>iRet<sp/>=<sp/>kTemp.find(rkSep);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>kPart<sp/>=<sp/>kTemp.substr(0,iRet);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkResult.push_back(kPart);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iRet<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTemp<sp/>=<sp/>kTemp.substr(iRet<sp/>+<sp/>rkSep.length());</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTemp.clear();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="_se_tool_8h_1a50b72951db59db12df27cd8af7452cb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a6772af268d723988eceef1651a2f93e1" kindref="member">SplitStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Es::StdString&amp;<sp/>rkStr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Es::StdString&amp;<sp/>rkSep,<sp/>std::vector&lt;Es::StdString&gt;&amp;<sp/>rkResult)</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rkStr.empty()<sp/>||<sp/>rkSep.empty())</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>Es::StdString<sp/>kTemp<sp/>=<sp/>rkStr;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(kTemp.length())</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Es::StdString::size_type<sp/>iRet<sp/>=<sp/>kTemp.find(rkSep);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Es::StdString<sp/>kPart<sp/>=<sp/>kTemp.substr(0,<sp/>iRet);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkResult.push_back(kPart);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iRet<sp/>!=<sp/>Es::StdString::npos)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTemp<sp/>=<sp/>kTemp.substr(iRet<sp/>+<sp/>rkSep.length());</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTemp.clear();</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="_se_tool_8h_1a4bb08c7fa98ce2eda36eacba35caf413" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a4bb08c7fa98ce2eda36eacba35caf413" kindref="member">SplitStrByPair</ref>(std::vector&lt;std::pair&lt;std::string,std::string&gt;<sp/>&gt;<sp/>kSep,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kString,std::vector&lt;std::string&gt;&amp;<sp/>akResult)</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSepIndex<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>-1表示没有进入任何分隔符，其他数值表示进入对应的分隔符</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>strBuf[1024]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSavePos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcString<sp/>=<sp/>kString.c_str();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBeginLen<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iEndLen<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)kString.length();<sp/>++i)</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(iSepIndex)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iIndex<sp/>=<sp/>0;<sp/>iIndex<sp/>&lt;<sp/>(int)kSep.size();<sp/>++iIndex)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>这里寻找起始符号</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iBeginLen<sp/>=<sp/>(int)kSep[iIndex].first.length();</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strncmp(pcString+i,kSep[iIndex].first.c_str(),iBeginLen)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iEndLen<sp/>=<sp/>(int)kSep[iIndex].second.length();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>这里要把之前存储的串压入，然后切换到新的状态</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(strBuf))</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>akResult.push_back(strBuf);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(strBuf,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(strBuf));</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iSavePos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iSepIndex<sp/>=<sp/>iIndex;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>保留字符串</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strBuf[iSavePos++]<sp/>=<sp/>pcString[i];</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>这里要寻找结束符，按照已经有的配对，这里使用一个小技巧，向前查找，等结束符的长度已经被压入后再查找</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>这样查找的好处是可以避免逻辑上的多分支</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iSavePos<sp/>&gt;=<sp/>iBeginLen<sp/>+<sp/>iEndLen)<sp/></highlight><highlight class="comment">//<sp/>只有有足够长的串的时候才开始查找</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strncmp(pcString<sp/>+<sp/>i<sp/>-<sp/>iEndLen,kSep[iSepIndex].second.c_str(),iEndLen)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>找到了结束符，保存结果，然后切换到寻找状态</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>akResult.push_back(strBuf);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(strBuf,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(strBuf));</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iSavePos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iSepIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//保存字符串</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strBuf[iSavePos++]<sp/>=<sp/>pcString[i];</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>结束了，保存最后的字符串</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(strBuf))</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>akResult.push_back(strBuf);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">//<sp/>拆分被单个颜色码包围的字符串，返回一个纯字符串和一个颜色码</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="_se_tool_8h_1aebdd7edcab5d5177c3e67004be5c5102" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1aa467c07e3edafc3bdbaf818b9beb37b3" kindref="member">SplitStrColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kString,std::string&amp;<sp/>kResult,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwDefaultColor)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>包含颜色码的字符串满足如下规则：</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>字符串以|c或者|C开始，后面跟8个字节的16进制编码，串尾以|r结束</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>所以串的长度最少要2<sp/>+<sp/>8<sp/>+<sp/>2<sp/>=<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kString.length()<sp/>&lt;<sp/>12)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kResult<sp/>=<sp/>kString;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOK<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>必须全部条件都满足</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>首先起始字符是|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kString.c_str()[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>kString.c_str()[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>kString.c_str()[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>kString.c_str()[kString.length()-1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>kString.c_str()[kString.length()-2]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bOK<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2~10的字符必须是16进制字符串</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>10;<sp/>++i)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(kString.c_str()[i]<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>||<sp/>kString.c_str()[i]<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(kString.c_str()[i]<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>||<sp/>kString.c_str()[i]<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(kString.c_str()[i]<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>||<sp/>kString.c_str()[i]<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(kString.c_str()[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bOK<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bOK)<sp/></highlight><highlight class="comment">//<sp/>好了，可以解析</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kResult<sp/>=<sp/>kString.substr(10,kString.length()<sp/>-<sp/>12);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>kColor<sp/>=<sp/>kString.substr(2,8);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwColor<sp/>=<sp/>dwDefaultColor;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>acTempColor[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(acTempColor,</highlight><highlight class="stringliteral">&quot;0x%s&quot;</highlight><highlight class="normal">,kColor.c_str());</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(acTempColor,</highlight><highlight class="stringliteral">&quot;0x%x&quot;</highlight><highlight class="normal">,&amp;dwColor);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dwColor;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kResult<sp/>=<sp/>kString;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dwDefaultColor;</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986" refid="_se_tool_8h_1a9ed463f9b767eaef0a38fa4e4896cb48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a9ed463f9b767eaef0a38fa4e4896cb48" kindref="member">SplitIDLevel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kStr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iSkillTypeID,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iSkillLevel)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kStr.length())</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>kTemp<sp/>=<sp/>kStr;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>分隔符是&apos;#&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>kSep<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string::size_type<sp/>iRet<sp/>=<sp/>kTemp.find(kSep);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>kID<sp/>=<sp/>kTemp.substr(0,iRet);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>kLvl<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>默认是1级</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iRet<sp/>!=<sp/>std::string::npos)<sp/></highlight><highlight class="comment">//<sp/>后面填了等级数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kLvl<sp/>=<sp/>kTemp.substr(iRet<sp/>+<sp/>kSep.length());</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ID和等级都有了，进行字符串转化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iSkillTypeID<sp/>=<sp/><ref refid="_se_tool_8h_1a2e21c76627c851da74e084dd69fe411c" kindref="member">STRING2INT</ref>(kID);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!iSkillTypeID)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iSkillLevel<sp/>=<sp/>atoi(kLvl.c_str());</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iSkillLevel<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iSkillLevel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016" refid="_se_tool_8h_1ae9a3c2a02dea07e5e0061d74bba494bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1ae9a3c2a02dea07e5e0061d74bba494bc" kindref="member">SplitModel_ID_Index_Texture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kStr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iTypeID,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iIndex,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iTexture)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!kStr.length())</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>kTypeID<sp/>=<sp/>kStr;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//先看有没有贴图</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>kResult;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_se_tool_8cpp_1a6772af268d723988eceef1651a2f93e1" kindref="member">SplitStr</ref>(kStr,</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">,kResult);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kResult.size()<sp/>&gt;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>有贴图</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iTexture<sp/>=<sp/>atoi(kResult[1].c_str());</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTypeID<sp/>=<sp/>kResult[0];</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>kResult.clear();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_se_tool_8cpp_1a6772af268d723988eceef1651a2f93e1" kindref="member">SplitStr</ref>(kTypeID,</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,kResult);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kResult.size()<sp/>&gt;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>有模型</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iIndex<sp/>=<sp/>atoi(kResult[1].c_str());</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTypeID<sp/>=<sp/>kResult[0];</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>iTypeID<sp/>=<sp/><ref refid="_se_tool_8h_1a2e21c76627c851da74e084dd69fe411c" kindref="member">STRING2INT</ref>(kTypeID);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iTypeID<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046" refid="_se_tool_8h_1abcd1eb1d6e4c9e401c933d253faf0cef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1abcd1eb1d6e4c9e401c933d253faf0cef" kindref="member">IsRightIpString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acIP)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acIP)<sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLen<sp/>=<sp/>(int)strlen(acIP);<sp/><sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nLen<sp/>&lt;<sp/>7)<sp/></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>至少包含7个字符&quot;0.0.0.0&quot;<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLen;<sp/>++i)<sp/></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acIP[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iCount++;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iCount<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076" refid="_se_tool_8h_1a0f812838c0e3f15ce24dc36b623c46d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a0f812838c0e3f15ce24dc36b623c46d4" kindref="member">HexCharToDec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcStr)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>必须保证pcStr是一个长度为8的字符串</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pcStr)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwHex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>8;++i)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcStr[i]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>pcStr[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwNum<sp/>=<sp/>pcStr[i]<sp/>-<sp/>55;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwHex<sp/>+=<sp/>dwNum&lt;&lt;((7<sp/>-<sp/>i)&lt;&lt;2);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcStr[i]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>pcStr[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwNum<sp/>=<sp/>pcStr[i]<sp/>-<sp/>87;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwHex<sp/>+=<sp/>dwNum&lt;&lt;((7<sp/>-<sp/>i)&lt;&lt;2);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcStr[i]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>pcStr[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwNum<sp/>=<sp/>pcStr[i]<sp/>-<sp/>48;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwHex<sp/>+=<sp/>dwNum&lt;&lt;((7<sp/>-<sp/>i)&lt;&lt;2);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dwHex;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108" refid="_se_tool_8h_1aa99c54f5aad8a6cb427be950f05ead0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1aa99c54f5aad8a6cb427be950f05ead0e" kindref="member">Fun_ARGB</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;&lt;<sp/>24<sp/>|<sp/>r<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>g<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>b;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113" refid="_se_tool_8h_1a8fd87a93693f5198ad0299f2e3c6019b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a8fd87a93693f5198ad0299f2e3c6019b" kindref="member">Get_ARGB</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;g,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;b)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>col<sp/>&gt;&gt;<sp/>24;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(col<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x00ff;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>(col<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x0000ff;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>col<sp/>&amp;<sp/>0x000000ff;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121" refid="_se_tool_8h_1af895e134d21e379dc8121695ceeb4e42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1af895e134d21e379dc8121695ceeb4e42" kindref="member">GetIDCardAge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcIDCard)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAge<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pcIDCard)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>acBirthDayStr[24]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref><sp/>kBirthDay;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLen<sp/>=<sp/>(int)strlen(pcIDCard);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iLen<sp/>==<sp/>15)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(acBirthDayStr,</highlight><highlight class="stringliteral">&quot;19%c%c-%c%c-%c%c<sp/>00:00:00&quot;</highlight><highlight class="normal">,pcIDCard[6],pcIDCard[7],pcIDCard[8],pcIDCard[9],pcIDCard[10],pcIDCard[11]);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iLen<sp/>==<sp/>18)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(acBirthDayStr,</highlight><highlight class="stringliteral">&quot;%c%c%c%c-%c%c-%c%c<sp/>00:00:00&quot;</highlight><highlight class="normal">,pcIDCard[6],pcIDCard[7],pcIDCard[8],pcIDCard[9],pcIDCard[10],pcIDCard[11],pcIDCard[12],pcIDCard[13]);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_se_tool_8cpp_1a525fcb7d706b5d7c5bdda57e9cabe795" kindref="member">GetDBTime</ref>(kBirthDay,acBirthDayStr))</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kBirthDay.<ref refid="struct_se_d_b_time_1ad3512b135cdbfe62e1ad4fa1a6ab95ab" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>得到年纪</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref><sp/>kNowTime;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_se_tool_8cpp_1ab5215c746438d47cd602ac9cd661d806" kindref="member">NowTime</ref>(kNowTime);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAge<sp/>=<sp/>kNowTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>kBirthDay.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iAge;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157" refid="_se_tool_8h_1aad926258bf6611cd67fe84a55a8245a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1aad926258bf6611cd67fe84a55a8245a7" kindref="member">ChangeVerifyCodeByKey</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pData,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLength,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cKey)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cKeyTemp;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iLength;i++)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pData[i]<sp/>=<sp/>pData[i]<sp/>^<sp/>cKey;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cKeyTemp<sp/>=<sp/>cKey<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cKey<sp/>=<sp/>(cKey<sp/>&lt;&lt;<sp/>1<sp/>)<sp/>|<sp/>cKeyTemp;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inline<sp/>UInt64<sp/>GetCPUCountNow(void)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>__asm<sp/>RDTSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unsigned<sp/>int<sp/>GetDTickCount(void)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>static<sp/>bool<sp/>s_bGetFrequency<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>static<sp/>UInt64<sp/>s_uiCPUFrequency<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(!s_bGetFrequency)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>s_bGetFrequency<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QueryPerformanceFrequency((LARGE_INTEGER<sp/>*)&amp;s_uiCPUFrequency);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>s_uiCPUFrequency<sp/>/=<sp/>1000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>UInt64<sp/>uiTickCount<sp/>=<sp/>GetCPUCountNow()<sp/>/<sp/>1000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>unsigned<sp/>int<sp/>dwTickCount<sp/>=<sp/>(unsigned<sp/>int)(uiTickCount<sp/>/<sp/>s_uiCPUFrequency);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>dwTickCount;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189" refid="_se_tool_8h_1ae07f80936f97b5fb3e97054bb0d52a4c" refkind="member"><highlight class="normal"><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/><ref refid="_se_tool_8cpp_1ae07f80936f97b5fb3e97054bb0d52a4c" kindref="member">GetCPUCountS</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LARGE_INTEGER<sp/>kLarge;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>QueryPerformanceCounter(&amp;kLarge);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>(UInt64)kLarge.QuadPart;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="comment">//#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>__asm<sp/>RDTSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="comment">//struct<sp/>FileTime_LessThan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>bool<sp/>operator()(const<sp/>WIN32_FIND_DATA&amp;<sp/>rkLeft,const<sp/>WIN32_FIND_DATA&amp;<sp/>rkRight)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(CompareFileTime(&amp;rkLeft.ftLastWriteTime,&amp;rkRight.ftLastWriteTime)<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>FindAllFileData(const<sp/>char*<sp/>pcFileDir,VFindData&amp;<sp/>rkVData)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>WIN32_FIND_DATA<sp/>kFindFileData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>HANDLE<sp/>hFind;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>hFind<sp/>=<sp/>FindFirstFile(pcFileDir,&amp;kFindFileData);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(hFind<sp/>==<sp/>INVALID_HANDLE_VALUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>rkVData.push_back(kFindFileData);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>while(FindNextFile(hFind,&amp;kFindFileData))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>rkVData.push_back(kFindFileData);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>排序</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::sort(rkVData.begin(),rkVData.end(),FileTime_LessThan());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>FindClose(hFind);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>CompareSystemTime(const<sp/>SYSTEMTIME&amp;<sp/>rkLeftTime,const<sp/>SYSTEMTIME&amp;<sp/>rkRightTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(rkLeftTime.wYear<sp/>&gt;<sp/>rkRightTime.wYear)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>if(rkLeftTime.wYear<sp/>&lt;<sp/>rkRightTime.wYear)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(rkLeftTime.wMonth<sp/>&gt;<sp/>rkRightTime.wMonth)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>if(rkLeftTime.wMonth<sp/>&lt;<sp/>rkRightTime.wMonth)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(rkLeftTime.wDay<sp/>&gt;<sp/>rkRightTime.wDay)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>if(rkLeftTime.wDay<sp/>&lt;<sp/>rkRightTime.wDay)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(rkLeftTime.wHour<sp/>&gt;<sp/>rkRightTime.wHour)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>if(rkLeftTime.wHour<sp/>&lt;<sp/>rkRightTime.wHour)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(rkLeftTime.wMinute<sp/>&gt;<sp/>rkRightTime.wMinute)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>if(rkLeftTime.wMinute<sp/>&lt;<sp/>rkRightTime.wMinute)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(rkLeftTime.wSecond<sp/>&gt;<sp/>rkRightTime.wSecond)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>if(rkLeftTime.wSecond<sp/>&lt;<sp/>rkRightTime.wSecond)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>DeleteFileByTime(const<sp/>char*<sp/>pcFileDir,const<sp/>char*<sp/>pcFileDot,int<sp/>iMaxNums)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::string<sp/>kFileName<sp/>=<sp/>pcFileDir;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>kFileName<sp/>+=<sp/>&quot;*.&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>kFileName<sp/>+=<sp/>pcFileDot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>kFileName<sp/>+=<sp/>&quot;*&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>VFindData<sp/>kFindData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>FindAllFileData(kFileName.c_str(),kFindData);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(kFindData.empty()<sp/>||<sp/>(int)kFindData.size()<sp/>&lt;=<sp/>iMaxNums)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>WIN32_FIND_DATA<sp/>kDeleteFindData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>memset(&amp;kDeleteFindData,0,sizeof(kDeleteFindData));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>bool<sp/>bHasDelete<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>for(int<sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>(int)kFindData.size();++i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>WIN32_FIND_DATA&amp;<sp/>rkData<sp/>=<sp/>kFindData[i];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(!bHasDelete)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kDeleteFindData<sp/>=<sp/>rkData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bHasDelete<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYSTEMTIME<sp/>kFindTime;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FileTimeToSystemTime(&amp;rkData.ftCreationTime,&amp;kFindTime);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYSTEMTIME<sp/>kDeleteTime;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FileTimeToSystemTime(&amp;kDeleteFindData.ftCreationTime,&amp;kDeleteTime);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(CompareSystemTime(kFindTime,kDeleteTime)<sp/>&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>说明找到的文件更久</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kDeleteFindData<sp/>=<sp/>rkData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>删除最久的文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::string<sp/>kDeleteFileName<sp/>=<sp/>pcFileDir;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>kDeleteFileName<sp/>+=<sp/>kDeleteFindData.cFileName;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DeleteFile(kDeleteFileName.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341" refid="_se_tool_8h_1a4a8fd834e7cd7e160db5b8a3dcefb21d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a4a8fd834e7cd7e160db5b8a3dcefb21d" kindref="member">GetIPString2DWord</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acIP)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_se_tool_8cpp_1abcd1eb1d6e4c9e401c933d253faf0cef" kindref="member">IsRightIpString</ref>(acIP))</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNum<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>每个段数值<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcBeg<sp/>=<sp/>acIP;<sp/><sp/></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcPos<sp/>=<sp/>NULL;<sp/><sp/></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwIp<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>整个IP数值<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>pcPos<sp/>=<sp/>strchr(acIP,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(pcPos<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNum<sp/>=<sp/>atoi(pcBeg);<sp/><sp/></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwIp<sp/>+=<sp/>nNum;<sp/><sp/></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwIp<sp/>*=<sp/>0x100;<sp/><sp/></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcBeg<sp/>=<sp/>pcPos<sp/>+<sp/>1;<sp/><sp/></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcPos<sp/>=<sp/>strchr(pcBeg,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>nNum<sp/>=<sp/>atoi(pcBeg);<sp/><sp/></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>dwIp<sp/>+=<sp/>nNum;<sp/><sp/></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dwIp;<sp/><sp/></highlight></codeline>
<codeline lineno="1365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>char*<sp/>FormatStr(const<sp/>char*<sp/>fmt,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>static<sp/>char<sp/>s_acBuff[1024]<sp/>=<sp/>{<sp/>&apos;\0&apos;};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>memset(s_acBuff,<sp/>0,<sp/>sizeof(s_acBuff));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>va_list<sp/>vl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>memset(s_acBuff,<sp/>0,<sp/>sizeof(s_acBuff));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>va_start(vl,<sp/>fmt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>vsnprintf(s_acBuff,<sp/>sizeof(s_acBuff)<sp/>-<sp/>1,<sp/>fmt,<sp/>vl);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>va_end(vl);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>s_acBuff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381" refid="_se_tool_8h_1a1c215880fd4d2d28460df043b1286b82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a1c215880fd4d2d28460df043b1286b82" kindref="member">CanID2Str</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwID)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcID<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;dwID;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int);i++)</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcID[i]<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>||<sp/>pcID[i]<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal"><sp/>&lt;<sp/>pcID[i]<sp/>&amp;&amp;<sp/>pcID[i]<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal"><sp/>&lt;<sp/>pcID[i]<sp/>&amp;&amp;<sp/>pcID[i]<sp/>&gt;</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402" refid="_se_tool_8h_1a9d4e37e032136c7f549cab23b3761bf9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1aad62753a6133772cd01ee1065df2abd1" kindref="member">GetMaxValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iValue1,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iValue2,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iValue3,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iValue4,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iValue5)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iMax<sp/>=<sp/>iValue1;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iValue2<sp/>&gt;<sp/>iMax)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iMax<sp/>=<sp/>iValue2;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iValue3<sp/>&gt;<sp/>iMax)</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iMax<sp/>=<sp/>iValue3;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iValue4<sp/>&gt;<sp/>iMax)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iMax<sp/>=<sp/>iValue4;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iValue5<sp/>&gt;<sp/>iMax)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iMax<sp/>=<sp/>iValue5;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iMax;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>字符串转unsigned<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426" refid="_se_tool_8h_1a1cfa8556704af43da1523cfc84495c18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a1cfa8556704af43da1523cfc84495c18" kindref="member">AToDw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcStr)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>pcStr;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(isspace((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(Byte)*p))</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwResult<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(isdigit(*p))</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dwValue<sp/>=<sp/>*p<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwResult<sp/>=<sp/>dwResult<sp/>*<sp/>10<sp/>+<sp/>dwValue;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dwResult;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446" refid="_se_tool_8h_1a35f7814b0225e7b908fd7922326176a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a35f7814b0225e7b908fd7922326176a9" kindref="member">DiffDay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkBeginTime,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref>&amp;<sp/>rkEndTime)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kBegin;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kBegin,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_year<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_mon<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_mday<sp/>=<sp/>rkBeginTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_hour<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>kBegin.tm_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_json_1a01f20bce8f8229f38ff890168c0e6452" kindref="member">UInt64</ref><sp/>iTime<sp/>=<sp/>mktime(&amp;kBegin);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>kEnd;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;kEnd,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tm));</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_year<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_mon<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_mday<sp/>=<sp/>rkEndTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref>;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_hour<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd.tm_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>iTime<sp/>=<sp/>mktime(&amp;kEnd)<sp/>-<sp/>iTime;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDiffDay<sp/>=<sp/>int(iTime<sp/>/<sp/>(24<sp/>*<sp/>60<sp/>*<sp/>60));</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iDiffDay;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473" refid="_se_tool_8cpp_1a2fbfbcfd5a17eae400339ac86ef57f52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a2fbfbcfd5a17eae400339ac86ef57f52" kindref="member">SetHonorDataStrToInt</ref>(std::vector&lt;int&gt;&amp;<sp/>rkHonorInfo,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>acSqlData)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>kVecResult;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_se_tool_8cpp_1a6772af268d723988eceef1651a2f93e1" kindref="member">SplitStr</ref>(acSqlData,</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">,kVecResult);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>(int)kVecResult.size()<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>8;++i)</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>kResult<sp/>=<sp/>kVecResult[i];</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkHonorInfo.push_back(atoi(kResult.c_str()));</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485" refid="_se_tool_8cpp_1af8c284797426aac794f2d1f800a6048b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1af8c284797426aac794f2d1f800a6048b" kindref="member">GetFileMD5</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcFileName,<ref refid="struct_te_m_d5" kindref="compound">TeMD5</ref>&amp;<sp/>rkMD5)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>iReadSize<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>HANDLE<sp/>hFile<sp/>=<sp/>CreateFile(pcFileName,GENERIC_READ,0,NULL,OPEN_EXISTING,0,NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(hFile<sp/>!=<sp/>INVALID_HANDLE_VALUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>准备好读取的内存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>iLocalSize<sp/>=<sp/>GetFileSize(hFile,NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>char*<sp/>pcBuffer<sp/>=<sp/>new<sp/>char[iLocalSize];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>读取文件数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Byte*<sp/>pbyData<sp/>=<sp/>(Byte<sp/>*)pcBuffer;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(!ReadFile(hFile,pbyData,iLocalSize,(LPDWord)&amp;iReadSize,NULL)<sp/>||<sp/>iReadSize<sp/>&lt;<sp/>iLocalSize)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SAFE_DELETE(pcBuffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(hFile);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(hFile);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>rkMD5<sp/>=<sp/>GetMD5(pcBuffer,iLocalSize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>SAFE_DELETE(pcBuffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517" refid="_se_tool_8h_1a5c48803aa6479cbcaffd5b00bafaeb27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_se_tool_8cpp_1a5c48803aa6479cbcaffd5b00bafaeb27" kindref="member">MyOutputDebugString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pcFmt,<sp/>...)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="1520"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>acOut[1024]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>ArgList;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ArgList,<sp/>pcFmt);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>_vsnprintf(acOut,<sp/>1024,<sp/>pcFmt,<sp/>ArgList);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputDebugStringA(</highlight><highlight class="comment">/*(LPCWSTR)*/</highlight><highlight class="normal">acOut);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1527"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529" refid="_se_tool_8h_1a2fc76284dab961f5442f35bb06ef31cb" refkind="member"><highlight class="normal"><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref><sp/><ref refid="_se_tool_8cpp_1a2fc76284dab961f5442f35bb06ef31cb" kindref="member">GetLocalTime</ref>()</highlight></codeline>
<codeline lineno="1530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_se_d_b_time" kindref="compound">SeDBTime</ref><sp/><sp/><sp/><sp/>kTime;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="1533"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SYSTEMTIME<sp/>kCurTime;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_se_tool_8cpp_1a2fc76284dab961f5442f35bb06ef31cb" kindref="member">GetLocalTime</ref>(&amp;kCurTime);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>kCurTime.wYear;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>kCurTime.wMonth;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>kCurTime.wDay;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref><sp/>=<sp/>kCurTime.wHour;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref><sp/>=<sp/>kCurTime.wMinute;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref><sp/>=<sp/>kCurTime.wSecond;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_VISION_POSIX</highlight></codeline>
<codeline lineno="1542"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SYSTEMTIME<sp/>kCurTime;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*pst<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>SYSTEMTIME<sp/>st;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time_t<sp/>t<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pst<sp/>=<sp/>localtime(&amp;t);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;st,pst,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SYSTEMTIME));</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1a01223d404828a6c310cf952a7f3c4dd2" kindref="member">iYear</ref><sp/>=<sp/>kCurTime.wYear;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1ab319bf02932fc6d053ea69d1f6b7b5df" kindref="member">iMonth</ref><sp/>=<sp/>kCurTime.wMonth;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1aae6a7287b7c459cf64a90c1434390b4f" kindref="member">iDay</ref><sp/>=<sp/>kCurTime.wDay;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1ac3ba3e2976b0c22dfca3e90a295f202c" kindref="member">iHour</ref><sp/>=<sp/>kCurTime.wHour;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1a75e5311bf5fe3e968fc02bbf64523746" kindref="member">iMinute</ref><sp/>=<sp/>kCurTime.wMinute;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>kTime.<ref refid="struct_se_d_b_time_1a5558586e23589ef44312adbaaac88b0c" kindref="member">iSecond</ref><sp/>=<sp/>kCurTime.wSecond;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1557"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kTime;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__LINUX__)<sp/>&amp;&amp;<sp/>!defined(ORBIS_PLATFORM)</highlight></codeline>
<codeline lineno="1562"><highlight class="preprocessor"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetTickCount()</highlight></codeline>
<codeline lineno="1563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timezone<sp/>tz;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/>gettimeofday(&amp;tv,<sp/>&amp;tz);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tv.tv_sec<sp/>*<sp/>1000<sp/>+<sp/>tv.tv_usec/1000;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeTool.cpp"/>
  </compounddef>
</doxygen>
