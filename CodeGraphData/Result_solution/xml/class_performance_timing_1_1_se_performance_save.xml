<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_performance_timing_1_1_se_performance_save" kind="class" prot="public">
    <compoundname>PerformanceTiming::SePerformanceSave</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Thread</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Thread</basecompoundref>
    <includes refid="src_2_performance_timing_8h" local="no">PerformanceTiming.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_performance_timing_1_1_se_performance_save_1ab76af4abb7c2403db563accd240ce23d" prot="public" static="no">
        <type>std::list&lt; <ref refid="struct_performance_timing_1_1_se_performace_task" kindref="compound">SePerformaceTask</ref> * &gt;</type>
        <definition>typedef std::list&lt;SePerformaceTask*&gt; PerformanceTiming::SePerformanceSave::TPerformaceTaskList</definition>
        <argsstring></argsstring>
        <name>TPerformaceTaskList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="80" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_performance_timing_1_1_se_performance_save_1ab76af4abb7c2403db563accd240ce23d" prot="public" static="no">
        <type>std::list&lt; <ref refid="struct_performance_timing_1_1_se_performace_task" kindref="compound">SePerformaceTask</ref> * &gt;</type>
        <definition>typedef std::list&lt;SePerformaceTask*&gt; PerformanceTiming::SePerformanceSave::TPerformaceTaskList</definition>
        <argsstring></argsstring>
        <name>TPerformaceTaskList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="80" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_performance_timing_1_1_se_performance_save_1aac9e1c92df6b8eee9a3ec83031c24a48" prot="private" static="no" mutable="no">
        <type><ref refid="class_performance_timing_1_1_se_performance_save_1ab76af4abb7c2403db563accd240ce23d" kindref="member">TPerformaceTaskList</ref></type>
        <definition>TPerformaceTaskList PerformanceTiming::SePerformanceSave::m_liTask</definition>
        <argsstring></argsstring>
        <name>m_liTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="87" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" compoundref="src_2_performance_timing_8cpp" startline="93" endline="275">DoWork</referencedby>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" compoundref="src_2_performance_timing_8cpp" startline="277" endline="288">PushTask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_se_performance_save_1a9653c9a8af8192184a05a1827f8ee16d" prot="private" static="no" mutable="no">
        <type>Es::NormalLock *</type>
        <definition>Es::NormalLock * PerformanceTiming::SePerformanceSave::m_pkQueueLock</definition>
        <argsstring></argsstring>
        <name>m_pkQueueLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="88" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="88" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" compoundref="src_2_performance_timing_8cpp" startline="93" endline="275">DoWork</referencedby>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" compoundref="src_2_performance_timing_8cpp" startline="277" endline="288">PushTask</referencedby>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a9f783dce03ae10ff0a14dfbc99bff21d" compoundref="src_2_performance_timing_8cpp" startline="86" endline="91">SePerformanceSave</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_performance_timing_1_1_se_performance_save_1a4193c73a530b73ba30872731fef2f4b6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PerformanceTiming::SePerformanceSave::m_bRun</definition>
        <argsstring></argsstring>
        <name>m_bRun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="89" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="89" bodyend="-1"/>
        <referencedby refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" compoundref="src_2_performance_timing_8cpp" startline="93" endline="275">DoWork</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_performance_timing_1_1_se_performance_save_1a9f783dce03ae10ff0a14dfbc99bff21d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::SePerformanceSave::SePerformanceSave</definition>
        <argsstring>()</argsstring>
        <name>SePerformanceSave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="78" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="86" bodyend="91"/>
        <references refid="class_performance_timing_1_1_se_performance_save_1a9653c9a8af8192184a05a1827f8ee16d" compoundref="src_2_performance_timing_8h" startline="88">m_pkQueueLock</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PerformanceTiming::SePerformanceSave::DoWork</definition>
        <argsstring>(void)</argsstring>
        <name>DoWork</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="83" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="93" bodyend="275"/>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a40e0d51277c0fcaa8c88e8adcbdb8b3d" compoundref="src_2_performance_timing_8h" startline="72">PerformanceTiming::SePerformaceTask::_CounterArray</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a2d379f174869498e8c7a9809fa89fd95" compoundref="src_2_performance_timing_8h" startline="67">PerformanceTiming::SePerformaceTask::_fileName</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a03b6ead500755f3a1fa150c11050977f" compoundref="src_2_performance_timing_8h" startline="71">PerformanceTiming::SePerformaceTask::_IntervalArray</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a6e2482bb068e695a2cef7b652dda41c6" compoundref="src_2_performance_timing_8h" startline="69">PerformanceTiming::SePerformaceTask::_oTime</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a50696d2f5ae60c2e2df3028f1ed3bc6f" compoundref="src_2_performance_timing_8h" startline="68">PerformanceTiming::SePerformaceTask::_pFileDat</references>
        <references refid="class_c_interval_clone_folder_set_1a3a57560d3f4bc12e3c1d0d9e99d5ac5e" compoundref="src_2_performance_timing_8cpp" startline="882" endline="916">CIntervalCloneFolderSet::BuildFolderSets</references>
        <references refid="class_c_counter_clone_folder_set_1aa64f87bd85f688d65d313e89b55747d7" compoundref="src_2_performance_timing_8cpp" startline="956" endline="992">CCounterCloneFolderSet::BuildFolderSets</references>
        <references refid="class_c_counter_clone_folder_set_1af53157d53bb29370bac839aaa03bd0d4" compoundref="src_2_performance_timing_8h" startline="909" endline="909">CCounterCloneFolderSet::Counters</references>
        <references refid="namespace_performance_timing_1a51bdb87c7a15ae4e5d1147cdf3062672" compoundref="src_2_performance_timing_8cpp" startline="45" endline="84">PerformanceTiming::DumpCounterLine</references>
        <references refid="namespace_performance_timing_1a5dc6f9214a67473b678fe7ecd4177a5b" compoundref="src_2_performance_timing_8cpp" startline="12" endline="43">PerformanceTiming::DumpIntervalLine</references>
        <references refid="namespacemake_callback_1a0c646a8863d44327e020456c954f4b2d" compoundref="make_callback_8py" startline="145">makeCallback.f</references>
        <references refid="class_c_interval_clone_folder_set_1a847f5feaa793908427b080c458b9fca8" compoundref="src_2_performance_timing_8h" startline="852" endline="852">CIntervalCloneFolderSet::FolderName</references>
        <references refid="class_c_counter_clone_folder_set_1af1993fa9186209b4c8c281ea044e3c61" compoundref="src_2_performance_timing_8h" startline="903" endline="903">CCounterCloneFolderSet::FolderName</references>
        <references refid="class_performance_timing_1_1_c_interval_clone_1a7ffb54f9a38070f06315797bfc86de8a" compoundref="src_2_performance_timing_fwd_decl_8h" startline="118" endline="121">PerformanceTiming::CIntervalClone::GetLastFrameIntervalEntries</references>
        <references refid="class_performance_timing_1_1_c_interval_clone_1aff0574d14a2b9d1eb694b16e55b5f6b1" compoundref="src_2_performance_timing_fwd_decl_8h" startline="113" endline="116">PerformanceTiming::CIntervalClone::GetLastFrameIntervalTimeSec</references>
        <references refid="class_performance_timing_1_1_c_counter_clone_1acd397766c067657c2a1e9f964fe83048" compoundref="src_2_performance_timing_fwd_decl_8h" startline="60" endline="63">PerformanceTiming::CCounterClone::GetLastValue</references>
        <references refid="class_performance_timing_1_1_c_counter_clone_1a9c6bd13eddb34741d7b2b59704e22664" compoundref="src_2_performance_timing_fwd_decl_8h" startline="65" endline="68">PerformanceTiming::CCounterClone::GetRunningTotal</references>
        <references refid="class_performance_timing_1_1_c_counter_clone_1ae5e5c5a258b89e1bfbce431d85e5a4f2" compoundref="src_2_performance_timing_fwd_decl_8h" startline="55" endline="58">PerformanceTiming::CCounterClone::GetValue</references>
        <references refid="class_c_interval_clone_folder_set_1a71f6dd676068203ed4897f7bcaa465ab" compoundref="src_2_performance_timing_8h" startline="858" endline="858">CIntervalCloneFolderSet::Intervals</references>
        <references refid="class_performance_timing_1_1_c_counter_clone_1a3a951ea0573156916c4b4619c470ee81" compoundref="src_2_performance_timing_fwd_decl_8h" startline="70" endline="73">PerformanceTiming::CCounterClone::IsHistoryCounter</references>
        <references refid="class_performance_timing_1_1_c_interval_clone_1aa2081d9cae3449d0d48aac6aac0216b6" compoundref="src_2_performance_timing_fwd_decl_8h" startline="123" endline="126">PerformanceTiming::CIntervalClone::IsLastFrameClosed</references>
        <references refid="class_performance_timing_1_1_se_performance_save_1a4193c73a530b73ba30872731fef2f4b6" compoundref="src_2_performance_timing_8h" startline="89">m_bRun</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a770560a24ca706f84e8791460cc7d728" compoundref="src_2_performance_timing_8h" startline="45">PerformanceTiming::SePerfocemanceTime::m_fCurDumpTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a0afa41a6e7a3b8655ac2370e4b1fb290" compoundref="src_2_performance_timing_8h" startline="42">PerformanceTiming::SePerfocemanceTime::m_fFrameTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1ad8b6eaea7b3970475f105c15267a30f1" compoundref="src_2_performance_timing_8h" startline="47">PerformanceTiming::SePerfocemanceTime::m_fLastFps</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a3dd5ebe26b4d111f970afcf7a0f328ac" compoundref="src_2_performance_timing_8h" startline="44">PerformanceTiming::SePerfocemanceTime::m_fMaxDumpTimes</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1abc9124daa138e85609a538ea769384b1" compoundref="src_2_performance_timing_8h" startline="41">PerformanceTiming::SePerfocemanceTime::m_fRealTickTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1aa3ecc4ce71b566ce44f55ac65dddf9cb" compoundref="src_2_performance_timing_8h" startline="48">PerformanceTiming::SePerfocemanceTime::m_fTotalAvgFps</references>
        <references refid="class_performance_timing_1_1_se_performance_save_1aac9e1c92df6b8eee9a3ec83031c24a48" compoundref="src_2_performance_timing_8h" startline="87">m_liTask</references>
        <references refid="class_performance_timing_1_1_se_performance_save_1a9653c9a8af8192184a05a1827f8ee16d" compoundref="src_2_performance_timing_8h" startline="88">m_pkQueueLock</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a6e77f82c14f2c178aaea086e8d88c61d" compoundref="src_2_performance_timing_8h" startline="39">PerformanceTiming::SePerfocemanceTime::m_uBeginTraceTime</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a7767febdd341382ea980e72524e55316" compoundref="src_2_performance_timing_8h" startline="40">PerformanceTiming::SePerfocemanceTime::m_uSecondsFromStart</references>
        <references refid="struct_performance_timing_1_1_se_perfocemance_time_1a6ca8e68ba5b4935f41345a5578ebb2b1" compoundref="src_2_performance_timing_8h" startline="43">PerformanceTiming::SePerfocemanceTime::m_uThreadID</references>
        <references refid="class_performance_timing_1_1_c_counter_clone_1aeef87932f0fee56af55502dca5564c2f" compoundref="src_2_performance_timing_fwd_decl_8h" startline="78" endline="78">PerformanceTiming::CCounterClone::Name</references>
        <references refid="class_performance_timing_1_1_c_interval_clone_1a00cf53b59bbd8fb6166daa9ae3fd6e8d" compoundref="src_2_performance_timing_fwd_decl_8h" startline="131" endline="131">PerformanceTiming::CIntervalClone::Name</references>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::SePerformanceSave::PushTask</definition>
        <argsstring>(const Es::String &amp;rFileName, Es::String *pStrDat, PerformanceTiming::TIntervalCloneArray &amp;rIntervals, PerformanceTiming::TCounterCloneArray &amp;rCounts, const SePerfocemanceTime &amp;oTime)</argsstring>
        <name>PushTask</name>
        <param>
          <type>const Es::String &amp;</type>
          <declname>rFileName</declname>
        </param>
        <param>
          <type>Es::String *</type>
          <declname>pStrDat</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1ac6707feaaa4f4727d7bf2f86f2539dbb" kindref="member">PerformanceTiming::TIntervalCloneArray</ref> &amp;</type>
          <declname>rIntervals</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1ac964deca5e0cd7c10b938682b5ec145b" kindref="member">PerformanceTiming::TCounterCloneArray</ref> &amp;</type>
          <declname>rCounts</declname>
        </param>
        <param>
          <type>const <ref refid="struct_performance_timing_1_1_se_perfocemance_time" kindref="compound">SePerfocemanceTime</ref> &amp;</type>
          <declname>oTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="84" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.cpp" bodystart="277" bodyend="288"/>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a40e0d51277c0fcaa8c88e8adcbdb8b3d" compoundref="src_2_performance_timing_8h" startline="72">PerformanceTiming::SePerformaceTask::_CounterArray</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a2d379f174869498e8c7a9809fa89fd95" compoundref="src_2_performance_timing_8h" startline="67">PerformanceTiming::SePerformaceTask::_fileName</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a03b6ead500755f3a1fa150c11050977f" compoundref="src_2_performance_timing_8h" startline="71">PerformanceTiming::SePerformaceTask::_IntervalArray</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a6e2482bb068e695a2cef7b652dda41c6" compoundref="src_2_performance_timing_8h" startline="69">PerformanceTiming::SePerformaceTask::_oTime</references>
        <references refid="struct_performance_timing_1_1_se_performace_task_1a50696d2f5ae60c2e2df3028f1ed3bc6f" compoundref="src_2_performance_timing_8h" startline="68">PerformanceTiming::SePerformaceTask::_pFileDat</references>
        <references refid="class_performance_timing_1_1_se_performance_save_1aac9e1c92df6b8eee9a3ec83031c24a48" compoundref="src_2_performance_timing_8h" startline="87">m_liTask</references>
        <references refid="class_performance_timing_1_1_se_performance_save_1a9653c9a8af8192184a05a1827f8ee16d" compoundref="src_2_performance_timing_8h" startline="88">m_pkQueueLock</references>
        <referencedby refid="class_c_performance_interval_file_dump_1a6ac4f582ee0b32865b462fed0ba8f5b6" compoundref="src_2_performance_interval_file_dump_8cpp" startline="233" endline="519">CPerformanceIntervalFileDump::DumpIntervals</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_se_performance_save_1a9f783dce03ae10ff0a14dfbc99bff21d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PerformanceTiming::SePerformanceSave::SePerformanceSave</definition>
        <argsstring>()</argsstring>
        <name>SePerformanceSave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_se_performance_save_1ac344eff8594a86e4ca17d6175c7901ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PerformanceTiming::SePerformanceSave::DoWork</definition>
        <argsstring>(void)</argsstring>
        <name>DoWork</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PerformanceTiming::SePerformanceSave::PushTask</definition>
        <argsstring>(const Es::String &amp;rFileName, Es::String *pStrDat, PerformanceTiming::TIntervalCloneArray &amp;rIntervals, PerformanceTiming::TCounterCloneArray &amp;rCounts, const SePerfocemanceTime &amp;oTime)</argsstring>
        <name>PushTask</name>
        <param>
          <type>const Es::String &amp;</type>
          <declname>rFileName</declname>
        </param>
        <param>
          <type>Es::String *</type>
          <declname>pStrDat</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1ac6707feaaa4f4727d7bf2f86f2539dbb" kindref="member">PerformanceTiming::TIntervalCloneArray</ref> &amp;</type>
          <declname>rIntervals</declname>
        </param>
        <param>
          <type><ref refid="namespace_performance_timing_1ac964deca5e0cd7c10b938682b5ec145b" kindref="member">PerformanceTiming::TCounterCloneArray</ref> &amp;</type>
          <declname>rCounts</declname>
        </param>
        <param>
          <type>const <ref refid="struct_performance_timing_1_1_se_perfocemance_time" kindref="compound">SePerfocemanceTime</ref> &amp;</type>
          <declname>oTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/Src/PerformanceTiming.h" line="84" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5108">
        <label>PerformanceTiming::SePerformanceSave</label>
        <link refid="class_performance_timing_1_1_se_performance_save"/>
        <childnode refid="5109" relation="public-inheritance">
        </childnode>
        <childnode refid="5109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5109">
        <label>Thread</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5114">
        <label>PerformanceTiming::SePerfocemanceTime</label>
        <link refid="struct_performance_timing_1_1_se_perfocemance_time"/>
      </node>
      <node id="5117">
        <label>std::vector&lt; CIntervalClone * &gt;</label>
        <childnode refid="5118" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5110">
        <label>PerformanceTiming::SePerformanceSave</label>
        <link refid="class_performance_timing_1_1_se_performance_save"/>
        <childnode refid="5111" relation="public-inheritance">
        </childnode>
        <childnode refid="5111" relation="public-inheritance">
        </childnode>
        <childnode refid="5112" relation="usage">
          <edgelabel>m_liTask</edgelabel>
        </childnode>
      </node>
      <node id="5113">
        <label>PerformanceTiming::SePerformaceTask</label>
        <link refid="struct_performance_timing_1_1_se_performace_task"/>
        <childnode refid="5114" relation="usage">
          <edgelabel>_oTime</edgelabel>
        </childnode>
        <childnode refid="5115" relation="usage">
          <edgelabel>_CounterArray</edgelabel>
        </childnode>
        <childnode refid="5117" relation="usage">
          <edgelabel>_IntervalArray</edgelabel>
        </childnode>
      </node>
      <node id="5118">
        <label>PerformanceTiming::CIntervalClone</label>
        <link refid="class_performance_timing_1_1_c_interval_clone"/>
      </node>
      <node id="5111">
        <label>Thread</label>
      </node>
      <node id="5116">
        <label>PerformanceTiming::CCounterClone</label>
        <link refid="class_performance_timing_1_1_c_counter_clone"/>
      </node>
      <node id="5115">
        <label>std::vector&lt; CCounterClone * &gt;</label>
        <childnode refid="5116" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5112">
        <label>std::list&lt; SePerformaceTask * &gt;</label>
        <childnode refid="5113" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" line="76" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Server/Server/RaceServer/src/PerformanceTiming.h" bodystart="75" bodyend="90"/>
    <listofallmembers>
      <member refid="class_performance_timing_1_1_se_performance_save_1a1c7f805b56cac326b8f7d4642dee26d2" prot="public" virt="virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>DoWork</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1ac344eff8594a86e4ca17d6175c7901ab" prot="public" virt="virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>DoWork</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1a4193c73a530b73ba30872731fef2f4b6" prot="private" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>m_bRun</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1aac9e1c92df6b8eee9a3ec83031c24a48" prot="private" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>m_liTask</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1a9653c9a8af8192184a05a1827f8ee16d" prot="private" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>m_pkQueueLock</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>PushTask</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1adba28713f5876c95db9e2e2523b80113" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>PushTask</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1a9f783dce03ae10ff0a14dfbc99bff21d" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>SePerformanceSave</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1a9f783dce03ae10ff0a14dfbc99bff21d" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>SePerformanceSave</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1ab76af4abb7c2403db563accd240ce23d" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>TPerformaceTaskList</name></member>
      <member refid="class_performance_timing_1_1_se_performance_save_1ab76af4abb7c2403db563accd240ce23d" prot="public" virt="non-virtual"><scope>PerformanceTiming::SePerformanceSave</scope><name>TPerformaceTaskList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
