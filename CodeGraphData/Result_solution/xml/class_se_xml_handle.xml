<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_se_xml_handle" kind="class" prot="public">
    <compoundname>SeXmlHandle</compoundname>
    <includes refid="_se_xml_8h" local="no">SeXml.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" prot="private" static="no" mutable="no">
        <type><ref refid="class_se_xml_node" kindref="compound">SeXmlNode</ref> *</type>
        <definition>SeXmlNode* SeXmlHandle::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1657" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1657" bodyend="-1"/>
        <referencedby refid="class_se_xml_handle_1a3bcc24cf97e91b5ffb73f907d178c250" compoundref="_se_xml_8cpp" startline="3269" endline="3285">Child</referencedby>
        <referencedby refid="class_se_xml_handle_1abbec325af69ee8350829c05f32003e30" compoundref="_se_xml_8cpp" startline="3307" endline="3323">ChildElement</referencedby>
        <referencedby refid="class_se_xml_handle_1a9122dbaf290098b5ca3cc373c8ee6f9f" compoundref="_se_xml_8cpp" startline="3400" endline="3410">CreatePath</referencedby>
        <referencedby refid="class_se_xml_handle_1a8d455b485e6ec0ac969a7ad8660aa465" compoundref="_se_xml_8cpp" startline="3221" endline="3230">FirstChild</referencedby>
        <referencedby refid="class_se_xml_handle_1a46924dd26b7f3a5e131313c3f8106fcf" compoundref="_se_xml_8cpp" startline="3245" endline="3254">FirstChildElement</referencedby>
        <referencedby refid="class_se_xml_handle_1a9729e11737b6bb2d4837d158fdd186b0" compoundref="_se_xml_8cpp" startline="3344" endline="3354">GetPath</referencedby>
        <referencedby refid="class_se_xml_handle_1af7dfcf7792378521081fb37a16099c25" compoundref="_se_xml_8h" startline="1582" endline="1582">operator=</referencedby>
        <referencedby refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</referencedby>
        <referencedby refid="class_se_xml_handle_1aacc81892bf9006a356aa43246bfea617" compoundref="_se_xml_8h" startline="1623" endline="1623">ToElement</referencedby>
        <referencedby refid="class_se_xml_handle_1ae92eb4bfb750a5ba1cfa088fd640592b" compoundref="_se_xml_8h" startline="1620" endline="1620">ToNode</referencedby>
        <referencedby refid="class_se_xml_handle_1a4335e4432c3030b369a8d4b538f71567" compoundref="_se_xml_8h" startline="1626" endline="1626">ToText</referencedby>
        <referencedby refid="class_se_xml_handle_1a5fe72837a844fc07217c966a2793e0ec" compoundref="_se_xml_8h" startline="1629" endline="1629">ToUnknown</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SeXmlHandle::SeXmlHandle</definition>
        <argsstring>(SeXmlNode *_node)</argsstring>
        <name>SeXmlHandle</name>
        <param>
          <type><ref refid="class_se_xml_node" kindref="compound">SeXmlNode</ref> *</type>
          <declname>_node</declname>
        </param>
        <briefdescription>
<para>Create a handle from any node (at any depth of the tree.) This can be a null pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1579" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1579" bodyend="1579"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <referencedby refid="class_se_xml_handle_1a3bcc24cf97e91b5ffb73f907d178c250" compoundref="_se_xml_8cpp" startline="3269" endline="3285">Child</referencedby>
        <referencedby refid="class_se_xml_handle_1abbec325af69ee8350829c05f32003e30" compoundref="_se_xml_8cpp" startline="3307" endline="3323">ChildElement</referencedby>
        <referencedby refid="class_se_xml_handle_1a9122dbaf290098b5ca3cc373c8ee6f9f" compoundref="_se_xml_8cpp" startline="3400" endline="3410">CreatePath</referencedby>
        <referencedby refid="class_se_xml_handle_1a8d455b485e6ec0ac969a7ad8660aa465" compoundref="_se_xml_8cpp" startline="3221" endline="3230">FirstChild</referencedby>
        <referencedby refid="class_se_xml_handle_1a46924dd26b7f3a5e131313c3f8106fcf" compoundref="_se_xml_8cpp" startline="3245" endline="3254">FirstChildElement</referencedby>
        <referencedby refid="class_se_xml_handle_1a9729e11737b6bb2d4837d158fdd186b0" compoundref="_se_xml_8cpp" startline="3344" endline="3354">GetPath</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a57a31bab8c4dd248c8f5ba27bcf41da8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SeXmlHandle::SeXmlHandle</definition>
        <argsstring>(const SeXmlHandle &amp;ref)</argsstring>
        <name>SeXmlHandle</name>
        <param>
          <type>const <ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1581" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1581" bodyend="1581"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1af7dfcf7792378521081fb37a16099c25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::operator=</definition>
        <argsstring>(const SeXmlHandle &amp;ref)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1582" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1582" bodyend="1582"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a8d455b485e6ec0ac969a7ad8660aa465" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::FirstChild</definition>
        <argsstring>() const </argsstring>
        <name>FirstChild</name>
        <briefdescription>
<para>Return a handle to the first child node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1585" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3221" bodyend="3230"/>
        <references refid="class_se_xml_node_1acb7425a84181ff6c7c2c32f40d820da4" compoundref="_se_xml_8h" startline="504">SeXmlNode::FirstChild</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
        <referencedby refid="class_se_xml_handle_1a6cd76db17ccc4adf3030744c5e30108e" compoundref="_se_xml_8cpp" startline="3412" endline="3464">CreatePath</referencedby>
        <referencedby refid="class_se_xml_handle_1a4a6146452b094f3430ed8602a3c1dc14" compoundref="_se_xml_8cpp" startline="3355" endline="3398">GetPath</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a8fb06432313abcfd954b767df3fb9d69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::FirstChild</definition>
        <argsstring>(const char *value) const </argsstring>
        <name>FirstChild</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return a handle to the first child node with the given name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1587" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3233" bodyend="3242"/>
        <references refid="class_se_xml_node_1acb7425a84181ff6c7c2c32f40d820da4" compoundref="_se_xml_8h" startline="504">SeXmlNode::FirstChild</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a46924dd26b7f3a5e131313c3f8106fcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::FirstChildElement</definition>
        <argsstring>() const </argsstring>
        <name>FirstChildElement</name>
        <briefdescription>
<para>Return a handle to the first child element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1589" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3245" bodyend="3254"/>
        <references refid="class_se_xml_node_1a345be7c86164dcd50dcacfc8b978f3bc" compoundref="_se_xml_8cpp" startline="2070" endline="2082">SeXmlNode::FirstChildElement</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1ab85750887d744d4bfab597608802831e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::FirstChildElement</definition>
        <argsstring>(const char *value) const </argsstring>
        <name>FirstChildElement</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return a handle to the first child element with the given name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1591" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3257" bodyend="3266"/>
        <references refid="class_se_xml_node_1a345be7c86164dcd50dcacfc8b978f3bc" compoundref="_se_xml_8cpp" startline="2070" endline="2082">SeXmlNode::FirstChildElement</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a37e44a6262dcf690a1a480c93793a3fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::Child</definition>
        <argsstring>(const char *value, int index) const </argsstring>
        <name>Child</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a handle to the &quot;index&quot; child with the given name. The first child is 0, the second 1, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1596" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3288" bodyend="3304"/>
        <references refid="class_se_xml_node_1acb7425a84181ff6c7c2c32f40d820da4" compoundref="_se_xml_8h" startline="504">SeXmlNode::FirstChild</references>
        <references refid="class_se_xml_node_1a0bc6c4de06e6dad4c8a106aebc7f5254" compoundref="_se_xml_8h" startline="604" endline="603">SeXmlNode::NextSibling</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a3bcc24cf97e91b5ffb73f907d178c250" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::Child</definition>
        <argsstring>(int index) const </argsstring>
        <name>Child</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a handle to the &quot;index&quot; child. The first child is 0, the second 1, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1600" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3269" bodyend="3285"/>
        <references refid="class_se_xml_node_1acb7425a84181ff6c7c2c32f40d820da4" compoundref="_se_xml_8h" startline="504">SeXmlNode::FirstChild</references>
        <references refid="class_se_xml_node_1a0bc6c4de06e6dad4c8a106aebc7f5254" compoundref="_se_xml_8h" startline="604" endline="603">SeXmlNode::NextSibling</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a2e2f6415a327b6db861af781569ee820" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::ChildElement</definition>
        <argsstring>(const char *value, int index) const </argsstring>
        <name>ChildElement</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a handle to the &quot;index&quot; child element with the given name. The first child element is 0, the second 1, etc. Note that only SeXmlElements are indexed: other types are not counted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1605" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3326" bodyend="3342"/>
        <references refid="class_se_xml_node_1a345be7c86164dcd50dcacfc8b978f3bc" compoundref="_se_xml_8cpp" startline="2070" endline="2082">SeXmlNode::FirstChildElement</references>
        <references refid="class_se_xml_node_1aeb9d61049b44c6032c9cc71d01043304" compoundref="_se_xml_8cpp" startline="2100" endline="2112">SeXmlNode::NextSiblingElement</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1abbec325af69ee8350829c05f32003e30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::ChildElement</definition>
        <argsstring>(int index) const </argsstring>
        <name>ChildElement</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a handle to the &quot;index&quot; child element. The first child element is 0, the second 1, etc. Note that only SeXmlElements are indexed: other types are not counted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1610" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3307" bodyend="3323"/>
        <references refid="class_se_xml_node_1a345be7c86164dcd50dcacfc8b978f3bc" compoundref="_se_xml_8cpp" startline="2070" endline="2082">SeXmlNode::FirstChildElement</references>
        <references refid="class_se_xml_node_1aeb9d61049b44c6032c9cc71d01043304" compoundref="_se_xml_8cpp" startline="2100" endline="2112">SeXmlNode::NextSiblingElement</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a129b91944eb8d1f6ea6223122a8b203f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::FirstChild</definition>
        <argsstring>(const std::string &amp;_value) const </argsstring>
        <name>FirstChild</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1612" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1612" bodyend="1612"/>
        <references refid="class_se_xml_handle_1a129b91944eb8d1f6ea6223122a8b203f" compoundref="_se_xml_8h" startline="1612" endline="1612">FirstChild</references>
        <referencedby refid="class_se_xml_handle_1a129b91944eb8d1f6ea6223122a8b203f" compoundref="_se_xml_8h" startline="1612" endline="1612">FirstChild</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a8013692c701aedfb59312bd22fc35697" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::FirstChildElement</definition>
        <argsstring>(const std::string &amp;_value) const </argsstring>
        <name>FirstChildElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1613" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1613" bodyend="1613"/>
        <references refid="class_se_xml_handle_1a8013692c701aedfb59312bd22fc35697" compoundref="_se_xml_8h" startline="1613" endline="1613">FirstChildElement</references>
        <referencedby refid="class_se_xml_handle_1a8013692c701aedfb59312bd22fc35697" compoundref="_se_xml_8h" startline="1613" endline="1613">FirstChildElement</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a71f24fda1818505785829af4a1baee7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::Child</definition>
        <argsstring>(const std::string &amp;_value, int index) const </argsstring>
        <name>Child</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1615" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1615" bodyend="1615"/>
        <references refid="class_se_xml_handle_1a71f24fda1818505785829af4a1baee7d" compoundref="_se_xml_8h" startline="1615" endline="1615">Child</references>
        <referencedby refid="class_se_xml_handle_1a71f24fda1818505785829af4a1baee7d" compoundref="_se_xml_8h" startline="1615" endline="1615">Child</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a549b075915598504481028366fc9a00e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::ChildElement</definition>
        <argsstring>(const std::string &amp;_value, int index) const </argsstring>
        <name>ChildElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1616" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1616" bodyend="1616"/>
        <references refid="class_se_xml_handle_1a549b075915598504481028366fc9a00e" compoundref="_se_xml_8h" startline="1616" endline="1616">ChildElement</references>
        <referencedby refid="class_se_xml_handle_1a549b075915598504481028366fc9a00e" compoundref="_se_xml_8h" startline="1616" endline="1616">ChildElement</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1ae92eb4bfb750a5ba1cfa088fd640592b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_node" kindref="compound">SeXmlNode</ref> *</type>
        <definition>SeXmlNode* SeXmlHandle::ToNode</definition>
        <argsstring>() const </argsstring>
        <name>ToNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the handle as a <ref refid="class_se_xml_node" kindref="compound">SeXmlNode</ref>. This may return null. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1620" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1620" bodyend="1620"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <referencedby refid="class_se_xml_handle_1ae418be2dd0c4802ca54bbd047981af4e" compoundref="_se_xml_8h" startline="1634" endline="1634">Node</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1aacc81892bf9006a356aa43246bfea617" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_element" kindref="compound">SeXmlElement</ref> *</type>
        <definition>SeXmlElement* SeXmlHandle::ToElement</definition>
        <argsstring>() const </argsstring>
        <name>ToElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the handle as a <ref refid="class_se_xml_element" kindref="compound">SeXmlElement</ref>. This may return null. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1623" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1623" bodyend="1623"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_node_1a6a2f70086042f1279e3aad813e9aa57e" compoundref="_se_xml_8h" startline="671" endline="670">SeXmlNode::ToElement</references>
        <referencedby refid="class_se_xml_handle_1addc0b9162973099e5c5bcf977c197ac2" compoundref="_se_xml_8h" startline="1638" endline="1638">Element</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a4335e4432c3030b369a8d4b538f71567" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_text" kindref="compound">SeXmlText</ref> *</type>
        <definition>SeXmlText* SeXmlHandle::ToText</definition>
        <argsstring>() const </argsstring>
        <name>ToText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the handle as a <ref refid="class_se_xml_text" kindref="compound">SeXmlText</ref>. This may return null. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1626" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1626" bodyend="1626"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_node_1abeb3a824eb07a3c40c79901c9fb4c00c" compoundref="_se_xml_8h" startline="674" endline="673">SeXmlNode::ToText</references>
        <referencedby refid="class_se_xml_handle_1a87dd3ef5a02da89784874f2db23194f2" compoundref="_se_xml_8h" startline="1642" endline="1642">Text</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a5fe72837a844fc07217c966a2793e0ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_unknown" kindref="compound">SeXmlUnknown</ref> *</type>
        <definition>SeXmlUnknown* SeXmlHandle::ToUnknown</definition>
        <argsstring>() const </argsstring>
        <name>ToUnknown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the handle as a <ref refid="class_se_xml_unknown" kindref="compound">SeXmlUnknown</ref>. This may return null. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1629" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1629" bodyend="1629"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_node_1a61abd10c4cf1966c6df69160a87f21b9" compoundref="_se_xml_8h" startline="673" endline="672">SeXmlNode::ToUnknown</references>
        <referencedby refid="class_se_xml_handle_1a1b6d6cd8fe526a920822debd2a6ebf78" compoundref="_se_xml_8h" startline="1646" endline="1646">Unknown</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1ae418be2dd0c4802ca54bbd047981af4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_node" kindref="compound">SeXmlNode</ref> *</type>
        <definition>SeXmlNode* SeXmlHandle::Node</definition>
        <argsstring>() const </argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000015"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use ToNode. Return the handle as a <ref refid="class_se_xml_node" kindref="compound">SeXmlNode</ref>. This may return null. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1634" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1634" bodyend="1634"/>
        <references refid="class_se_xml_handle_1ae92eb4bfb750a5ba1cfa088fd640592b" compoundref="_se_xml_8h" startline="1620" endline="1620">ToNode</references>
        <referencedby refid="class_se_xml_handle_1a6cd76db17ccc4adf3030744c5e30108e" compoundref="_se_xml_8cpp" startline="3412" endline="3464">CreatePath</referencedby>
        <referencedby refid="class_se_xml_handle_1a4a6146452b094f3430ed8602a3c1dc14" compoundref="_se_xml_8cpp" startline="3355" endline="3398">GetPath</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1addc0b9162973099e5c5bcf977c197ac2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_element" kindref="compound">SeXmlElement</ref> *</type>
        <definition>SeXmlElement* SeXmlHandle::Element</definition>
        <argsstring>() const </argsstring>
        <name>Element</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000016"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use ToElement. Return the handle as a <ref refid="class_se_xml_element" kindref="compound">SeXmlElement</ref>. This may return null. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1638" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1638" bodyend="1638"/>
        <references refid="class_se_xml_handle_1aacc81892bf9006a356aa43246bfea617" compoundref="_se_xml_8h" startline="1623" endline="1623">ToElement</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a87dd3ef5a02da89784874f2db23194f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_text" kindref="compound">SeXmlText</ref> *</type>
        <definition>SeXmlText* SeXmlHandle::Text</definition>
        <argsstring>() const </argsstring>
        <name>Text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000017"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="class_se_xml_handle_1a4335e4432c3030b369a8d4b538f71567" kindref="member">ToText()</ref> Return the handle as a <ref refid="class_se_xml_text" kindref="compound">SeXmlText</ref>. This may return null. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1642" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1642" bodyend="1642"/>
        <references refid="class_se_xml_handle_1a4335e4432c3030b369a8d4b538f71567" compoundref="_se_xml_8h" startline="1626" endline="1626">ToText</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a1b6d6cd8fe526a920822debd2a6ebf78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_se_xml_unknown" kindref="compound">SeXmlUnknown</ref> *</type>
        <definition>SeXmlUnknown* SeXmlHandle::Unknown</definition>
        <argsstring>() const </argsstring>
        <name>Unknown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000018"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="class_se_xml_handle_1a5fe72837a844fc07217c966a2793e0ec" kindref="member">ToUnknown()</ref> Return the handle as a <ref refid="class_se_xml_unknown" kindref="compound">SeXmlUnknown</ref>. This may return null. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1646" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1646" bodyend="1646"/>
        <references refid="class_se_xml_handle_1a5fe72837a844fc07217c966a2793e0ec" compoundref="_se_xml_8h" startline="1629" endline="1629">ToUnknown</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a9729e11737b6bb2d4837d158fdd186b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::GetPath</definition>
        <argsstring>(const std::string &amp;_value)</argsstring>
        <name>GetPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1649" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3344" bodyend="3354"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_document_1ad127c9369e3b07ccc15aa303fd289d5a" compoundref="_se_xml_8cpp" startline="724" endline="816">SeXmlDocument::Parse</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a4a6146452b094f3430ed8602a3c1dc14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::GetPath</definition>
        <argsstring>(const SeXmlHandle &amp;_handle)</argsstring>
        <name>GetPath</name>
        <param>
          <type>const <ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref> &amp;</type>
          <declname>_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1650" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3355" bodyend="3398"/>
        <references refid="class_se_xml_element_1aa877f924a7673014f9dbc81f8b6b3042" compoundref="_se_xml_8cpp" startline="2194" endline="2200">SeXmlElement::Attribute</references>
        <references refid="class_se_xml_element_1aaf07658d26136d5c26c6f6e58574f735" compoundref="_se_xml_8h" startline="1041" endline="1039">SeXmlElement::FirstAttribute</references>
        <references refid="class_se_xml_handle_1a8d455b485e6ec0ac969a7ad8660aa465" compoundref="_se_xml_8cpp" startline="3221" endline="3230">FirstChild</references>
        <references refid="class_se_xml_node_1a345be7c86164dcd50dcacfc8b978f3bc" compoundref="_se_xml_8cpp" startline="2070" endline="2082">SeXmlNode::FirstChildElement</references>
        <references refid="class_se_xml_attribute_1afd74f369276f8d0860b5b377dfd3bd95" compoundref="_se_xml_8h" startline="781">SeXmlAttribute::Name</references>
        <references refid="class_se_xml_attribute_1acf1f13cb181f5a9b86aba25fd634fba9" compoundref="_se_xml_8cpp" startline="2770" endline="2777">SeXmlAttribute::Next</references>
        <references refid="class_se_xml_node_1a0bc6c4de06e6dad4c8a106aebc7f5254" compoundref="_se_xml_8h" startline="604" endline="603">SeXmlNode::NextSibling</references>
        <references refid="class_se_xml_handle_1ae418be2dd0c4802ca54bbd047981af4e" compoundref="_se_xml_8h" startline="1634" endline="1634">Node</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
        <references refid="class_se_xml_node_1a6a2f70086042f1279e3aad813e9aa57e" compoundref="_se_xml_8h" startline="671" endline="670">SeXmlNode::ToElement</references>
        <references refid="class_se_xml_element_1afbe07e493766b20942a1d4aeade63e09" compoundref="_se_xml_8h" startline="1090">SeXmlElement::ToElement</references>
        <references refid="class_se_xml_node_1ac548e8c02b1152a1f4bc4dc700dd9dfc" compoundref="_se_xml_8h" startline="474" endline="474">SeXmlNode::Value</references>
        <references refid="class_se_xml_attribute_1a130c783ced20d69930f7c2b244d9277e" compoundref="_se_xml_8h" startline="782" endline="781">SeXmlAttribute::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a9122dbaf290098b5ca3cc373c8ee6f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::CreatePath</definition>
        <argsstring>(const std::string &amp;_value)</argsstring>
        <name>CreatePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1653" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3400" bodyend="3410"/>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_document_1ad127c9369e3b07ccc15aa303fd289d5a" compoundref="_se_xml_8cpp" startline="724" endline="816">SeXmlDocument::Parse</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
      </memberdef>
      <memberdef kind="function" id="class_se_xml_handle_1a6cd76db17ccc4adf3030744c5e30108e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref></type>
        <definition>SeXmlHandle SeXmlHandle::CreatePath</definition>
        <argsstring>(const SeXmlHandle &amp;_handle)</argsstring>
        <name>CreatePath</name>
        <param>
          <type>const <ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref> &amp;</type>
          <declname>_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1654" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.cpp" bodystart="3412" bodyend="3464"/>
        <references refid="class_se_xml_element_1aa877f924a7673014f9dbc81f8b6b3042" compoundref="_se_xml_8cpp" startline="2194" endline="2200">SeXmlElement::Attribute</references>
        <references refid="class_se_xml_element_1aaf07658d26136d5c26c6f6e58574f735" compoundref="_se_xml_8h" startline="1041" endline="1039">SeXmlElement::FirstAttribute</references>
        <references refid="class_se_xml_handle_1a8d455b485e6ec0ac969a7ad8660aa465" compoundref="_se_xml_8cpp" startline="3221" endline="3230">FirstChild</references>
        <references refid="class_se_xml_node_1a345be7c86164dcd50dcacfc8b978f3bc" compoundref="_se_xml_8cpp" startline="2070" endline="2082">SeXmlNode::FirstChildElement</references>
        <references refid="class_se_xml_node_1a5d29bea38bdbc747eaa271000d97db36" compoundref="_se_xml_8cpp" startline="1803" endline="1830">SeXmlNode::LinkEndChild</references>
        <references refid="class_se_xml_attribute_1afd74f369276f8d0860b5b377dfd3bd95" compoundref="_se_xml_8h" startline="781">SeXmlAttribute::Name</references>
        <references refid="class_se_xml_attribute_1acf1f13cb181f5a9b86aba25fd634fba9" compoundref="_se_xml_8cpp" startline="2770" endline="2777">SeXmlAttribute::Next</references>
        <references refid="class_se_xml_node_1a0bc6c4de06e6dad4c8a106aebc7f5254" compoundref="_se_xml_8h" startline="604" endline="603">SeXmlNode::NextSibling</references>
        <references refid="class_se_xml_handle_1ae418be2dd0c4802ca54bbd047981af4e" compoundref="_se_xml_8h" startline="1634" endline="1634">Node</references>
        <references refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" compoundref="_se_xml_8h" startline="1657">node</references>
        <references refid="class_se_xml_element_1a88b977b4ce12488308c1ba04ad29825b" compoundref="_se_xml_8cpp" startline="2382" endline="2388">SeXmlElement::SetAttribute</references>
        <references refid="class_se_xml_node_1a30b08077ea663954788bbd17b23df7a1" compoundref="_se_xml_8h" startline="415">SeXmlNode::SeXmlElement</references>
        <references refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" compoundref="_se_xml_8h" startline="1579" endline="1579">SeXmlHandle</references>
        <references refid="class_se_xml_node_1a6a2f70086042f1279e3aad813e9aa57e" compoundref="_se_xml_8h" startline="671" endline="670">SeXmlNode::ToElement</references>
        <references refid="class_se_xml_element_1afbe07e493766b20942a1d4aeade63e09" compoundref="_se_xml_8h" startline="1090">SeXmlElement::ToElement</references>
        <references refid="class_se_xml_node_1ac548e8c02b1152a1f4bc4dc700dd9dfc" compoundref="_se_xml_8h" startline="474" endline="474">SeXmlNode::Value</references>
        <references refid="class_se_xml_attribute_1a130c783ced20d69930f7c2b244d9277e" compoundref="_se_xml_8h" startline="782" endline="781">SeXmlAttribute::Value</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref> is a class that wraps a node pointer with null checks; this is an incredibly useful thing. Note that <ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref> is not part of the SeXml DOM structure. It is a separate utility class.</para><para>Take an example: <verbatim>&lt;Document&gt;
    &lt;Element attributeA = &quot;valueA&quot;&gt;
        &lt;Child attributeB = &quot;value1&quot; /&gt;
        &lt;Child attributeB = &quot;value2&quot; /&gt;
    &lt;/Element&gt;
&lt;Document&gt;
</verbatim></para><para>Assuming you want the value of &quot;attributeB&quot; in the 2nd &quot;Child&quot; element, it&apos;s very easy to write a <emphasis>lot</emphasis> of code that looks like:</para><para><verbatim>SeXmlElement* root = document.FirstChildElement( &quot;Document&quot; );
if ( root )
{
    SeXmlElement* element = root-&gt;FirstChildElement( &quot;Element&quot; );
    if ( element )
    {
        SeXmlElement* child = element-&gt;FirstChildElement( &quot;Child&quot; );
        if ( child )
        {
            SeXmlElement* child2 = child-&gt;NextSiblingElement( &quot;Child&quot; );
            if ( child2 )
            {
                // Finally do something useful.
</verbatim></para><para>And that doesn&apos;t even cover &quot;else&quot; cases. <ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref> addresses the verbosity of such code. A <ref refid="class_se_xml_handle" kindref="compound">SeXmlHandle</ref> checks for null pointers so it is perfectly safe and correct to use:</para><para><verbatim>SeXmlHandle docHandle( &amp;document );
SeXmlElement* child2 = docHandle.FirstChild( &quot;Document&quot; ).FirstChild( &quot;Element&quot; ).Child( &quot;Child&quot;, 1 ).ToElement();
if ( child2 )
{
    // do something useful
</verbatim></para><para>Which is MUCH more concise and useful.</para><para>It is also safe to copy handles - internally they are nothing more than node pointers. <verbatim>SeXmlHandle handleCopy = handle;
</verbatim></para><para>What they should not be used for is iteration:</para><para><verbatim>int i=0; 
while ( true )
{
    SeXmlElement* child = docHandle.FirstChild( &quot;Document&quot; ).FirstChild( &quot;Element&quot; ).Child( &quot;Child&quot;, i ).ToElement();
    if ( !child )
        break;
    // do something
    ++i;
}
</verbatim></para><para>It seems reasonable, but it is in fact two embedded while loops. The Child method is a linear walk to find the element, so this code would iterate much more than it needs to. Instead, prefer:</para><para><verbatim>SeXmlElement* child = docHandle.FirstChild( &quot;Document&quot; ).FirstChild( &quot;Element&quot; ).FirstChild( &quot;Child&quot; ).ToElement();

for( child; child; child=child-&gt;NextSiblingElement() )
{
    // do something
}
</verbatim> </para>    </detaileddescription>
    <collaborationgraph>
      <node id="8904">
        <label>SeXmlCursor</label>
        <link refid="struct_se_xml_cursor"/>
      </node>
      <node id="8901">
        <label>SeXmlHandle</label>
        <link refid="class_se_xml_handle"/>
        <childnode refid="8902" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
      </node>
      <node id="8903">
        <label>SeXmlBase</label>
        <link refid="class_se_xml_base"/>
        <childnode refid="8904" relation="usage">
          <edgelabel>location</edgelabel>
        </childnode>
        <childnode refid="8905" relation="usage">
          <edgelabel>entity</edgelabel>
        </childnode>
      </node>
      <node id="8902">
        <label>SeXmlNode</label>
        <link refid="class_se_xml_node"/>
        <childnode refid="8903" relation="public-inheritance">
        </childnode>
        <childnode refid="8902" relation="usage">
          <edgelabel>prev</edgelabel>
          <edgelabel>next</edgelabel>
          <edgelabel>firstChild</edgelabel>
          <edgelabel>lastChild</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="8905">
        <label>SeXmlBase::Entity</label>
        <link refid="struct_se_xml_base_1_1_entity"/>
      </node>
    </collaborationgraph>
    <location file="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" line="1576" column="1" bodyfile="F:/TeamWork/ServerVersion/projects/server/Share/CommonShare/SeXml.h" bodystart="1575" bodyend="1658"/>
    <listofallmembers>
      <member refid="class_se_xml_handle_1a37e44a6262dcf690a1a480c93793a3fc" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>Child</name></member>
      <member refid="class_se_xml_handle_1a3bcc24cf97e91b5ffb73f907d178c250" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>Child</name></member>
      <member refid="class_se_xml_handle_1a71f24fda1818505785829af4a1baee7d" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>Child</name></member>
      <member refid="class_se_xml_handle_1a2e2f6415a327b6db861af781569ee820" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>ChildElement</name></member>
      <member refid="class_se_xml_handle_1abbec325af69ee8350829c05f32003e30" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>ChildElement</name></member>
      <member refid="class_se_xml_handle_1a549b075915598504481028366fc9a00e" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>ChildElement</name></member>
      <member refid="class_se_xml_handle_1a9122dbaf290098b5ca3cc373c8ee6f9f" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>CreatePath</name></member>
      <member refid="class_se_xml_handle_1a6cd76db17ccc4adf3030744c5e30108e" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>CreatePath</name></member>
      <member refid="class_se_xml_handle_1addc0b9162973099e5c5bcf977c197ac2" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>Element</name></member>
      <member refid="class_se_xml_handle_1a8d455b485e6ec0ac969a7ad8660aa465" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>FirstChild</name></member>
      <member refid="class_se_xml_handle_1a8fb06432313abcfd954b767df3fb9d69" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>FirstChild</name></member>
      <member refid="class_se_xml_handle_1a129b91944eb8d1f6ea6223122a8b203f" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>FirstChild</name></member>
      <member refid="class_se_xml_handle_1a46924dd26b7f3a5e131313c3f8106fcf" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>FirstChildElement</name></member>
      <member refid="class_se_xml_handle_1ab85750887d744d4bfab597608802831e" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>FirstChildElement</name></member>
      <member refid="class_se_xml_handle_1a8013692c701aedfb59312bd22fc35697" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>FirstChildElement</name></member>
      <member refid="class_se_xml_handle_1a9729e11737b6bb2d4837d158fdd186b0" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>GetPath</name></member>
      <member refid="class_se_xml_handle_1a4a6146452b094f3430ed8602a3c1dc14" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>GetPath</name></member>
      <member refid="class_se_xml_handle_1a6e3dcf691a44ad1b03d0aebd78f69873" prot="private" virt="non-virtual"><scope>SeXmlHandle</scope><name>node</name></member>
      <member refid="class_se_xml_handle_1ae418be2dd0c4802ca54bbd047981af4e" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>Node</name></member>
      <member refid="class_se_xml_handle_1af7dfcf7792378521081fb37a16099c25" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>operator=</name></member>
      <member refid="class_se_xml_handle_1a2d636ff38d24de2160ff18fc06e28283" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>SeXmlHandle</name></member>
      <member refid="class_se_xml_handle_1a57a31bab8c4dd248c8f5ba27bcf41da8" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>SeXmlHandle</name></member>
      <member refid="class_se_xml_handle_1a87dd3ef5a02da89784874f2db23194f2" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>Text</name></member>
      <member refid="class_se_xml_handle_1aacc81892bf9006a356aa43246bfea617" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>ToElement</name></member>
      <member refid="class_se_xml_handle_1ae92eb4bfb750a5ba1cfa088fd640592b" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>ToNode</name></member>
      <member refid="class_se_xml_handle_1a4335e4432c3030b369a8d4b538f71567" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>ToText</name></member>
      <member refid="class_se_xml_handle_1a5fe72837a844fc07217c966a2793e0ec" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>ToUnknown</name></member>
      <member refid="class_se_xml_handle_1a1b6d6cd8fe526a920822debd2a6ebf78" prot="public" virt="non-virtual"><scope>SeXmlHandle</scope><name>Unknown</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
